//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:N.N.NNNNN.N
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TestOutput {
using System;

public class NoLinePragmas {
#line hidden
public NoLinePragmas() {
}
public override void Execute() {
  
    int i = 1;

WriteLiteral("\r\n\r\n");

 while(i <= 10) {

WriteLiteral("    <p>Hello from C#, #");

                   Write(i);

WriteLiteral("</p>\r\n");

    i += 1;
}

WriteLiteral("\r\n");

 if(i == 11) {

WriteLiteral("    <p>We wrote 10 lines!</p>\r\n");

}

WriteLiteral("\r\n");

 switch(i) {
    case 11:

WriteLiteral("        <p>No really, we wrote 10 lines!</p>\r\n");

        break;
    default:

WriteLiteral("        <p>Actually, we didn\'t...</p>\r\n");

        break;
}

WriteLiteral("\r\n");

 for(int j = 1; j <= 10; j += 2) {

WriteLiteral("    <p>Hello again from C#, #");

                         Write(j);

WriteLiteral("</p>\r\n");

}

WriteLiteral("\r\n");

 try {

WriteLiteral("    <p>That time, we wrote 5 lines!</p>\r\n");

} catch(Exception ex) {

WriteLiteral("    <p>Oh no! An error occurred: ");

                             Write(ex.Message);

WriteLiteral("</p>\r\n");

}


                                  

WriteLiteral("<p>i is now ");

       Write(i);

WriteLiteral("</p>\r\n\r\n");

 lock(new object()) {

WriteLiteral("    <p>This block is locked, for your security!</p>\r\n");

}
}
}
}
