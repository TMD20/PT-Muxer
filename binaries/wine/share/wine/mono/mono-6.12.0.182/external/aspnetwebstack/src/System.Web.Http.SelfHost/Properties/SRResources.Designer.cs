//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace System.Web.Http.SelfHost.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class SRResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal SRResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("System.Web.Http.SelfHost.Properties.SRResources", typeof(SRResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to End cannot be called twice on an AsyncResult..
        /// </summary>
        internal static string AsyncResultAlreadyEnded {
            get {
                return ResourceManager.GetString("AsyncResultAlreadyEnded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The IAsyncResult implementation &apos;{0}&apos; tried to complete a single operation multiple times. This could be caused by an incorrect application IAsyncResult implementation or other extensibility code, such as an IAsyncResult that returns incorrect CompletedSynchronously values or invokes the AsyncCallback multiple times..
        /// </summary>
        internal static string AsyncResultCompletedTwice {
            get {
                return ResourceManager.GetString("AsyncResultCompletedTwice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The size quota for this stream ({0}) has been exceeded..
        /// </summary>
        internal static string BufferedOutputStreamQuotaExceeded {
            get {
                return ResourceManager.GetString("BufferedOutputStreamQuotaExceeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The UseWindowsAuthentication option cannot be enabled when a UserNamePasswordValidator is specified on the HttpSelfHostConfiguration.&quot;.
        /// </summary>
        internal static string CannotUseWindowsAuthWithUserNamePasswordValidator {
            get {
                return ResourceManager.GetString("CannotUseWindowsAuthWithUserNamePasswordValidator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Certificate-based client authentication is not supported in TransportCredentialOnly security mode. Select the Transport security mode..
        /// </summary>
        internal static string CertificateUnsupportedForHttpTransportCredentialOnly {
            get {
                return ResourceManager.GetString("CertificateUnsupportedForHttpTransportCredentialOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &apos;{0}&apos; type does not support building &apos;{1}&apos; instances..
        /// </summary>
        internal static string ChannelFactoryNotSupported {
            get {
                return ResourceManager.GetString("ChannelFactoryNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &apos;{0}&apos; type does not support the &apos;{1}&apos; channel shape. Implement the &apos;{2}&apos; channel shape to use this type..
        /// </summary>
        internal static string ChannelShapeNotSupported {
            get {
                return ResourceManager.GetString("ChannelShapeNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The message version of the outgoing message ({0}) does not match that of the encoder ({1}). Make sure the binding is configured with the same version as the message..
        /// </summary>
        internal static string EncoderMessageVersionMismatch {
            get {
                return ResourceManager.GetString("EncoderMessageVersionMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &apos;{0}&apos; type does not support a session encoder..
        /// </summary>
        internal static string HttpMessageEncoderFactoryDoesNotSupportSessionEncoder {
            get {
                return ResourceManager.GetString("HttpMessageEncoderFactoryDoesNotSupportSessionEncoder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not obtain an HTTP request from message of type &apos;{0}&apos;..
        /// </summary>
        internal static string HttpMessageHandlerInvalidMessage {
            get {
                return ResourceManager.GetString("HttpMessageHandlerInvalidMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This &apos;{0}&apos; instance has already been started once. To start another instance, please create a new &apos;{0}&apos; object and start that..
        /// </summary>
        internal static string HttpServerAlreadyRunning {
            get {
                return ResourceManager.GetString("HttpServerAlreadyRunning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The inner listener factory of {0} must be set before this operation..
        /// </summary>
        internal static string InnerListenerFactoryNotSet {
            get {
                return ResourceManager.GetString("InnerListenerFactoryNotSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An incorrect IAsyncResult was provided to an &apos;End&apos; method. The IAsyncResult object passed to &apos;End&apos; must be the one returned from the matching &apos;Begin&apos; or passed to the callback provided to &apos;Begin&apos;..
        /// </summary>
        internal static string InvalidAsyncResult {
            get {
                return ResourceManager.GetString("InvalidAsyncResult", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An incorrect implementation of the IAsyncResult interface may be returning incorrect values from the CompletedSynchronously property or calling the AsyncCallback more than once. The type {0} could be the incorrect implementation..
        /// </summary>
        internal static string InvalidAsyncResultImplementation {
            get {
                return ResourceManager.GetString("InvalidAsyncResultImplementation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An incorrect implementation of the IAsyncResult interface may be returning incorrect values from the CompletedSynchronously property or calling the AsyncCallback more than once..
        /// </summary>
        internal static string InvalidAsyncResultImplementationGeneric {
            get {
                return ResourceManager.GetString("InvalidAsyncResultImplementationGeneric", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error creating &apos;{0}&apos; instance using &apos;{1}&apos;..
        /// </summary>
        internal static string InvalidChannelListener {
            get {
                return ResourceManager.GetString("InvalidChannelListener", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A null value was returned from an async &apos;Begin&apos; method or passed to an AsyncCallback. Async &apos;Begin&apos; implementations must return a non-null IAsyncResult and pass the same IAsyncResult object as the parameter to the AsyncCallback..
        /// </summary>
        internal static string InvalidNullAsyncResult {
            get {
                return ResourceManager.GetString("InvalidNullAsyncResult", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HTTP request message body with a content length of &apos;{0}&apos; bytes..
        /// </summary>
        internal static string MessageBodyIsHttpRequestMessageWithKnownContentLength {
            get {
                return ResourceManager.GetString("MessageBodyIsHttpRequestMessageWithKnownContentLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HTTP request message body with an undetermined content length..
        /// </summary>
        internal static string MessageBodyIsHttpRequestMessageWithUnknownContentLength {
            get {
                return ResourceManager.GetString("MessageBodyIsHttpRequestMessageWithUnknownContentLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HTTP response message body with a content length of &apos;{0}&apos; bytes..
        /// </summary>
        internal static string MessageBodyIsHttpResponseMessageWithKnownContentLength {
            get {
                return ResourceManager.GetString("MessageBodyIsHttpResponseMessageWithKnownContentLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HTTP response message body with an undetermined content length..
        /// </summary>
        internal static string MessageBodyIsHttpResponseMessageWithUnknownContentLength {
            get {
                return ResourceManager.GetString("MessageBodyIsHttpResponseMessageWithUnknownContentLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &apos;{0}&apos; is closed and can no longer be used..
        /// </summary>
        internal static string MessageClosed {
            get {
                return ResourceManager.GetString("MessageClosed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The response message is not valid for the encoder used by the &apos;{0}&apos; binding, which requires that the response message have been created with the &apos;{1}&apos; extension method on the &apos;{2}&apos; class..
        /// </summary>
        internal static string MessageInvalidForHttpMessageEncoder {
            get {
                return ResourceManager.GetString("MessageInvalidForHttpMessageEncoder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The message instance does not support being read, written out or copied. Use the &apos;{0}&apos; or &apos;{1}&apos; extension methods on the &apos;{2}&apos; class to access the message content..
        /// </summary>
        internal static string MessageReadWriteCopyNotSupported {
            get {
                return ResourceManager.GetString("MessageReadWriteCopyNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The message instance is non-empty but the &apos;{0}&apos; extension method on the &apos;{1}&apos; class returned null. Message instances that do not support the &apos;{0}&apos; extension method must be empty. .
        /// </summary>
        internal static string NonHttpMessageMustBeEmpty {
            get {
                return ResourceManager.GetString("NonHttpMessageMustBeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Nonnegative number required.
        /// </summary>
        internal static string NonnegativeNumberRequired {
            get {
                return ResourceManager.GetString("NonnegativeNumberRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &apos;{0}&apos; type supports only MessageVersion.None. .
        /// </summary>
        internal static string OnlyMessageVersionNoneSupportedOnHttpMessageEncodingBindingElement {
            get {
                return ResourceManager.GetString("OnlyMessageVersionNoneSupportedOnHttpMessageEncodingBindingElement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value of the &apos;{0}&apos; parameter must be less than or equal to the value of the &apos;{1}&apos; parameter..
        /// </summary>
        internal static string ParameterMustBeLessThanOrEqualSecondParameter {
            get {
                return ResourceManager.GetString("ParameterMustBeLessThanOrEqualSecondParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Read not supported on this stream..
        /// </summary>
        internal static string ReadNotSupported {
            get {
                return ResourceManager.GetString("ReadNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The incoming message does not have the required &apos;{0}&apos; property of type &apos;{1}&apos;..
        /// </summary>
        internal static string RequestMissingHttpRequestMessageProperty {
            get {
                return ResourceManager.GetString("RequestMissingHttpRequestMessageProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The incoming message does not have the required &apos;To&apos; header..
        /// </summary>
        internal static string RequestMissingToHeader {
            get {
                return ResourceManager.GetString("RequestMissingToHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Seek not supported on this stream..
        /// </summary>
        internal static string SeekNotSupported {
            get {
                return ResourceManager.GetString("SeekNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value must be non-negative..
        /// </summary>
        internal static string ValueMustBeNonNegative {
            get {
                return ResourceManager.GetString("ValueMustBeNonNegative", resourceCulture);
            }
        }
    }
}
