<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="14.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
  <ItemGroup>
    <!-- 
         CoreRT Targeting Pack is intended to be consumed by CoreFX Repo in
         building libraries against the CoreRT core libraries (i.e.: System.Private.*)
         CoreRT core libraries might have different shape for different 
         platforms and architectures. For instance, System.Private.Interop for windows
         and linux are expected to different surface area. Likewise core libraries 
         targeting different architectures might expose different sets of APIs.
         However, we're intentionally producing only Windows x64 targeting pack and will
         let CoreFX consume only this version. Taking a dependency from CoreFX to any 
         platform or architecture specific API on CoreRT needs careful planning. 
         There are ways to mitigate this requirement, but it's intentionally left 
         a little bit harder to do as compared to platform and architecture agnostic APIs
    -->
    <Project Include="Microsoft.TargetingPack.Private.CoreRT.pkgproj" >
      <OSGroup>Windows_NT</OSGroup>
    </Project>
  </ItemGroup>
  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.traversal.targets))\dir.traversal.targets" />
</Project>


