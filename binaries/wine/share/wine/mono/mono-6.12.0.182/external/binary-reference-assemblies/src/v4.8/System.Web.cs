// Licensed to the .NET Foundation under one or more agreements.
// The .NET Foundation licenses this file to you under the MIT license.
// See the LICENSE file in the project root for more information.

[assembly:System.Reflection.AssemblyVersionAttribute("4.0.0.0")]
[assembly:System.CLSCompliantAttribute(true)]
[assembly:System.Diagnostics.DebuggableAttribute(System.Diagnostics.DebuggableAttribute.DebuggingModes.IgnoreSymbolStoreSequencePoints)]
[assembly:System.Drawing.BitmapSuffixInSatelliteAssemblyAttribute]
[assembly:System.Reflection.AssemblyCompanyAttribute("Mono development team")]
[assembly:System.Reflection.AssemblyCopyrightAttribute("(c) Various Mono authors")]
[assembly:System.Reflection.AssemblyDefaultAliasAttribute("System.Web.dll")]
[assembly:System.Reflection.AssemblyDescriptionAttribute("System.Web.dll")]
[assembly:System.Reflection.AssemblyFileVersionAttribute("4.8.3761.0")]
[assembly:System.Reflection.AssemblyInformationalVersionAttribute("4.8.3761.0")]
[assembly:System.Reflection.AssemblyProductAttribute("Mono Common Language Infrastructure")]
[assembly:System.Reflection.AssemblyTitleAttribute("System.Web.dll")]
[assembly:System.Resources.NeutralResourcesLanguageAttribute("en-US")]
[assembly:System.Resources.SatelliteContractVersionAttribute("4.0.0.0")]
[assembly:System.Runtime.CompilerServices.CompilationRelaxationsAttribute(8)]
[assembly:System.Runtime.CompilerServices.ReferenceAssemblyAttribute]
[assembly:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute(WrapNonExceptionThrows=true)]
[assembly:System.Runtime.InteropServices.ComVisibleAttribute(false)]
[assembly:System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute(System.Runtime.InteropServices.DllImportSearchPath.AssemblyDirectory | System.Runtime.InteropServices.DllImportSearchPath.System32)]
[assembly:System.Runtime.InteropServices.TypeLibVersionAttribute(2, 4)]
[assembly:System.Security.AllowPartiallyTrustedCallersAttribute(PartialTrustVisibilityLevel=System.Security.PartialTrustVisibilityLevel.NotVisibleByDefault)]
[assembly:System.Security.SecurityRulesAttribute(System.Security.SecurityRuleSet.Level1, SkipVerificationInFullTrust=true)]
[assembly:System.Web.UI.TagPrefixAttribute("System.Web.UI.WebControls", "asp")]
[assembly:System.Web.UI.WebResourceAttribute("add_permissions_for_users.gif", "image/gif")]
[assembly:System.Web.UI.WebResourceAttribute("DetailsView.js", "application/x-javascript", CdnSupportsSecureConnection=true, CdnPath="http://ajax.aspnetcdn.com/ajax/4.6/1/DetailsView.js", LoadSuccessExpression="window.DetailsView")]
[assembly:System.Web.UI.WebResourceAttribute("Focus.js", "application/x-javascript", CdnSupportsSecureConnection=true, CdnPath="http://ajax.aspnetcdn.com/ajax/4.6/1/Focus.js", LoadSuccessExpression="window.WebForm_FindFirstFocusableChild")]
[assembly:System.Web.UI.WebResourceAttribute("GridView.js", "application/x-javascript", CdnSupportsSecureConnection=true, CdnPath="http://ajax.aspnetcdn.com/ajax/4.6/1/GridView.js", LoadSuccessExpression="window.GridView")]
[assembly:System.Web.UI.WebResourceAttribute("Menu.js", "application/x-javascript", CdnSupportsSecureConnection=true, CdnPath="http://ajax.aspnetcdn.com/ajax/4.6/1/Menu.js", LoadSuccessExpression="window.Menu_ClearInterval")]
[assembly:System.Web.UI.WebResourceAttribute("Menu_Default_Separator.gif", "image/gif")]
[assembly:System.Web.UI.WebResourceAttribute("Menu_Popout.gif", "image/gif")]
[assembly:System.Web.UI.WebResourceAttribute("Menu_ScrollDown.gif", "image/gif")]
[assembly:System.Web.UI.WebResourceAttribute("Menu_ScrollUp.gif", "image/gif")]
[assembly:System.Web.UI.WebResourceAttribute("MenuStandards.js", "application/x-javascript", CdnSupportsSecureConnection=true, CdnPath="http://ajax.aspnetcdn.com/ajax/4.6/1/MenuStandards.js", LoadSuccessExpression="window.Sys && Sys.WebForms && Sys.WebForms.Menu")]
[assembly:System.Web.UI.WebResourceAttribute("properties_security_tab.gif", "image/gif")]
[assembly:System.Web.UI.WebResourceAttribute("properties_security_tab_w_user.gif", "image/gif")]
[assembly:System.Web.UI.WebResourceAttribute("SmartNav.htm", "text/html")]
[assembly:System.Web.UI.WebResourceAttribute("SmartNav.js", "application/x-javascript")]
[assembly:System.Web.UI.WebResourceAttribute("Spacer.gif", "image/gif")]
[assembly:System.Web.UI.WebResourceAttribute("TreeView.js", "application/x-javascript", CdnSupportsSecureConnection=true, CdnPath="http://ajax.aspnetcdn.com/ajax/4.6/1/TreeView.js", LoadSuccessExpression="window.TreeView_HoverNode")]
[assembly:System.Web.UI.WebResourceAttribute("TreeView_Arrows_Collapse.gif", "image/gif")]
[assembly:System.Web.UI.WebResourceAttribute("TreeView_Arrows_Expand.gif", "image/gif")]
[assembly:System.Web.UI.WebResourceAttribute("TreeView_Arrows_NoExpand.gif", "image/gif")]
[assembly:System.Web.UI.WebResourceAttribute("TreeView_BulletedList_LeafNode.gif", "image/gif")]
[assembly:System.Web.UI.WebResourceAttribute("TreeView_BulletedList_ParentNode.gif", "image/gif")]
[assembly:System.Web.UI.WebResourceAttribute("TreeView_BulletedList_RootNode.gif", "image/gif")]
[assembly:System.Web.UI.WebResourceAttribute("TreeView_BulletedList2_LeafNode.gif", "image/gif")]
[assembly:System.Web.UI.WebResourceAttribute("TreeView_BulletedList2_ParentNode.gif", "image/gif")]
[assembly:System.Web.UI.WebResourceAttribute("TreeView_BulletedList2_RootNode.gif", "image/gif")]
[assembly:System.Web.UI.WebResourceAttribute("TreeView_BulletedList3_LeafNode.gif", "image/gif")]
[assembly:System.Web.UI.WebResourceAttribute("TreeView_BulletedList3_ParentNode.gif", "image/gif")]
[assembly:System.Web.UI.WebResourceAttribute("TreeView_BulletedList3_RootNode.gif", "image/gif")]
[assembly:System.Web.UI.WebResourceAttribute("TreeView_BulletedList4_LeafNode.gif", "image/gif")]
[assembly:System.Web.UI.WebResourceAttribute("TreeView_BulletedList4_ParentNode.gif", "image/gif")]
[assembly:System.Web.UI.WebResourceAttribute("TreeView_BulletedList4_RootNode.gif", "image/gif")]
[assembly:System.Web.UI.WebResourceAttribute("TreeView_Contacts_Collapse.gif", "image/gif")]
[assembly:System.Web.UI.WebResourceAttribute("TreeView_Contacts_Expand.gif", "image/gif")]
[assembly:System.Web.UI.WebResourceAttribute("TreeView_Contacts_NoExpand.gif", "image/gif")]
[assembly:System.Web.UI.WebResourceAttribute("TreeView_Default_Collapse.gif", "image/gif")]
[assembly:System.Web.UI.WebResourceAttribute("TreeView_Default_Dash.gif", "image/gif")]
[assembly:System.Web.UI.WebResourceAttribute("TreeView_Default_DashCollapse.gif", "image/gif")]
[assembly:System.Web.UI.WebResourceAttribute("TreeView_Default_DashExpand.gif", "image/gif")]
[assembly:System.Web.UI.WebResourceAttribute("TreeView_Default_Expand.gif", "image/gif")]
[assembly:System.Web.UI.WebResourceAttribute("TreeView_Default_I.gif", "image/gif")]
[assembly:System.Web.UI.WebResourceAttribute("TreeView_Default_L.gif", "image/gif")]
[assembly:System.Web.UI.WebResourceAttribute("TreeView_Default_LCollapse.gif", "image/gif")]
[assembly:System.Web.UI.WebResourceAttribute("TreeView_Default_LExpand.gif", "image/gif")]
[assembly:System.Web.UI.WebResourceAttribute("TreeView_Default_NoExpand.gif", "image/gif")]
[assembly:System.Web.UI.WebResourceAttribute("TreeView_Default_R.gif", "image/gif")]
[assembly:System.Web.UI.WebResourceAttribute("TreeView_Default_RCollapse.gif", "image/gif")]
[assembly:System.Web.UI.WebResourceAttribute("TreeView_Default_RExpand.gif", "image/gif")]
[assembly:System.Web.UI.WebResourceAttribute("TreeView_Default_T.gif", "image/gif")]
[assembly:System.Web.UI.WebResourceAttribute("TreeView_Default_TCollapse.gif", "image/gif")]
[assembly:System.Web.UI.WebResourceAttribute("TreeView_Default_TExpand.gif", "image/gif")]
[assembly:System.Web.UI.WebResourceAttribute("TreeView_Events_LeafNode.gif", "image/gif")]
[assembly:System.Web.UI.WebResourceAttribute("TreeView_Events_ParentNode.gif", "image/gif")]
[assembly:System.Web.UI.WebResourceAttribute("TreeView_Events_RootNode.gif", "image/gif")]
[assembly:System.Web.UI.WebResourceAttribute("TreeView_FAQ_LeafNode.gif", "image/gif")]
[assembly:System.Web.UI.WebResourceAttribute("TreeView_FAQ_ParentNode.gif", "image/gif")]
[assembly:System.Web.UI.WebResourceAttribute("TreeView_FAQ_RootNode.gif", "image/gif")]
[assembly:System.Web.UI.WebResourceAttribute("TreeView_Inbox_LeafNode.gif", "image/gif")]
[assembly:System.Web.UI.WebResourceAttribute("TreeView_Inbox_ParentNode.gif", "image/gif")]
[assembly:System.Web.UI.WebResourceAttribute("TreeView_Inbox_RootNode.gif", "image/gif")]
[assembly:System.Web.UI.WebResourceAttribute("TreeView_MSDN_Collapse.gif", "image/gif")]
[assembly:System.Web.UI.WebResourceAttribute("TreeView_MSDN_Expand.gif", "image/gif")]
[assembly:System.Web.UI.WebResourceAttribute("TreeView_MSDN_NoExpand.gif", "image/gif")]
[assembly:System.Web.UI.WebResourceAttribute("TreeView_News_LeafNode.gif", "image/gif")]
[assembly:System.Web.UI.WebResourceAttribute("TreeView_News_ParentNode.gif", "image/gif")]
[assembly:System.Web.UI.WebResourceAttribute("TreeView_News_RootNode.gif", "image/gif")]
[assembly:System.Web.UI.WebResourceAttribute("TreeView_Simple_NoExpand.gif", "image/gif")]
[assembly:System.Web.UI.WebResourceAttribute("TreeView_Simple2_NoExpand.gif", "image/gif")]
[assembly:System.Web.UI.WebResourceAttribute("TreeView_Windows_Help_Collapse.gif", "image/gif")]
[assembly:System.Web.UI.WebResourceAttribute("TreeView_Windows_Help_Expand.gif", "image/gif")]
[assembly:System.Web.UI.WebResourceAttribute("TreeView_Windows_Help_NoExpand.gif", "image/gif")]
[assembly:System.Web.UI.WebResourceAttribute("TreeView_XP_Explorer_Collapse.gif", "image/gif")]
[assembly:System.Web.UI.WebResourceAttribute("TreeView_XP_Explorer_Expand.gif", "image/gif")]
[assembly:System.Web.UI.WebResourceAttribute("TreeView_XP_Explorer_LeafNode.gif", "image/gif")]
[assembly:System.Web.UI.WebResourceAttribute("TreeView_XP_Explorer_NoExpand.gif", "image/gif")]
[assembly:System.Web.UI.WebResourceAttribute("TreeView_XP_Explorer_ParentNode.gif", "image/gif")]
[assembly:System.Web.UI.WebResourceAttribute("TreeView_XP_Explorer_RootNode.gif", "image/gif")]
[assembly:System.Web.UI.WebResourceAttribute("WebForms.js", "application/x-javascript", CdnSupportsSecureConnection=true, CdnPath="http://ajax.aspnetcdn.com/ajax/4.6/1/WebForms.js")]
[assembly:System.Web.UI.WebResourceAttribute("WebPartMenu_Check.gif", "image/gif")]
[assembly:System.Web.UI.WebResourceAttribute("WebParts.js", "application/x-javascript", CdnSupportsSecureConnection=true, CdnPath="http://ajax.aspnetcdn.com/ajax/4.6/1/WebParts.js", LoadSuccessExpression="window.WebPart")]
[assembly:System.Web.UI.WebResourceAttribute("WebUIValidation.js", "application/x-javascript", CdnSupportsSecureConnection=true, CdnPath="http://ajax.aspnetcdn.com/ajax/4.6/1/WebUIValidation.js", LoadSuccessExpression="window.Page_ValidationVer")]
[assembly:System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.RequestMinimum, SkipVerification=true)]
[assembly:System.Runtime.CompilerServices.TypeForwardedToAttribute(typeof(System.Web.Security.MembershipCreateStatus))]
[assembly:System.Runtime.CompilerServices.TypeForwardedToAttribute(typeof(System.Web.Security.MembershipCreateUserException))]
[assembly:System.Runtime.CompilerServices.TypeForwardedToAttribute(typeof(System.Web.Security.MembershipPasswordException))]
[assembly:System.Runtime.CompilerServices.TypeForwardedToAttribute(typeof(System.Web.Security.MembershipPasswordFormat))]
[assembly:System.Runtime.CompilerServices.TypeForwardedToAttribute(typeof(System.Web.Security.MembershipProvider))]
[assembly:System.Runtime.CompilerServices.TypeForwardedToAttribute(typeof(System.Web.Security.MembershipProviderCollection))]
[assembly:System.Runtime.CompilerServices.TypeForwardedToAttribute(typeof(System.Web.Security.MembershipUser))]
[assembly:System.Runtime.CompilerServices.TypeForwardedToAttribute(typeof(System.Web.Security.MembershipUserCollection))]
[assembly:System.Runtime.CompilerServices.TypeForwardedToAttribute(typeof(System.Web.Security.MembershipValidatePasswordEventHandler))]
[assembly:System.Runtime.CompilerServices.TypeForwardedToAttribute(typeof(System.Web.Security.RoleProvider))]
[assembly:System.Runtime.CompilerServices.TypeForwardedToAttribute(typeof(System.Web.Security.ValidatePasswordEventArgs))]
namespace System.Web
{
    public enum ApplicationShutdownReason
    {
        BinDirChangeOrDirectoryRename = 6,
        BrowsersDirChangeOrDirectoryRename = 7,
        BuildManagerChange = 15,
        ChangeInGlobalAsax = 2,
        ChangeInSecurityPolicyFile = 5,
        CodeDirChangeOrDirectoryRename = 8,
        ConfigurationChange = 3,
        HostingEnvironment = 1,
        HttpRuntimeClose = 12,
        IdleTimeout = 10,
        InitializationError = 13,
        MaxRecompilationsReached = 14,
        None = 0,
        PhysicalApplicationPathChanged = 11,
        ResourcesDirChangeOrDirectoryRename = 9,
        UnloadAppDomainCalled = 4,
    }
    public delegate System.IAsyncResult BeginEventHandler(object sender, System.EventArgs e, System.AsyncCallback cb, object extraData);
    public partial class DefaultHttpHandler : System.Web.IHttpAsyncHandler, System.Web.IHttpHandler
    {
        public DefaultHttpHandler() { }
        protected System.Web.HttpContext Context { get { throw null; } }
        protected System.Collections.Specialized.NameValueCollection ExecuteUrlHeaders { get { throw null; } }
        public virtual bool IsReusable { get { throw null; } }
        public virtual System.IAsyncResult BeginProcessRequest(System.Web.HttpContext context, System.AsyncCallback callback, object state) { throw null; }
        public virtual void EndProcessRequest(System.IAsyncResult result) { }
        public virtual void OnExecuteUrlPreconditionFailure() { }
        public virtual string OverrideExecuteUrlPath() { throw null; }
        public virtual void ProcessRequest(System.Web.HttpContext context) { }
    }
    public delegate void EndEventHandler(System.IAsyncResult ar);
    public sealed partial class EventHandlerTaskAsyncHelper
    {
        public EventHandlerTaskAsyncHelper(System.Web.TaskEventHandler handler) { }
        public System.Web.BeginEventHandler BeginEventHandler { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } }
        public System.Web.EndEventHandler EndEventHandler { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } }
    }
    public partial class HtmlString : System.Web.IHtmlString
    {
        public HtmlString(string value) { }
        public string ToHtmlString() { throw null; }
        public override string ToString() { throw null; }
    }
    [System.ComponentModel.ToolboxItemAttribute(false)]
    public partial class HttpApplication : System.ComponentModel.IComponent, System.IDisposable, System.Web.IHttpAsyncHandler, System.Web.IHttpHandler
    {
        public HttpApplication() { }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public System.Web.HttpApplicationState Application { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public System.Web.HttpContext Context { get { throw null; } }
        protected System.ComponentModel.EventHandlerList Events { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public System.Web.HttpModuleCollection Modules { [System.Web.AspNetHostingPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, Level=System.Web.AspNetHostingPermissionLevel.High)]get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public System.Web.HttpRequest Request { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public System.Web.HttpResponse Response { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public System.Web.HttpServerUtility Server { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public System.Web.SessionState.HttpSessionState Session { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public System.ComponentModel.ISite Site { get { throw null; } set { } }
        bool System.Web.IHttpHandler.IsReusable { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public System.Security.Principal.IPrincipal User { get { throw null; } }
        public event System.EventHandler AcquireRequestState { add { } remove { } }
        public event System.EventHandler AuthenticateRequest { add { } remove { } }
        public event System.EventHandler AuthorizeRequest { add { } remove { } }
        public event System.EventHandler BeginRequest { add { } remove { } }
        public event System.EventHandler Disposed { add { } remove { } }
        public event System.EventHandler EndRequest { add { } remove { } }
        public event System.EventHandler Error { add { } remove { } }
        public event System.EventHandler LogRequest { add { } remove { } }
        public event System.EventHandler MapRequestHandler { add { } remove { } }
        public event System.EventHandler PostAcquireRequestState { add { } remove { } }
        public event System.EventHandler PostAuthenticateRequest { add { } remove { } }
        public event System.EventHandler PostAuthorizeRequest { add { } remove { } }
        public event System.EventHandler PostLogRequest { add { } remove { } }
        public event System.EventHandler PostMapRequestHandler { add { } remove { } }
        public event System.EventHandler PostReleaseRequestState { add { } remove { } }
        public event System.EventHandler PostRequestHandlerExecute { add { } remove { } }
        public event System.EventHandler PostResolveRequestCache { add { } remove { } }
        public event System.EventHandler PostUpdateRequestCache { add { } remove { } }
        public event System.EventHandler PreRequestHandlerExecute { add { } remove { } }
        public event System.EventHandler PreSendRequestContent { add { } remove { } }
        public event System.EventHandler PreSendRequestHeaders { add { } remove { } }
        public event System.EventHandler ReleaseRequestState { add { } remove { } }
        public event System.EventHandler RequestCompleted { add { } remove { } }
        public event System.EventHandler ResolveRequestCache { add { } remove { } }
        public event System.EventHandler UpdateRequestCache { add { } remove { } }
        public void AddOnAcquireRequestStateAsync(System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh) { }
        public void AddOnAcquireRequestStateAsync(System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state) { }
        public void AddOnAuthenticateRequestAsync(System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh) { }
        public void AddOnAuthenticateRequestAsync(System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state) { }
        public void AddOnAuthorizeRequestAsync(System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh) { }
        public void AddOnAuthorizeRequestAsync(System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state) { }
        public void AddOnBeginRequestAsync(System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh) { }
        public void AddOnBeginRequestAsync(System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state) { }
        public void AddOnEndRequestAsync(System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh) { }
        public void AddOnEndRequestAsync(System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state) { }
        public void AddOnLogRequestAsync(System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh) { }
        public void AddOnLogRequestAsync(System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state) { }
        public void AddOnMapRequestHandlerAsync(System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh) { }
        public void AddOnMapRequestHandlerAsync(System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state) { }
        public void AddOnPostAcquireRequestStateAsync(System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh) { }
        public void AddOnPostAcquireRequestStateAsync(System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state) { }
        public void AddOnPostAuthenticateRequestAsync(System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh) { }
        public void AddOnPostAuthenticateRequestAsync(System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state) { }
        public void AddOnPostAuthorizeRequestAsync(System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh) { }
        public void AddOnPostAuthorizeRequestAsync(System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state) { }
        public void AddOnPostLogRequestAsync(System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh) { }
        public void AddOnPostLogRequestAsync(System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state) { }
        public void AddOnPostMapRequestHandlerAsync(System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh) { }
        public void AddOnPostMapRequestHandlerAsync(System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state) { }
        public void AddOnPostReleaseRequestStateAsync(System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh) { }
        public void AddOnPostReleaseRequestStateAsync(System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state) { }
        public void AddOnPostRequestHandlerExecuteAsync(System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh) { }
        public void AddOnPostRequestHandlerExecuteAsync(System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state) { }
        public void AddOnPostResolveRequestCacheAsync(System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh) { }
        public void AddOnPostResolveRequestCacheAsync(System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state) { }
        public void AddOnPostUpdateRequestCacheAsync(System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh) { }
        public void AddOnPostUpdateRequestCacheAsync(System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state) { }
        public void AddOnPreRequestHandlerExecuteAsync(System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh) { }
        public void AddOnPreRequestHandlerExecuteAsync(System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state) { }
        public void AddOnReleaseRequestStateAsync(System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh) { }
        public void AddOnReleaseRequestStateAsync(System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state) { }
        public void AddOnResolveRequestCacheAsync(System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh) { }
        public void AddOnResolveRequestCacheAsync(System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state) { }
        public void AddOnUpdateRequestCacheAsync(System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh) { }
        public void AddOnUpdateRequestCacheAsync(System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state) { }
        public void CompleteRequest() { }
        public virtual void Dispose() { }
        public virtual string GetOutputCacheProviderName(System.Web.HttpContext context) { throw null; }
        public virtual string GetVaryByCustomString(System.Web.HttpContext context, string custom) { throw null; }
        public virtual void Init() { }
        public void OnExecuteRequestStep(System.Action<System.Web.HttpContextBase, System.Action> callback) { }
        public static void RegisterModule(System.Type moduleType) { }
        System.IAsyncResult System.Web.IHttpAsyncHandler.BeginProcessRequest(System.Web.HttpContext context, System.AsyncCallback cb, object extraData) { throw null; }
        void System.Web.IHttpAsyncHandler.EndProcessRequest(System.IAsyncResult result) { }
        void System.Web.IHttpHandler.ProcessRequest(System.Web.HttpContext context) { }
    }
    public sealed partial class HttpApplicationState : System.Collections.Specialized.NameObjectCollectionBase
    {
        internal HttpApplicationState() { }
        public string[] AllKeys { get { throw null; } }
        public System.Web.HttpApplicationState Contents { get { throw null; } }
        public override int Count { get { throw null; } }
        public object this[int index] { get { throw null; } }
        public object this[string name] { get { throw null; } set { } }
        public System.Web.HttpStaticObjectsCollection StaticObjects { get { throw null; } }
        public void Add(string name, object value) { }
        public void Clear() { }
        public object Get(int index) { throw null; }
        public object Get(string name) { throw null; }
        public string GetKey(int index) { throw null; }
        public void Lock() { }
        public void Remove(string name) { }
        public void RemoveAll() { }
        public void RemoveAt(int index) { }
        public void Set(string name, object value) { }
        public void UnLock() { }
    }
    [System.Runtime.CompilerServices.TypeForwardedFromAttribute("System.Web.Abstractions, Version=3.5.0.0, Culture=Neutral, PublicKeyToken=31bf3856ad364e35")]
    public abstract partial class HttpApplicationStateBase : System.Collections.Specialized.NameObjectCollectionBase, System.Collections.ICollection, System.Collections.IEnumerable
    {
        protected HttpApplicationStateBase() { }
        public virtual string[] AllKeys { get { throw null; } }
        public virtual System.Web.HttpApplicationStateBase Contents { get { throw null; } }
        public override int Count { get { throw null; } }
        public virtual bool IsSynchronized { get { throw null; } }
        public virtual object this[int index] { get { throw null; } }
        public virtual object this[string name] { get { throw null; } set { } }
        public virtual System.Web.HttpStaticObjectsCollectionBase StaticObjects { get { throw null; } }
        public virtual object SyncRoot { get { throw null; } }
        public virtual void Add(string name, object value) { }
        public virtual void Clear() { }
        public virtual void CopyTo(System.Array array, int index) { }
        public virtual object Get(int index) { throw null; }
        public virtual object Get(string name) { throw null; }
        public override System.Collections.IEnumerator GetEnumerator() { throw null; }
        public virtual string GetKey(int index) { throw null; }
        public virtual void Lock() { }
        public virtual void Remove(string name) { }
        public virtual void RemoveAll() { }
        public virtual void RemoveAt(int index) { }
        public virtual void Set(string name, object value) { }
        public virtual void UnLock() { }
    }
    [System.Runtime.CompilerServices.TypeForwardedFromAttribute("System.Web.Abstractions, Version=3.5.0.0, Culture=Neutral, PublicKeyToken=31bf3856ad364e35")]
    public partial class HttpApplicationStateWrapper : System.Web.HttpApplicationStateBase
    {
        public HttpApplicationStateWrapper(System.Web.HttpApplicationState httpApplicationState) { }
        public override string[] AllKeys { get { throw null; } }
        public override System.Web.HttpApplicationStateBase Contents { get { throw null; } }
        public override int Count { get { throw null; } }
        public override bool IsSynchronized { get { throw null; } }
        public override object this[int index] { get { throw null; } }
        public override object this[string name] { get { throw null; } set { } }
        public override System.Collections.Specialized.NameObjectCollectionBase.KeysCollection Keys { get { throw null; } }
        public override System.Web.HttpStaticObjectsCollectionBase StaticObjects { get { throw null; } }
        public override object SyncRoot { get { throw null; } }
        public override void Add(string name, object value) { }
        public override void Clear() { }
        public override void CopyTo(System.Array array, int index) { }
        public override object Get(int index) { throw null; }
        public override object Get(string name) { throw null; }
        public override System.Collections.IEnumerator GetEnumerator() { throw null; }
        public override string GetKey(int index) { throw null; }
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, SerializationFormatter=true)]
        public override void GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) { }
        public override void Lock() { }
        public override void OnDeserialization(object sender) { }
        public override void Remove(string name) { }
        public override void RemoveAll() { }
        public override void RemoveAt(int index) { }
        public override void Set(string name, object value) { }
        public override void UnLock() { }
    }
    public partial class HttpBrowserCapabilities : System.Web.Configuration.HttpCapabilitiesBase
    {
        public HttpBrowserCapabilities() { }
    }
    [System.Runtime.CompilerServices.TypeForwardedFromAttribute("System.Web.Abstractions, Version=3.5.0.0, Culture=Neutral, PublicKeyToken=31bf3856ad364e35")]
    public abstract partial class HttpBrowserCapabilitiesBase : System.Web.UI.IFilterResolutionService
    {
        protected HttpBrowserCapabilitiesBase() { }
        public virtual bool ActiveXControls { get { throw null; } }
        public virtual System.Collections.IDictionary Adapters { get { throw null; } }
        public virtual bool AOL { get { throw null; } }
        public virtual bool BackgroundSounds { get { throw null; } }
        public virtual bool Beta { get { throw null; } }
        public virtual string Browser { get { throw null; } }
        public virtual System.Collections.ArrayList Browsers { get { throw null; } }
        public virtual bool CanCombineFormsInDeck { get { throw null; } }
        public virtual bool CanInitiateVoiceCall { get { throw null; } }
        public virtual bool CanRenderAfterInputOrSelectElement { get { throw null; } }
        public virtual bool CanRenderEmptySelects { get { throw null; } }
        public virtual bool CanRenderInputAndSelectElementsTogether { get { throw null; } }
        public virtual bool CanRenderMixedSelects { get { throw null; } }
        public virtual bool CanRenderOneventAndPrevElementsTogether { get { throw null; } }
        public virtual bool CanRenderPostBackCards { get { throw null; } }
        public virtual bool CanRenderSetvarZeroWithMultiSelectionList { get { throw null; } }
        public virtual bool CanSendMail { get { throw null; } }
        public virtual System.Collections.IDictionary Capabilities { get { throw null; } set { } }
        public virtual bool CDF { get { throw null; } }
        public virtual System.Version ClrVersion { get { throw null; } }
        public virtual bool Cookies { get { throw null; } }
        public virtual bool Crawler { get { throw null; } }
        public virtual int DefaultSubmitButtonLimit { get { throw null; } }
        public virtual System.Version EcmaScriptVersion { get { throw null; } }
        public virtual bool Frames { get { throw null; } }
        public virtual int GatewayMajorVersion { get { throw null; } }
        public virtual double GatewayMinorVersion { get { throw null; } }
        public virtual string GatewayVersion { get { throw null; } }
        public virtual bool HasBackButton { get { throw null; } }
        public virtual bool HidesRightAlignedMultiselectScrollbars { get { throw null; } }
        public virtual string HtmlTextWriter { get { throw null; } set { } }
        public virtual string Id { get { throw null; } }
        public virtual string InputType { get { throw null; } }
        public virtual bool IsColor { get { throw null; } }
        public virtual bool IsMobileDevice { get { throw null; } }
        public virtual string this[string key] { get { throw null; } }
        public virtual bool JavaApplets { get { throw null; } }
        public virtual System.Version JScriptVersion { get { throw null; } }
        public virtual int MajorVersion { get { throw null; } }
        public virtual int MaximumHrefLength { get { throw null; } }
        public virtual int MaximumRenderedPageSize { get { throw null; } }
        public virtual int MaximumSoftkeyLabelLength { get { throw null; } }
        public virtual double MinorVersion { get { throw null; } }
        public virtual string MinorVersionString { get { throw null; } }
        public virtual string MobileDeviceManufacturer { get { throw null; } }
        public virtual string MobileDeviceModel { get { throw null; } }
        public virtual System.Version MSDomVersion { get { throw null; } }
        public virtual int NumberOfSoftkeys { get { throw null; } }
        public virtual string Platform { get { throw null; } }
        public virtual string PreferredImageMime { get { throw null; } }
        public virtual string PreferredRenderingMime { get { throw null; } }
        public virtual string PreferredRenderingType { get { throw null; } }
        public virtual string PreferredRequestEncoding { get { throw null; } }
        public virtual string PreferredResponseEncoding { get { throw null; } }
        public virtual bool RendersBreakBeforeWmlSelectAndInput { get { throw null; } }
        public virtual bool RendersBreaksAfterHtmlLists { get { throw null; } }
        public virtual bool RendersBreaksAfterWmlAnchor { get { throw null; } }
        public virtual bool RendersBreaksAfterWmlInput { get { throw null; } }
        public virtual bool RendersWmlDoAcceptsInline { get { throw null; } }
        public virtual bool RendersWmlSelectsAsMenuCards { get { throw null; } }
        public virtual string RequiredMetaTagNameValue { get { throw null; } }
        public virtual bool RequiresAttributeColonSubstitution { get { throw null; } }
        public virtual bool RequiresContentTypeMetaTag { get { throw null; } }
        public virtual bool RequiresControlStateInSession { get { throw null; } }
        public virtual bool RequiresDBCSCharacter { get { throw null; } }
        public virtual bool RequiresHtmlAdaptiveErrorReporting { get { throw null; } }
        public virtual bool RequiresLeadingPageBreak { get { throw null; } }
        public virtual bool RequiresNoBreakInFormatting { get { throw null; } }
        public virtual bool RequiresOutputOptimization { get { throw null; } }
        public virtual bool RequiresPhoneNumbersAsPlainText { get { throw null; } }
        public virtual bool RequiresSpecialViewStateEncoding { get { throw null; } }
        public virtual bool RequiresUniqueFilePathSuffix { get { throw null; } }
        public virtual bool RequiresUniqueHtmlCheckboxNames { get { throw null; } }
        public virtual bool RequiresUniqueHtmlInputNames { get { throw null; } }
        public virtual bool RequiresUrlEncodedPostfieldValues { get { throw null; } }
        public virtual int ScreenBitDepth { get { throw null; } }
        public virtual int ScreenCharactersHeight { get { throw null; } }
        public virtual int ScreenCharactersWidth { get { throw null; } }
        public virtual int ScreenPixelsHeight { get { throw null; } }
        public virtual int ScreenPixelsWidth { get { throw null; } }
        public virtual bool SupportsAccesskeyAttribute { get { throw null; } }
        public virtual bool SupportsBodyColor { get { throw null; } }
        public virtual bool SupportsBold { get { throw null; } }
        public virtual bool SupportsCacheControlMetaTag { get { throw null; } }
        public virtual bool SupportsCallback { get { throw null; } }
        public virtual bool SupportsCss { get { throw null; } }
        public virtual bool SupportsDivAlign { get { throw null; } }
        public virtual bool SupportsDivNoWrap { get { throw null; } }
        public virtual bool SupportsEmptyStringInCookieValue { get { throw null; } }
        public virtual bool SupportsFontColor { get { throw null; } }
        public virtual bool SupportsFontName { get { throw null; } }
        public virtual bool SupportsFontSize { get { throw null; } }
        public virtual bool SupportsImageSubmit { get { throw null; } }
        public virtual bool SupportsIModeSymbols { get { throw null; } }
        public virtual bool SupportsInputIStyle { get { throw null; } }
        public virtual bool SupportsInputMode { get { throw null; } }
        public virtual bool SupportsItalic { get { throw null; } }
        public virtual bool SupportsJPhoneMultiMediaAttributes { get { throw null; } }
        public virtual bool SupportsJPhoneSymbols { get { throw null; } }
        public virtual bool SupportsQueryStringInFormAction { get { throw null; } }
        public virtual bool SupportsRedirectWithCookie { get { throw null; } }
        public virtual bool SupportsSelectMultiple { get { throw null; } }
        public virtual bool SupportsUncheck { get { throw null; } }
        public virtual bool SupportsXmlHttp { get { throw null; } }
        public virtual bool Tables { get { throw null; } }
        public virtual System.Type TagWriter { get { throw null; } }
        public virtual string Type { get { throw null; } }
        public virtual bool UseOptimizedCacheKey { get { throw null; } }
        public virtual bool VBScript { get { throw null; } }
        public virtual string Version { get { throw null; } }
        public virtual System.Version W3CDomVersion { get { throw null; } }
        public virtual bool Win16 { get { throw null; } }
        public virtual bool Win32 { get { throw null; } }
        public virtual void AddBrowser(string browserName) { }
        public virtual int CompareFilters(string filter1, string filter2) { throw null; }
        public virtual System.Web.UI.HtmlTextWriter CreateHtmlTextWriter(System.IO.TextWriter w) { throw null; }
        public virtual void DisableOptimizedCacheKey() { }
        public virtual bool EvaluateFilter(string filterName) { throw null; }
        public virtual System.Version[] GetClrVersions() { throw null; }
        public virtual bool IsBrowser(string browserName) { throw null; }
    }
    [System.Runtime.CompilerServices.TypeForwardedFromAttribute("System.Web.Abstractions, Version=3.5.0.0, Culture=Neutral, PublicKeyToken=31bf3856ad364e35")]
    public partial class HttpBrowserCapabilitiesWrapper : System.Web.HttpBrowserCapabilitiesBase
    {
        public HttpBrowserCapabilitiesWrapper(System.Web.HttpBrowserCapabilities httpBrowserCapabilities) { }
        public override bool ActiveXControls { get { throw null; } }
        public override System.Collections.IDictionary Adapters { get { throw null; } }
        public override bool AOL { get { throw null; } }
        public override bool BackgroundSounds { get { throw null; } }
        public override bool Beta { get { throw null; } }
        public override string Browser { get { throw null; } }
        public override System.Collections.ArrayList Browsers { get { throw null; } }
        public override bool CanCombineFormsInDeck { get { throw null; } }
        public override bool CanInitiateVoiceCall { get { throw null; } }
        public override bool CanRenderAfterInputOrSelectElement { get { throw null; } }
        public override bool CanRenderEmptySelects { get { throw null; } }
        public override bool CanRenderInputAndSelectElementsTogether { get { throw null; } }
        public override bool CanRenderMixedSelects { get { throw null; } }
        public override bool CanRenderOneventAndPrevElementsTogether { get { throw null; } }
        public override bool CanRenderPostBackCards { get { throw null; } }
        public override bool CanRenderSetvarZeroWithMultiSelectionList { get { throw null; } }
        public override bool CanSendMail { get { throw null; } }
        public override System.Collections.IDictionary Capabilities { get { throw null; } set { } }
        public override bool CDF { get { throw null; } }
        public override System.Version ClrVersion { get { throw null; } }
        public override bool Cookies { get { throw null; } }
        public override bool Crawler { get { throw null; } }
        public override int DefaultSubmitButtonLimit { get { throw null; } }
        public override System.Version EcmaScriptVersion { get { throw null; } }
        public override bool Frames { get { throw null; } }
        public override int GatewayMajorVersion { get { throw null; } }
        public override double GatewayMinorVersion { get { throw null; } }
        public override string GatewayVersion { get { throw null; } }
        public override bool HasBackButton { get { throw null; } }
        public override bool HidesRightAlignedMultiselectScrollbars { get { throw null; } }
        public override string HtmlTextWriter { get { throw null; } set { } }
        public override string Id { get { throw null; } }
        public override string InputType { get { throw null; } }
        public override bool IsColor { get { throw null; } }
        public override bool IsMobileDevice { get { throw null; } }
        public override string this[string key] { get { throw null; } }
        public override bool JavaApplets { get { throw null; } }
        public override System.Version JScriptVersion { get { throw null; } }
        public override int MajorVersion { get { throw null; } }
        public override int MaximumHrefLength { get { throw null; } }
        public override int MaximumRenderedPageSize { get { throw null; } }
        public override int MaximumSoftkeyLabelLength { get { throw null; } }
        public override double MinorVersion { get { throw null; } }
        public override string MinorVersionString { get { throw null; } }
        public override string MobileDeviceManufacturer { get { throw null; } }
        public override string MobileDeviceModel { get { throw null; } }
        public override System.Version MSDomVersion { get { throw null; } }
        public override int NumberOfSoftkeys { get { throw null; } }
        public override string Platform { get { throw null; } }
        public override string PreferredImageMime { get { throw null; } }
        public override string PreferredRenderingMime { get { throw null; } }
        public override string PreferredRenderingType { get { throw null; } }
        public override string PreferredRequestEncoding { get { throw null; } }
        public override string PreferredResponseEncoding { get { throw null; } }
        public override bool RendersBreakBeforeWmlSelectAndInput { get { throw null; } }
        public override bool RendersBreaksAfterHtmlLists { get { throw null; } }
        public override bool RendersBreaksAfterWmlAnchor { get { throw null; } }
        public override bool RendersBreaksAfterWmlInput { get { throw null; } }
        public override bool RendersWmlDoAcceptsInline { get { throw null; } }
        public override bool RendersWmlSelectsAsMenuCards { get { throw null; } }
        public override string RequiredMetaTagNameValue { get { throw null; } }
        public override bool RequiresAttributeColonSubstitution { get { throw null; } }
        public override bool RequiresContentTypeMetaTag { get { throw null; } }
        public override bool RequiresControlStateInSession { get { throw null; } }
        public override bool RequiresDBCSCharacter { get { throw null; } }
        public override bool RequiresHtmlAdaptiveErrorReporting { get { throw null; } }
        public override bool RequiresLeadingPageBreak { get { throw null; } }
        public override bool RequiresNoBreakInFormatting { get { throw null; } }
        public override bool RequiresOutputOptimization { get { throw null; } }
        public override bool RequiresPhoneNumbersAsPlainText { get { throw null; } }
        public override bool RequiresSpecialViewStateEncoding { get { throw null; } }
        public override bool RequiresUniqueFilePathSuffix { get { throw null; } }
        public override bool RequiresUniqueHtmlCheckboxNames { get { throw null; } }
        public override bool RequiresUniqueHtmlInputNames { get { throw null; } }
        public override bool RequiresUrlEncodedPostfieldValues { get { throw null; } }
        public override int ScreenBitDepth { get { throw null; } }
        public override int ScreenCharactersHeight { get { throw null; } }
        public override int ScreenCharactersWidth { get { throw null; } }
        public override int ScreenPixelsHeight { get { throw null; } }
        public override int ScreenPixelsWidth { get { throw null; } }
        public override bool SupportsAccesskeyAttribute { get { throw null; } }
        public override bool SupportsBodyColor { get { throw null; } }
        public override bool SupportsBold { get { throw null; } }
        public override bool SupportsCacheControlMetaTag { get { throw null; } }
        public override bool SupportsCallback { get { throw null; } }
        public override bool SupportsCss { get { throw null; } }
        public override bool SupportsDivAlign { get { throw null; } }
        public override bool SupportsDivNoWrap { get { throw null; } }
        public override bool SupportsEmptyStringInCookieValue { get { throw null; } }
        public override bool SupportsFontColor { get { throw null; } }
        public override bool SupportsFontName { get { throw null; } }
        public override bool SupportsFontSize { get { throw null; } }
        public override bool SupportsImageSubmit { get { throw null; } }
        public override bool SupportsIModeSymbols { get { throw null; } }
        public override bool SupportsInputIStyle { get { throw null; } }
        public override bool SupportsInputMode { get { throw null; } }
        public override bool SupportsItalic { get { throw null; } }
        public override bool SupportsJPhoneMultiMediaAttributes { get { throw null; } }
        public override bool SupportsJPhoneSymbols { get { throw null; } }
        public override bool SupportsQueryStringInFormAction { get { throw null; } }
        public override bool SupportsRedirectWithCookie { get { throw null; } }
        public override bool SupportsSelectMultiple { get { throw null; } }
        public override bool SupportsUncheck { get { throw null; } }
        public override bool SupportsXmlHttp { get { throw null; } }
        public override bool Tables { get { throw null; } }
        public override System.Type TagWriter { get { throw null; } }
        public override string Type { get { throw null; } }
        public override bool UseOptimizedCacheKey { get { throw null; } }
        public override bool VBScript { get { throw null; } }
        public override string Version { get { throw null; } }
        public override System.Version W3CDomVersion { get { throw null; } }
        public override bool Win16 { get { throw null; } }
        public override bool Win32 { get { throw null; } }
        public override void AddBrowser(string browserName) { }
        public override int CompareFilters(string filter1, string filter2) { throw null; }
        public override System.Web.UI.HtmlTextWriter CreateHtmlTextWriter(System.IO.TextWriter w) { throw null; }
        public override void DisableOptimizedCacheKey() { }
        public override bool EvaluateFilter(string filterName) { throw null; }
        public override System.Version[] GetClrVersions() { throw null; }
        public override bool IsBrowser(string browserName) { throw null; }
    }
    public enum HttpCacheability
    {
        NoCache = 1,
        Private = 2,
        Public = 4,
        Server = 3,
        ServerAndNoCache = 3,
        ServerAndPrivate = 5,
    }
    public sealed partial class HttpCachePolicy
    {
        internal HttpCachePolicy() { }
        public System.DateTime UtcTimestampCreated { get { throw null; } set { } }
        public System.Web.HttpCacheVaryByContentEncodings VaryByContentEncodings { get { throw null; } }
        public System.Web.HttpCacheVaryByHeaders VaryByHeaders { get { throw null; } }
        public System.Web.HttpCacheVaryByParams VaryByParams { get { throw null; } }
        public void AddValidationCallback(System.Web.HttpCacheValidateHandler handler, object data) { }
        public void AppendCacheExtension(string extension) { }
        public System.Web.HttpCacheability GetCacheability() { throw null; }
        public string GetCacheExtensions() { throw null; }
        public string GetETag() { throw null; }
        public bool GetETagFromFileDependencies() { throw null; }
        public System.DateTime GetExpires() { throw null; }
        public bool GetIgnoreRangeRequests() { throw null; }
        public bool GetLastModifiedFromFileDependencies() { throw null; }
        public System.TimeSpan GetMaxAge() { throw null; }
        public bool GetNoServerCaching() { throw null; }
        public bool GetNoStore() { throw null; }
        public bool GetNoTransforms() { throw null; }
        public int GetOmitVaryStar() { throw null; }
        public System.TimeSpan GetProxyMaxAge() { throw null; }
        public System.Web.HttpCacheRevalidation GetRevalidation() { throw null; }
        public System.DateTime GetUtcLastModified() { throw null; }
        public string GetVaryByCustom() { throw null; }
        public bool HasSlidingExpiration() { throw null; }
        public bool IsModified() { throw null; }
        public bool IsValidUntilExpires() { throw null; }
        public void SetAllowResponseInBrowserHistory(bool allow) { }
        public void SetCacheability(System.Web.HttpCacheability cacheability) { }
        public void SetCacheability(System.Web.HttpCacheability cacheability, string field) { }
        public void SetETag(string etag) { }
        public void SetETagFromFileDependencies() { }
        public void SetExpires(System.DateTime date) { }
        public void SetLastModified(System.DateTime date) { }
        public void SetLastModifiedFromFileDependencies() { }
        public void SetMaxAge(System.TimeSpan delta) { }
        public void SetNoServerCaching() { }
        public void SetNoStore() { }
        public void SetNoTransforms() { }
        public void SetOmitVaryStar(bool omit) { }
        public void SetProxyMaxAge(System.TimeSpan delta) { }
        public void SetRevalidation(System.Web.HttpCacheRevalidation revalidation) { }
        public void SetSlidingExpiration(bool slide) { }
        public void SetValidUntilExpires(bool validUntilExpires) { }
        public void SetVaryByCustom(string custom) { }
    }
    [System.Runtime.CompilerServices.TypeForwardedFromAttribute("System.Web.Abstractions, Version=3.5.0.0, Culture=Neutral, PublicKeyToken=31bf3856ad364e35")]
    public abstract partial class HttpCachePolicyBase
    {
        protected HttpCachePolicyBase() { }
        public virtual System.Web.HttpCacheVaryByContentEncodings VaryByContentEncodings { get { throw null; } }
        public virtual System.Web.HttpCacheVaryByHeaders VaryByHeaders { get { throw null; } }
        public virtual System.Web.HttpCacheVaryByParams VaryByParams { get { throw null; } }
        public virtual void AddValidationCallback(System.Web.HttpCacheValidateHandler handler, object data) { }
        public virtual void AppendCacheExtension(string extension) { }
        public virtual void SetAllowResponseInBrowserHistory(bool allow) { }
        public virtual void SetCacheability(System.Web.HttpCacheability cacheability) { }
        public virtual void SetCacheability(System.Web.HttpCacheability cacheability, string field) { }
        public virtual void SetETag(string etag) { }
        public virtual void SetETagFromFileDependencies() { }
        public virtual void SetExpires(System.DateTime date) { }
        public virtual void SetLastModified(System.DateTime date) { }
        public virtual void SetLastModifiedFromFileDependencies() { }
        public virtual void SetMaxAge(System.TimeSpan delta) { }
        public virtual void SetNoServerCaching() { }
        public virtual void SetNoStore() { }
        public virtual void SetNoTransforms() { }
        public virtual void SetOmitVaryStar(bool omit) { }
        public virtual void SetProxyMaxAge(System.TimeSpan delta) { }
        public virtual void SetRevalidation(System.Web.HttpCacheRevalidation revalidation) { }
        public virtual void SetSlidingExpiration(bool slide) { }
        public virtual void SetValidUntilExpires(bool validUntilExpires) { }
        public virtual void SetVaryByCustom(string custom) { }
    }
    [System.Runtime.CompilerServices.TypeForwardedFromAttribute("System.Web.Abstractions, Version=3.5.0.0, Culture=Neutral, PublicKeyToken=31bf3856ad364e35")]
    public partial class HttpCachePolicyWrapper : System.Web.HttpCachePolicyBase
    {
        public HttpCachePolicyWrapper(System.Web.HttpCachePolicy httpCachePolicy) { }
        public override System.Web.HttpCacheVaryByContentEncodings VaryByContentEncodings { get { throw null; } }
        public override System.Web.HttpCacheVaryByHeaders VaryByHeaders { get { throw null; } }
        public override System.Web.HttpCacheVaryByParams VaryByParams { get { throw null; } }
        public override void AddValidationCallback(System.Web.HttpCacheValidateHandler handler, object data) { }
        public override void AppendCacheExtension(string extension) { }
        public override void SetAllowResponseInBrowserHistory(bool allow) { }
        public override void SetCacheability(System.Web.HttpCacheability cacheability) { }
        public override void SetCacheability(System.Web.HttpCacheability cacheability, string field) { }
        public override void SetETag(string etag) { }
        public override void SetETagFromFileDependencies() { }
        public override void SetExpires(System.DateTime date) { }
        public override void SetLastModified(System.DateTime date) { }
        public override void SetLastModifiedFromFileDependencies() { }
        public override void SetMaxAge(System.TimeSpan delta) { }
        public override void SetNoServerCaching() { }
        public override void SetNoStore() { }
        public override void SetNoTransforms() { }
        public override void SetOmitVaryStar(bool omit) { }
        public override void SetProxyMaxAge(System.TimeSpan delta) { }
        public override void SetRevalidation(System.Web.HttpCacheRevalidation revalidation) { }
        public override void SetSlidingExpiration(bool slide) { }
        public override void SetValidUntilExpires(bool validUntilExpires) { }
        public override void SetVaryByCustom(string custom) { }
    }
    public enum HttpCacheRevalidation
    {
        AllCaches = 1,
        None = 3,
        ProxyCaches = 2,
    }
    public delegate void HttpCacheValidateHandler(System.Web.HttpContext context, object data, ref System.Web.HttpValidationStatus validationStatus);
    public sealed partial class HttpCacheVaryByContentEncodings
    {
        public HttpCacheVaryByContentEncodings() { }
        public bool this[string contentEncoding] { get { throw null; } set { } }
        public string[] GetContentEncodings() { throw null; }
        public void SetContentEncodings(string[] contentEncodings) { }
    }
    public sealed partial class HttpCacheVaryByHeaders
    {
        public HttpCacheVaryByHeaders() { }
        public bool AcceptTypes { get { throw null; } set { } }
        public bool this[string header] { get { throw null; } set { } }
        public bool UserAgent { get { throw null; } set { } }
        public bool UserCharSet { get { throw null; } set { } }
        public bool UserLanguage { get { throw null; } set { } }
        public string[] GetHeaders() { throw null; }
        public void SetHeaders(string[] headers) { }
        public void VaryByUnspecifiedParameters() { }
    }
    public sealed partial class HttpCacheVaryByParams
    {
        public HttpCacheVaryByParams() { }
        public bool IgnoreParams { get { throw null; } set { } }
        public bool this[string header] { get { throw null; } set { } }
        public string[] GetParams() { throw null; }
        public void SetParams(string[] parameters) { }
    }
    public partial class HttpClientCertificate : System.Collections.Specialized.NameValueCollection
    {
        internal HttpClientCertificate() { }
        public byte[] BinaryIssuer { get { throw null; } }
        public int CertEncoding { get { throw null; } }
        public byte[] Certificate { get { throw null; } }
        public string Cookie { get { throw null; } }
        public int Flags { get { throw null; } }
        public bool IsPresent { get { throw null; } }
        public string Issuer { get { throw null; } }
        public bool IsValid { get { throw null; } }
        public int KeySize { get { throw null; } }
        public byte[] PublicKey { get { throw null; } }
        public int SecretKeySize { get { throw null; } }
        public string SerialNumber { get { throw null; } }
        public string ServerIssuer { get { throw null; } }
        public string ServerSubject { get { throw null; } }
        public string Subject { get { throw null; } }
        public System.DateTime ValidFrom { get { throw null; } }
        public System.DateTime ValidUntil { get { throw null; } }
        public override string Get(string field) { throw null; }
    }
    [System.SerializableAttribute]
    public sealed partial class HttpCompileException : System.Web.HttpException
    {
        public HttpCompileException() { }
        public HttpCompileException(System.CodeDom.Compiler.CompilerResults results, string sourceCode) { }
        public HttpCompileException(string message) { }
        public HttpCompileException(string message, System.Exception innerException) { }
        public override string Message { get { throw null; } }
        public System.CodeDom.Compiler.CompilerResults Results { [System.Web.AspNetHostingPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, Level=System.Web.AspNetHostingPermissionLevel.High)]get { throw null; } }
        public string SourceCode { [System.Web.AspNetHostingPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, Level=System.Web.AspNetHostingPermissionLevel.High)]get { throw null; } }
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, SerializationFormatter=true)]
        public override void GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) { }
    }
    public sealed partial class HttpContext : System.IServiceProvider
    {
        public HttpContext(System.Web.HttpRequest request, System.Web.HttpResponse response) { }
        public HttpContext(System.Web.HttpWorkerRequest wr) { }
        public System.Exception[] AllErrors { get { throw null; } }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool AllowAsyncDuringSyncStages { get { throw null; } set { } }
        public System.Web.HttpApplicationState Application { get { throw null; } }
        public System.Web.HttpApplication ApplicationInstance { get { throw null; } set { } }
        public System.Web.Configuration.AsyncPreloadModeFlags AsyncPreloadMode { get { throw null; } set { } }
        public System.Web.Caching.Cache Cache { get { throw null; } }
        public static System.Web.HttpContext Current { get { throw null; } set { } }
        public System.Web.IHttpHandler CurrentHandler { get { throw null; } }
        public System.Web.RequestNotification CurrentNotification { get { throw null; } }
        public System.Exception Error { get { throw null; } }
        public System.Web.IHttpHandler Handler { get { throw null; } set { } }
        public bool IsCustomErrorEnabled { get { throw null; } }
        public bool IsDebuggingEnabled { get { throw null; } }
        public bool IsPostNotification { get { throw null; } }
        public bool IsWebSocketRequest { get { throw null; } }
        public bool IsWebSocketRequestUpgrading { get { throw null; } }
        public System.Collections.IDictionary Items { get { throw null; } }
        public System.Web.Instrumentation.PageInstrumentationService PageInstrumentation { get { throw null; } }
        public System.Web.IHttpHandler PreviousHandler { get { throw null; } }
        public System.Web.Profile.ProfileBase Profile { get { throw null; } }
        public System.Web.HttpRequest Request { get { throw null; } }
        public System.Web.HttpResponse Response { get { throw null; } }
        public System.Web.HttpServerUtility Server { get { throw null; } }
        public System.Web.SessionState.HttpSessionState Session { get { throw null; } }
        public bool SkipAuthorization { get { throw null; } [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, ControlPrincipal=true)]set { } }
        public bool ThreadAbortOnTimeout { get { throw null; } set { } }
        public System.DateTime Timestamp { get { throw null; } }
        public System.Web.TraceContext Trace { get { throw null; } }
        public System.Security.Principal.IPrincipal User { get { throw null; } [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, ControlPrincipal=true)]set { } }
        public string WebSocketNegotiatedProtocol { get { throw null; } }
        public System.Collections.Generic.IList<string> WebSocketRequestedProtocols { get { throw null; } }
        public void AcceptWebSocketRequest(System.Func<System.Web.WebSockets.AspNetWebSocketContext, System.Threading.Tasks.Task> userFunc) { }
        public void AcceptWebSocketRequest(System.Func<System.Web.WebSockets.AspNetWebSocketContext, System.Threading.Tasks.Task> userFunc, System.Web.WebSockets.AspNetWebSocketOptions options) { }
        public void AddError(System.Exception errorInfo) { }
        public System.Web.ISubscriptionToken AddOnRequestCompleted(System.Action<System.Web.HttpContext> callback) { throw null; }
        public void ClearError() { }
        public System.Web.ISubscriptionToken DisposeOnPipelineCompleted(System.IDisposable target) { throw null; }
        [System.ObsoleteAttribute("The recommended alternative is System.Web.Configuration.WebConfigurationManager.GetWebApplicationSection in System.Web.dll. http://go.microsoft.com/fwlink/?linkid=14202")]
        public static object GetAppConfig(string name) { throw null; }
        [System.ObsoleteAttribute("The recommended alternative is System.Web.HttpContext.GetSection in System.Web.dll. http://go.microsoft.com/fwlink/?linkid=14202")]
        public object GetConfig(string name) { throw null; }
        public static object GetGlobalResourceObject(string classKey, string resourceKey) { throw null; }
        public static object GetGlobalResourceObject(string classKey, string resourceKey, System.Globalization.CultureInfo culture) { throw null; }
        public static object GetLocalResourceObject(string virtualPath, string resourceKey) { throw null; }
        public static object GetLocalResourceObject(string virtualPath, string resourceKey, System.Globalization.CultureInfo culture) { throw null; }
        public object GetSection(string sectionName) { throw null; }
        public void RemapHandler(System.Web.IHttpHandler handler) { }
        public void RewritePath(string path) { }
        public void RewritePath(string path, bool rebaseClientPath) { }
        public void RewritePath(string filePath, string pathInfo, string queryString) { }
        public void RewritePath(string filePath, string pathInfo, string queryString, bool setClientFilePath) { }
        public void SetSessionStateBehavior(System.Web.SessionState.SessionStateBehavior sessionStateBehavior) { }
        object System.IServiceProvider.GetService(System.Type service) { throw null; }
    }
    [System.Runtime.CompilerServices.TypeForwardedFromAttribute("System.Web.Abstractions, Version=3.5.0.0, Culture=Neutral, PublicKeyToken=31bf3856ad364e35")]
    public abstract partial class HttpContextBase : System.IServiceProvider
    {
        protected HttpContextBase() { }
        public virtual System.Exception[] AllErrors { get { throw null; } }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public virtual bool AllowAsyncDuringSyncStages { get { throw null; } set { } }
        public virtual System.Web.HttpApplicationStateBase Application { get { throw null; } }
        public virtual System.Web.HttpApplication ApplicationInstance { get { throw null; } set { } }
        public virtual System.Web.Configuration.AsyncPreloadModeFlags AsyncPreloadMode { get { throw null; } set { } }
        public virtual System.Web.Caching.Cache Cache { get { throw null; } }
        public virtual System.Web.IHttpHandler CurrentHandler { get { throw null; } }
        public virtual System.Web.RequestNotification CurrentNotification { get { throw null; } }
        public virtual System.Exception Error { get { throw null; } }
        public virtual System.Web.IHttpHandler Handler { get { throw null; } set { } }
        public virtual bool IsCustomErrorEnabled { get { throw null; } }
        public virtual bool IsDebuggingEnabled { get { throw null; } }
        public virtual bool IsPostNotification { get { throw null; } }
        public virtual bool IsWebSocketRequest { get { throw null; } }
        public virtual bool IsWebSocketRequestUpgrading { get { throw null; } }
        public virtual System.Collections.IDictionary Items { get { throw null; } }
        public virtual System.Web.Instrumentation.PageInstrumentationService PageInstrumentation { get { throw null; } }
        public virtual System.Web.IHttpHandler PreviousHandler { get { throw null; } }
        public virtual System.Web.Profile.ProfileBase Profile { get { throw null; } }
        public virtual System.Web.HttpRequestBase Request { get { throw null; } }
        public virtual System.Web.HttpResponseBase Response { get { throw null; } }
        public virtual System.Web.HttpServerUtilityBase Server { get { throw null; } }
        public virtual System.Web.HttpSessionStateBase Session { get { throw null; } }
        public virtual bool SkipAuthorization { get { throw null; } set { } }
        public virtual bool ThreadAbortOnTimeout { get { throw null; } set { } }
        public virtual System.DateTime Timestamp { get { throw null; } }
        public virtual System.Web.TraceContext Trace { get { throw null; } }
        public virtual System.Security.Principal.IPrincipal User { get { throw null; } set { } }
        public virtual string WebSocketNegotiatedProtocol { get { throw null; } }
        public virtual System.Collections.Generic.IList<string> WebSocketRequestedProtocols { get { throw null; } }
        public virtual void AcceptWebSocketRequest(System.Func<System.Web.WebSockets.AspNetWebSocketContext, System.Threading.Tasks.Task> userFunc) { }
        public virtual void AcceptWebSocketRequest(System.Func<System.Web.WebSockets.AspNetWebSocketContext, System.Threading.Tasks.Task> userFunc, System.Web.WebSockets.AspNetWebSocketOptions options) { }
        public virtual void AddError(System.Exception errorInfo) { }
        public virtual System.Web.ISubscriptionToken AddOnRequestCompleted(System.Action<System.Web.HttpContextBase> callback) { throw null; }
        public virtual void ClearError() { }
        public virtual System.Web.ISubscriptionToken DisposeOnPipelineCompleted(System.IDisposable target) { throw null; }
        public virtual object GetGlobalResourceObject(string classKey, string resourceKey) { throw null; }
        public virtual object GetGlobalResourceObject(string classKey, string resourceKey, System.Globalization.CultureInfo culture) { throw null; }
        public virtual object GetLocalResourceObject(string virtualPath, string resourceKey) { throw null; }
        public virtual object GetLocalResourceObject(string virtualPath, string resourceKey, System.Globalization.CultureInfo culture) { throw null; }
        public virtual object GetSection(string sectionName) { throw null; }
        public virtual object GetService(System.Type serviceType) { throw null; }
        public virtual void RemapHandler(System.Web.IHttpHandler handler) { }
        public virtual void RewritePath(string path) { }
        public virtual void RewritePath(string path, bool rebaseClientPath) { }
        public virtual void RewritePath(string filePath, string pathInfo, string queryString) { }
        public virtual void RewritePath(string filePath, string pathInfo, string queryString, bool setClientFilePath) { }
        public virtual void SetSessionStateBehavior(System.Web.SessionState.SessionStateBehavior sessionStateBehavior) { }
    }
    [System.Runtime.CompilerServices.TypeForwardedFromAttribute("System.Web.Abstractions, Version=3.5.0.0, Culture=Neutral, PublicKeyToken=31bf3856ad364e35")]
    public partial class HttpContextWrapper : System.Web.HttpContextBase
    {
        public HttpContextWrapper(System.Web.HttpContext httpContext) { }
        public override System.Exception[] AllErrors { get { throw null; } }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public override bool AllowAsyncDuringSyncStages { get { throw null; } set { } }
        public override System.Web.HttpApplicationStateBase Application { get { throw null; } }
        public override System.Web.HttpApplication ApplicationInstance { get { throw null; } set { } }
        public override System.Web.Configuration.AsyncPreloadModeFlags AsyncPreloadMode { get { throw null; } set { } }
        public override System.Web.Caching.Cache Cache { get { throw null; } }
        public override System.Web.IHttpHandler CurrentHandler { get { throw null; } }
        public override System.Web.RequestNotification CurrentNotification { get { throw null; } }
        public override System.Exception Error { get { throw null; } }
        public override System.Web.IHttpHandler Handler { get { throw null; } set { } }
        public override bool IsCustomErrorEnabled { get { throw null; } }
        public override bool IsDebuggingEnabled { get { throw null; } }
        public override bool IsPostNotification { get { throw null; } }
        public override bool IsWebSocketRequest { get { throw null; } }
        public override bool IsWebSocketRequestUpgrading { get { throw null; } }
        public override System.Collections.IDictionary Items { get { throw null; } }
        public override System.Web.Instrumentation.PageInstrumentationService PageInstrumentation { get { throw null; } }
        public override System.Web.IHttpHandler PreviousHandler { get { throw null; } }
        public override System.Web.Profile.ProfileBase Profile { get { throw null; } }
        public override System.Web.HttpRequestBase Request { get { throw null; } }
        public override System.Web.HttpResponseBase Response { get { throw null; } }
        public override System.Web.HttpServerUtilityBase Server { get { throw null; } }
        public override System.Web.HttpSessionStateBase Session { get { throw null; } }
        public override bool SkipAuthorization { get { throw null; } set { } }
        public override bool ThreadAbortOnTimeout { get { throw null; } set { } }
        public override System.DateTime Timestamp { get { throw null; } }
        public override System.Web.TraceContext Trace { get { throw null; } }
        public override System.Security.Principal.IPrincipal User { get { throw null; } set { } }
        public override string WebSocketNegotiatedProtocol { get { throw null; } }
        public override System.Collections.Generic.IList<string> WebSocketRequestedProtocols { get { throw null; } }
        public override void AcceptWebSocketRequest(System.Func<System.Web.WebSockets.AspNetWebSocketContext, System.Threading.Tasks.Task> userFunc) { }
        public override void AcceptWebSocketRequest(System.Func<System.Web.WebSockets.AspNetWebSocketContext, System.Threading.Tasks.Task> userFunc, System.Web.WebSockets.AspNetWebSocketOptions options) { }
        public override void AddError(System.Exception errorInfo) { }
        public override System.Web.ISubscriptionToken AddOnRequestCompleted(System.Action<System.Web.HttpContextBase> callback) { throw null; }
        public override void ClearError() { }
        public override System.Web.ISubscriptionToken DisposeOnPipelineCompleted(System.IDisposable target) { throw null; }
        public override object GetGlobalResourceObject(string classKey, string resourceKey) { throw null; }
        public override object GetGlobalResourceObject(string classKey, string resourceKey, System.Globalization.CultureInfo culture) { throw null; }
        public override object GetLocalResourceObject(string virtualPath, string resourceKey) { throw null; }
        public override object GetLocalResourceObject(string virtualPath, string resourceKey, System.Globalization.CultureInfo culture) { throw null; }
        public override object GetSection(string sectionName) { throw null; }
        public override object GetService(System.Type serviceType) { throw null; }
        public override void RemapHandler(System.Web.IHttpHandler handler) { }
        public override void RewritePath(string path) { }
        public override void RewritePath(string path, bool rebaseClientPath) { }
        public override void RewritePath(string filePath, string pathInfo, string queryString) { }
        public override void RewritePath(string filePath, string pathInfo, string queryString, bool setClientFilePath) { }
        public override void SetSessionStateBehavior(System.Web.SessionState.SessionStateBehavior sessionStateBehavior) { }
    }
    public sealed partial class HttpCookie
    {
        public HttpCookie(string name) { }
        public HttpCookie(string name, string value) { }
        public string Domain { get { throw null; } set { } }
        public System.DateTime Expires { get { throw null; } set { } }
        public bool HasKeys { get { throw null; } }
        public bool HttpOnly { get { throw null; } set { } }
        public string this[string key] { get { throw null; } set { } }
        public string Name { get { throw null; } set { } }
        public string Path { get { throw null; } set { } }
        public System.Web.SameSiteMode SameSite { get { throw null; } set { } }
        public bool Secure { get { throw null; } set { } }
        public bool Shareable { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } [System.Runtime.CompilerServices.CompilerGeneratedAttribute]set { } }
        public string Value { get { throw null; } set { } }
        public System.Collections.Specialized.NameValueCollection Values { get { throw null; } }
        public static bool TryParse(string input, out System.Web.HttpCookie result) { throw null; }
    }
    public sealed partial class HttpCookieCollection : System.Collections.Specialized.NameObjectCollectionBase
    {
        public HttpCookieCollection() { }
        public string[] AllKeys { get { throw null; } }
        public System.Web.HttpCookie this[int index] { get { throw null; } }
        public System.Web.HttpCookie this[string name] { get { throw null; } }
        public void Add(System.Web.HttpCookie cookie) { }
        public void Clear() { }
        public void CopyTo(System.Array dest, int index) { }
        public System.Web.HttpCookie Get(int index) { throw null; }
        public System.Web.HttpCookie Get(string name) { throw null; }
        public string GetKey(int index) { throw null; }
        public void Remove(string name) { }
        public void Set(System.Web.HttpCookie cookie) { }
    }
    public enum HttpCookieMode
    {
        AutoDetect = 2,
        UseCookies = 1,
        UseDeviceProfile = 3,
        UseUri = 0,
    }
    [System.SerializableAttribute]
    public partial class HttpException : System.Runtime.InteropServices.ExternalException
    {
        public HttpException() { }
        public HttpException(int httpCode, string message) { }
        public HttpException(int httpCode, string message, System.Exception innerException) { }
        public HttpException(int httpCode, string message, int hr) { }
        protected HttpException(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) { }
        public HttpException(string message) { }
        public HttpException(string message, System.Exception innerException) { }
        public HttpException(string message, int hr) { }
        public int WebEventCode { get { throw null; } }
        public static System.Web.HttpException CreateFromLastError(string message) { throw null; }
        public string GetHtmlErrorMessage() { throw null; }
        public int GetHttpCode() { throw null; }
        public override void GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) { }
    }
    public sealed partial class HttpFileCollection : System.Collections.Specialized.NameObjectCollectionBase
    {
        internal HttpFileCollection() { }
        public string[] AllKeys { get { throw null; } }
        public System.Web.HttpPostedFile this[int index] { get { throw null; } }
        public System.Web.HttpPostedFile this[string name] { get { throw null; } }
        public void CopyTo(System.Array dest, int index) { }
        public System.Web.HttpPostedFile Get(int index) { throw null; }
        public System.Web.HttpPostedFile Get(string name) { throw null; }
        public string GetKey(int index) { throw null; }
        public System.Collections.Generic.IList<System.Web.HttpPostedFile> GetMultiple(string name) { throw null; }
    }
    [System.Runtime.CompilerServices.TypeForwardedFromAttribute("System.Web.Abstractions, Version=3.5.0.0, Culture=Neutral, PublicKeyToken=31bf3856ad364e35")]
    public abstract partial class HttpFileCollectionBase : System.Collections.Specialized.NameObjectCollectionBase, System.Collections.ICollection, System.Collections.IEnumerable
    {
        protected HttpFileCollectionBase() { }
        public virtual string[] AllKeys { get { throw null; } }
        public override int Count { get { throw null; } }
        public virtual bool IsSynchronized { get { throw null; } }
        public virtual System.Web.HttpPostedFileBase this[int index] { get { throw null; } }
        public virtual System.Web.HttpPostedFileBase this[string name] { get { throw null; } }
        public virtual object SyncRoot { get { throw null; } }
        public virtual void CopyTo(System.Array dest, int index) { }
        public virtual System.Web.HttpPostedFileBase Get(int index) { throw null; }
        public virtual System.Web.HttpPostedFileBase Get(string name) { throw null; }
        public override System.Collections.IEnumerator GetEnumerator() { throw null; }
        public virtual string GetKey(int index) { throw null; }
        public virtual System.Collections.Generic.IList<System.Web.HttpPostedFileBase> GetMultiple(string name) { throw null; }
    }
    [System.Runtime.CompilerServices.TypeForwardedFromAttribute("System.Web.Abstractions, Version=3.5.0.0, Culture=Neutral, PublicKeyToken=31bf3856ad364e35")]
    public partial class HttpFileCollectionWrapper : System.Web.HttpFileCollectionBase
    {
        public HttpFileCollectionWrapper(System.Web.HttpFileCollection httpFileCollection) { }
        public override string[] AllKeys { get { throw null; } }
        public override int Count { get { throw null; } }
        public override bool IsSynchronized { get { throw null; } }
        public override System.Web.HttpPostedFileBase this[int index] { get { throw null; } }
        public override System.Web.HttpPostedFileBase this[string name] { get { throw null; } }
        public override System.Collections.Specialized.NameObjectCollectionBase.KeysCollection Keys { get { throw null; } }
        public override object SyncRoot { get { throw null; } }
        public override void CopyTo(System.Array dest, int index) { }
        public override System.Web.HttpPostedFileBase Get(int index) { throw null; }
        public override System.Web.HttpPostedFileBase Get(string name) { throw null; }
        public override System.Collections.IEnumerator GetEnumerator() { throw null; }
        public override string GetKey(int index) { throw null; }
        public override System.Collections.Generic.IList<System.Web.HttpPostedFileBase> GetMultiple(string name) { throw null; }
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, SerializationFormatter=true)]
        public override void GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) { }
        public override void OnDeserialization(object sender) { }
    }
    public sealed partial class HttpModuleCollection : System.Collections.Specialized.NameObjectCollectionBase
    {
        internal HttpModuleCollection() { }
        public string[] AllKeys { get { throw null; } }
        public System.Web.IHttpModule this[int index] { get { throw null; } }
        public System.Web.IHttpModule this[string name] { get { throw null; } }
        public void CopyTo(System.Array dest, int index) { }
        public System.Web.IHttpModule Get(int index) { throw null; }
        public System.Web.IHttpModule Get(string name) { throw null; }
        public string GetKey(int index) { throw null; }
    }
    [System.SerializableAttribute]
    public sealed partial class HttpParseException : System.Web.HttpException
    {
        public HttpParseException() { }
        public HttpParseException(string message) { }
        public HttpParseException(string message, System.Exception innerException) { }
        public HttpParseException(string message, System.Exception innerException, string virtualPath, string sourceCode, int line) { }
        public string FileName { get { throw null; } }
        public int Line { get { throw null; } }
        public System.Web.ParserErrorCollection ParserErrors { get { throw null; } }
        public string VirtualPath { get { throw null; } }
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, SerializationFormatter=true)]
        public override void GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) { }
    }
    public sealed partial class HttpPostedFile
    {
        internal HttpPostedFile() { }
        public int ContentLength { get { throw null; } }
        public string ContentType { get { throw null; } }
        public string FileName { get { throw null; } }
        public System.IO.Stream InputStream { get { throw null; } }
        public void SaveAs(string filename) { }
    }
    [System.Runtime.CompilerServices.TypeForwardedFromAttribute("System.Web.Abstractions, Version=3.5.0.0, Culture=Neutral, PublicKeyToken=31bf3856ad364e35")]
    public abstract partial class HttpPostedFileBase
    {
        protected HttpPostedFileBase() { }
        public virtual int ContentLength { get { throw null; } }
        public virtual string ContentType { get { throw null; } }
        public virtual string FileName { get { throw null; } }
        public virtual System.IO.Stream InputStream { get { throw null; } }
        public virtual void SaveAs(string filename) { }
    }
    [System.Runtime.CompilerServices.TypeForwardedFromAttribute("System.Web.Abstractions, Version=3.5.0.0, Culture=Neutral, PublicKeyToken=31bf3856ad364e35")]
    public partial class HttpPostedFileWrapper : System.Web.HttpPostedFileBase
    {
        public HttpPostedFileWrapper(System.Web.HttpPostedFile httpPostedFile) { }
        public override int ContentLength { get { throw null; } }
        public override string ContentType { get { throw null; } }
        public override string FileName { get { throw null; } }
        public override System.IO.Stream InputStream { get { throw null; } }
        public override void SaveAs(string filename) { }
    }
    public sealed partial class HttpRequest
    {
        public HttpRequest(string filename, string url, string queryString) { }
        public string[] AcceptTypes { get { throw null; } }
        public string AnonymousID { get { throw null; } }
        public string ApplicationPath { get { throw null; } }
        public string AppRelativeCurrentExecutionFilePath { get { throw null; } }
        public System.Web.HttpBrowserCapabilities Browser { get { throw null; } set { } }
        public System.Web.HttpClientCertificate ClientCertificate { [System.Web.AspNetHostingPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, Level=System.Web.AspNetHostingPermissionLevel.Low)]get { throw null; } }
        public System.Text.Encoding ContentEncoding { get { throw null; } set { } }
        public int ContentLength { get { throw null; } }
        public string ContentType { get { throw null; } set { } }
        public System.Web.HttpCookieCollection Cookies { get { throw null; } }
        public string CurrentExecutionFilePath { get { throw null; } }
        public string CurrentExecutionFilePathExtension { get { throw null; } }
        public string FilePath { get { throw null; } }
        public System.Web.HttpFileCollection Files { get { throw null; } }
        public System.IO.Stream Filter { get { throw null; } set { } }
        public System.Collections.Specialized.NameValueCollection Form { get { throw null; } }
        public System.Collections.Specialized.NameValueCollection Headers { get { throw null; } }
        public System.Security.Authentication.ExtendedProtection.ChannelBinding HttpChannelBinding { [System.Security.Permissions.PermissionSetAttribute(System.Security.Permissions.SecurityAction.Demand, Unrestricted=true)]get { throw null; } }
        public string HttpMethod { get { throw null; } }
        public System.IO.Stream InputStream { get { throw null; } }
        public bool IsAuthenticated { get { throw null; } }
        public bool IsLocal { get { throw null; } }
        public bool IsSecureConnection { get { throw null; } }
        public string this[string key] { get { throw null; } }
        public System.Security.Principal.WindowsIdentity LogonUserIdentity { [System.Web.AspNetHostingPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, Level=System.Web.AspNetHostingPermissionLevel.Medium)]get { throw null; } }
        public System.Collections.Specialized.NameValueCollection Params { get { throw null; } }
        public string Path { get { throw null; } }
        public string PathInfo { get { throw null; } }
        public string PhysicalApplicationPath { get { throw null; } }
        public string PhysicalPath { get { throw null; } }
        public System.Collections.Specialized.NameValueCollection QueryString { get { throw null; } }
        public string RawUrl { get { throw null; } }
        public System.Web.ReadEntityBodyMode ReadEntityBodyMode { get { throw null; } }
        public System.Web.Routing.RequestContext RequestContext { get { throw null; } set { } }
        public string RequestType { get { throw null; } set { } }
        public System.Collections.Specialized.NameValueCollection ServerVariables { get { throw null; } }
        public System.Threading.CancellationToken TimedOutToken { get { throw null; } }
        public System.Web.ITlsTokenBindingInfo TlsTokenBindingInfo { get { throw null; } }
        public int TotalBytes { get { throw null; } }
        public System.Web.UnvalidatedRequestValues Unvalidated { get { throw null; } }
        public System.Uri Url { get { throw null; } }
        public System.Uri UrlReferrer { get { throw null; } }
        public string UserAgent { get { throw null; } }
        public string UserHostAddress { get { throw null; } }
        public string UserHostName { get { throw null; } }
        public string[] UserLanguages { get { throw null; } }
        public void Abort() { }
        public byte[] BinaryRead(int count) { throw null; }
        public System.IO.Stream GetBufferedInputStream() { throw null; }
        public System.IO.Stream GetBufferlessInputStream() { throw null; }
        public System.IO.Stream GetBufferlessInputStream(bool disableMaxRequestLength) { throw null; }
        public void InsertEntityBody() { }
        [System.Web.AspNetHostingPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, Level=System.Web.AspNetHostingPermissionLevel.High)]
        public void InsertEntityBody(byte[] buffer, int offset, int count) { }
        public int[] MapImageCoordinates(string imageFieldName) { throw null; }
        public string MapPath(string virtualPath) { throw null; }
        public string MapPath(string virtualPath, string baseVirtualDir, bool allowCrossAppMapping) { throw null; }
        public double[] MapRawImageCoordinates(string imageFieldName) { throw null; }
        public void SaveAs(string filename, bool includeHeaders) { }
        public void ValidateInput() { }
    }
    [System.Runtime.CompilerServices.TypeForwardedFromAttribute("System.Web.Abstractions, Version=3.5.0.0, Culture=Neutral, PublicKeyToken=31bf3856ad364e35")]
    public abstract partial class HttpRequestBase
    {
        protected HttpRequestBase() { }
        public virtual string[] AcceptTypes { get { throw null; } }
        public virtual string AnonymousID { get { throw null; } }
        public virtual string ApplicationPath { get { throw null; } }
        public virtual string AppRelativeCurrentExecutionFilePath { get { throw null; } }
        public virtual System.Web.HttpBrowserCapabilitiesBase Browser { get { throw null; } }
        public virtual System.Web.HttpClientCertificate ClientCertificate { get { throw null; } }
        public virtual System.Text.Encoding ContentEncoding { get { throw null; } set { } }
        public virtual int ContentLength { get { throw null; } }
        public virtual string ContentType { get { throw null; } set { } }
        public virtual System.Web.HttpCookieCollection Cookies { get { throw null; } }
        public virtual string CurrentExecutionFilePath { get { throw null; } }
        public virtual string CurrentExecutionFilePathExtension { get { throw null; } }
        public virtual string FilePath { get { throw null; } }
        public virtual System.Web.HttpFileCollectionBase Files { get { throw null; } }
        public virtual System.IO.Stream Filter { get { throw null; } set { } }
        public virtual System.Collections.Specialized.NameValueCollection Form { get { throw null; } }
        public virtual System.Collections.Specialized.NameValueCollection Headers { get { throw null; } }
        public virtual System.Security.Authentication.ExtendedProtection.ChannelBinding HttpChannelBinding { get { throw null; } }
        public virtual string HttpMethod { get { throw null; } }
        public virtual System.IO.Stream InputStream { get { throw null; } }
        public virtual bool IsAuthenticated { get { throw null; } }
        public virtual bool IsLocal { get { throw null; } }
        public virtual bool IsSecureConnection { get { throw null; } }
        public virtual string this[string key] { get { throw null; } }
        public virtual System.Security.Principal.WindowsIdentity LogonUserIdentity { get { throw null; } }
        public virtual System.Collections.Specialized.NameValueCollection Params { get { throw null; } }
        public virtual string Path { get { throw null; } }
        public virtual string PathInfo { get { throw null; } }
        public virtual string PhysicalApplicationPath { get { throw null; } }
        public virtual string PhysicalPath { get { throw null; } }
        public virtual System.Collections.Specialized.NameValueCollection QueryString { get { throw null; } }
        public virtual string RawUrl { get { throw null; } }
        public virtual System.Web.ReadEntityBodyMode ReadEntityBodyMode { get { throw null; } }
        public virtual System.Web.Routing.RequestContext RequestContext { get { throw null; } set { } }
        public virtual string RequestType { get { throw null; } set { } }
        public virtual System.Collections.Specialized.NameValueCollection ServerVariables { get { throw null; } }
        public virtual System.Threading.CancellationToken TimedOutToken { get { throw null; } }
        public virtual System.Web.ITlsTokenBindingInfo TlsTokenBindingInfo { get { throw null; } }
        public virtual int TotalBytes { get { throw null; } }
        public virtual System.Web.UnvalidatedRequestValuesBase Unvalidated { get { throw null; } }
        public virtual System.Uri Url { get { throw null; } }
        public virtual System.Uri UrlReferrer { get { throw null; } }
        public virtual string UserAgent { get { throw null; } }
        public virtual string UserHostAddress { get { throw null; } }
        public virtual string UserHostName { get { throw null; } }
        public virtual string[] UserLanguages { get { throw null; } }
        public virtual void Abort() { }
        public virtual byte[] BinaryRead(int count) { throw null; }
        public virtual System.IO.Stream GetBufferedInputStream() { throw null; }
        public virtual System.IO.Stream GetBufferlessInputStream() { throw null; }
        public virtual System.IO.Stream GetBufferlessInputStream(bool disableMaxRequestLength) { throw null; }
        public virtual void InsertEntityBody() { }
        public virtual void InsertEntityBody(byte[] buffer, int offset, int count) { }
        public virtual int[] MapImageCoordinates(string imageFieldName) { throw null; }
        public virtual string MapPath(string virtualPath) { throw null; }
        public virtual string MapPath(string virtualPath, string baseVirtualDir, bool allowCrossAppMapping) { throw null; }
        public virtual double[] MapRawImageCoordinates(string imageFieldName) { throw null; }
        public virtual void SaveAs(string filename, bool includeHeaders) { }
        public virtual void ValidateInput() { }
    }
    [System.SerializableAttribute]
    public sealed partial class HttpRequestValidationException : System.Web.HttpException
    {
        public HttpRequestValidationException() { }
        public HttpRequestValidationException(string message) { }
        public HttpRequestValidationException(string message, System.Exception innerException) { }
    }
    [System.Runtime.CompilerServices.TypeForwardedFromAttribute("System.Web.Abstractions, Version=3.5.0.0, Culture=Neutral, PublicKeyToken=31bf3856ad364e35")]
    public partial class HttpRequestWrapper : System.Web.HttpRequestBase
    {
        public HttpRequestWrapper(System.Web.HttpRequest httpRequest) { }
        public override string[] AcceptTypes { get { throw null; } }
        public override string AnonymousID { get { throw null; } }
        public override string ApplicationPath { get { throw null; } }
        public override string AppRelativeCurrentExecutionFilePath { get { throw null; } }
        public override System.Web.HttpBrowserCapabilitiesBase Browser { get { throw null; } }
        public override System.Web.HttpClientCertificate ClientCertificate { get { throw null; } }
        public override System.Text.Encoding ContentEncoding { get { throw null; } set { } }
        public override int ContentLength { get { throw null; } }
        public override string ContentType { get { throw null; } set { } }
        public override System.Web.HttpCookieCollection Cookies { get { throw null; } }
        public override string CurrentExecutionFilePath { get { throw null; } }
        public override string CurrentExecutionFilePathExtension { get { throw null; } }
        public override string FilePath { get { throw null; } }
        public override System.Web.HttpFileCollectionBase Files { get { throw null; } }
        public override System.IO.Stream Filter { get { throw null; } set { } }
        public override System.Collections.Specialized.NameValueCollection Form { get { throw null; } }
        public override System.Collections.Specialized.NameValueCollection Headers { get { throw null; } }
        public override System.Security.Authentication.ExtendedProtection.ChannelBinding HttpChannelBinding { get { throw null; } }
        public override string HttpMethod { get { throw null; } }
        public override System.IO.Stream InputStream { get { throw null; } }
        public override bool IsAuthenticated { get { throw null; } }
        public override bool IsLocal { get { throw null; } }
        public override bool IsSecureConnection { get { throw null; } }
        public override string this[string key] { get { throw null; } }
        public override System.Security.Principal.WindowsIdentity LogonUserIdentity { get { throw null; } }
        public override System.Collections.Specialized.NameValueCollection Params { get { throw null; } }
        public override string Path { get { throw null; } }
        public override string PathInfo { get { throw null; } }
        public override string PhysicalApplicationPath { get { throw null; } }
        public override string PhysicalPath { get { throw null; } }
        public override System.Collections.Specialized.NameValueCollection QueryString { get { throw null; } }
        public override string RawUrl { get { throw null; } }
        public override System.Web.ReadEntityBodyMode ReadEntityBodyMode { get { throw null; } }
        public override System.Web.Routing.RequestContext RequestContext { get { throw null; } set { } }
        public override string RequestType { get { throw null; } set { } }
        public override System.Collections.Specialized.NameValueCollection ServerVariables { get { throw null; } }
        public override System.Threading.CancellationToken TimedOutToken { get { throw null; } }
        public override System.Web.ITlsTokenBindingInfo TlsTokenBindingInfo { get { throw null; } }
        public override int TotalBytes { get { throw null; } }
        public override System.Web.UnvalidatedRequestValuesBase Unvalidated { get { throw null; } }
        public override System.Uri Url { get { throw null; } }
        public override System.Uri UrlReferrer { get { throw null; } }
        public override string UserAgent { get { throw null; } }
        public override string UserHostAddress { get { throw null; } }
        public override string UserHostName { get { throw null; } }
        public override string[] UserLanguages { get { throw null; } }
        public override void Abort() { }
        public override byte[] BinaryRead(int count) { throw null; }
        public override System.IO.Stream GetBufferedInputStream() { throw null; }
        public override System.IO.Stream GetBufferlessInputStream() { throw null; }
        public override System.IO.Stream GetBufferlessInputStream(bool disableMaxRequestLength) { throw null; }
        public override void InsertEntityBody() { }
        public override void InsertEntityBody(byte[] buffer, int offset, int count) { }
        public override int[] MapImageCoordinates(string imageFieldName) { throw null; }
        public override string MapPath(string virtualPath) { throw null; }
        public override string MapPath(string virtualPath, string baseVirtualDir, bool allowCrossAppMapping) { throw null; }
        public override double[] MapRawImageCoordinates(string imageFieldName) { throw null; }
        public override void SaveAs(string filename, bool includeHeaders) { }
        public override void ValidateInput() { }
    }
    public sealed partial class HttpResponse
    {
        public HttpResponse(System.IO.TextWriter writer) { }
        public bool Buffer { get { throw null; } set { } }
        public bool BufferOutput { get { throw null; } set { } }
        public System.Web.HttpCachePolicy Cache { get { throw null; } }
        public string CacheControl { get { throw null; } set { } }
        public string Charset { get { throw null; } set { } }
        public System.Threading.CancellationToken ClientDisconnectedToken { get { throw null; } }
        public System.Text.Encoding ContentEncoding { get { throw null; } set { } }
        public string ContentType { get { throw null; } set { } }
        public System.Web.HttpCookieCollection Cookies { get { throw null; } }
        public int Expires { get { throw null; } set { } }
        public System.DateTime ExpiresAbsolute { get { throw null; } set { } }
        public System.IO.Stream Filter { get { throw null; } set { } }
        public System.Text.Encoding HeaderEncoding { get { throw null; } set { } }
        public System.Collections.Specialized.NameValueCollection Headers { get { throw null; } }
        public bool HeadersWritten { get { throw null; } }
        public bool IsClientConnected { get { throw null; } }
        public bool IsRequestBeingRedirected { get { throw null; } }
        public System.IO.TextWriter Output { get { throw null; } set { } }
        public System.IO.Stream OutputStream { get { throw null; } }
        public string RedirectLocation { get { throw null; } set { } }
        public string Status { get { throw null; } set { } }
        public int StatusCode { get { throw null; } set { } }
        public string StatusDescription { get { throw null; } set { } }
        public int SubStatusCode { get { throw null; } set { } }
        public bool SupportsAsyncFlush { get { throw null; } }
        public bool SuppressContent { get { throw null; } set { } }
        public bool SuppressDefaultCacheControlHeader { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } [System.Runtime.CompilerServices.CompilerGeneratedAttribute]set { } }
        public bool SuppressFormsAuthenticationRedirect { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } [System.Runtime.CompilerServices.CompilerGeneratedAttribute]set { } }
        public bool TrySkipIisCustomErrors { get { throw null; } set { } }
        public void AddCacheDependency(params System.Web.Caching.CacheDependency[] dependencies) { }
        public void AddCacheItemDependencies(System.Collections.ArrayList cacheKeys) { }
        public void AddCacheItemDependencies(string[] cacheKeys) { }
        public void AddCacheItemDependency(string cacheKey) { }
        public void AddFileDependencies(System.Collections.ArrayList filenames) { }
        public void AddFileDependencies(string[] filenames) { }
        public void AddFileDependency(string filename) { }
        public void AddHeader(string name, string value) { }
        public System.Web.ISubscriptionToken AddOnSendingHeaders(System.Action<System.Web.HttpContext> callback) { throw null; }
        public void AppendCookie(System.Web.HttpCookie cookie) { }
        public void AppendHeader(string name, string value) { }
        [System.Web.AspNetHostingPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, Level=System.Web.AspNetHostingPermissionLevel.Medium)]
        public void AppendToLog(string param) { }
        public string ApplyAppPathModifier(string virtualPath) { throw null; }
        public System.IAsyncResult BeginFlush(System.AsyncCallback callback, object state) { throw null; }
        public void BinaryWrite(byte[] buffer) { }
        public void Clear() { }
        public void ClearContent() { }
        public void ClearHeaders() { }
        public void Close() { }
        public void DisableKernelCache() { }
        public void DisableUserCache() { }
        public void End() { }
        public void EndFlush(System.IAsyncResult asyncResult) { }
        public void Flush() { }
        public System.Threading.Tasks.Task FlushAsync() { throw null; }
        public void Pics(string value) { }
        public void PushPromise(string path) { }
        public void PushPromise(string path, string method, System.Collections.Specialized.NameValueCollection headers) { }
        public void Redirect(string url) { }
        public void Redirect(string url, bool endResponse) { }
        public void RedirectPermanent(string url) { }
        public void RedirectPermanent(string url, bool endResponse) { }
        public void RedirectToRoute(object routeValues) { }
        public void RedirectToRoute(string routeName) { }
        public void RedirectToRoute(string routeName, object routeValues) { }
        public void RedirectToRoute(string routeName, System.Web.Routing.RouteValueDictionary routeValues) { }
        public void RedirectToRoute(System.Web.Routing.RouteValueDictionary routeValues) { }
        public void RedirectToRoutePermanent(object routeValues) { }
        public void RedirectToRoutePermanent(string routeName) { }
        public void RedirectToRoutePermanent(string routeName, object routeValues) { }
        public void RedirectToRoutePermanent(string routeName, System.Web.Routing.RouteValueDictionary routeValues) { }
        public void RedirectToRoutePermanent(System.Web.Routing.RouteValueDictionary routeValues) { }
        public static void RemoveOutputCacheItem(string path) { }
        public static void RemoveOutputCacheItem(string path, string providerName) { }
        public void SetCookie(System.Web.HttpCookie cookie) { }
        public void TransmitFile(string filename) { }
        public void TransmitFile(string filename, long offset, long length) { }
        public void Write(char ch) { }
        public void Write(char[] buffer, int index, int count) { }
        public void Write(object obj) { }
        public void Write(string s) { }
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, UnmanagedCode=true)]
        public void WriteFile(System.IntPtr fileHandle, long offset, long size) { }
        public void WriteFile(string filename) { }
        public void WriteFile(string filename, bool readIntoMemory) { }
        public void WriteFile(string filename, long offset, long size) { }
        public void WriteSubstitution(System.Web.HttpResponseSubstitutionCallback callback) { }
    }
    [System.Runtime.CompilerServices.TypeForwardedFromAttribute("System.Web.Abstractions, Version=3.5.0.0, Culture=Neutral, PublicKeyToken=31bf3856ad364e35")]
    public abstract partial class HttpResponseBase
    {
        protected HttpResponseBase() { }
        public virtual bool Buffer { get { throw null; } set { } }
        public virtual bool BufferOutput { get { throw null; } set { } }
        public virtual System.Web.HttpCachePolicyBase Cache { get { throw null; } }
        public virtual string CacheControl { get { throw null; } set { } }
        public virtual string Charset { get { throw null; } set { } }
        public virtual System.Threading.CancellationToken ClientDisconnectedToken { get { throw null; } }
        public virtual System.Text.Encoding ContentEncoding { get { throw null; } set { } }
        public virtual string ContentType { get { throw null; } set { } }
        public virtual System.Web.HttpCookieCollection Cookies { get { throw null; } }
        public virtual int Expires { get { throw null; } set { } }
        public virtual System.DateTime ExpiresAbsolute { get { throw null; } set { } }
        public virtual System.IO.Stream Filter { get { throw null; } set { } }
        public virtual System.Text.Encoding HeaderEncoding { get { throw null; } set { } }
        public virtual System.Collections.Specialized.NameValueCollection Headers { get { throw null; } }
        public virtual bool HeadersWritten { get { throw null; } }
        public virtual bool IsClientConnected { get { throw null; } }
        public virtual bool IsRequestBeingRedirected { get { throw null; } }
        public virtual System.IO.TextWriter Output { get { throw null; } set { } }
        public virtual System.IO.Stream OutputStream { get { throw null; } }
        public virtual string RedirectLocation { get { throw null; } set { } }
        public virtual string Status { get { throw null; } set { } }
        public virtual int StatusCode { get { throw null; } set { } }
        public virtual string StatusDescription { get { throw null; } set { } }
        public virtual int SubStatusCode { get { throw null; } set { } }
        public virtual bool SupportsAsyncFlush { get { throw null; } }
        public virtual bool SuppressContent { get { throw null; } set { } }
        public virtual bool SuppressDefaultCacheControlHeader { get { throw null; } set { } }
        public virtual bool SuppressFormsAuthenticationRedirect { get { throw null; } set { } }
        public virtual bool TrySkipIisCustomErrors { get { throw null; } set { } }
        public virtual void AddCacheDependency(params System.Web.Caching.CacheDependency[] dependencies) { }
        public virtual void AddCacheItemDependencies(System.Collections.ArrayList cacheKeys) { }
        public virtual void AddCacheItemDependencies(string[] cacheKeys) { }
        public virtual void AddCacheItemDependency(string cacheKey) { }
        public virtual void AddFileDependencies(System.Collections.ArrayList filenames) { }
        public virtual void AddFileDependencies(string[] filenames) { }
        public virtual void AddFileDependency(string filename) { }
        public virtual void AddHeader(string name, string value) { }
        public virtual System.Web.ISubscriptionToken AddOnSendingHeaders(System.Action<System.Web.HttpContextBase> callback) { throw null; }
        public virtual void AppendCookie(System.Web.HttpCookie cookie) { }
        public virtual void AppendHeader(string name, string value) { }
        public virtual void AppendToLog(string param) { }
        public virtual string ApplyAppPathModifier(string virtualPath) { throw null; }
        public virtual System.IAsyncResult BeginFlush(System.AsyncCallback callback, object state) { throw null; }
        public virtual void BinaryWrite(byte[] buffer) { }
        public virtual void Clear() { }
        public virtual void ClearContent() { }
        public virtual void ClearHeaders() { }
        public virtual void Close() { }
        public virtual void DisableKernelCache() { }
        public virtual void DisableUserCache() { }
        public virtual void End() { }
        public virtual void EndFlush(System.IAsyncResult asyncResult) { }
        public virtual void Flush() { }
        public virtual System.Threading.Tasks.Task FlushAsync() { throw null; }
        public virtual void Pics(string value) { }
        public virtual void PushPromise(string path) { }
        public virtual void PushPromise(string path, string method, System.Collections.Specialized.NameValueCollection headers) { }
        public virtual void Redirect(string url) { }
        public virtual void Redirect(string url, bool endResponse) { }
        public virtual void RedirectPermanent(string url) { }
        public virtual void RedirectPermanent(string url, bool endResponse) { }
        public virtual void RedirectToRoute(object routeValues) { }
        public virtual void RedirectToRoute(string routeName) { }
        public virtual void RedirectToRoute(string routeName, object routeValues) { }
        public virtual void RedirectToRoute(string routeName, System.Web.Routing.RouteValueDictionary routeValues) { }
        public virtual void RedirectToRoute(System.Web.Routing.RouteValueDictionary routeValues) { }
        public virtual void RedirectToRoutePermanent(object routeValues) { }
        public virtual void RedirectToRoutePermanent(string routeName) { }
        public virtual void RedirectToRoutePermanent(string routeName, object routeValues) { }
        public virtual void RedirectToRoutePermanent(string routeName, System.Web.Routing.RouteValueDictionary routeValues) { }
        public virtual void RedirectToRoutePermanent(System.Web.Routing.RouteValueDictionary routeValues) { }
        public virtual void RemoveOutputCacheItem(string path) { }
        public virtual void RemoveOutputCacheItem(string path, string providerName) { }
        public virtual void SetCookie(System.Web.HttpCookie cookie) { }
        public virtual void TransmitFile(string filename) { }
        public virtual void TransmitFile(string filename, long offset, long length) { }
        public virtual void Write(char ch) { }
        public virtual void Write(char[] buffer, int index, int count) { }
        public virtual void Write(object obj) { }
        public virtual void Write(string s) { }
        public virtual void WriteFile(System.IntPtr fileHandle, long offset, long size) { }
        public virtual void WriteFile(string filename) { }
        public virtual void WriteFile(string filename, bool readIntoMemory) { }
        public virtual void WriteFile(string filename, long offset, long size) { }
        public virtual void WriteSubstitution(System.Web.HttpResponseSubstitutionCallback callback) { }
    }
    public delegate string HttpResponseSubstitutionCallback(System.Web.HttpContext context);
    [System.Runtime.CompilerServices.TypeForwardedFromAttribute("System.Web.Abstractions, Version=3.5.0.0, Culture=Neutral, PublicKeyToken=31bf3856ad364e35")]
    public partial class HttpResponseWrapper : System.Web.HttpResponseBase
    {
        public HttpResponseWrapper(System.Web.HttpResponse httpResponse) { }
        public override bool Buffer { get { throw null; } set { } }
        public override bool BufferOutput { get { throw null; } set { } }
        public override System.Web.HttpCachePolicyBase Cache { get { throw null; } }
        public override string CacheControl { get { throw null; } set { } }
        public override string Charset { get { throw null; } set { } }
        public override System.Threading.CancellationToken ClientDisconnectedToken { get { throw null; } }
        public override System.Text.Encoding ContentEncoding { get { throw null; } set { } }
        public override string ContentType { get { throw null; } set { } }
        public override System.Web.HttpCookieCollection Cookies { get { throw null; } }
        public override int Expires { get { throw null; } set { } }
        public override System.DateTime ExpiresAbsolute { get { throw null; } set { } }
        public override System.IO.Stream Filter { get { throw null; } set { } }
        public override System.Text.Encoding HeaderEncoding { get { throw null; } set { } }
        public override System.Collections.Specialized.NameValueCollection Headers { get { throw null; } }
        public override bool HeadersWritten { get { throw null; } }
        public override bool IsClientConnected { get { throw null; } }
        public override bool IsRequestBeingRedirected { get { throw null; } }
        public override System.IO.TextWriter Output { get { throw null; } set { } }
        public override System.IO.Stream OutputStream { get { throw null; } }
        public override string RedirectLocation { get { throw null; } set { } }
        public override string Status { get { throw null; } set { } }
        public override int StatusCode { get { throw null; } set { } }
        public override string StatusDescription { get { throw null; } set { } }
        public override int SubStatusCode { get { throw null; } set { } }
        public override bool SupportsAsyncFlush { get { throw null; } }
        public override bool SuppressContent { get { throw null; } set { } }
        public override bool SuppressDefaultCacheControlHeader { get { throw null; } set { } }
        public override bool SuppressFormsAuthenticationRedirect { get { throw null; } set { } }
        public override bool TrySkipIisCustomErrors { get { throw null; } set { } }
        public override void AddCacheDependency(params System.Web.Caching.CacheDependency[] dependencies) { }
        public override void AddCacheItemDependencies(System.Collections.ArrayList cacheKeys) { }
        public override void AddCacheItemDependencies(string[] cacheKeys) { }
        public override void AddCacheItemDependency(string cacheKey) { }
        public override void AddFileDependencies(System.Collections.ArrayList filenames) { }
        public override void AddFileDependencies(string[] filenames) { }
        public override void AddFileDependency(string filename) { }
        public override void AddHeader(string name, string value) { }
        public override System.Web.ISubscriptionToken AddOnSendingHeaders(System.Action<System.Web.HttpContextBase> callback) { throw null; }
        public override void AppendCookie(System.Web.HttpCookie cookie) { }
        public override void AppendHeader(string name, string value) { }
        public override void AppendToLog(string param) { }
        public override string ApplyAppPathModifier(string virtualPath) { throw null; }
        public override System.IAsyncResult BeginFlush(System.AsyncCallback callback, object state) { throw null; }
        public override void BinaryWrite(byte[] buffer) { }
        public override void Clear() { }
        public override void ClearContent() { }
        public override void ClearHeaders() { }
        public override void Close() { }
        public override void DisableKernelCache() { }
        public override void DisableUserCache() { }
        public override void End() { }
        public override void EndFlush(System.IAsyncResult asyncResult) { }
        public override void Flush() { }
        public override System.Threading.Tasks.Task FlushAsync() { throw null; }
        public override void Pics(string value) { }
        public override void PushPromise(string path) { }
        public override void PushPromise(string path, string method, System.Collections.Specialized.NameValueCollection headers) { }
        public override void Redirect(string url) { }
        public override void Redirect(string url, bool endResponse) { }
        public override void RedirectPermanent(string url) { }
        public override void RedirectPermanent(string url, bool endResponse) { }
        public override void RedirectToRoute(object routeValues) { }
        public override void RedirectToRoute(string routeName) { }
        public override void RedirectToRoute(string routeName, object routeValues) { }
        public override void RedirectToRoute(string routeName, System.Web.Routing.RouteValueDictionary routeValues) { }
        public override void RedirectToRoute(System.Web.Routing.RouteValueDictionary routeValues) { }
        public override void RedirectToRoutePermanent(object routeValues) { }
        public override void RedirectToRoutePermanent(string routeName) { }
        public override void RedirectToRoutePermanent(string routeName, object routeValues) { }
        public override void RedirectToRoutePermanent(string routeName, System.Web.Routing.RouteValueDictionary routeValues) { }
        public override void RedirectToRoutePermanent(System.Web.Routing.RouteValueDictionary routeValues) { }
        public override void RemoveOutputCacheItem(string path) { }
        public override void RemoveOutputCacheItem(string path, string providerName) { }
        public override void SetCookie(System.Web.HttpCookie cookie) { }
        public override void TransmitFile(string filename) { }
        public override void TransmitFile(string filename, long offset, long length) { }
        public override void Write(char ch) { }
        public override void Write(char[] buffer, int index, int count) { }
        public override void Write(object obj) { }
        public override void Write(string s) { }
        public override void WriteFile(System.IntPtr fileHandle, long offset, long size) { }
        public override void WriteFile(string filename) { }
        public override void WriteFile(string filename, bool readIntoMemory) { }
        public override void WriteFile(string filename, long offset, long size) { }
        public override void WriteSubstitution(System.Web.HttpResponseSubstitutionCallback callback) { }
    }
    public sealed partial class HttpRuntime
    {
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.LinkDemand, Unrestricted=true)]
        public HttpRuntime() { }
        public static string AppDomainAppId { get { throw null; } }
        public static string AppDomainAppPath { get { throw null; } }
        public static string AppDomainAppVirtualPath { get { throw null; } }
        public static string AppDomainId { [System.Web.AspNetHostingPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, Level=System.Web.AspNetHostingPermissionLevel.High)]get { throw null; } }
        public static string AspClientScriptPhysicalPath { get { throw null; } }
        public static string AspClientScriptVirtualPath { get { throw null; } }
        public static string AspInstallDirectory { get { throw null; } }
        public static string BinDirectory { get { throw null; } }
        public static System.Web.Caching.Cache Cache { get { throw null; } }
        public static string ClrInstallDirectory { get { throw null; } }
        public static string CodegenDir { get { throw null; } }
        public static System.Version IISVersion { get { throw null; } }
        public static bool IsOnUNCShare { [System.Web.AspNetHostingPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, Level=System.Web.AspNetHostingPermissionLevel.Low)]get { throw null; } }
        public static string MachineConfigurationDirectory { get { throw null; } }
        public static System.Version TargetFramework { get { throw null; } }
        public static bool UsingIntegratedPipeline { get { throw null; } }
        public static System.IServiceProvider WebObjectActivator { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } [System.Runtime.CompilerServices.CompilerGeneratedAttribute]set { } }
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, Unrestricted=true)]
        public static void Close() { }
        [System.Web.AspNetHostingPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, Level=System.Web.AspNetHostingPermissionLevel.Unrestricted)]
        public static System.Security.NamedPermissionSet GetNamedPermissionSet() { throw null; }
        [System.Web.AspNetHostingPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, Level=System.Web.AspNetHostingPermissionLevel.Medium)]
        public static void ProcessRequest(System.Web.HttpWorkerRequest wr) { }
        public static void UnloadAppDomain() { }
    }
    public sealed partial class HttpServerUtility
    {
        internal HttpServerUtility() { }
        public string MachineName { [System.Web.AspNetHostingPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, Level=System.Web.AspNetHostingPermissionLevel.Medium)]get { throw null; } }
        public int ScriptTimeout { get { throw null; } [System.Web.AspNetHostingPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, Level=System.Web.AspNetHostingPermissionLevel.Medium)]set { } }
        public void ClearError() { }
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, Unrestricted=true)]
        public object CreateObject(string progID) { throw null; }
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, UnmanagedCode=true)]
        public object CreateObject(System.Type type) { throw null; }
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, UnmanagedCode=true)]
        public object CreateObjectFromClsid(string clsid) { throw null; }
        public void Execute(string path) { }
        public void Execute(string path, bool preserveForm) { }
        public void Execute(string path, System.IO.TextWriter writer) { }
        public void Execute(string path, System.IO.TextWriter writer, bool preserveForm) { }
        public void Execute(System.Web.IHttpHandler handler, System.IO.TextWriter writer, bool preserveForm) { }
        public System.Exception GetLastError() { throw null; }
        public string HtmlDecode(string s) { throw null; }
        public void HtmlDecode(string s, System.IO.TextWriter output) { }
        public string HtmlEncode(string s) { throw null; }
        public void HtmlEncode(string s, System.IO.TextWriter output) { }
        public string MapPath(string path) { throw null; }
        public void Transfer(string path) { }
        public void Transfer(string path, bool preserveForm) { }
        public void Transfer(System.Web.IHttpHandler handler, bool preserveForm) { }
        public void TransferRequest(string path) { }
        public void TransferRequest(string path, bool preserveForm) { }
        public void TransferRequest(string path, bool preserveForm, string method, System.Collections.Specialized.NameValueCollection headers) { }
        public void TransferRequest(string path, bool preserveForm, string method, System.Collections.Specialized.NameValueCollection headers, bool preserveUser) { }
        public string UrlDecode(string s) { throw null; }
        public void UrlDecode(string s, System.IO.TextWriter output) { }
        public string UrlEncode(string s) { throw null; }
        public void UrlEncode(string s, System.IO.TextWriter output) { }
        public string UrlPathEncode(string s) { throw null; }
        public static byte[] UrlTokenDecode(string input) { throw null; }
        public static string UrlTokenEncode(byte[] input) { throw null; }
    }
    [System.Runtime.CompilerServices.TypeForwardedFromAttribute("System.Web.Abstractions, Version=3.5.0.0, Culture=Neutral, PublicKeyToken=31bf3856ad364e35")]
    public abstract partial class HttpServerUtilityBase
    {
        protected HttpServerUtilityBase() { }
        public virtual string MachineName { get { throw null; } }
        public virtual int ScriptTimeout { get { throw null; } set { } }
        public virtual void ClearError() { }
        public virtual object CreateObject(string progID) { throw null; }
        public virtual object CreateObject(System.Type type) { throw null; }
        public virtual object CreateObjectFromClsid(string clsid) { throw null; }
        public virtual void Execute(string path) { }
        public virtual void Execute(string path, bool preserveForm) { }
        public virtual void Execute(string path, System.IO.TextWriter writer) { }
        public virtual void Execute(string path, System.IO.TextWriter writer, bool preserveForm) { }
        public virtual void Execute(System.Web.IHttpHandler handler, System.IO.TextWriter writer, bool preserveForm) { }
        public virtual System.Exception GetLastError() { throw null; }
        public virtual string HtmlDecode(string s) { throw null; }
        public virtual void HtmlDecode(string s, System.IO.TextWriter output) { }
        public virtual string HtmlEncode(string s) { throw null; }
        public virtual void HtmlEncode(string s, System.IO.TextWriter output) { }
        public virtual string MapPath(string path) { throw null; }
        public virtual void Transfer(string path) { }
        public virtual void Transfer(string path, bool preserveForm) { }
        public virtual void Transfer(System.Web.IHttpHandler handler, bool preserveForm) { }
        public virtual void TransferRequest(string path) { }
        public virtual void TransferRequest(string path, bool preserveForm) { }
        public virtual void TransferRequest(string path, bool preserveForm, string method, System.Collections.Specialized.NameValueCollection headers) { }
        public virtual void TransferRequest(string path, bool preserveForm, string method, System.Collections.Specialized.NameValueCollection headers, bool preserveUser) { }
        public virtual string UrlDecode(string s) { throw null; }
        public virtual void UrlDecode(string s, System.IO.TextWriter output) { }
        public virtual string UrlEncode(string s) { throw null; }
        public virtual void UrlEncode(string s, System.IO.TextWriter output) { }
        public virtual string UrlPathEncode(string s) { throw null; }
        public virtual byte[] UrlTokenDecode(string input) { throw null; }
        public virtual string UrlTokenEncode(byte[] input) { throw null; }
    }
    [System.Runtime.CompilerServices.TypeForwardedFromAttribute("System.Web.Abstractions, Version=3.5.0.0, Culture=Neutral, PublicKeyToken=31bf3856ad364e35")]
    public partial class HttpServerUtilityWrapper : System.Web.HttpServerUtilityBase
    {
        public HttpServerUtilityWrapper(System.Web.HttpServerUtility httpServerUtility) { }
        public override string MachineName { get { throw null; } }
        public override int ScriptTimeout { get { throw null; } set { } }
        public override void ClearError() { }
        public override object CreateObject(string progID) { throw null; }
        public override object CreateObject(System.Type type) { throw null; }
        public override object CreateObjectFromClsid(string clsid) { throw null; }
        public override void Execute(string path) { }
        public override void Execute(string path, bool preserveForm) { }
        public override void Execute(string path, System.IO.TextWriter writer) { }
        public override void Execute(string path, System.IO.TextWriter writer, bool preserveForm) { }
        public override void Execute(System.Web.IHttpHandler handler, System.IO.TextWriter writer, bool preserveForm) { }
        public override System.Exception GetLastError() { throw null; }
        public override string HtmlDecode(string s) { throw null; }
        public override void HtmlDecode(string s, System.IO.TextWriter output) { }
        public override string HtmlEncode(string s) { throw null; }
        public override void HtmlEncode(string s, System.IO.TextWriter output) { }
        public override string MapPath(string path) { throw null; }
        public override void Transfer(string path) { }
        public override void Transfer(string path, bool preserveForm) { }
        public override void Transfer(System.Web.IHttpHandler handler, bool preserveForm) { }
        public override void TransferRequest(string path) { }
        public override void TransferRequest(string path, bool preserveForm) { }
        public override void TransferRequest(string path, bool preserveForm, string method, System.Collections.Specialized.NameValueCollection headers) { }
        public override void TransferRequest(string path, bool preserveForm, string method, System.Collections.Specialized.NameValueCollection headers, bool preserveUser) { }
        public override string UrlDecode(string s) { throw null; }
        public override void UrlDecode(string s, System.IO.TextWriter output) { }
        public override string UrlEncode(string s) { throw null; }
        public override void UrlEncode(string s, System.IO.TextWriter output) { }
        public override string UrlPathEncode(string s) { throw null; }
        public override byte[] UrlTokenDecode(string input) { throw null; }
        public override string UrlTokenEncode(byte[] input) { throw null; }
    }
    [System.Runtime.CompilerServices.TypeForwardedFromAttribute("System.Web.Abstractions, Version=3.5.0.0, Culture=Neutral, PublicKeyToken=31bf3856ad364e35")]
    public abstract partial class HttpSessionStateBase : System.Collections.ICollection, System.Collections.IEnumerable
    {
        protected HttpSessionStateBase() { }
        public virtual int CodePage { get { throw null; } set { } }
        public virtual System.Web.HttpSessionStateBase Contents { get { throw null; } }
        public virtual System.Web.HttpCookieMode CookieMode { get { throw null; } }
        public virtual int Count { get { throw null; } }
        public virtual bool IsCookieless { get { throw null; } }
        public virtual bool IsNewSession { get { throw null; } }
        public virtual bool IsReadOnly { get { throw null; } }
        public virtual bool IsSynchronized { get { throw null; } }
        public virtual object this[int index] { get { throw null; } set { } }
        public virtual object this[string name] { get { throw null; } set { } }
        public virtual System.Collections.Specialized.NameObjectCollectionBase.KeysCollection Keys { get { throw null; } }
        public virtual int LCID { get { throw null; } set { } }
        public virtual System.Web.SessionState.SessionStateMode Mode { get { throw null; } }
        public virtual string SessionID { get { throw null; } }
        public virtual System.Web.HttpStaticObjectsCollectionBase StaticObjects { get { throw null; } }
        public virtual object SyncRoot { get { throw null; } }
        public virtual int Timeout { get { throw null; } set { } }
        public virtual void Abandon() { }
        public virtual void Add(string name, object value) { }
        public virtual void Clear() { }
        public virtual void CopyTo(System.Array array, int index) { }
        public virtual System.Collections.IEnumerator GetEnumerator() { throw null; }
        public virtual void Remove(string name) { }
        public virtual void RemoveAll() { }
        public virtual void RemoveAt(int index) { }
    }
    [System.Runtime.CompilerServices.TypeForwardedFromAttribute("System.Web.Abstractions, Version=3.5.0.0, Culture=Neutral, PublicKeyToken=31bf3856ad364e35")]
    public partial class HttpSessionStateWrapper : System.Web.HttpSessionStateBase
    {
        public HttpSessionStateWrapper(System.Web.SessionState.HttpSessionState httpSessionState) { }
        public override int CodePage { get { throw null; } set { } }
        public override System.Web.HttpSessionStateBase Contents { get { throw null; } }
        public override System.Web.HttpCookieMode CookieMode { get { throw null; } }
        public override int Count { get { throw null; } }
        public override bool IsCookieless { get { throw null; } }
        public override bool IsNewSession { get { throw null; } }
        public override bool IsReadOnly { get { throw null; } }
        public override bool IsSynchronized { get { throw null; } }
        public override object this[int index] { get { throw null; } set { } }
        public override object this[string name] { get { throw null; } set { } }
        public override System.Collections.Specialized.NameObjectCollectionBase.KeysCollection Keys { get { throw null; } }
        public override int LCID { get { throw null; } set { } }
        public override System.Web.SessionState.SessionStateMode Mode { get { throw null; } }
        public override string SessionID { get { throw null; } }
        public override System.Web.HttpStaticObjectsCollectionBase StaticObjects { get { throw null; } }
        public override object SyncRoot { get { throw null; } }
        public override int Timeout { get { throw null; } set { } }
        public override void Abandon() { }
        public override void Add(string name, object value) { }
        public override void Clear() { }
        public override void CopyTo(System.Array array, int index) { }
        public override System.Collections.IEnumerator GetEnumerator() { throw null; }
        public override void Remove(string name) { }
        public override void RemoveAll() { }
        public override void RemoveAt(int index) { }
    }
    public sealed partial class HttpStaticObjectsCollection : System.Collections.ICollection, System.Collections.IEnumerable
    {
        public HttpStaticObjectsCollection() { }
        public int Count { get { throw null; } }
        public bool IsReadOnly { get { throw null; } }
        public bool IsSynchronized { get { throw null; } }
        public object this[string name] { get { throw null; } }
        public bool NeverAccessed { get { throw null; } }
        public object SyncRoot { get { throw null; } }
        public void CopyTo(System.Array array, int index) { }
        public static System.Web.HttpStaticObjectsCollection Deserialize(System.IO.BinaryReader reader) { throw null; }
        public System.Collections.IEnumerator GetEnumerator() { throw null; }
        public object GetObject(string name) { throw null; }
        public void Serialize(System.IO.BinaryWriter writer) { }
    }
    [System.Runtime.CompilerServices.TypeForwardedFromAttribute("System.Web.Abstractions, Version=3.5.0.0, Culture=Neutral, PublicKeyToken=31bf3856ad364e35")]
    public abstract partial class HttpStaticObjectsCollectionBase : System.Collections.ICollection, System.Collections.IEnumerable
    {
        protected HttpStaticObjectsCollectionBase() { }
        public virtual int Count { get { throw null; } }
        public virtual bool IsReadOnly { get { throw null; } }
        public virtual bool IsSynchronized { get { throw null; } }
        public virtual object this[string name] { get { throw null; } }
        public virtual bool NeverAccessed { get { throw null; } }
        public virtual object SyncRoot { get { throw null; } }
        public virtual void CopyTo(System.Array array, int index) { }
        public virtual System.Collections.IEnumerator GetEnumerator() { throw null; }
        public virtual object GetObject(string name) { throw null; }
        public virtual void Serialize(System.IO.BinaryWriter writer) { }
    }
    [System.Runtime.CompilerServices.TypeForwardedFromAttribute("System.Web.Abstractions, Version=3.5.0.0, Culture=Neutral, PublicKeyToken=31bf3856ad364e35")]
    public partial class HttpStaticObjectsCollectionWrapper : System.Web.HttpStaticObjectsCollectionBase
    {
        public HttpStaticObjectsCollectionWrapper(System.Web.HttpStaticObjectsCollection httpStaticObjectsCollection) { }
        public override int Count { get { throw null; } }
        public override bool IsReadOnly { get { throw null; } }
        public override bool IsSynchronized { get { throw null; } }
        public override object this[string name] { get { throw null; } }
        public override bool NeverAccessed { get { throw null; } }
        public override object SyncRoot { get { throw null; } }
        public override void CopyTo(System.Array array, int index) { }
        public override System.Collections.IEnumerator GetEnumerator() { throw null; }
        public override object GetObject(string name) { throw null; }
        public override void Serialize(System.IO.BinaryWriter writer) { }
    }
    public abstract partial class HttpTaskAsyncHandler : System.Web.IHttpAsyncHandler, System.Web.IHttpHandler
    {
        protected HttpTaskAsyncHandler() { }
        public virtual bool IsReusable { get { throw null; } }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public virtual void ProcessRequest(System.Web.HttpContext context) { }
        public abstract System.Threading.Tasks.Task ProcessRequestAsync(System.Web.HttpContext context);
        System.IAsyncResult System.Web.IHttpAsyncHandler.BeginProcessRequest(System.Web.HttpContext context, System.AsyncCallback cb, object extraData) { throw null; }
        void System.Web.IHttpAsyncHandler.EndProcessRequest(System.IAsyncResult result) { }
    }
    [System.SerializableAttribute]
    public sealed partial class HttpUnhandledException : System.Web.HttpException
    {
        public HttpUnhandledException() { }
        public HttpUnhandledException(string message) { }
        public HttpUnhandledException(string message, System.Exception innerException) { }
    }
    public sealed partial class HttpUtility
    {
        public HttpUtility() { }
        public static string HtmlAttributeEncode(string s) { throw null; }
        public static void HtmlAttributeEncode(string s, System.IO.TextWriter output) { }
        public static string HtmlDecode(string s) { throw null; }
        public static void HtmlDecode(string s, System.IO.TextWriter output) { }
        public static string HtmlEncode(object value) { throw null; }
        public static string HtmlEncode(string s) { throw null; }
        public static void HtmlEncode(string s, System.IO.TextWriter output) { }
        public static string JavaScriptStringEncode(string value) { throw null; }
        public static string JavaScriptStringEncode(string value, bool addDoubleQuotes) { throw null; }
        public static System.Collections.Specialized.NameValueCollection ParseQueryString(string query) { throw null; }
        public static System.Collections.Specialized.NameValueCollection ParseQueryString(string query, System.Text.Encoding encoding) { throw null; }
        public static string UrlDecode(byte[] bytes, int offset, int count, System.Text.Encoding e) { throw null; }
        public static string UrlDecode(byte[] bytes, System.Text.Encoding e) { throw null; }
        public static string UrlDecode(string str) { throw null; }
        public static string UrlDecode(string str, System.Text.Encoding e) { throw null; }
        public static byte[] UrlDecodeToBytes(byte[] bytes) { throw null; }
        public static byte[] UrlDecodeToBytes(byte[] bytes, int offset, int count) { throw null; }
        public static byte[] UrlDecodeToBytes(string str) { throw null; }
        public static byte[] UrlDecodeToBytes(string str, System.Text.Encoding e) { throw null; }
        public static string UrlEncode(byte[] bytes) { throw null; }
        public static string UrlEncode(byte[] bytes, int offset, int count) { throw null; }
        public static string UrlEncode(string str) { throw null; }
        public static string UrlEncode(string str, System.Text.Encoding e) { throw null; }
        public static byte[] UrlEncodeToBytes(byte[] bytes) { throw null; }
        public static byte[] UrlEncodeToBytes(byte[] bytes, int offset, int count) { throw null; }
        public static byte[] UrlEncodeToBytes(string str) { throw null; }
        public static byte[] UrlEncodeToBytes(string str, System.Text.Encoding e) { throw null; }
        [System.ObsoleteAttribute("This method produces non-standards-compliant output and has interoperability issues. The preferred alternative is UrlEncode(String).")]
        public static string UrlEncodeUnicode(string str) { throw null; }
        [System.ObsoleteAttribute("This method produces non-standards-compliant output and has interoperability issues. The preferred alternative is UrlEncodeToBytes(String).")]
        public static byte[] UrlEncodeUnicodeToBytes(string str) { throw null; }
        public static string UrlPathEncode(string str) { throw null; }
    }
    public enum HttpValidationStatus
    {
        IgnoreThisRequest = 2,
        Invalid = 1,
        Valid = 3,
    }
    [System.Runtime.InteropServices.ComVisibleAttribute(false)]
    public abstract partial class HttpWorkerRequest
    {
        public const int HeaderAccept = 20;
        public const int HeaderAcceptCharset = 21;
        public const int HeaderAcceptEncoding = 22;
        public const int HeaderAcceptLanguage = 23;
        public const int HeaderAcceptRanges = 20;
        public const int HeaderAge = 21;
        public const int HeaderAllow = 10;
        public const int HeaderAuthorization = 24;
        public const int HeaderCacheControl = 0;
        public const int HeaderConnection = 1;
        public const int HeaderContentEncoding = 13;
        public const int HeaderContentLanguage = 14;
        public const int HeaderContentLength = 11;
        public const int HeaderContentLocation = 15;
        public const int HeaderContentMd5 = 16;
        public const int HeaderContentRange = 17;
        public const int HeaderContentType = 12;
        public const int HeaderCookie = 25;
        public const int HeaderDate = 2;
        public const int HeaderEtag = 22;
        public const int HeaderExpect = 26;
        public const int HeaderExpires = 18;
        public const int HeaderFrom = 27;
        public const int HeaderHost = 28;
        public const int HeaderIfMatch = 29;
        public const int HeaderIfModifiedSince = 30;
        public const int HeaderIfNoneMatch = 31;
        public const int HeaderIfRange = 32;
        public const int HeaderIfUnmodifiedSince = 33;
        public const int HeaderKeepAlive = 3;
        public const int HeaderLastModified = 19;
        public const int HeaderLocation = 23;
        public const int HeaderMaxForwards = 34;
        public const int HeaderPragma = 4;
        public const int HeaderProxyAuthenticate = 24;
        public const int HeaderProxyAuthorization = 35;
        public const int HeaderRange = 37;
        public const int HeaderReferer = 36;
        public const int HeaderRetryAfter = 25;
        public const int HeaderServer = 26;
        public const int HeaderSetCookie = 27;
        public const int HeaderTe = 38;
        public const int HeaderTrailer = 5;
        public const int HeaderTransferEncoding = 6;
        public const int HeaderUpgrade = 7;
        public const int HeaderUserAgent = 39;
        public const int HeaderVary = 28;
        public const int HeaderVia = 8;
        public const int HeaderWarning = 9;
        public const int HeaderWwwAuthenticate = 29;
        public const int ReasonCachePolicy = 2;
        public const int ReasonCacheSecurity = 3;
        public const int ReasonClientDisconnect = 4;
        public const int ReasonDefault = 0;
        public const int ReasonFileHandleCacheMiss = 1;
        public const int ReasonResponseCacheMiss = 0;
        public const int RequestHeaderMaximum = 40;
        public const int ResponseHeaderMaximum = 30;
        protected HttpWorkerRequest() { }
        public virtual string MachineConfigPath { get { throw null; } }
        public virtual string MachineInstallDirectory { get { throw null; } }
        public virtual System.Guid RequestTraceIdentifier { get { throw null; } }
        public virtual string RootWebConfigPath { get { throw null; } }
        public virtual bool SupportsAsyncFlush { get { throw null; } }
        public virtual bool SupportsAsyncRead { get { throw null; } }
        public virtual System.IAsyncResult BeginFlush(System.AsyncCallback callback, object state) { throw null; }
        public virtual System.IAsyncResult BeginRead(byte[] buffer, int offset, int count, System.AsyncCallback callback, object state) { throw null; }
        public virtual void CloseConnection() { }
        public virtual void EndFlush(System.IAsyncResult asyncResult) { }
        public abstract void EndOfRequest();
        public virtual int EndRead(System.IAsyncResult asyncResult) { throw null; }
        public abstract void FlushResponse(bool finalFlush);
        public virtual string GetAppPath() { throw null; }
        public virtual string GetAppPathTranslated() { throw null; }
        public virtual string GetAppPoolID() { throw null; }
        public virtual long GetBytesRead() { throw null; }
        public virtual byte[] GetClientCertificate() { throw null; }
        public virtual byte[] GetClientCertificateBinaryIssuer() { throw null; }
        public virtual int GetClientCertificateEncoding() { throw null; }
        public virtual byte[] GetClientCertificatePublicKey() { throw null; }
        public virtual System.DateTime GetClientCertificateValidFrom() { throw null; }
        public virtual System.DateTime GetClientCertificateValidUntil() { throw null; }
        public virtual long GetConnectionID() { throw null; }
        public virtual string GetFilePath() { throw null; }
        public virtual string GetFilePathTranslated() { throw null; }
        public abstract string GetHttpVerbName();
        public abstract string GetHttpVersion();
        public virtual string GetKnownRequestHeader(int index) { throw null; }
        public static int GetKnownRequestHeaderIndex(string header) { throw null; }
        public static string GetKnownRequestHeaderName(int index) { throw null; }
        public static int GetKnownResponseHeaderIndex(string header) { throw null; }
        public static string GetKnownResponseHeaderName(int index) { throw null; }
        public abstract string GetLocalAddress();
        public abstract int GetLocalPort();
        public virtual string GetPathInfo() { throw null; }
        public virtual byte[] GetPreloadedEntityBody() { throw null; }
        public virtual int GetPreloadedEntityBody(byte[] buffer, int offset) { throw null; }
        public virtual int GetPreloadedEntityBodyLength() { throw null; }
        public virtual string GetProtocol() { throw null; }
        public abstract string GetQueryString();
        public virtual byte[] GetQueryStringRawBytes() { throw null; }
        public abstract string GetRawUrl();
        public abstract string GetRemoteAddress();
        public virtual string GetRemoteName() { throw null; }
        public abstract int GetRemotePort();
        public virtual int GetRequestReason() { throw null; }
        public virtual string GetServerName() { throw null; }
        public virtual string GetServerVariable(string name) { throw null; }
        public static string GetStatusDescription(int code) { throw null; }
        public virtual int GetTotalEntityBodyLength() { throw null; }
        public virtual string GetUnknownRequestHeader(string name) { throw null; }
        [System.CLSCompliantAttribute(false)]
        public virtual string[][] GetUnknownRequestHeaders() { throw null; }
        public abstract string GetUriPath();
        public virtual long GetUrlContextID() { throw null; }
        public virtual System.IntPtr GetUserToken() { throw null; }
        public virtual System.IntPtr GetVirtualPathToken() { throw null; }
        public bool HasEntityBody() { throw null; }
        public virtual bool HeadersSent() { throw null; }
        public virtual bool IsClientConnected() { throw null; }
        public virtual bool IsEntireEntityBodyIsPreloaded() { throw null; }
        public virtual bool IsSecure() { throw null; }
        public virtual string MapPath(string virtualPath) { throw null; }
        public virtual int ReadEntityBody(byte[] buffer, int size) { throw null; }
        public virtual int ReadEntityBody(byte[] buffer, int offset, int size) { throw null; }
        public virtual void SendCalculatedContentLength(int contentLength) { }
        public virtual void SendCalculatedContentLength(long contentLength) { }
        public abstract void SendKnownResponseHeader(int index, string value);
        public abstract void SendResponseFromFile(System.IntPtr handle, long offset, long length);
        public abstract void SendResponseFromFile(string filename, long offset, long length);
        public abstract void SendResponseFromMemory(byte[] data, int length);
        public virtual void SendResponseFromMemory(System.IntPtr data, int length) { }
        public abstract void SendStatus(int statusCode, string statusDescription);
        public abstract void SendUnknownResponseHeader(string name, string value);
        public virtual void SetEndOfSendNotification(System.Web.HttpWorkerRequest.EndOfSendNotification callback, object extraData) { }
        public delegate void EndOfSendNotification(System.Web.HttpWorkerRequest wr, object extraData);
    }
    public sealed partial class HttpWriter : System.IO.TextWriter
    {
        internal HttpWriter() { }
        public override System.Text.Encoding Encoding { get { throw null; } }
        public System.IO.Stream OutputStream { get { throw null; } }
        public override void Close() { }
        public override void Flush() { }
        public override void Write(char ch) { }
        public override void Write(char[] buffer, int index, int count) { }
        public override void Write(object obj) { }
        public override void Write(string s) { }
        public void WriteBytes(byte[] buffer, int index, int count) { }
        public override void WriteLine() { }
        public void WriteString(string s, int index, int count) { }
    }
    public partial interface IHtmlString
    {
        string ToHtmlString();
    }
    public partial interface IHttpAsyncHandler : System.Web.IHttpHandler
    {
        System.IAsyncResult BeginProcessRequest(System.Web.HttpContext context, System.AsyncCallback cb, object extraData);
        void EndProcessRequest(System.IAsyncResult result);
    }
    public partial interface IHttpHandler
    {
        bool IsReusable { get; }
        void ProcessRequest(System.Web.HttpContext context);
    }
    public partial interface IHttpHandlerFactory
    {
        System.Web.IHttpHandler GetHandler(System.Web.HttpContext context, string requestType, string url, string pathTranslated);
        void ReleaseHandler(System.Web.IHttpHandler handler);
    }
    public partial interface IHttpModule
    {
        void Dispose();
        void Init(System.Web.HttpApplication context);
    }
    [System.Security.Permissions.HostProtectionAttribute(System.Security.Permissions.SecurityAction.LinkDemand, Synchronization=true)]
    public sealed partial class IisTraceListener : System.Diagnostics.TraceListener
    {
        public IisTraceListener() { }
        public override void TraceData(System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, object data) { }
        public override void TraceData(System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, params object[] data) { }
        public override void TraceEvent(System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType severity, int id, string message) { }
        public override void TraceEvent(System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType severity, int id, string format, params object[] args) { }
        public override void Write(string message) { }
        public override void Write(string message, string category) { }
        public override void WriteLine(string message) { }
        public override void WriteLine(string message, string category) { }
    }
    public partial interface IPartitionResolver
    {
        void Initialize();
        string ResolvePartition(object key);
    }
    public partial interface ISubscriptionToken
    {
        bool IsActive { get; }
        void Unsubscribe();
    }
    public partial interface ITlsTokenBindingInfo
    {
        byte[] GetProvidedTokenBindingId();
        byte[] GetReferredTokenBindingId();
    }
    public static partial class MimeMapping
    {
        public static string GetMimeMapping(string fileName) { throw null; }
    }
    [System.SerializableAttribute]
    public sealed partial class ParserError
    {
        public ParserError() { }
        public ParserError(string errorText, string virtualPath, int line) { }
        public string ErrorText { get { throw null; } set { } }
        public int Line { get { throw null; } set { } }
        public string VirtualPath { get { throw null; } set { } }
    }
    [System.SerializableAttribute]
    public sealed partial class ParserErrorCollection : System.Collections.CollectionBase
    {
        public ParserErrorCollection() { }
        public ParserErrorCollection(System.Web.ParserError[] value) { }
        public System.Web.ParserError this[int index] { get { throw null; } set { } }
        public int Add(System.Web.ParserError value) { throw null; }
        public void AddRange(System.Web.ParserErrorCollection value) { }
        public void AddRange(System.Web.ParserError[] value) { }
        public bool Contains(System.Web.ParserError value) { throw null; }
        public void CopyTo(System.Web.ParserError[] array, int index) { }
        public int IndexOf(System.Web.ParserError value) { throw null; }
        public void Insert(int index, System.Web.ParserError value) { }
        public void Remove(System.Web.ParserError value) { }
    }
    [System.AttributeUsageAttribute(System.AttributeTargets.Assembly, AllowMultiple=true)]
    public sealed partial class PreApplicationStartMethodAttribute : System.Attribute
    {
        public PreApplicationStartMethodAttribute(System.Type type, string methodName) { }
        public string MethodName { get { throw null; } }
        public System.Type Type { get { throw null; } }
    }
    public partial class ProcessInfo
    {
        public ProcessInfo() { }
        public ProcessInfo(System.DateTime startTime, System.TimeSpan age, int processID, int requestCount, System.Web.ProcessStatus status, System.Web.ProcessShutdownReason shutdownReason, int peakMemoryUsed) { }
        public System.TimeSpan Age { get { throw null; } }
        public int PeakMemoryUsed { get { throw null; } }
        public int ProcessID { get { throw null; } }
        public int RequestCount { get { throw null; } }
        public System.Web.ProcessShutdownReason ShutdownReason { get { throw null; } }
        public System.DateTime StartTime { get { throw null; } }
        public System.Web.ProcessStatus Status { get { throw null; } }
        public void SetAll(System.DateTime startTime, System.TimeSpan age, int processID, int requestCount, System.Web.ProcessStatus status, System.Web.ProcessShutdownReason shutdownReason, int peakMemoryUsed) { }
    }
    public partial class ProcessModelInfo
    {
        public ProcessModelInfo() { }
        [System.Web.AspNetHostingPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, Level=System.Web.AspNetHostingPermissionLevel.High)]
        public static System.Web.ProcessInfo GetCurrentProcessInfo() { throw null; }
        [System.Web.AspNetHostingPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, Level=System.Web.AspNetHostingPermissionLevel.High)]
        public static System.Web.ProcessInfo[] GetHistory(int numRecords) { throw null; }
    }
    public enum ProcessShutdownReason
    {
        DeadlockSuspected = 8,
        IdleTimeout = 5,
        MemoryLimitExceeded = 6,
        None = 0,
        PingFailed = 7,
        RequestQueueLimit = 3,
        RequestsLimit = 2,
        Timeout = 4,
        Unexpected = 1,
    }
    public enum ProcessStatus
    {
        Alive = 1,
        ShutDown = 3,
        ShuttingDown = 2,
        Terminated = 4,
    }
    public enum ReadEntityBodyMode
    {
        Buffered = 3,
        Bufferless = 2,
        Classic = 1,
        None = 0,
    }
    [System.FlagsAttribute]
    public enum RequestNotification
    {
        AcquireRequestState = 32,
        AuthenticateRequest = 2,
        AuthorizeRequest = 4,
        BeginRequest = 1,
        EndRequest = 2048,
        ExecuteRequestHandler = 128,
        LogRequest = 1024,
        MapRequestHandler = 16,
        PreExecuteRequestHandler = 64,
        ReleaseRequestState = 256,
        ResolveRequestCache = 8,
        SendResponse = 536870912,
        UpdateRequestCache = 512,
    }
    public enum RequestNotificationStatus
    {
        Continue = 0,
        FinishRequest = 2,
        Pending = 1,
    }
    public enum SameSiteMode
    {
        Lax = 1,
        None = 0,
        Strict = 2,
    }
    public static partial class SiteMap
    {
        public static System.Web.SiteMapNode CurrentNode { get { throw null; } }
        public static bool Enabled { get { throw null; } }
        public static System.Web.SiteMapProvider Provider { get { throw null; } }
        public static System.Web.SiteMapProviderCollection Providers { get { throw null; } }
        public static System.Web.SiteMapNode RootNode { get { throw null; } }
        public static event System.Web.SiteMapResolveEventHandler SiteMapResolve { add { } remove { } }
    }
    public partial class SiteMapNode : System.ICloneable, System.Web.UI.IHierarchyData, System.Web.UI.INavigateUIData
    {
        public SiteMapNode(System.Web.SiteMapProvider provider, string key) { }
        public SiteMapNode(System.Web.SiteMapProvider provider, string key, string url) { }
        public SiteMapNode(System.Web.SiteMapProvider provider, string key, string url, string title) { }
        public SiteMapNode(System.Web.SiteMapProvider provider, string key, string url, string title, string description) { }
        public SiteMapNode(System.Web.SiteMapProvider provider, string key, string url, string title, string description, System.Collections.IList roles, System.Collections.Specialized.NameValueCollection attributes, System.Collections.Specialized.NameValueCollection explicitResourceKeys, string implicitResourceKey) { }
        protected System.Collections.Specialized.NameValueCollection Attributes { get { throw null; } set { } }
        public virtual System.Web.SiteMapNodeCollection ChildNodes { get { throw null; } set { } }
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string Description { get { throw null; } set { } }
        public virtual bool HasChildNodes { get { throw null; } }
        public virtual string this[string key] { get { throw null; } set { } }
        public string Key { get { throw null; } }
        public virtual System.Web.SiteMapNode NextSibling { get { throw null; } }
        public virtual System.Web.SiteMapNode ParentNode { get { throw null; } set { } }
        public virtual System.Web.SiteMapNode PreviousSibling { get { throw null; } }
        public System.Web.SiteMapProvider Provider { get { throw null; } }
        public bool ReadOnly { get { throw null; } set { } }
        public string ResourceKey { get { throw null; } set { } }
        public System.Collections.IList Roles { get { throw null; } set { } }
        public virtual System.Web.SiteMapNode RootNode { get { throw null; } }
        bool System.Web.UI.IHierarchyData.HasChildren { get { throw null; } }
        object System.Web.UI.IHierarchyData.Item { get { throw null; } }
        string System.Web.UI.IHierarchyData.Path { get { throw null; } }
        string System.Web.UI.IHierarchyData.Type { get { throw null; } }
        string System.Web.UI.INavigateUIData.Description { get { throw null; } }
        string System.Web.UI.INavigateUIData.Name { get { throw null; } }
        string System.Web.UI.INavigateUIData.NavigateUrl { get { throw null; } }
        string System.Web.UI.INavigateUIData.Value { get { throw null; } }
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string Title { get { throw null; } set { } }
        public virtual string Url { get { throw null; } set { } }
        public virtual System.Web.SiteMapNode Clone() { throw null; }
        public virtual System.Web.SiteMapNode Clone(bool cloneParentNodes) { throw null; }
        public override bool Equals(object obj) { throw null; }
        public System.Web.SiteMapNodeCollection GetAllNodes() { throw null; }
        public System.Web.UI.WebControls.SiteMapDataSourceView GetDataSourceView(System.Web.UI.WebControls.SiteMapDataSource owner, string viewName) { throw null; }
        protected string GetExplicitResourceString(string attributeName, string defaultValue, bool throwIfNotFound) { throw null; }
        public override int GetHashCode() { throw null; }
        public System.Web.UI.WebControls.SiteMapHierarchicalDataSourceView GetHierarchicalDataSourceView() { throw null; }
        protected string GetImplicitResourceString(string attributeName) { throw null; }
        public virtual bool IsAccessibleToUser(System.Web.HttpContext context) { throw null; }
        public virtual bool IsDescendantOf(System.Web.SiteMapNode node) { throw null; }
        object System.ICloneable.Clone() { throw null; }
        System.Web.UI.IHierarchicalEnumerable System.Web.UI.IHierarchyData.GetChildren() { throw null; }
        System.Web.UI.IHierarchyData System.Web.UI.IHierarchyData.GetParent() { throw null; }
        public override string ToString() { throw null; }
    }
    public partial class SiteMapNodeCollection : System.Collections.ICollection, System.Collections.IEnumerable, System.Collections.IList, System.Web.UI.IHierarchicalEnumerable
    {
        public SiteMapNodeCollection() { }
        public SiteMapNodeCollection(int capacity) { }
        public SiteMapNodeCollection(System.Web.SiteMapNode value) { }
        public SiteMapNodeCollection(System.Web.SiteMapNodeCollection value) { }
        public SiteMapNodeCollection(System.Web.SiteMapNode[] value) { }
        public virtual int Count { get { throw null; } }
        public virtual bool IsFixedSize { get { throw null; } }
        public virtual bool IsReadOnly { get { throw null; } }
        public virtual bool IsSynchronized { get { throw null; } }
        public virtual System.Web.SiteMapNode this[int index] { get { throw null; } set { } }
        public virtual object SyncRoot { get { throw null; } }
        int System.Collections.ICollection.Count { get { throw null; } }
        bool System.Collections.ICollection.IsSynchronized { get { throw null; } }
        object System.Collections.ICollection.SyncRoot { get { throw null; } }
        bool System.Collections.IList.IsFixedSize { get { throw null; } }
        bool System.Collections.IList.IsReadOnly { get { throw null; } }
        object System.Collections.IList.this[int index] { get { throw null; } set { } }
        public virtual int Add(System.Web.SiteMapNode value) { throw null; }
        public virtual void AddRange(System.Web.SiteMapNodeCollection value) { }
        public virtual void AddRange(System.Web.SiteMapNode[] value) { }
        public virtual void Clear() { }
        public virtual bool Contains(System.Web.SiteMapNode value) { throw null; }
        public virtual void CopyTo(System.Web.SiteMapNode[] array, int index) { }
        public System.Web.UI.WebControls.SiteMapDataSourceView GetDataSourceView(System.Web.UI.WebControls.SiteMapDataSource owner, string viewName) { throw null; }
        public virtual System.Collections.IEnumerator GetEnumerator() { throw null; }
        public System.Web.UI.WebControls.SiteMapHierarchicalDataSourceView GetHierarchicalDataSourceView() { throw null; }
        public virtual System.Web.UI.IHierarchyData GetHierarchyData(object enumeratedItem) { throw null; }
        public virtual int IndexOf(System.Web.SiteMapNode value) { throw null; }
        public virtual void Insert(int index, System.Web.SiteMapNode value) { }
        protected virtual void OnValidate(object value) { }
        public static System.Web.SiteMapNodeCollection ReadOnly(System.Web.SiteMapNodeCollection collection) { throw null; }
        public virtual void Remove(System.Web.SiteMapNode value) { }
        public virtual void RemoveAt(int index) { }
        void System.Collections.ICollection.CopyTo(System.Array array, int index) { }
        System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() { throw null; }
        int System.Collections.IList.Add(object value) { throw null; }
        void System.Collections.IList.Clear() { }
        bool System.Collections.IList.Contains(object value) { throw null; }
        int System.Collections.IList.IndexOf(object value) { throw null; }
        void System.Collections.IList.Insert(int index, object value) { }
        void System.Collections.IList.Remove(object value) { }
        void System.Collections.IList.RemoveAt(int index) { }
        System.Web.UI.IHierarchyData System.Web.UI.IHierarchicalEnumerable.GetHierarchyData(object enumeratedItem) { throw null; }
    }
    public abstract partial class SiteMapProvider : System.Configuration.Provider.ProviderBase
    {
        protected SiteMapProvider() { }
        public virtual System.Web.SiteMapNode CurrentNode { get { throw null; } }
        public bool EnableLocalization { get { throw null; } set { } }
        public virtual System.Web.SiteMapProvider ParentProvider { get { throw null; } set { } }
        public string ResourceKey { get { throw null; } set { } }
        public virtual System.Web.SiteMapNode RootNode { get { throw null; } }
        public virtual System.Web.SiteMapProvider RootProvider { get { throw null; } }
        public bool SecurityTrimmingEnabled { get { throw null; } }
        public event System.Web.SiteMapResolveEventHandler SiteMapResolve { add { } remove { } }
        protected virtual void AddNode(System.Web.SiteMapNode node) { }
        protected internal virtual void AddNode(System.Web.SiteMapNode node, System.Web.SiteMapNode parentNode) { }
        public abstract System.Web.SiteMapNode FindSiteMapNode(string rawUrl);
        public virtual System.Web.SiteMapNode FindSiteMapNode(System.Web.HttpContext context) { throw null; }
        public virtual System.Web.SiteMapNode FindSiteMapNodeFromKey(string key) { throw null; }
        public abstract System.Web.SiteMapNodeCollection GetChildNodes(System.Web.SiteMapNode node);
        public virtual System.Web.SiteMapNode GetCurrentNodeAndHintAncestorNodes(int upLevel) { throw null; }
        public virtual System.Web.SiteMapNode GetCurrentNodeAndHintNeighborhoodNodes(int upLevel, int downLevel) { throw null; }
        public abstract System.Web.SiteMapNode GetParentNode(System.Web.SiteMapNode node);
        public virtual System.Web.SiteMapNode GetParentNodeRelativeToCurrentNodeAndHintDownFromParent(int walkupLevels, int relativeDepthFromWalkup) { throw null; }
        public virtual System.Web.SiteMapNode GetParentNodeRelativeToNodeAndHintDownFromParent(System.Web.SiteMapNode node, int walkupLevels, int relativeDepthFromWalkup) { throw null; }
        protected internal abstract System.Web.SiteMapNode GetRootNodeCore();
        protected static System.Web.SiteMapNode GetRootNodeCoreFromProvider(System.Web.SiteMapProvider provider) { throw null; }
        public virtual void HintAncestorNodes(System.Web.SiteMapNode node, int upLevel) { }
        public virtual void HintNeighborhoodNodes(System.Web.SiteMapNode node, int upLevel, int downLevel) { }
        public override void Initialize(string name, System.Collections.Specialized.NameValueCollection attributes) { }
        public virtual bool IsAccessibleToUser(System.Web.HttpContext context, System.Web.SiteMapNode node) { throw null; }
        protected internal virtual void RemoveNode(System.Web.SiteMapNode node) { }
        protected System.Web.SiteMapNode ResolveSiteMapNode(System.Web.HttpContext context) { throw null; }
    }
    public sealed partial class SiteMapProviderCollection : System.Configuration.Provider.ProviderCollection
    {
        public SiteMapProviderCollection() { }
        public new System.Web.SiteMapProvider this[string name] { get { throw null; } }
        public override void Add(System.Configuration.Provider.ProviderBase provider) { }
        public void Add(System.Web.SiteMapProvider provider) { }
        public void AddArray(System.Web.SiteMapProvider[] providerArray) { }
    }
    public partial class SiteMapResolveEventArgs : System.EventArgs
    {
        public SiteMapResolveEventArgs(System.Web.HttpContext context, System.Web.SiteMapProvider provider) { }
        public System.Web.HttpContext Context { get { throw null; } }
        public System.Web.SiteMapProvider Provider { get { throw null; } }
    }
    public delegate System.Web.SiteMapNode SiteMapResolveEventHandler(object sender, System.Web.SiteMapResolveEventArgs e);
    public abstract partial class StaticSiteMapProvider : System.Web.SiteMapProvider
    {
        protected StaticSiteMapProvider() { }
        protected internal override void AddNode(System.Web.SiteMapNode node, System.Web.SiteMapNode parentNode) { }
        public abstract System.Web.SiteMapNode BuildSiteMap();
        protected virtual void Clear() { }
        public override System.Web.SiteMapNode FindSiteMapNode(string rawUrl) { throw null; }
        public override System.Web.SiteMapNode FindSiteMapNodeFromKey(string key) { throw null; }
        public override System.Web.SiteMapNodeCollection GetChildNodes(System.Web.SiteMapNode node) { throw null; }
        public override System.Web.SiteMapNode GetParentNode(System.Web.SiteMapNode node) { throw null; }
        protected internal override void RemoveNode(System.Web.SiteMapNode node) { }
    }
    public delegate System.Threading.Tasks.Task TaskEventHandler(object sender, System.EventArgs e);
    public sealed partial class TraceContext
    {
        public TraceContext(System.Web.HttpContext context) { }
        public bool IsEnabled { get { throw null; } set { } }
        public System.Web.TraceMode TraceMode { get { throw null; } set { } }
        public event System.Web.TraceContextEventHandler TraceFinished { add { } remove { } }
        public void Warn(string message) { }
        public void Warn(string category, string message) { }
        public void Warn(string category, string message, System.Exception errorInfo) { }
        public void Write(string message) { }
        public void Write(string category, string message) { }
        public void Write(string category, string message, System.Exception errorInfo) { }
    }
    public sealed partial class TraceContextEventArgs : System.EventArgs
    {
        public TraceContextEventArgs(System.Collections.ICollection records) { }
        public System.Collections.ICollection TraceRecords { get { throw null; } }
    }
    public delegate void TraceContextEventHandler(object sender, System.Web.TraceContextEventArgs e);
    public sealed partial class TraceContextRecord
    {
        public TraceContextRecord(string category, string msg, bool isWarning, System.Exception errorInfo) { }
        public string Category { get { throw null; } }
        public System.Exception ErrorInfo { get { throw null; } }
        public bool IsWarning { get { throw null; } }
        public string Message { get { throw null; } }
    }
    public enum TraceMode
    {
        Default = 2,
        SortByCategory = 1,
        SortByTime = 0,
    }
    public sealed partial class UnvalidatedRequestValues
    {
        internal UnvalidatedRequestValues() { }
        public System.Web.HttpCookieCollection Cookies { get { throw null; } }
        public System.Web.HttpFileCollection Files { get { throw null; } }
        public System.Collections.Specialized.NameValueCollection Form { get { throw null; } }
        public System.Collections.Specialized.NameValueCollection Headers { get { throw null; } }
        public string this[string field] { get { throw null; } }
        public string Path { get { throw null; } }
        public string PathInfo { get { throw null; } }
        public System.Collections.Specialized.NameValueCollection QueryString { get { throw null; } }
        public string RawUrl { get { throw null; } }
        public System.Uri Url { get { throw null; } }
    }
    public abstract partial class UnvalidatedRequestValuesBase
    {
        protected UnvalidatedRequestValuesBase() { }
        public virtual System.Web.HttpCookieCollection Cookies { get { throw null; } }
        public virtual System.Web.HttpFileCollectionBase Files { get { throw null; } }
        public virtual System.Collections.Specialized.NameValueCollection Form { get { throw null; } }
        public virtual System.Collections.Specialized.NameValueCollection Headers { get { throw null; } }
        public virtual string this[string field] { get { throw null; } }
        public virtual string Path { get { throw null; } }
        public virtual string PathInfo { get { throw null; } }
        public virtual System.Collections.Specialized.NameValueCollection QueryString { get { throw null; } }
        public virtual string RawUrl { get { throw null; } }
        public virtual System.Uri Url { get { throw null; } }
    }
    public partial class UnvalidatedRequestValuesWrapper : System.Web.UnvalidatedRequestValuesBase
    {
        public UnvalidatedRequestValuesWrapper(System.Web.UnvalidatedRequestValues requestValues) { }
        public override System.Web.HttpCookieCollection Cookies { get { throw null; } }
        public override System.Web.HttpFileCollectionBase Files { get { throw null; } }
        public override System.Collections.Specialized.NameValueCollection Form { get { throw null; } }
        public override System.Collections.Specialized.NameValueCollection Headers { get { throw null; } }
        public override string this[string field] { get { throw null; } }
        public override string Path { get { throw null; } }
        public override string PathInfo { get { throw null; } }
        public override System.Collections.Specialized.NameValueCollection QueryString { get { throw null; } }
        public override string RawUrl { get { throw null; } }
        public override System.Uri Url { get { throw null; } }
    }
    public static partial class VirtualPathUtility
    {
        public static string AppendTrailingSlash(string virtualPath) { throw null; }
        public static string Combine(string basePath, string relativePath) { throw null; }
        public static string GetDirectory(string virtualPath) { throw null; }
        public static string GetExtension(string virtualPath) { throw null; }
        public static string GetFileName(string virtualPath) { throw null; }
        public static bool IsAbsolute(string virtualPath) { throw null; }
        public static bool IsAppRelative(string virtualPath) { throw null; }
        public static string MakeRelative(string fromPath, string toPath) { throw null; }
        public static string RemoveTrailingSlash(string virtualPath) { throw null; }
        public static string ToAbsolute(string virtualPath) { throw null; }
        public static string ToAbsolute(string virtualPath, string applicationPath) { throw null; }
        public static string ToAppRelative(string virtualPath) { throw null; }
        public static string ToAppRelative(string virtualPath, string applicationPath) { throw null; }
    }
    [System.Security.Permissions.HostProtectionAttribute(System.Security.Permissions.SecurityAction.LinkDemand, Synchronization=true)]
    public partial class WebPageTraceListener : System.Diagnostics.TraceListener
    {
        public WebPageTraceListener() { }
        public override void TraceEvent(System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType severity, int id, string message) { }
        public override void TraceEvent(System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType severity, int id, string format, params object[] args) { }
        public override void Write(string message) { }
        public override void Write(string message, string category) { }
        public override void WriteLine(string message) { }
        public override void WriteLine(string message, string category) { }
    }
    public partial class XmlSiteMapProvider : System.Web.StaticSiteMapProvider, System.IDisposable
    {
        public XmlSiteMapProvider() { }
        public override System.Web.SiteMapNode CurrentNode { get { throw null; } }
        public override System.Web.SiteMapNode RootNode { get { throw null; } }
        protected internal override void AddNode(System.Web.SiteMapNode node, System.Web.SiteMapNode parentNode) { }
        protected virtual void AddProvider(string providerName, System.Web.SiteMapNode parentNode) { }
        public override System.Web.SiteMapNode BuildSiteMap() { throw null; }
        protected override void Clear() { }
        public void Dispose() { }
        protected virtual void Dispose(bool disposing) { }
        public override System.Web.SiteMapNode FindSiteMapNode(string rawUrl) { throw null; }
        public override System.Web.SiteMapNode FindSiteMapNodeFromKey(string key) { throw null; }
        public override System.Web.SiteMapNodeCollection GetChildNodes(System.Web.SiteMapNode node) { throw null; }
        public override System.Web.SiteMapNode GetParentNode(System.Web.SiteMapNode node) { throw null; }
        protected internal override System.Web.SiteMapNode GetRootNodeCore() { throw null; }
        public override void Initialize(string name, System.Collections.Specialized.NameValueCollection attributes) { }
        protected internal override void RemoveNode(System.Web.SiteMapNode node) { }
        protected virtual void RemoveProvider(string providerName) { }
    }
}
namespace System.Web.Caching
{
    public sealed partial class AggregateCacheDependency : System.Web.Caching.CacheDependency
    {
        public AggregateCacheDependency() { }
        public void Add(params System.Web.Caching.CacheDependency[] dependencies) { }
        protected override void DependencyDispose() { }
        public override string[] GetFileDependencies() { throw null; }
        public override string GetUniqueID() { throw null; }
    }
    public sealed partial class Cache : System.Collections.IEnumerable
    {
        public static readonly System.DateTime NoAbsoluteExpiration;
        public static readonly System.TimeSpan NoSlidingExpiration;
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, Unrestricted=true)]
        public Cache() { }
        public int Count { get { throw null; } }
        public long EffectivePercentagePhysicalMemoryLimit { get { throw null; } }
        public long EffectivePrivateBytesLimit { get { throw null; } }
        public object this[string key] { get { throw null; } set { } }
        public object Add(string key, object value, System.Web.Caching.CacheDependency dependencies, System.DateTime absoluteExpiration, System.TimeSpan slidingExpiration, System.Web.Caching.CacheItemPriority priority, System.Web.Caching.CacheItemRemovedCallback onRemoveCallback) { throw null; }
        public object Get(string key) { throw null; }
        public System.Collections.IDictionaryEnumerator GetEnumerator() { throw null; }
        public void Insert(string key, object value) { }
        public void Insert(string key, object value, System.Web.Caching.CacheDependency dependencies) { }
        public void Insert(string key, object value, System.Web.Caching.CacheDependency dependencies, System.DateTime absoluteExpiration, System.TimeSpan slidingExpiration) { }
        public void Insert(string key, object value, System.Web.Caching.CacheDependency dependencies, System.DateTime absoluteExpiration, System.TimeSpan slidingExpiration, System.Web.Caching.CacheItemPriority priority, System.Web.Caching.CacheItemRemovedCallback onRemoveCallback) { }
        public void Insert(string key, object value, System.Web.Caching.CacheDependency dependencies, System.DateTime absoluteExpiration, System.TimeSpan slidingExpiration, System.Web.Caching.CacheItemUpdateCallback onUpdateCallback) { }
        public object Remove(string key) { throw null; }
        System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() { throw null; }
    }
    public partial class CacheDependency : System.IDisposable
    {
        protected CacheDependency() { }
        public CacheDependency(string filename) { }
        public CacheDependency(string filename, System.DateTime start) { }
        public CacheDependency(string[] filenames) { }
        public CacheDependency(string[] filenames, System.DateTime start) { }
        public CacheDependency(string[] filenames, string[] cachekeys) { }
        public CacheDependency(string[] filenames, string[] cachekeys, System.DateTime start) { }
        public CacheDependency(string[] filenames, string[] cachekeys, System.Web.Caching.CacheDependency dependency) { }
        public CacheDependency(string[] filenames, string[] cachekeys, System.Web.Caching.CacheDependency dependency, System.DateTime start) { }
        public bool HasChanged { get { throw null; } }
        public System.DateTime UtcLastModified { get { throw null; } }
        protected virtual void DependencyDispose() { }
        public void Dispose() { }
        protected internal void FinishInit() { }
        public virtual string[] GetFileDependencies() { throw null; }
        public virtual string GetUniqueID() { throw null; }
        public void ItemRemoved() { }
        public void KeepDependenciesAlive() { }
        protected void NotifyDependencyChanged(object sender, System.EventArgs e) { }
        public void SetCacheDependencyChanged(System.Action<object, System.EventArgs> dependencyChangedAction) { }
        protected void SetUtcLastModified(System.DateTime utcLastModified) { }
        public bool TakeOwnership() { throw null; }
    }
    public partial class CacheInsertOptions
    {
        public CacheInsertOptions() { }
        public System.DateTime AbsoluteExpiration { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } [System.Runtime.CompilerServices.CompilerGeneratedAttribute]set { } }
        public System.Web.Caching.CacheDependency Dependencies { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } [System.Runtime.CompilerServices.CompilerGeneratedAttribute]set { } }
        public System.Web.Caching.CacheItemRemovedCallback OnRemovedCallback { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } [System.Runtime.CompilerServices.CompilerGeneratedAttribute]set { } }
        public System.Web.Caching.CacheItemPriority Priority { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } [System.Runtime.CompilerServices.CompilerGeneratedAttribute]set { } }
        public System.TimeSpan SlidingExpiration { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } [System.Runtime.CompilerServices.CompilerGeneratedAttribute]set { } }
    }
    public enum CacheItemPriority
    {
        AboveNormal = 4,
        BelowNormal = 2,
        Default = 3,
        High = 5,
        Low = 1,
        Normal = 3,
        NotRemovable = 6,
    }
    public delegate void CacheItemRemovedCallback(string key, object value, System.Web.Caching.CacheItemRemovedReason reason);
    public enum CacheItemRemovedReason
    {
        DependencyChanged = 4,
        Expired = 2,
        Removed = 1,
        Underused = 3,
    }
    public delegate void CacheItemUpdateCallback(string key, System.Web.Caching.CacheItemUpdateReason reason, out object expensiveObject, out System.Web.Caching.CacheDependency dependency, out System.DateTime absoluteExpiration, out System.TimeSpan slidingExpiration);
    public enum CacheItemUpdateReason
    {
        DependencyChanged = 2,
        Expired = 1,
    }
    public abstract partial class CacheStoreProvider : System.Configuration.Provider.ProviderBase, System.IDisposable
    {
        protected CacheStoreProvider() { }
        public abstract long ItemCount { get; }
        public abstract long SizeInBytes { get; }
        public abstract object Add(string key, object item, System.Web.Caching.CacheInsertOptions options);
        public abstract bool AddDependent(string key, System.Web.Caching.CacheDependency dependency, out System.DateTime utcLastUpdated);
        public abstract void Dispose();
        public abstract object Get(string key);
        public abstract System.Collections.IDictionaryEnumerator GetEnumerator();
        public abstract new void Initialize(string name, System.Collections.Specialized.NameValueCollection config);
        public abstract void Insert(string key, object item, System.Web.Caching.CacheInsertOptions options);
        public abstract object Remove(string key);
        public abstract object Remove(string key, System.Web.Caching.CacheItemRemovedReason reason);
        public abstract void RemoveDependent(string key, System.Web.Caching.CacheDependency dependency);
        public abstract long Trim(int percent);
    }
    [System.SerializableAttribute]
    public sealed partial class DatabaseNotEnabledForNotificationException : System.SystemException
    {
        public DatabaseNotEnabledForNotificationException() { }
        public DatabaseNotEnabledForNotificationException(string message) { }
        public DatabaseNotEnabledForNotificationException(string message, System.Exception innerException) { }
    }
    [System.Web.AspNetHostingPermissionAttribute(System.Security.Permissions.SecurityAction.InheritanceDemand, Level=System.Web.AspNetHostingPermissionLevel.Unrestricted)]
    [System.SerializableAttribute]
    public partial class FileResponseElement : System.Web.Caching.ResponseElement
    {
        public FileResponseElement(string path, long offset, long length) { }
        public long Length { get { throw null; } }
        public long Offset { get { throw null; } }
        public string Path { get { throw null; } }
    }
    [System.SerializableAttribute]
    public sealed partial class HeaderElement
    {
        public HeaderElement(string name, string value) { }
        public string Name { get { throw null; } }
        public string Value { get { throw null; } }
    }
    public partial interface IOutputCacheEntry
    {
        System.Collections.Generic.List<System.Web.Caching.HeaderElement> HeaderElements { get; set; }
        System.Collections.Generic.List<System.Web.Caching.ResponseElement> ResponseElements { get; set; }
    }
    [System.Web.AspNetHostingPermissionAttribute(System.Security.Permissions.SecurityAction.InheritanceDemand, Level=System.Web.AspNetHostingPermissionLevel.Unrestricted)]
    [System.SerializableAttribute]
    public partial class MemoryResponseElement : System.Web.Caching.ResponseElement
    {
        public MemoryResponseElement(byte[] buffer, long length) { }
        public byte[] Buffer { get { throw null; } }
        public long Length { get { throw null; } }
    }
    public static partial class OutputCache
    {
        public static string DefaultProviderName { get { throw null; } }
        public static System.Web.Caching.OutputCacheProviderCollection Providers { get { throw null; } }
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.Assert, Flags=System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter)]
        public static object Deserialize(System.IO.Stream stream) { throw null; }
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.Assert, Flags=System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter)]
        public static void Serialize(System.IO.Stream stream, object data) { }
    }
    public abstract partial class OutputCacheProvider : System.Configuration.Provider.ProviderBase
    {
        protected OutputCacheProvider() { }
        public abstract object Add(string key, object entry, System.DateTime utcExpiry);
        public abstract object Get(string key);
        public abstract void Remove(string key);
        public abstract void Set(string key, object entry, System.DateTime utcExpiry);
    }
    public abstract partial class OutputCacheProviderAsync : System.Web.Caching.OutputCacheProvider
    {
        protected OutputCacheProviderAsync() { }
        public abstract System.Threading.Tasks.Task<object> AddAsync(string key, object entry, System.DateTime utcExpiry);
        public abstract System.Threading.Tasks.Task<object> GetAsync(string key);
        public abstract System.Threading.Tasks.Task RemoveAsync(string key);
        public abstract System.Threading.Tasks.Task SetAsync(string key, object entry, System.DateTime utcExpiry);
    }
    public sealed partial class OutputCacheProviderCollection : System.Configuration.Provider.ProviderCollection
    {
        public OutputCacheProviderCollection() { }
        public new System.Web.Caching.OutputCacheProvider this[string name] { get { throw null; } }
        public override void Add(System.Configuration.Provider.ProviderBase provider) { }
        public void CopyTo(System.Web.Caching.OutputCacheProvider[] array, int index) { }
    }
    public static partial class OutputCacheUtility
    {
        public static System.Web.Caching.CacheDependency CreateCacheDependency(System.Web.HttpResponse response) { throw null; }
        public static void FlushKernelCache(string cacheKey) { }
        public static System.Collections.ArrayList GetContentBuffers(System.Web.HttpResponse response) { throw null; }
        public static System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.Web.HttpCacheValidateHandler, object>> GetValidationCallbacks(System.Web.HttpResponse response) { throw null; }
        public static void SetContentBuffers(System.Web.HttpResponse response, System.Collections.ArrayList buffers) { }
        public static string SetupKernelCaching(string originalCacheUrl, System.Web.HttpResponse response) { throw null; }
    }
    [System.SerializableAttribute]
    public abstract partial class ResponseElement
    {
        protected ResponseElement() { }
    }
    public sealed partial class SqlCacheDependency : System.Web.Caching.CacheDependency
    {
        public SqlCacheDependency(System.Data.SqlClient.SqlCommand sqlCmd) { }
        public SqlCacheDependency(string databaseEntryName, string tableName) { }
        public static System.Web.Caching.CacheDependency CreateOutputCacheDependency(string dependency) { throw null; }
        protected override void DependencyDispose() { }
        public override string GetUniqueID() { throw null; }
    }
    [System.Web.AspNetHostingPermissionAttribute(System.Security.Permissions.SecurityAction.LinkDemand, Level=System.Web.AspNetHostingPermissionLevel.High)]
    public static partial class SqlCacheDependencyAdmin
    {
        public static void DisableNotifications(string connectionString) { }
        public static void DisableTableForNotifications(string connectionString, string table) { }
        public static void DisableTableForNotifications(string connectionString, string[] tables) { }
        public static void EnableNotifications(string connectionString) { }
        public static void EnableTableForNotifications(string connectionString, string table) { }
        public static void EnableTableForNotifications(string connectionString, string[] tables) { }
        public static string[] GetTablesEnabledForNotifications(string connectionString) { throw null; }
    }
    [System.Web.AspNetHostingPermissionAttribute(System.Security.Permissions.SecurityAction.InheritanceDemand, Level=System.Web.AspNetHostingPermissionLevel.Unrestricted)]
    [System.SerializableAttribute]
    public partial class SubstitutionResponseElement : System.Web.Caching.ResponseElement
    {
        public SubstitutionResponseElement(System.Web.HttpResponseSubstitutionCallback callback) { }
        public System.Web.HttpResponseSubstitutionCallback Callback { get { throw null; } }
    }
    [System.SerializableAttribute]
    public sealed partial class TableNotEnabledForNotificationException : System.SystemException
    {
        public TableNotEnabledForNotificationException() { }
        public TableNotEnabledForNotificationException(string message) { }
        public TableNotEnabledForNotificationException(string message, System.Exception innerException) { }
    }
}
namespace System.Web.Compilation
{
    [System.Web.Compilation.ExpressionEditorAttribute("System.Web.UI.Design.AppSettingsExpressionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.Web.Compilation.ExpressionPrefixAttribute("AppSettings")]
    public partial class AppSettingsExpressionBuilder : System.Web.Compilation.ExpressionBuilder
    {
        public AppSettingsExpressionBuilder() { }
        public override bool SupportsEvaluate { get { throw null; } }
        public override object EvaluateExpression(object target, System.Web.UI.BoundPropertyEntry entry, object parsedData, System.Web.Compilation.ExpressionBuilderContext context) { throw null; }
        public static object GetAppSetting(string key) { throw null; }
        public static object GetAppSetting(string key, System.Type targetType, string propertyName) { throw null; }
        public override System.CodeDom.CodeExpression GetCodeExpression(System.Web.UI.BoundPropertyEntry entry, object parsedData, System.Web.Compilation.ExpressionBuilderContext context) { throw null; }
    }
    public partial class AssemblyBuilder
    {
        internal AssemblyBuilder() { }
        public System.CodeDom.Compiler.CodeDomProvider CodeDomProvider { get { throw null; } }
        public void AddAssemblyReference(System.Reflection.Assembly a) { }
        public void AddCodeCompileUnit(System.Web.Compilation.BuildProvider buildProvider, System.CodeDom.CodeCompileUnit compileUnit) { }
        public System.IO.TextWriter CreateCodeFile(System.Web.Compilation.BuildProvider buildProvider) { throw null; }
        public System.IO.Stream CreateEmbeddedResource(System.Web.Compilation.BuildProvider buildProvider, string name) { throw null; }
        public void GenerateTypeFactory(string typeName) { }
        public string GetTempFilePhysicalPath(string extension) { throw null; }
    }
    public sealed partial class BuildDependencySet
    {
        internal BuildDependencySet() { }
        public string HashCode { get { throw null; } }
        public System.Collections.IEnumerable VirtualPaths { get { throw null; } }
    }
    public sealed partial class BuildManager
    {
        internal BuildManager() { }
        public static System.Nullable<bool> BatchCompilationEnabled { get { throw null; } set { } }
        public static System.Collections.IList CodeAssemblies { get { throw null; } }
        public static bool IsPrecompiledApp { get { throw null; } }
        public static bool IsUpdatablePrecompiledApp { get { throw null; } }
        public static System.Runtime.Versioning.FrameworkName TargetFramework { get { throw null; } }
        public static void AddCompilationDependency(string dependency) { }
        public static void AddReferencedAssembly(System.Reflection.Assembly assembly) { }
        public static System.IO.Stream CreateCachedFile(string fileName) { throw null; }
        public static object CreateInstanceFromVirtualPath(string virtualPath, System.Type requiredBaseType) { throw null; }
        public static System.Web.Compilation.BuildDependencySet GetCachedBuildDependencySet(System.Web.HttpContext context, string virtualPath) { throw null; }
        public static System.Web.Compilation.BuildDependencySet GetCachedBuildDependencySet(System.Web.HttpContext context, string virtualPath, bool ensureIsUpToDate) { throw null; }
        public static System.Reflection.Assembly GetCompiledAssembly(string virtualPath) { throw null; }
        public static string GetCompiledCustomString(string virtualPath) { throw null; }
        public static System.Type GetCompiledType(string virtualPath) { throw null; }
        public static System.Type GetGlobalAsaxType() { throw null; }
        public static System.Web.Util.IWebObjectFactory GetObjectFactory(string virtualPath, bool throwIfNotFound) { throw null; }
        public static System.Collections.ICollection GetReferencedAssemblies() { throw null; }
        public static System.Type GetType(string typeName, bool throwOnError) { throw null; }
        public static System.Type GetType(string typeName, bool throwOnError, bool ignoreCase) { throw null; }
        public static System.Collections.ICollection GetVirtualPathDependencies(string virtualPath) { throw null; }
        public static System.IO.Stream ReadCachedFile(string fileName) { throw null; }
    }
    [System.Security.Permissions.PermissionSetAttribute(System.Security.Permissions.SecurityAction.InheritanceDemand, Unrestricted=true)]
    [System.Security.Permissions.PermissionSetAttribute(System.Security.Permissions.SecurityAction.LinkDemand, Unrestricted=true)]
    public partial class BuildManagerHostUnloadEventArgs : System.EventArgs
    {
        public BuildManagerHostUnloadEventArgs(System.Web.ApplicationShutdownReason reason) { }
        public System.Web.ApplicationShutdownReason Reason { get { throw null; } }
    }
    public delegate void BuildManagerHostUnloadEventHandler(object sender, System.Web.Compilation.BuildManagerHostUnloadEventArgs e);
    public abstract partial class BuildProvider
    {
        protected BuildProvider() { }
        public virtual System.Web.Compilation.CompilerType CodeCompilerType { get { throw null; } }
        protected System.Collections.ICollection ReferencedAssemblies { get { throw null; } }
        protected internal string VirtualPath { get { throw null; } }
        public virtual System.Collections.ICollection VirtualPathDependencies { get { throw null; } }
        public virtual void GenerateCode(System.Web.Compilation.AssemblyBuilder assemblyBuilder) { }
        protected internal virtual System.CodeDom.CodeCompileUnit GetCodeCompileUnit(out System.Collections.IDictionary linePragmasTable) { throw null; }
        public virtual string GetCustomString(System.CodeDom.Compiler.CompilerResults results) { throw null; }
        protected System.Web.Compilation.CompilerType GetDefaultCompilerType() { throw null; }
        protected System.Web.Compilation.CompilerType GetDefaultCompilerTypeForLanguage(string language) { throw null; }
        public virtual System.Type GetGeneratedType(System.CodeDom.Compiler.CompilerResults results) { throw null; }
        public virtual System.Web.Compilation.BuildProviderResultFlags GetResultFlags(System.CodeDom.Compiler.CompilerResults results) { throw null; }
        protected System.IO.TextReader OpenReader() { throw null; }
        protected System.IO.TextReader OpenReader(string virtualPath) { throw null; }
        protected System.IO.Stream OpenStream() { throw null; }
        protected System.IO.Stream OpenStream(string virtualPath) { throw null; }
        public virtual void ProcessCompileErrors(System.CodeDom.Compiler.CompilerResults results) { }
        public static void RegisterBuildProvider(string extension, System.Type providerType) { }
    }
    [System.FlagsAttribute]
    public enum BuildProviderAppliesTo
    {
        All = 7,
        Code = 2,
        Resources = 4,
        Web = 1,
    }
    [System.AttributeUsageAttribute(System.AttributeTargets.Class, AllowMultiple=false)]
    public sealed partial class BuildProviderAppliesToAttribute : System.Attribute
    {
        public BuildProviderAppliesToAttribute(System.Web.Compilation.BuildProviderAppliesTo appliesTo) { }
        public System.Web.Compilation.BuildProviderAppliesTo AppliesTo { get { throw null; } }
    }
    [System.FlagsAttribute]
    public enum BuildProviderResultFlags
    {
        Default = 0,
        ShutdownAppDomainOnChange = 1,
    }
    [System.Security.Permissions.PermissionSetAttribute(System.Security.Permissions.SecurityAction.InheritanceDemand, Unrestricted=true)]
    [System.Security.Permissions.PermissionSetAttribute(System.Security.Permissions.SecurityAction.LinkDemand, Unrestricted=true)]
    public sealed partial class ClientBuildManager : System.MarshalByRefObject, System.IDisposable
    {
        public ClientBuildManager(string appVirtualDir, string appPhysicalSourceDir) { }
        public ClientBuildManager(string appVirtualDir, string appPhysicalSourceDir, string appPhysicalTargetDir) { }
        public ClientBuildManager(string appVirtualDir, string appPhysicalSourceDir, string appPhysicalTargetDir, System.Web.Compilation.ClientBuildManagerParameter parameter) { }
        public ClientBuildManager(string appVirtualDir, string appPhysicalSourceDir, string appPhysicalTargetDir, System.Web.Compilation.ClientBuildManagerParameter parameter, System.ComponentModel.TypeDescriptionProvider typeDescriptionProvider) { }
        public string CodeGenDir { get { throw null; } }
        public bool IsHostCreated { get { throw null; } }
        public event System.Web.Compilation.BuildManagerHostUnloadEventHandler AppDomainShutdown { add { } remove { } }
        public event System.EventHandler AppDomainStarted { add { } remove { } }
        public event System.Web.Compilation.BuildManagerHostUnloadEventHandler AppDomainUnloaded { add { } remove { } }
        public void CompileApplicationDependencies() { }
        public void CompileFile(string virtualPath) { }
        public void CompileFile(string virtualPath, System.Web.Compilation.ClientBuildManagerCallback callback) { }
        public System.Web.Hosting.IRegisteredObject CreateObject(System.Type type, bool failIfExists) { throw null; }
        public string GenerateCode(string virtualPath, string virtualFileString, out System.Collections.IDictionary linePragmasTable) { throw null; }
        public System.CodeDom.CodeCompileUnit GenerateCodeCompileUnit(string virtualPath, string virtualFileString, out System.Type codeDomProviderType, out System.CodeDom.Compiler.CompilerParameters compilerParameters, out System.Collections.IDictionary linePragmasTable) { throw null; }
        public System.CodeDom.CodeCompileUnit GenerateCodeCompileUnit(string virtualPath, out System.Type codeDomProviderType, out System.CodeDom.Compiler.CompilerParameters compilerParameters, out System.Collections.IDictionary linePragmasTable) { throw null; }
        public string[] GetAppDomainShutdownDirectories() { throw null; }
        public System.Collections.IDictionary GetBrowserDefinitions() { throw null; }
        public void GetCodeDirectoryInformation(string virtualCodeDir, out System.Type codeDomProviderType, out System.CodeDom.Compiler.CompilerParameters compilerParameters, out string generatedFilesDir) { throw null; }
        public System.Type GetCompiledType(string virtualPath) { throw null; }
        public void GetCompilerParameters(string virtualPath, out System.Type codeDomProviderType, out System.CodeDom.Compiler.CompilerParameters compilerParameters) { throw null; }
        public string GetGeneratedFileVirtualPath(string filePath) { throw null; }
        public string GetGeneratedSourceFile(string virtualPath) { throw null; }
        public string[] GetTopLevelAssemblyReferences(string virtualPath) { throw null; }
        public string[] GetVirtualCodeDirectories() { throw null; }
        public override object InitializeLifetimeService() { throw null; }
        public bool IsCodeAssembly(string assemblyName) { throw null; }
        public void PrecompileApplication() { }
        public void PrecompileApplication(System.Web.Compilation.ClientBuildManagerCallback callback) { }
        public void PrecompileApplication(System.Web.Compilation.ClientBuildManagerCallback callback, bool forceCleanBuild) { }
        void System.IDisposable.Dispose() { }
        public bool Unload() { throw null; }
    }
    [System.Security.Permissions.PermissionSetAttribute(System.Security.Permissions.SecurityAction.InheritanceDemand, Unrestricted=true)]
    [System.Security.Permissions.PermissionSetAttribute(System.Security.Permissions.SecurityAction.LinkDemand, Unrestricted=true)]
    public partial class ClientBuildManagerCallback : System.MarshalByRefObject
    {
        public ClientBuildManagerCallback() { }
        public override object InitializeLifetimeService() { throw null; }
        public virtual void ReportCompilerError(System.CodeDom.Compiler.CompilerError error) { }
        public virtual void ReportParseError(System.Web.ParserError error) { }
        public virtual void ReportProgress(string message) { }
    }
    [System.SerializableAttribute]
    public partial class ClientBuildManagerParameter
    {
        public ClientBuildManagerParameter() { }
        public System.Collections.Generic.List<string> ExcludedVirtualPaths { get { throw null; } }
        public System.Web.Compilation.PrecompilationFlags PrecompilationFlags { get { throw null; } set { } }
        public string StrongNameKeyContainer { get { throw null; } set { } }
        public string StrongNameKeyFile { get { throw null; } set { } }
    }
    public sealed partial class CompilerType
    {
        internal CompilerType() { }
        public System.Type CodeDomProviderType { get { throw null; } }
        public System.CodeDom.Compiler.CompilerParameters CompilerParameters { get { throw null; } }
        public override bool Equals(object o) { throw null; }
        public override int GetHashCode() { throw null; }
    }
    [System.Web.Compilation.ExpressionEditorAttribute("System.Web.UI.Design.ConnectionStringsExpressionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.Web.Compilation.ExpressionPrefixAttribute("ConnectionStrings")]
    public partial class ConnectionStringsExpressionBuilder : System.Web.Compilation.ExpressionBuilder
    {
        public ConnectionStringsExpressionBuilder() { }
        public override bool SupportsEvaluate { get { throw null; } }
        public override object EvaluateExpression(object target, System.Web.UI.BoundPropertyEntry entry, object parsedData, System.Web.Compilation.ExpressionBuilderContext context) { throw null; }
        public override System.CodeDom.CodeExpression GetCodeExpression(System.Web.UI.BoundPropertyEntry entry, object parsedData, System.Web.Compilation.ExpressionBuilderContext context) { throw null; }
        public static string GetConnectionString(string connectionStringName) { throw null; }
        public static string GetConnectionStringProviderName(string connectionStringName) { throw null; }
        public override object ParseExpression(string expression, System.Type propertyType, System.Web.Compilation.ExpressionBuilderContext context) { throw null; }
    }
    public abstract partial class ControlBuilderInterceptor
    {
        protected ControlBuilderInterceptor() { }
        public virtual void OnProcessGeneratedCode(System.Web.UI.ControlBuilder controlBuilder, System.CodeDom.CodeCompileUnit codeCompileUnit, System.CodeDom.CodeTypeDeclaration baseType, System.CodeDom.CodeTypeDeclaration derivedType, System.CodeDom.CodeMemberMethod buildMethod, System.CodeDom.CodeMemberMethod dataBindingMethod, System.Collections.IDictionary additionalState) { }
        public virtual void PreControlBuilderInit(System.Web.UI.ControlBuilder controlBuilder, System.Web.UI.TemplateParser parser, System.Web.UI.ControlBuilder parentBuilder, System.Type type, string tagName, string id, System.Collections.IDictionary attributes, System.Collections.IDictionary additionalState) { }
    }
    [System.AttributeUsageAttribute(System.AttributeTargets.Class)]
    public sealed partial class DesignTimeResourceProviderFactoryAttribute : System.Attribute
    {
        public DesignTimeResourceProviderFactoryAttribute(string factoryTypeName) { }
        public DesignTimeResourceProviderFactoryAttribute(System.Type factoryType) { }
        public string FactoryTypeName { get { throw null; } }
        public override bool IsDefaultAttribute() { throw null; }
    }
    public abstract partial class ExpressionBuilder
    {
        protected ExpressionBuilder() { }
        public virtual bool SupportsEvaluate { get { throw null; } }
        public virtual object EvaluateExpression(object target, System.Web.UI.BoundPropertyEntry entry, object parsedData, System.Web.Compilation.ExpressionBuilderContext context) { throw null; }
        public abstract System.CodeDom.CodeExpression GetCodeExpression(System.Web.UI.BoundPropertyEntry entry, object parsedData, System.Web.Compilation.ExpressionBuilderContext context);
        public virtual object ParseExpression(string expression, System.Type propertyType, System.Web.Compilation.ExpressionBuilderContext context) { throw null; }
    }
    public sealed partial class ExpressionBuilderContext
    {
        public ExpressionBuilderContext(string virtualPath) { }
        public ExpressionBuilderContext(System.Web.UI.TemplateControl templateControl) { }
        public System.Web.UI.TemplateControl TemplateControl { get { throw null; } }
        public string VirtualPath { get { throw null; } }
    }
    [System.AttributeUsageAttribute(System.AttributeTargets.Class, AllowMultiple=false)]
    public sealed partial class ExpressionEditorAttribute : System.Attribute
    {
        public ExpressionEditorAttribute(string typeName) { }
        public ExpressionEditorAttribute(System.Type type) { }
        public string EditorTypeName { get { throw null; } }
        public override bool Equals(object obj) { throw null; }
        public override int GetHashCode() { throw null; }
    }
    [System.AttributeUsageAttribute(System.AttributeTargets.Class, AllowMultiple=false)]
    public sealed partial class ExpressionPrefixAttribute : System.Attribute
    {
        public ExpressionPrefixAttribute(string expressionPrefix) { }
        public string ExpressionPrefix { get { throw null; } }
    }
    [System.FlagsAttribute]
    public enum FolderLevelBuildProviderAppliesTo
    {
        Code = 1,
        GlobalResources = 8,
        LocalResources = 4,
        None = 0,
        WebReferences = 2,
    }
    [System.AttributeUsageAttribute(System.AttributeTargets.Class, AllowMultiple=false)]
    public sealed partial class FolderLevelBuildProviderAppliesToAttribute : System.Attribute
    {
        public FolderLevelBuildProviderAppliesToAttribute(System.Web.Compilation.FolderLevelBuildProviderAppliesTo appliesTo) { }
        public System.Web.Compilation.FolderLevelBuildProviderAppliesTo AppliesTo { get { throw null; } }
    }
    [System.Web.AspNetHostingPermissionAttribute(System.Security.Permissions.SecurityAction.InheritanceDemand, Level=System.Web.AspNetHostingPermissionLevel.High)]
    [System.Web.AspNetHostingPermissionAttribute(System.Security.Permissions.SecurityAction.LinkDemand, Level=System.Web.AspNetHostingPermissionLevel.High)]
    public partial interface IAssemblyPostProcessor : System.IDisposable
    {
        void PostProcessAssembly(string path);
    }
    public partial interface IImplicitResourceProvider
    {
        System.Collections.ICollection GetImplicitResourceKeys(string keyPrefix);
        object GetObject(System.Web.Compilation.ImplicitResourceKey key, System.Globalization.CultureInfo culture);
    }
    public sealed partial class ImplicitResourceKey
    {
        public ImplicitResourceKey() { }
        public ImplicitResourceKey(string filter, string keyPrefix, string property) { }
        public string Filter { get { throw null; } set { } }
        public string KeyPrefix { get { throw null; } set { } }
        public string Property { get { throw null; } set { } }
    }
    public partial interface IResourceProvider
    {
        System.Resources.IResourceReader ResourceReader { get; }
        object GetObject(string resourceKey, System.Globalization.CultureInfo culture);
    }
    [System.SerializableAttribute]
    public sealed partial class LinePragmaCodeInfo
    {
        public LinePragmaCodeInfo() { }
        public LinePragmaCodeInfo(int startLine, int startColumn, int startGeneratedColumn, int codeLength, bool isCodeNugget) { }
        public int CodeLength { get { throw null; } }
        public bool IsCodeNugget { get { throw null; } }
        public int StartColumn { get { throw null; } }
        public int StartGeneratedColumn { get { throw null; } }
        public int StartLine { get { throw null; } }
    }
    [System.FlagsAttribute]
    public enum PrecompilationFlags
    {
        AllowPartiallyTrustedCallers = 32,
        Clean = 8,
        CodeAnalysis = 16,
        Default = 0,
        DelaySign = 64,
        FixedNames = 128,
        ForceDebug = 4,
        IgnoreBadImageFormatException = 256,
        OverwriteTarget = 2,
        Updatable = 1,
    }
    [System.Web.Compilation.ExpressionEditorAttribute("System.Web.UI.Design.ResourceExpressionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.Web.Compilation.ExpressionPrefixAttribute("Resources")]
    public partial class ResourceExpressionBuilder : System.Web.Compilation.ExpressionBuilder
    {
        public ResourceExpressionBuilder() { }
        public override bool SupportsEvaluate { get { throw null; } }
        public override object EvaluateExpression(object target, System.Web.UI.BoundPropertyEntry entry, object parsedData, System.Web.Compilation.ExpressionBuilderContext context) { throw null; }
        public override System.CodeDom.CodeExpression GetCodeExpression(System.Web.UI.BoundPropertyEntry entry, object parsedData, System.Web.Compilation.ExpressionBuilderContext context) { throw null; }
        public static System.Web.Compilation.ResourceExpressionFields ParseExpression(string expression) { throw null; }
        public override object ParseExpression(string expression, System.Type propertyType, System.Web.Compilation.ExpressionBuilderContext context) { throw null; }
    }
    public sealed partial class ResourceExpressionFields
    {
        internal ResourceExpressionFields() { }
        public string ClassKey { get { throw null; } }
        public string ResourceKey { get { throw null; } }
    }
    public abstract partial class ResourceProviderFactory
    {
        protected ResourceProviderFactory() { }
        public abstract System.Web.Compilation.IResourceProvider CreateGlobalResourceProvider(string classKey);
        public abstract System.Web.Compilation.IResourceProvider CreateLocalResourceProvider(string virtualPath);
    }
    [System.Web.Compilation.ExpressionEditorAttribute("System.Web.UI.Design.RouteUrlExpressionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.Web.Compilation.ExpressionPrefixAttribute("Routes")]
    public partial class RouteUrlExpressionBuilder : System.Web.Compilation.ExpressionBuilder
    {
        public RouteUrlExpressionBuilder() { }
        public override bool SupportsEvaluate { get { throw null; } }
        public override object EvaluateExpression(object target, System.Web.UI.BoundPropertyEntry entry, object parsedData, System.Web.Compilation.ExpressionBuilderContext context) { throw null; }
        public override System.CodeDom.CodeExpression GetCodeExpression(System.Web.UI.BoundPropertyEntry entry, object parsedData, System.Web.Compilation.ExpressionBuilderContext context) { throw null; }
        public static string GetRouteUrl(System.Web.UI.Control control, string expression) { throw null; }
        public static bool TryParseRouteExpression(string expression, System.Web.Routing.RouteValueDictionary routeValues, out string routeName) { throw null; }
    }
    [System.Web.Compilation.ExpressionEditorAttribute("System.Web.UI.Design.RouteValueExpressionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.Web.Compilation.ExpressionPrefixAttribute("Routes")]
    public partial class RouteValueExpressionBuilder : System.Web.Compilation.ExpressionBuilder
    {
        public RouteValueExpressionBuilder() { }
        public override bool SupportsEvaluate { get { throw null; } }
        public override object EvaluateExpression(object target, System.Web.UI.BoundPropertyEntry entry, object parsedData, System.Web.Compilation.ExpressionBuilderContext context) { throw null; }
        public override System.CodeDom.CodeExpression GetCodeExpression(System.Web.UI.BoundPropertyEntry entry, object parsedData, System.Web.Compilation.ExpressionBuilderContext context) { throw null; }
        public static object GetRouteValue(System.Web.UI.Page page, string key, System.Type controlType, string propertyName) { throw null; }
    }
}
namespace System.Web.Configuration
{
    [System.SerializableAttribute]
    public partial class AdapterDictionary : System.Collections.Specialized.OrderedDictionary
    {
        public AdapterDictionary() { }
        public string this[string key] { get { throw null; } set { } }
    }
    public sealed partial class AnonymousIdentificationSection : System.Configuration.ConfigurationSection
    {
        public AnonymousIdentificationSection() { }
        [System.Configuration.ConfigurationPropertyAttribute("cookieless", DefaultValue=System.Web.HttpCookieMode.UseCookies)]
        public System.Web.HttpCookieMode Cookieless { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("cookieName", DefaultValue=".ASPXANONYMOUS")]
        [System.Configuration.StringValidatorAttribute(MinLength=1)]
        public string CookieName { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("cookiePath", DefaultValue="/")]
        [System.Configuration.StringValidatorAttribute(MinLength=1)]
        public string CookiePath { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("cookieProtection", DefaultValue=System.Web.Security.CookieProtection.Validation)]
        public System.Web.Security.CookieProtection CookieProtection { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("cookieRequireSSL", DefaultValue=false)]
        public bool CookieRequireSSL { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("cookieSlidingExpiration", DefaultValue=true)]
        public bool CookieSlidingExpiration { get { throw null; } set { } }
        [System.ComponentModel.TypeConverterAttribute(typeof(System.Configuration.TimeSpanMinutesOrInfiniteConverter))]
        [System.Configuration.ConfigurationPropertyAttribute("cookieTimeout", DefaultValue="69.10:40:00")]
        [System.Configuration.TimeSpanValidatorAttribute(MinValueString="00:00:00", MaxValueString="10675199.02:48:05.4775807")]
        public System.TimeSpan CookieTimeout { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("domain")]
        public string Domain { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("enabled", DefaultValue=false)]
        public bool Enabled { get { throw null; } set { } }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
    }
    [System.Configuration.ConfigurationCollectionAttribute(typeof(System.Web.Configuration.AssemblyInfo))]
    public sealed partial class AssemblyCollection : System.Configuration.ConfigurationElementCollection
    {
        public AssemblyCollection() { }
        public System.Web.Configuration.AssemblyInfo this[int index] { get { throw null; } set { } }
        public new System.Web.Configuration.AssemblyInfo this[string assemblyName] { get { throw null; } }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
        public void Add(System.Web.Configuration.AssemblyInfo assemblyInformation) { }
        public void Clear() { }
        protected override System.Configuration.ConfigurationElement CreateNewElement() { throw null; }
        protected override object GetElementKey(System.Configuration.ConfigurationElement element) { throw null; }
        public void Remove(string key) { }
        public void RemoveAt(int index) { }
    }
    public sealed partial class AssemblyInfo : System.Configuration.ConfigurationElement
    {
        public AssemblyInfo(string assemblyName) { }
        [System.Configuration.ConfigurationPropertyAttribute("assembly", IsRequired=true, IsKey=true, DefaultValue="")]
        [System.Configuration.StringValidatorAttribute(MinLength=1)]
        public string Assembly { get { throw null; } set { } }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
    }
    [System.FlagsAttribute]
    public enum AsyncPreloadModeFlags
    {
        All = 7,
        AllFormTypes = 3,
        Form = 1,
        FormMultiPart = 2,
        None = 0,
        NonForm = 4,
    }
    public enum AuthenticationMode
    {
        Forms = 3,
        None = 0,
        [System.ObsoleteAttribute("This field is obsolete. The Passport authentication product is no longer supported and has been superseded by Live ID.")]
        Passport = 2,
        Windows = 1,
    }
    public sealed partial class AuthenticationSection : System.Configuration.ConfigurationSection
    {
        public AuthenticationSection() { }
        [System.Configuration.ConfigurationPropertyAttribute("forms")]
        public System.Web.Configuration.FormsAuthenticationConfiguration Forms { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("mode", DefaultValue=System.Web.Configuration.AuthenticationMode.Windows)]
        public System.Web.Configuration.AuthenticationMode Mode { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("passport")]
        [System.ObsoleteAttribute("This property is obsolete. The Passport authentication product is no longer supported and has been superseded by Live ID.")]
        public System.Web.Configuration.PassportAuthentication Passport { get { throw null; } }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
        protected override void Reset(System.Configuration.ConfigurationElement parentElement) { }
    }
    public sealed partial class AuthorizationRule : System.Configuration.ConfigurationElement
    {
        public AuthorizationRule(System.Web.Configuration.AuthorizationRuleAction action) { }
        public System.Web.Configuration.AuthorizationRuleAction Action { get { throw null; } set { } }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
        [System.ComponentModel.TypeConverterAttribute(typeof(System.Configuration.CommaDelimitedStringCollectionConverter))]
        [System.Configuration.ConfigurationPropertyAttribute("roles")]
        public System.Collections.Specialized.StringCollection Roles { get { throw null; } }
        [System.ComponentModel.TypeConverterAttribute(typeof(System.Configuration.CommaDelimitedStringCollectionConverter))]
        [System.Configuration.ConfigurationPropertyAttribute("users")]
        public System.Collections.Specialized.StringCollection Users { get { throw null; } }
        [System.ComponentModel.TypeConverterAttribute(typeof(System.Configuration.CommaDelimitedStringCollectionConverter))]
        [System.Configuration.ConfigurationPropertyAttribute("verbs")]
        public System.Collections.Specialized.StringCollection Verbs { get { throw null; } }
        public override bool Equals(object obj) { throw null; }
        public override int GetHashCode() { throw null; }
        protected override bool IsModified() { throw null; }
        protected override void PostDeserialize() { }
        protected override void PreSerialize(System.Xml.XmlWriter writer) { }
        protected override void Reset(System.Configuration.ConfigurationElement parentElement) { }
        protected override void ResetModified() { }
        protected override bool SerializeElement(System.Xml.XmlWriter writer, bool serializeCollectionKey) { throw null; }
        protected override void SetReadOnly() { }
        protected override void Unmerge(System.Configuration.ConfigurationElement sourceElement, System.Configuration.ConfigurationElement parentElement, System.Configuration.ConfigurationSaveMode saveMode) { }
    }
    public enum AuthorizationRuleAction
    {
        Allow = 1,
        Deny = 0,
    }
    [System.Configuration.ConfigurationCollectionAttribute(typeof(System.Web.Configuration.AuthorizationRule), AddItemName="allow,deny", CollectionType=System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate)]
    public sealed partial class AuthorizationRuleCollection : System.Configuration.ConfigurationElementCollection
    {
        public AuthorizationRuleCollection() { }
        public override System.Configuration.ConfigurationElementCollectionType CollectionType { get { throw null; } }
        protected override string ElementName { get { throw null; } }
        public System.Web.Configuration.AuthorizationRule this[int index] { get { throw null; } set { } }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
        public void Add(System.Web.Configuration.AuthorizationRule rule) { }
        public void Clear() { }
        protected override System.Configuration.ConfigurationElement CreateNewElement() { throw null; }
        protected override System.Configuration.ConfigurationElement CreateNewElement(string elementName) { throw null; }
        public System.Web.Configuration.AuthorizationRule Get(int index) { throw null; }
        protected override object GetElementKey(System.Configuration.ConfigurationElement element) { throw null; }
        public int IndexOf(System.Web.Configuration.AuthorizationRule rule) { throw null; }
        protected override bool IsElementName(string elementname) { throw null; }
        public void Remove(System.Web.Configuration.AuthorizationRule rule) { }
        public void RemoveAt(int index) { }
        public void Set(int index, System.Web.Configuration.AuthorizationRule rule) { }
    }
    public sealed partial class AuthorizationSection : System.Configuration.ConfigurationSection
    {
        public AuthorizationSection() { }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("", IsDefaultCollection=true)]
        public System.Web.Configuration.AuthorizationRuleCollection Rules { get { throw null; } }
        protected override void PostDeserialize() { }
    }
    [System.Security.Permissions.PermissionSetAttribute(System.Security.Permissions.SecurityAction.InheritanceDemand, Unrestricted=true)]
    [System.Security.Permissions.PermissionSetAttribute(System.Security.Permissions.SecurityAction.LinkDemand, Unrestricted=true)]
    public partial class BrowserCapabilitiesCodeGenerator
    {
        public BrowserCapabilitiesCodeGenerator() { }
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, Unrestricted=true)]
        public virtual void Create() { }
        protected void ProcessBrowserFiles(bool useVirtualPath, string virtualDir) { }
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, Unrestricted=true)]
        public bool Uninstall() { throw null; }
    }
    public partial class BrowserCapabilitiesFactory : System.Web.Configuration.BrowserCapabilitiesFactoryBase
    {
        public BrowserCapabilitiesFactory() { }
        protected virtual void BlackberryProcessBrowsers(bool ignoreApplicationBrowsers, System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void BlackberryProcessGateways(System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void ChromeProcessBrowsers(bool ignoreApplicationBrowsers, System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void ChromeProcessGateways(System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        public override void ConfigureBrowserCapabilities(System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void CpuProcessBrowsers(bool ignoreApplicationBrowsers, System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void CpuProcessGateways(System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void CrawlerProcessBrowsers(bool ignoreApplicationBrowsers, System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void CrawlerProcessGateways(System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void DefaultDefaultProcessBrowsers(bool ignoreApplicationBrowsers, System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void DefaultProcessBrowsers(bool ignoreApplicationBrowsers, System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void DefaultProcessGateways(System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void DefaultWmlProcessBrowsers(bool ignoreApplicationBrowsers, System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void DefaultXhtmlmpProcessBrowsers(bool ignoreApplicationBrowsers, System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void Firefox35ProcessBrowsers(bool ignoreApplicationBrowsers, System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void Firefox35ProcessGateways(System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void Firefox3plusProcessBrowsers(bool ignoreApplicationBrowsers, System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void Firefox3plusProcessGateways(System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void Firefox3ProcessBrowsers(bool ignoreApplicationBrowsers, System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void Firefox3ProcessGateways(System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void FirefoxProcessBrowsers(bool ignoreApplicationBrowsers, System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void FirefoxProcessGateways(System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void GenericdownlevelProcessBrowsers(bool ignoreApplicationBrowsers, System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void GenericdownlevelProcessGateways(System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void Ie10plusProcessBrowsers(bool ignoreApplicationBrowsers, System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void Ie10plusProcessGateways(System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void Ie6plusProcessBrowsers(bool ignoreApplicationBrowsers, System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void Ie6plusProcessGateways(System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void Ie6to9ProcessBrowsers(bool ignoreApplicationBrowsers, System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void Ie6to9ProcessGateways(System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void Ie7ProcessBrowsers(bool ignoreApplicationBrowsers, System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void Ie7ProcessGateways(System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void Ie8ProcessBrowsers(bool ignoreApplicationBrowsers, System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void Ie8ProcessGateways(System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void Ie9ProcessBrowsers(bool ignoreApplicationBrowsers, System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void Ie9ProcessGateways(System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void IebetaProcessBrowsers(bool ignoreApplicationBrowsers, System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void IebetaProcessGateways(System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void IemobileProcessBrowsers(bool ignoreApplicationBrowsers, System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void IemobileProcessGateways(System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void IeProcessBrowsers(bool ignoreApplicationBrowsers, System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void IeProcessGateways(System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void InternetexplorerProcessBrowsers(bool ignoreApplicationBrowsers, System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void InternetexplorerProcessGateways(System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void IpadProcessBrowsers(bool ignoreApplicationBrowsers, System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void IpadProcessGateways(System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void IphoneProcessBrowsers(bool ignoreApplicationBrowsers, System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void IphoneProcessGateways(System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void IpodProcessBrowsers(bool ignoreApplicationBrowsers, System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void IpodProcessGateways(System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void MonoProcessBrowsers(bool ignoreApplicationBrowsers, System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void MonoProcessGateways(System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void MozillaProcessBrowsers(bool ignoreApplicationBrowsers, System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void MozillaProcessGateways(System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void Opera10ProcessBrowsers(bool ignoreApplicationBrowsers, System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void Opera10ProcessGateways(System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void Opera8plusProcessBrowsers(bool ignoreApplicationBrowsers, System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void Opera8plusProcessGateways(System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void Opera8to9ProcessBrowsers(bool ignoreApplicationBrowsers, System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void Opera8to9ProcessGateways(System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void OperaminiProcessBrowsers(bool ignoreApplicationBrowsers, System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void OperaminiProcessGateways(System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void OperamobileProcessBrowsers(bool ignoreApplicationBrowsers, System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void OperamobileProcessGateways(System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void OperaProcessBrowsers(bool ignoreApplicationBrowsers, System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void OperaProcessGateways(System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void OSProcessBrowsers(bool ignoreApplicationBrowsers, System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void OSProcessGateways(System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void PixelsProcessBrowsers(bool ignoreApplicationBrowsers, System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void PixelsProcessGateways(System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void Platformmac68kProcessBrowsers(bool ignoreApplicationBrowsers, System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void Platformmac68kProcessGateways(System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void PlatformmacppcProcessBrowsers(bool ignoreApplicationBrowsers, System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void PlatformmacppcProcessGateways(System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void PlatformProcessBrowsers(bool ignoreApplicationBrowsers, System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void PlatformProcessGateways(System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void PlatformunixProcessBrowsers(bool ignoreApplicationBrowsers, System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void PlatformunixProcessGateways(System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void PlatformwebtvProcessBrowsers(bool ignoreApplicationBrowsers, System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void PlatformwebtvProcessGateways(System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void Platformwin16ProcessBrowsers(bool ignoreApplicationBrowsers, System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void Platformwin16ProcessGateways(System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void Platformwin2000aProcessBrowsers(bool ignoreApplicationBrowsers, System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void Platformwin2000aProcessGateways(System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void Platformwin2000bProcessBrowsers(bool ignoreApplicationBrowsers, System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void Platformwin2000bProcessGateways(System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void Platformwin95ProcessBrowsers(bool ignoreApplicationBrowsers, System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void Platformwin95ProcessGateways(System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void Platformwin98ProcessBrowsers(bool ignoreApplicationBrowsers, System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void Platformwin98ProcessGateways(System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void PlatformwinceProcessBrowsers(bool ignoreApplicationBrowsers, System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void PlatformwinceProcessGateways(System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void PlatformwinntProcessBrowsers(bool ignoreApplicationBrowsers, System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void PlatformwinntProcessGateways(System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void PlatformwinxpProcessBrowsers(bool ignoreApplicationBrowsers, System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void PlatformwinxpProcessGateways(System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected override void PopulateBrowserElements(System.Collections.IDictionary dictionary) { }
        protected override void PopulateMatchedHeaders(System.Collections.IDictionary dictionary) { }
        protected virtual void Safari3plusProcessBrowsers(bool ignoreApplicationBrowsers, System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void Safari3plusProcessGateways(System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void Safari3to4ProcessBrowsers(bool ignoreApplicationBrowsers, System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void Safari3to4ProcessGateways(System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void Safari4ProcessBrowsers(bool ignoreApplicationBrowsers, System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void Safari4ProcessGateways(System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void SafariProcessBrowsers(bool ignoreApplicationBrowsers, System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void SafariProcessGateways(System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void UcbrowserProcessBrowsers(bool ignoreApplicationBrowsers, System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void UcbrowserProcessGateways(System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void VoiceProcessBrowsers(bool ignoreApplicationBrowsers, System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void VoiceProcessGateways(System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void WebkitmobileProcessBrowsers(bool ignoreApplicationBrowsers, System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void WebkitmobileProcessGateways(System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void WebkitProcessBrowsers(bool ignoreApplicationBrowsers, System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void WebkitProcessGateways(System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void Win16ProcessBrowsers(bool ignoreApplicationBrowsers, System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void Win16ProcessGateways(System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void Win32ProcessBrowsers(bool ignoreApplicationBrowsers, System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void Win32ProcessGateways(System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void WindowsphoneProcessBrowsers(bool ignoreApplicationBrowsers, System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void WindowsphoneProcessGateways(System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void WinProcessBrowsers(bool ignoreApplicationBrowsers, System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected virtual void WinProcessGateways(System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
    }
    public partial class BrowserCapabilitiesFactoryBase
    {
        public BrowserCapabilitiesFactoryBase() { }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        protected System.Collections.IDictionary BrowserElements { get { throw null; } }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        protected System.Collections.IDictionary MatchedHeaders { get { throw null; } }
        public virtual void ConfigureBrowserCapabilities(System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        public virtual void ConfigureCustomCapabilities(System.Collections.Specialized.NameValueCollection headers, System.Web.HttpBrowserCapabilities browserCaps) { }
        protected bool IsBrowserUnknown(System.Web.Configuration.HttpCapabilitiesBase browserCaps) { throw null; }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        protected virtual void PopulateBrowserElements(System.Collections.IDictionary dictionary) { }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        protected virtual void PopulateMatchedHeaders(System.Collections.IDictionary dictionary) { }
    }
    [System.Configuration.ConfigurationCollectionAttribute(typeof(System.Web.Configuration.BufferModeSettings))]
    public sealed partial class BufferModesCollection : System.Configuration.ConfigurationElementCollection
    {
        public BufferModesCollection() { }
        public System.Web.Configuration.BufferModeSettings this[int index] { get { throw null; } set { } }
        public new System.Web.Configuration.BufferModeSettings this[string key] { get { throw null; } }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
        public void Add(System.Web.Configuration.BufferModeSettings bufferModeSettings) { }
        public void Clear() { }
        protected override System.Configuration.ConfigurationElement CreateNewElement() { throw null; }
        protected override object GetElementKey(System.Configuration.ConfigurationElement element) { throw null; }
        public void Remove(string s) { }
    }
    public sealed partial class BufferModeSettings : System.Configuration.ConfigurationElement
    {
        public BufferModeSettings(string name, int maxBufferSize, int maxFlushSize, int urgentFlushThreshold, System.TimeSpan regularFlushInterval, System.TimeSpan urgentFlushInterval, int maxBufferThreads) { }
        protected override System.Configuration.ConfigurationElementProperty ElementProperty { get { throw null; } }
        [System.ComponentModel.TypeConverterAttribute(typeof(System.Configuration.InfiniteIntConverter))]
        [System.Configuration.ConfigurationPropertyAttribute("maxBufferSize", IsRequired=true, DefaultValue=2147483647)]
        [System.Configuration.IntegerValidatorAttribute(MinValue=1)]
        public int MaxBufferSize { get { throw null; } set { } }
        [System.ComponentModel.TypeConverterAttribute(typeof(System.Configuration.InfiniteIntConverter))]
        [System.Configuration.ConfigurationPropertyAttribute("maxBufferThreads", DefaultValue=1)]
        [System.Configuration.IntegerValidatorAttribute(MinValue=1)]
        public int MaxBufferThreads { get { throw null; } set { } }
        [System.ComponentModel.TypeConverterAttribute(typeof(System.Configuration.InfiniteIntConverter))]
        [System.Configuration.ConfigurationPropertyAttribute("maxFlushSize", IsRequired=true, DefaultValue=2147483647)]
        [System.Configuration.IntegerValidatorAttribute(MinValue=1)]
        public int MaxFlushSize { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("name", IsRequired=true, IsKey=true, DefaultValue="")]
        [System.Configuration.StringValidatorAttribute(MinLength=1)]
        public string Name { get { throw null; } set { } }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
        [System.ComponentModel.TypeConverterAttribute(typeof(System.Configuration.InfiniteTimeSpanConverter))]
        [System.Configuration.ConfigurationPropertyAttribute("regularFlushInterval", IsRequired=true, DefaultValue="00:00:01")]
        [System.Configuration.TimeSpanValidatorAttribute(MinValueString="00:00:00", MaxValueString="10675199.02:48:05.4775807")]
        public System.TimeSpan RegularFlushInterval { get { throw null; } set { } }
        [System.ComponentModel.TypeConverterAttribute(typeof(System.Configuration.InfiniteTimeSpanConverter))]
        [System.Configuration.ConfigurationPropertyAttribute("urgentFlushInterval", IsRequired=true, DefaultValue="00:00:00")]
        public System.TimeSpan UrgentFlushInterval { get { throw null; } set { } }
        [System.ComponentModel.TypeConverterAttribute(typeof(System.Configuration.InfiniteIntConverter))]
        [System.Configuration.ConfigurationPropertyAttribute("urgentFlushThreshold", IsRequired=true, DefaultValue=2147483647)]
        [System.Configuration.IntegerValidatorAttribute(MinValue=1)]
        public int UrgentFlushThreshold { get { throw null; } set { } }
    }
    public sealed partial class BuildProvider : System.Configuration.ConfigurationElement
    {
        public BuildProvider(string extension, string type) { }
        [System.Configuration.ConfigurationPropertyAttribute("extension", IsRequired=true, IsKey=true, DefaultValue="")]
        [System.Configuration.StringValidatorAttribute(MinLength=1)]
        public string Extension { get { throw null; } set { } }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("type", IsRequired=true, DefaultValue="")]
        [System.Configuration.StringValidatorAttribute(MinLength=1)]
        public string Type { get { throw null; } set { } }
        public override bool Equals(object provider) { throw null; }
        public override int GetHashCode() { throw null; }
    }
    [System.Configuration.ConfigurationCollectionAttribute(typeof(System.Web.Configuration.BuildProvider))]
    public sealed partial class BuildProviderCollection : System.Configuration.ConfigurationElementCollection
    {
        public BuildProviderCollection() { }
        public System.Web.Configuration.BuildProvider this[int index] { get { throw null; } set { } }
        public new System.Web.Configuration.BuildProvider this[string name] { get { throw null; } }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
        public void Add(System.Web.Configuration.BuildProvider buildProvider) { }
        public void Clear() { }
        protected override System.Configuration.ConfigurationElement CreateNewElement() { throw null; }
        protected override object GetElementKey(System.Configuration.ConfigurationElement element) { throw null; }
        public void Remove(string name) { }
        public void RemoveAt(int index) { }
    }
    public sealed partial class CacheSection : System.Configuration.ConfigurationSection
    {
        public CacheSection() { }
        [System.Configuration.ConfigurationPropertyAttribute("defaultProvider", DefaultValue=null)]
        [System.Configuration.StringValidatorAttribute(MinLength=1)]
        public string DefaultProvider { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("disableExpiration", DefaultValue=false)]
        public bool DisableExpiration { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("disableMemoryCollection", DefaultValue=false)]
        public bool DisableMemoryCollection { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("percentagePhysicalMemoryUsedLimit", DefaultValue=0)]
        [System.Configuration.IntegerValidatorAttribute(MinValue=0, MaxValue=100)]
        public int PercentagePhysicalMemoryUsedLimit { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("privateBytesLimit", DefaultValue=(long)0)]
        [System.Configuration.LongValidatorAttribute(MinValue=(long)0)]
        public long PrivateBytesLimit { get { throw null; } set { } }
        [System.ComponentModel.TypeConverterAttribute(typeof(System.Configuration.InfiniteTimeSpanConverter))]
        [System.Configuration.ConfigurationPropertyAttribute("privateBytesPollTime", DefaultValue="00:02:00")]
        public System.TimeSpan PrivateBytesPollTime { get { throw null; } set { } }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("providers")]
        public System.Configuration.ProviderSettingsCollection Providers { get { throw null; } }
    }
    public sealed partial class ClientTarget : System.Configuration.ConfigurationElement
    {
        public ClientTarget(string alias, string userAgent) { }
        [System.Configuration.ConfigurationPropertyAttribute("alias", IsRequired=true, IsKey=true)]
        [System.Configuration.StringValidatorAttribute(MinLength=1)]
        public string Alias { get { throw null; } }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("userAgent", IsRequired=true)]
        [System.Configuration.StringValidatorAttribute(MinLength=1)]
        public string UserAgent { get { throw null; } }
    }
    [System.Configuration.ConfigurationCollectionAttribute(typeof(System.Web.Configuration.ClientTarget))]
    public sealed partial class ClientTargetCollection : System.Configuration.ConfigurationElementCollection
    {
        public ClientTargetCollection() { }
        public string[] AllKeys { get { throw null; } }
        public System.Web.Configuration.ClientTarget this[int index] { get { throw null; } set { } }
        public new System.Web.Configuration.ClientTarget this[string name] { get { throw null; } }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
        public void Add(System.Web.Configuration.ClientTarget clientTarget) { }
        public void Clear() { }
        protected override System.Configuration.ConfigurationElement CreateNewElement() { throw null; }
        protected override object GetElementKey(System.Configuration.ConfigurationElement element) { throw null; }
        public string GetKey(int index) { throw null; }
        public void Remove(string name) { }
        public void Remove(System.Web.Configuration.ClientTarget clientTarget) { }
        public void RemoveAt(int index) { }
    }
    public sealed partial class ClientTargetSection : System.Configuration.ConfigurationSection
    {
        public ClientTargetSection() { }
        [System.Configuration.ConfigurationPropertyAttribute("", IsRequired=true, IsDefaultCollection=true)]
        public System.Web.Configuration.ClientTargetCollection ClientTargets { get { throw null; } }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
    }
    [System.Configuration.ConfigurationCollectionAttribute(typeof(System.Web.Configuration.CodeSubDirectory), CollectionType=System.Configuration.ConfigurationElementCollectionType.BasicMap)]
    public sealed partial class CodeSubDirectoriesCollection : System.Configuration.ConfigurationElementCollection
    {
        public CodeSubDirectoriesCollection() { }
        public override System.Configuration.ConfigurationElementCollectionType CollectionType { get { throw null; } }
        protected override string ElementName { get { throw null; } }
        public System.Web.Configuration.CodeSubDirectory this[int index] { get { throw null; } set { } }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
        public void Add(System.Web.Configuration.CodeSubDirectory codeSubDirectory) { }
        public void Clear() { }
        protected override System.Configuration.ConfigurationElement CreateNewElement() { throw null; }
        protected override object GetElementKey(System.Configuration.ConfigurationElement element) { throw null; }
        public void Remove(string directoryName) { }
        public void RemoveAt(int index) { }
    }
    public sealed partial class CodeSubDirectory : System.Configuration.ConfigurationElement
    {
        public CodeSubDirectory(string directoryName) { }
        [System.ComponentModel.TypeConverterAttribute(typeof(System.Configuration.WhiteSpaceTrimStringConverter))]
        [System.Configuration.ConfigurationPropertyAttribute("directoryName", IsRequired=true, IsKey=true, DefaultValue="")]
        public string DirectoryName { get { throw null; } set { } }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
    }
    public sealed partial class CompilationSection : System.Configuration.ConfigurationSection
    {
        public CompilationSection() { }
        [System.Configuration.ConfigurationPropertyAttribute("assemblies")]
        public System.Web.Configuration.AssemblyCollection Assemblies { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("assemblyPostProcessorType", DefaultValue="")]
        public string AssemblyPostProcessorType { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("batch", DefaultValue=true)]
        public bool Batch { get { throw null; } set { } }
        [System.ComponentModel.TypeConverterAttribute(typeof(System.Configuration.TimeSpanSecondsOrInfiniteConverter))]
        [System.Configuration.ConfigurationPropertyAttribute("batchTimeout", DefaultValue="00:15:00")]
        [System.Configuration.TimeSpanValidatorAttribute(MinValueString="00:00:00", MaxValueString="10675199.02:48:05.4775807")]
        public System.TimeSpan BatchTimeout { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("buildProviders")]
        public System.Web.Configuration.BuildProviderCollection BuildProviders { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("codeSubDirectories")]
        public System.Web.Configuration.CodeSubDirectoriesCollection CodeSubDirectories { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("compilers")]
        public System.Web.Configuration.CompilerCollection Compilers { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("controlBuilderInterceptorType", DefaultValue="")]
        public string ControlBuilderInterceptorType { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("debug", DefaultValue=false)]
        public bool Debug { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("defaultLanguage", DefaultValue="vb")]
        public string DefaultLanguage { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("disableObsoleteWarnings", DefaultValue=true)]
        public bool DisableObsoleteWarnings { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("enablePrefetchOptimization", DefaultValue=false)]
        public bool EnablePrefetchOptimization { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("explicit", DefaultValue=true)]
        public bool Explicit { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("expressionBuilders")]
        public System.Web.Configuration.ExpressionBuilderCollection ExpressionBuilders { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("folderLevelBuildProviders")]
        public System.Web.Configuration.FolderLevelBuildProviderCollection FolderLevelBuildProviders { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("maxBatchGeneratedFileSize", DefaultValue=1000)]
        public int MaxBatchGeneratedFileSize { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("maxBatchSize", DefaultValue=1000)]
        public int MaxBatchSize { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("maxConcurrentCompilations", DefaultValue=1)]
        public int MaxConcurrentCompilations { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("numRecompilesBeforeAppRestart", DefaultValue=15)]
        public int NumRecompilesBeforeAppRestart { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("optimizeCompilations", DefaultValue=false)]
        public bool OptimizeCompilations { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("profileGuidedOptimizations", DefaultValue=System.Web.Configuration.ProfileGuidedOptimizationsFlags.All)]
        public System.Web.Configuration.ProfileGuidedOptimizationsFlags ProfileGuidedOptimizations { get { throw null; } set { } }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("strict", DefaultValue=false)]
        public bool Strict { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("targetFramework", DefaultValue=null)]
        public string TargetFramework { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("tempDirectory", DefaultValue="")]
        public string TempDirectory { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("urlLinePragmas", DefaultValue=false)]
        public bool UrlLinePragmas { get { throw null; } set { } }
        protected override object GetRuntimeObject() { throw null; }
        protected override void PostDeserialize() { }
        protected override void SetReadOnly() { }
    }
    public sealed partial class Compiler : System.Configuration.ConfigurationElement
    {
        public Compiler(string compilerOptions, string extension, string language, string type, int warningLevel) { }
        [System.Configuration.ConfigurationPropertyAttribute("compilerOptions", DefaultValue="")]
        public string CompilerOptions { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("extension", DefaultValue="")]
        public string Extension { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("language", DefaultValue="", IsRequired=true, IsKey=true)]
        public string Language { get { throw null; } }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("type", IsRequired=true, DefaultValue="")]
        public string Type { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("warningLevel", DefaultValue=0)]
        [System.Configuration.IntegerValidatorAttribute(MinValue=0, MaxValue=4)]
        public int WarningLevel { get { throw null; } }
    }
    [System.Configuration.ConfigurationCollectionAttribute(typeof(System.Web.Configuration.Compiler), AddItemName="compiler", CollectionType=System.Configuration.ConfigurationElementCollectionType.BasicMap)]
    public sealed partial class CompilerCollection : System.Configuration.ConfigurationElementCollection
    {
        public CompilerCollection() { }
        public string[] AllKeys { get { throw null; } }
        public override System.Configuration.ConfigurationElementCollectionType CollectionType { get { throw null; } }
        protected override string ElementName { get { throw null; } }
        public System.Web.Configuration.Compiler this[int index] { get { throw null; } }
        public new System.Web.Configuration.Compiler this[string language] { get { throw null; } }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
        protected override System.Configuration.ConfigurationElement CreateNewElement() { throw null; }
        public System.Web.Configuration.Compiler Get(int index) { throw null; }
        public System.Web.Configuration.Compiler Get(string language) { throw null; }
        protected override object GetElementKey(System.Configuration.ConfigurationElement element) { throw null; }
        public string GetKey(int index) { throw null; }
    }
    public sealed partial class CustomError : System.Configuration.ConfigurationElement
    {
        public CustomError(int statusCode, string redirect) { }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("redirect", IsRequired=true)]
        [System.Configuration.StringValidatorAttribute(MinLength=1)]
        public string Redirect { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("statusCode", IsRequired=true, IsKey=true)]
        [System.Configuration.IntegerValidatorAttribute(MinValue=100, MaxValue=999)]
        public int StatusCode { get { throw null; } set { } }
        public override bool Equals(object customError) { throw null; }
        public override int GetHashCode() { throw null; }
    }
    [System.Configuration.ConfigurationCollectionAttribute(typeof(System.Web.Configuration.CustomError), AddItemName="error", CollectionType=System.Configuration.ConfigurationElementCollectionType.BasicMap)]
    public sealed partial class CustomErrorCollection : System.Configuration.ConfigurationElementCollection
    {
        public CustomErrorCollection() { }
        public string[] AllKeys { get { throw null; } }
        public override System.Configuration.ConfigurationElementCollectionType CollectionType { get { throw null; } }
        protected override string ElementName { get { throw null; } }
        public System.Web.Configuration.CustomError this[int index] { get { throw null; } set { } }
        public new System.Web.Configuration.CustomError this[string statusCode] { get { throw null; } }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
        public void Add(System.Web.Configuration.CustomError customError) { }
        public void Clear() { }
        protected override System.Configuration.ConfigurationElement CreateNewElement() { throw null; }
        public System.Web.Configuration.CustomError Get(int index) { throw null; }
        public System.Web.Configuration.CustomError Get(string statusCode) { throw null; }
        protected override object GetElementKey(System.Configuration.ConfigurationElement element) { throw null; }
        public string GetKey(int index) { throw null; }
        public void Remove(string statusCode) { }
        public void RemoveAt(int index) { }
        public void Set(System.Web.Configuration.CustomError customError) { }
    }
    public enum CustomErrorsMode
    {
        Off = 2,
        On = 1,
        RemoteOnly = 0,
    }
    public enum CustomErrorsRedirectMode
    {
        ResponseRedirect = 0,
        ResponseRewrite = 1,
    }
    public sealed partial class CustomErrorsSection : System.Configuration.ConfigurationSection
    {
        public CustomErrorsSection() { }
        [System.Configuration.ConfigurationPropertyAttribute("allowNestedErrors", DefaultValue=false)]
        public bool AllowNestedErrors { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("defaultRedirect")]
        public string DefaultRedirect { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("", IsDefaultCollection=true)]
        public System.Web.Configuration.CustomErrorCollection Errors { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("mode", DefaultValue=System.Web.Configuration.CustomErrorsMode.RemoteOnly)]
        public System.Web.Configuration.CustomErrorsMode Mode { get { throw null; } set { } }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("redirectMode", DefaultValue=System.Web.Configuration.CustomErrorsRedirectMode.ResponseRedirect)]
        public System.Web.Configuration.CustomErrorsRedirectMode RedirectMode { get { throw null; } set { } }
        protected override void DeserializeSection(System.Xml.XmlReader reader) { }
        protected override void Reset(System.Configuration.ConfigurationElement parentElement) { }
    }
    public sealed partial class DeploymentSection : System.Configuration.ConfigurationSection
    {
        public DeploymentSection() { }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("retail", DefaultValue=false)]
        public bool Retail { get { throw null; } set { } }
    }
    public sealed partial class EventMappingSettings : System.Configuration.ConfigurationElement
    {
        public EventMappingSettings(string name, string type) { }
        public EventMappingSettings(string name, string type, int startEventCode, int endEventCode) { }
        [System.Configuration.ConfigurationPropertyAttribute("endEventCode", DefaultValue=2147483647)]
        [System.Configuration.IntegerValidatorAttribute(MinValue=0)]
        public int EndEventCode { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("name", IsRequired=true, IsKey=true, DefaultValue="")]
        public string Name { get { throw null; } set { } }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("startEventCode", DefaultValue=0)]
        [System.Configuration.IntegerValidatorAttribute(MinValue=0)]
        public int StartEventCode { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("type", IsRequired=true, DefaultValue="")]
        public string Type { get { throw null; } set { } }
    }
    [System.Configuration.ConfigurationCollectionAttribute(typeof(System.Web.Configuration.EventMappingSettings))]
    public sealed partial class EventMappingSettingsCollection : System.Configuration.ConfigurationElementCollection
    {
        public EventMappingSettingsCollection() { }
        public System.Web.Configuration.EventMappingSettings this[int index] { get { throw null; } set { } }
        public new System.Web.Configuration.EventMappingSettings this[string key] { get { throw null; } }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
        public void Add(System.Web.Configuration.EventMappingSettings eventMappingSettings) { }
        public void Clear() { }
        public bool Contains(string name) { throw null; }
        protected override System.Configuration.ConfigurationElement CreateNewElement() { throw null; }
        protected override object GetElementKey(System.Configuration.ConfigurationElement element) { throw null; }
        public int IndexOf(string name) { throw null; }
        public void Insert(int index, System.Web.Configuration.EventMappingSettings eventMappingSettings) { }
        public void Remove(string name) { }
        public void RemoveAt(int index) { }
    }
    public sealed partial class ExpressionBuilder : System.Configuration.ConfigurationElement
    {
        public ExpressionBuilder(string expressionPrefix, string theType) { }
        [System.Configuration.ConfigurationPropertyAttribute("expressionPrefix", IsRequired=true, IsKey=true, DefaultValue="")]
        [System.Configuration.StringValidatorAttribute(MinLength=1)]
        public string ExpressionPrefix { get { throw null; } set { } }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("type", IsRequired=true, DefaultValue="")]
        [System.Configuration.StringValidatorAttribute(MinLength=1)]
        public string Type { get { throw null; } set { } }
    }
    [System.Configuration.ConfigurationCollectionAttribute(typeof(System.Web.Configuration.ExpressionBuilder))]
    public sealed partial class ExpressionBuilderCollection : System.Configuration.ConfigurationElementCollection
    {
        public ExpressionBuilderCollection() { }
        public System.Web.Configuration.ExpressionBuilder this[int index] { get { throw null; } set { } }
        public new System.Web.Configuration.ExpressionBuilder this[string name] { get { throw null; } }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
        public void Add(System.Web.Configuration.ExpressionBuilder buildProvider) { }
        public void Clear() { }
        protected override System.Configuration.ConfigurationElement CreateNewElement() { throw null; }
        protected override object GetElementKey(System.Configuration.ConfigurationElement element) { throw null; }
        public void Remove(string name) { }
        public void RemoveAt(int index) { }
    }
    public enum FcnMode
    {
        Default = 1,
        Disabled = 2,
        NotSet = 0,
        Single = 3,
    }
    public sealed partial class FolderLevelBuildProvider : System.Configuration.ConfigurationElement
    {
        public FolderLevelBuildProvider(string name, string type) { }
        [System.Configuration.ConfigurationPropertyAttribute("name", IsRequired=true, IsKey=true, DefaultValue="")]
        [System.Configuration.StringValidatorAttribute(MinLength=1)]
        public string Name { get { throw null; } set { } }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("type", IsRequired=true, DefaultValue="")]
        [System.Configuration.StringValidatorAttribute(MinLength=1)]
        public string Type { get { throw null; } set { } }
        public override bool Equals(object provider) { throw null; }
        public override int GetHashCode() { throw null; }
    }
    [System.Configuration.ConfigurationCollectionAttribute(typeof(System.Web.Configuration.FolderLevelBuildProvider))]
    public sealed partial class FolderLevelBuildProviderCollection : System.Configuration.ConfigurationElementCollection
    {
        public FolderLevelBuildProviderCollection() { }
        public System.Web.Configuration.FolderLevelBuildProvider this[int index] { get { throw null; } set { } }
        public new System.Web.Configuration.BuildProvider this[string name] { get { throw null; } }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
        public void Add(System.Web.Configuration.FolderLevelBuildProvider buildProvider) { }
        public void Clear() { }
        protected override System.Configuration.ConfigurationElement CreateNewElement() { throw null; }
        protected override object GetElementKey(System.Configuration.ConfigurationElement element) { throw null; }
        public void Remove(string name) { }
        public void RemoveAt(int index) { }
    }
    public sealed partial class FormsAuthenticationConfiguration : System.Configuration.ConfigurationElement
    {
        public FormsAuthenticationConfiguration() { }
        [System.Configuration.ConfigurationPropertyAttribute("cookieless", DefaultValue=System.Web.HttpCookieMode.UseDeviceProfile)]
        public System.Web.HttpCookieMode Cookieless { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("cookieSameSite")]
        public System.Web.SameSiteMode CookieSameSite { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("credentials")]
        public System.Web.Configuration.FormsAuthenticationCredentials Credentials { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("defaultUrl", DefaultValue="default.aspx")]
        [System.Configuration.StringValidatorAttribute(MinLength=1)]
        public string DefaultUrl { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("domain", DefaultValue="")]
        public string Domain { get { throw null; } set { } }
        protected override System.Configuration.ConfigurationElementProperty ElementProperty { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("enableCrossAppRedirects", DefaultValue=false)]
        public bool EnableCrossAppRedirects { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("loginUrl", DefaultValue="login.aspx")]
        [System.Configuration.StringValidatorAttribute(MinLength=1)]
        public string LoginUrl { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("name", DefaultValue=".ASPXAUTH")]
        [System.Configuration.StringValidatorAttribute(MinLength=1)]
        public string Name { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("path", DefaultValue="/")]
        [System.Configuration.StringValidatorAttribute(MinLength=1)]
        public string Path { get { throw null; } set { } }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("protection", DefaultValue=System.Web.Configuration.FormsProtectionEnum.All)]
        public System.Web.Configuration.FormsProtectionEnum Protection { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("requireSSL", DefaultValue=false)]
        public bool RequireSSL { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("slidingExpiration", DefaultValue=true)]
        public bool SlidingExpiration { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("ticketCompatibilityMode", DefaultValue=System.Web.Configuration.TicketCompatibilityMode.Framework20)]
        public System.Web.Configuration.TicketCompatibilityMode TicketCompatibilityMode { get { throw null; } set { } }
        [System.ComponentModel.TypeConverterAttribute(typeof(System.Configuration.TimeSpanMinutesConverter))]
        [System.Configuration.ConfigurationPropertyAttribute("timeout", DefaultValue="00:30:00")]
        [System.Configuration.TimeSpanValidatorAttribute(MinValueString="00:01:00", MaxValueString="10675199.02:48:05.4775807")]
        public System.TimeSpan Timeout { get { throw null; } set { } }
    }
    public sealed partial class FormsAuthenticationCredentials : System.Configuration.ConfigurationElement
    {
        public FormsAuthenticationCredentials() { }
        [System.Configuration.ConfigurationPropertyAttribute("passwordFormat", DefaultValue=System.Web.Configuration.FormsAuthPasswordFormat.SHA1)]
        public System.Web.Configuration.FormsAuthPasswordFormat PasswordFormat { get { throw null; } set { } }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("", IsDefaultCollection=true, Options=System.Configuration.ConfigurationPropertyOptions.IsDefaultCollection)]
        public System.Web.Configuration.FormsAuthenticationUserCollection Users { get { throw null; } }
    }
    public sealed partial class FormsAuthenticationUser : System.Configuration.ConfigurationElement
    {
        public FormsAuthenticationUser(string name, string password) { }
        [System.ComponentModel.TypeConverterAttribute(typeof(System.Web.Configuration.LowerCaseStringConverter))]
        [System.Configuration.ConfigurationPropertyAttribute("name", IsRequired=true, IsKey=true, DefaultValue="")]
        [System.Configuration.StringValidatorAttribute]
        public string Name { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("password", IsRequired=true, DefaultValue="")]
        [System.Configuration.StringValidatorAttribute]
        public string Password { get { throw null; } set { } }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
    }
    [System.Configuration.ConfigurationCollectionAttribute(typeof(System.Web.Configuration.FormsAuthenticationUser), AddItemName="user", CollectionType=System.Configuration.ConfigurationElementCollectionType.BasicMap)]
    public sealed partial class FormsAuthenticationUserCollection : System.Configuration.ConfigurationElementCollection
    {
        public FormsAuthenticationUserCollection() { }
        public string[] AllKeys { get { throw null; } }
        public override System.Configuration.ConfigurationElementCollectionType CollectionType { get { throw null; } }
        protected override string ElementName { get { throw null; } }
        public System.Web.Configuration.FormsAuthenticationUser this[int index] { get { throw null; } set { } }
        public new System.Web.Configuration.FormsAuthenticationUser this[string name] { get { throw null; } }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
        protected override bool ThrowOnDuplicate { get { throw null; } }
        public void Add(System.Web.Configuration.FormsAuthenticationUser user) { }
        public void Clear() { }
        protected override System.Configuration.ConfigurationElement CreateNewElement() { throw null; }
        public System.Web.Configuration.FormsAuthenticationUser Get(int index) { throw null; }
        public System.Web.Configuration.FormsAuthenticationUser Get(string name) { throw null; }
        protected override object GetElementKey(System.Configuration.ConfigurationElement element) { throw null; }
        public string GetKey(int index) { throw null; }
        public void Remove(string name) { }
        public void RemoveAt(int index) { }
        public void Set(System.Web.Configuration.FormsAuthenticationUser user) { }
    }
    public enum FormsAuthPasswordFormat
    {
        Clear = 0,
        MD5 = 2,
        SHA1 = 1,
        SHA256 = 3,
        SHA384 = 4,
        SHA512 = 5,
    }
    public enum FormsProtectionEnum
    {
        All = 0,
        Encryption = 2,
        None = 1,
        Validation = 3,
    }
    public sealed partial class FullTrustAssembliesSection : System.Configuration.ConfigurationSection
    {
        public FullTrustAssembliesSection() { }
        [System.Configuration.ConfigurationPropertyAttribute("", IsDefaultCollection=true)]
        public System.Web.Configuration.FullTrustAssemblyCollection FullTrustAssemblies { get { throw null; } }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
    }
    public sealed partial class FullTrustAssembly : System.Configuration.ConfigurationElement
    {
        public FullTrustAssembly(string assemblyName, string version, string publicKey) { }
        [System.Configuration.ConfigurationPropertyAttribute("assemblyName", IsRequired=true, IsKey=true, DefaultValue="")]
        [System.Configuration.StringValidatorAttribute(MinLength=1)]
        public string AssemblyName { get { throw null; } set { } }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("publicKey", IsRequired=true, IsKey=false, DefaultValue="")]
        [System.Configuration.StringValidatorAttribute(MinLength=1)]
        public string PublicKey { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("version", IsRequired=true, IsKey=true, DefaultValue="")]
        [System.Configuration.StringValidatorAttribute(MinLength=1)]
        public string Version { get { throw null; } set { } }
    }
    [System.Configuration.ConfigurationCollectionAttribute(typeof(string))]
    public sealed partial class FullTrustAssemblyCollection : System.Configuration.ConfigurationElementCollection
    {
        public FullTrustAssemblyCollection() { }
        public System.Web.Configuration.FullTrustAssembly this[int index] { get { throw null; } set { } }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
        public void Add(System.Web.Configuration.FullTrustAssembly fullTrustAssembly) { }
        public void Clear() { }
        protected override System.Configuration.ConfigurationElement CreateNewElement() { throw null; }
        protected override object GetElementKey(System.Configuration.ConfigurationElement element) { throw null; }
        public void Remove(string key) { }
        public void RemoveAt(int index) { }
    }
    public sealed partial class GlobalizationSection : System.Configuration.ConfigurationSection
    {
        public GlobalizationSection() { }
        [System.Configuration.ConfigurationPropertyAttribute("culture", DefaultValue="")]
        public string Culture { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("enableBestFitResponseEncoding", DefaultValue=false)]
        public bool EnableBestFitResponseEncoding { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("enableClientBasedCulture", DefaultValue=false)]
        public bool EnableClientBasedCulture { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("fileEncoding")]
        public System.Text.Encoding FileEncoding { get { throw null; } set { } }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("requestEncoding", DefaultValue="utf-8")]
        public System.Text.Encoding RequestEncoding { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("resourceProviderFactoryType", DefaultValue="")]
        public string ResourceProviderFactoryType { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("responseEncoding", DefaultValue="utf-8")]
        public System.Text.Encoding ResponseEncoding { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("responseHeaderEncoding", DefaultValue="utf-8")]
        public System.Text.Encoding ResponseHeaderEncoding { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("uiCulture", DefaultValue="")]
        public string UICulture { get { throw null; } set { } }
        protected override void PostDeserialize() { }
        protected override void PreSerialize(System.Xml.XmlWriter writer) { }
    }
    public sealed partial class HealthMonitoringSection : System.Configuration.ConfigurationSection
    {
        public HealthMonitoringSection() { }
        [System.Configuration.ConfigurationPropertyAttribute("bufferModes")]
        public System.Web.Configuration.BufferModesCollection BufferModes { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("enabled", DefaultValue=true)]
        public bool Enabled { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("eventMappings")]
        public System.Web.Configuration.EventMappingSettingsCollection EventMappings { get { throw null; } }
        [System.ComponentModel.TypeConverterAttribute(typeof(System.Configuration.TimeSpanSecondsConverter))]
        [System.Configuration.ConfigurationPropertyAttribute("heartbeatInterval", DefaultValue="00:00:00")]
        [System.Configuration.TimeSpanValidatorAttribute(MinValueString="00:00:00", MaxValueString="24.20:31:23")]
        public System.TimeSpan HeartbeatInterval { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("profiles")]
        public System.Web.Configuration.ProfileSettingsCollection Profiles { get { throw null; } }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("providers")]
        public System.Configuration.ProviderSettingsCollection Providers { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("rules")]
        public System.Web.Configuration.RuleSettingsCollection Rules { get { throw null; } }
    }
    public sealed partial class HostingEnvironmentSection : System.Configuration.ConfigurationSection
    {
        public HostingEnvironmentSection() { }
        [System.ComponentModel.TypeConverterAttribute(typeof(System.Configuration.TimeSpanMinutesOrInfiniteConverter))]
        [System.Configuration.ConfigurationPropertyAttribute("idleTimeout", DefaultValue="10675199.02:48:05.4775807")]
        [System.Configuration.TimeSpanValidatorAttribute(MinValueString="00:00:00", MaxValueString="10675199.02:48:05.4775807")]
        public System.TimeSpan IdleTimeout { get { throw null; } set { } }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("shadowCopyBinAssemblies", DefaultValue=true)]
        public bool ShadowCopyBinAssemblies { get { throw null; } set { } }
        [System.ComponentModel.TypeConverterAttribute(typeof(System.Configuration.TimeSpanSecondsConverter))]
        [System.Configuration.ConfigurationPropertyAttribute("shutdownTimeout", DefaultValue="00:00:30")]
        [System.Configuration.TimeSpanValidatorAttribute(MinValueString="00:00:00", MaxValueString="10675199.02:48:05.4775807")]
        public System.TimeSpan ShutdownTimeout { get { throw null; } set { } }
        [System.ComponentModel.TypeConverterAttribute(typeof(System.Configuration.InfiniteTimeSpanConverter))]
        [System.Configuration.ConfigurationPropertyAttribute("urlMetadataSlidingExpiration", DefaultValue="00:01:00")]
        [System.Configuration.TimeSpanValidatorAttribute(MinValueString="00:00:00", MaxValueString="10675199.02:48:05.4775807")]
        public System.TimeSpan UrlMetadataSlidingExpiration { get { throw null; } set { } }
    }
    public partial class HttpCapabilitiesBase : System.Web.UI.IFilterResolutionService
    {
        public HttpCapabilitiesBase() { }
        public bool ActiveXControls { get { throw null; } }
        public System.Collections.IDictionary Adapters { get { throw null; } }
        public bool AOL { get { throw null; } }
        public bool BackgroundSounds { get { throw null; } }
        public bool Beta { get { throw null; } }
        public string Browser { get { throw null; } }
        public static System.Web.Configuration.HttpCapabilitiesProvider BrowserCapabilitiesProvider { get { throw null; } set { } }
        public System.Collections.ArrayList Browsers { get { throw null; } }
        public virtual bool CanCombineFormsInDeck { get { throw null; } }
        public virtual bool CanInitiateVoiceCall { get { throw null; } }
        public virtual bool CanRenderAfterInputOrSelectElement { get { throw null; } }
        public virtual bool CanRenderEmptySelects { get { throw null; } }
        public virtual bool CanRenderInputAndSelectElementsTogether { get { throw null; } }
        public virtual bool CanRenderMixedSelects { get { throw null; } }
        public virtual bool CanRenderOneventAndPrevElementsTogether { get { throw null; } }
        public virtual bool CanRenderPostBackCards { get { throw null; } }
        public virtual bool CanRenderSetvarZeroWithMultiSelectionList { get { throw null; } }
        public virtual bool CanSendMail { get { throw null; } }
        public System.Collections.IDictionary Capabilities { get { throw null; } set { } }
        public bool CDF { get { throw null; } }
        public System.Version ClrVersion { get { throw null; } }
        public bool Cookies { get { throw null; } }
        public bool Crawler { get { throw null; } }
        public virtual int DefaultSubmitButtonLimit { get { throw null; } }
        public System.Version EcmaScriptVersion { get { throw null; } }
        public bool Frames { get { throw null; } }
        public virtual int GatewayMajorVersion { get { throw null; } }
        public virtual double GatewayMinorVersion { get { throw null; } }
        public virtual string GatewayVersion { get { throw null; } }
        public virtual bool HasBackButton { get { throw null; } }
        public virtual bool HidesRightAlignedMultiselectScrollbars { get { throw null; } }
        public string HtmlTextWriter { get { throw null; } set { } }
        public string Id { get { throw null; } }
        public virtual string InputType { get { throw null; } }
        public virtual bool IsColor { get { throw null; } }
        public virtual bool IsMobileDevice { get { throw null; } }
        public virtual string this[string key] { get { throw null; } }
        public bool JavaApplets { get { throw null; } }
        [System.ObsoleteAttribute("The recommended alternative is the EcmaScriptVersion property. A Major version value greater than or equal to 1 implies JavaScript support. http://go.microsoft.com/fwlink/?linkid=14202")]
        public bool JavaScript { get { throw null; } }
        public System.Version JScriptVersion { get { throw null; } }
        public int MajorVersion { get { throw null; } }
        public virtual int MaximumHrefLength { get { throw null; } }
        public virtual int MaximumRenderedPageSize { get { throw null; } }
        public virtual int MaximumSoftkeyLabelLength { get { throw null; } }
        public double MinorVersion { get { throw null; } }
        public string MinorVersionString { get { throw null; } }
        public virtual string MobileDeviceManufacturer { get { throw null; } }
        public virtual string MobileDeviceModel { get { throw null; } }
        public System.Version MSDomVersion { get { throw null; } }
        public virtual int NumberOfSoftkeys { get { throw null; } }
        public string Platform { get { throw null; } }
        public virtual string PreferredImageMime { get { throw null; } }
        public virtual string PreferredRenderingMime { get { throw null; } }
        public virtual string PreferredRenderingType { get { throw null; } }
        public virtual string PreferredRequestEncoding { get { throw null; } }
        public virtual string PreferredResponseEncoding { get { throw null; } }
        public virtual bool RendersBreakBeforeWmlSelectAndInput { get { throw null; } }
        public virtual bool RendersBreaksAfterHtmlLists { get { throw null; } }
        public virtual bool RendersBreaksAfterWmlAnchor { get { throw null; } }
        public virtual bool RendersBreaksAfterWmlInput { get { throw null; } }
        public virtual bool RendersWmlDoAcceptsInline { get { throw null; } }
        public virtual bool RendersWmlSelectsAsMenuCards { get { throw null; } }
        public virtual string RequiredMetaTagNameValue { get { throw null; } }
        public virtual bool RequiresAttributeColonSubstitution { get { throw null; } }
        public virtual bool RequiresContentTypeMetaTag { get { throw null; } }
        public bool RequiresControlStateInSession { get { throw null; } }
        public virtual bool RequiresDBCSCharacter { get { throw null; } }
        public virtual bool RequiresHtmlAdaptiveErrorReporting { get { throw null; } }
        public virtual bool RequiresLeadingPageBreak { get { throw null; } }
        public virtual bool RequiresNoBreakInFormatting { get { throw null; } }
        public virtual bool RequiresOutputOptimization { get { throw null; } }
        public virtual bool RequiresPhoneNumbersAsPlainText { get { throw null; } }
        public virtual bool RequiresSpecialViewStateEncoding { get { throw null; } }
        public virtual bool RequiresUniqueFilePathSuffix { get { throw null; } }
        public virtual bool RequiresUniqueHtmlCheckboxNames { get { throw null; } }
        public virtual bool RequiresUniqueHtmlInputNames { get { throw null; } }
        public virtual bool RequiresUrlEncodedPostfieldValues { get { throw null; } }
        public virtual int ScreenBitDepth { get { throw null; } }
        public virtual int ScreenCharactersHeight { get { throw null; } }
        public virtual int ScreenCharactersWidth { get { throw null; } }
        public virtual int ScreenPixelsHeight { get { throw null; } }
        public virtual int ScreenPixelsWidth { get { throw null; } }
        public virtual bool SupportsAccesskeyAttribute { get { throw null; } }
        public virtual bool SupportsBodyColor { get { throw null; } }
        public virtual bool SupportsBold { get { throw null; } }
        public virtual bool SupportsCacheControlMetaTag { get { throw null; } }
        public virtual bool SupportsCallback { get { throw null; } }
        public virtual bool SupportsCss { get { throw null; } }
        public virtual bool SupportsDivAlign { get { throw null; } }
        public virtual bool SupportsDivNoWrap { get { throw null; } }
        public virtual bool SupportsEmptyStringInCookieValue { get { throw null; } }
        public virtual bool SupportsFontColor { get { throw null; } }
        public virtual bool SupportsFontName { get { throw null; } }
        public virtual bool SupportsFontSize { get { throw null; } }
        public virtual bool SupportsImageSubmit { get { throw null; } }
        public virtual bool SupportsIModeSymbols { get { throw null; } }
        public virtual bool SupportsInputIStyle { get { throw null; } }
        public virtual bool SupportsInputMode { get { throw null; } }
        public virtual bool SupportsItalic { get { throw null; } }
        public virtual bool SupportsJPhoneMultiMediaAttributes { get { throw null; } }
        public virtual bool SupportsJPhoneSymbols { get { throw null; } }
        public virtual bool SupportsQueryStringInFormAction { get { throw null; } }
        public virtual bool SupportsRedirectWithCookie { get { throw null; } }
        public virtual bool SupportsSelectMultiple { get { throw null; } }
        public virtual bool SupportsUncheck { get { throw null; } }
        public virtual bool SupportsXmlHttp { get { throw null; } }
        public bool Tables { get { throw null; } }
        public System.Type TagWriter { get { throw null; } }
        public string Type { get { throw null; } }
        public bool UseOptimizedCacheKey { get { throw null; } }
        public bool VBScript { get { throw null; } }
        public string Version { get { throw null; } }
        public System.Version W3CDomVersion { get { throw null; } }
        public bool Win16 { get { throw null; } }
        public bool Win32 { get { throw null; } }
        public void AddBrowser(string browserName) { }
        public System.Web.UI.HtmlTextWriter CreateHtmlTextWriter(System.IO.TextWriter w) { throw null; }
        public void DisableOptimizedCacheKey() { }
        public System.Version[] GetClrVersions() { throw null; }
        [System.Configuration.ConfigurationPermissionAttribute(System.Security.Permissions.SecurityAction.Assert, Unrestricted=true)]
        public static System.Web.Configuration.HttpCapabilitiesBase GetConfigCapabilities(string configKey, System.Web.HttpRequest request) { throw null; }
        protected virtual void Init() { }
        public bool IsBrowser(string browserName) { throw null; }
        int System.Web.UI.IFilterResolutionService.CompareFilters(string filter1, string filter2) { throw null; }
        bool System.Web.UI.IFilterResolutionService.EvaluateFilter(string filterName) { throw null; }
    }
    public partial class HttpCapabilitiesDefaultProvider : System.Web.Configuration.HttpCapabilitiesProvider
    {
        public HttpCapabilitiesDefaultProvider() { }
        public HttpCapabilitiesDefaultProvider(System.Web.Configuration.HttpCapabilitiesDefaultProvider parent) { }
        public System.TimeSpan CacheTime { get { throw null; } set { } }
        public System.Type ResultType { get { throw null; } set { } }
        public int UserAgentCacheKeyLength { get { throw null; } set { } }
        public void AddDependency(string variable) { }
        public virtual void AddRuleList(System.Collections.ArrayList ruleList) { }
        public override System.Web.HttpBrowserCapabilities GetBrowserCapabilities(System.Web.HttpRequest request) { throw null; }
    }
    public abstract partial class HttpCapabilitiesProvider
    {
        protected HttpCapabilitiesProvider() { }
        public abstract System.Web.HttpBrowserCapabilities GetBrowserCapabilities(System.Web.HttpRequest request);
    }
    public partial class HttpCapabilitiesSectionHandler : System.Configuration.IConfigurationSectionHandler
    {
        public HttpCapabilitiesSectionHandler() { }
        public object Create(object parent, object configurationContext, System.Xml.XmlNode section) { throw null; }
    }
    public partial class HttpConfigurationContext
    {
        internal HttpConfigurationContext() { }
        public string VirtualPath { get { throw null; } }
    }
    public sealed partial class HttpCookiesSection : System.Configuration.ConfigurationSection
    {
        public HttpCookiesSection() { }
        [System.Configuration.ConfigurationPropertyAttribute("domain", DefaultValue="")]
        public string Domain { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("httpOnlyCookies", DefaultValue=false)]
        public bool HttpOnlyCookies { get { throw null; } set { } }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("requireSSL", DefaultValue=false)]
        public bool RequireSSL { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("sameSite", DefaultValue=System.Web.SameSiteMode.None)]
        public System.Web.SameSiteMode SameSite { get { throw null; } set { } }
    }
    public sealed partial class HttpHandlerAction : System.Configuration.ConfigurationElement
    {
        public HttpHandlerAction(string path, string type, string verb) { }
        public HttpHandlerAction(string path, string type, string verb, bool validate) { }
        [System.Configuration.ConfigurationPropertyAttribute("path", IsRequired=true, IsKey=true)]
        public string Path { get { throw null; } set { } }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("type", IsRequired=true)]
        public string Type { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("validate", DefaultValue=true)]
        public bool Validate { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("verb", IsRequired=true, IsKey=true)]
        public string Verb { get { throw null; } set { } }
    }
    [System.Configuration.ConfigurationCollectionAttribute(typeof(System.Web.Configuration.HttpHandlerAction), CollectionType=System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMapAlternate)]
    public sealed partial class HttpHandlerActionCollection : System.Configuration.ConfigurationElementCollection
    {
        public HttpHandlerActionCollection() { }
        public override System.Configuration.ConfigurationElementCollectionType CollectionType { get { throw null; } }
        public System.Web.Configuration.HttpHandlerAction this[int index] { get { throw null; } set { } }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
        protected override bool ThrowOnDuplicate { get { throw null; } }
        public void Add(System.Web.Configuration.HttpHandlerAction httpHandlerAction) { }
        public void Clear() { }
        protected override System.Configuration.ConfigurationElement CreateNewElement() { throw null; }
        protected override object GetElementKey(System.Configuration.ConfigurationElement element) { throw null; }
        public int IndexOf(System.Web.Configuration.HttpHandlerAction action) { throw null; }
        public void Remove(string verb, string path) { }
        public void Remove(System.Web.Configuration.HttpHandlerAction action) { }
        public void RemoveAt(int index) { }
    }
    public sealed partial class HttpHandlersSection : System.Configuration.ConfigurationSection
    {
        public HttpHandlersSection() { }
        [System.Configuration.ConfigurationPropertyAttribute("", IsDefaultCollection=true)]
        public System.Web.Configuration.HttpHandlerActionCollection Handlers { get { throw null; } }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
    }
    public sealed partial class HttpModuleAction : System.Configuration.ConfigurationElement
    {
        public HttpModuleAction(string name, string type) { }
        protected override System.Configuration.ConfigurationElementProperty ElementProperty { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("name", IsRequired=true, IsKey=true, DefaultValue="")]
        [System.Configuration.StringValidatorAttribute(MinLength=1)]
        public string Name { get { throw null; } set { } }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("type", IsRequired=true, DefaultValue="")]
        public string Type { get { throw null; } set { } }
    }
    [System.Configuration.ConfigurationCollectionAttribute(typeof(System.Web.Configuration.HttpModuleAction))]
    public sealed partial class HttpModuleActionCollection : System.Configuration.ConfigurationElementCollection
    {
        public HttpModuleActionCollection() { }
        public System.Web.Configuration.HttpModuleAction this[int index] { get { throw null; } set { } }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
        public void Add(System.Web.Configuration.HttpModuleAction httpModule) { }
        public void Clear() { }
        protected override System.Configuration.ConfigurationElement CreateNewElement() { throw null; }
        protected override object GetElementKey(System.Configuration.ConfigurationElement element) { throw null; }
        public int IndexOf(System.Web.Configuration.HttpModuleAction action) { throw null; }
        protected override bool IsElementRemovable(System.Configuration.ConfigurationElement element) { throw null; }
        public void Remove(string name) { }
        public void Remove(System.Web.Configuration.HttpModuleAction action) { }
        public void RemoveAt(int index) { }
    }
    public sealed partial class HttpModulesSection : System.Configuration.ConfigurationSection
    {
        public HttpModulesSection() { }
        [System.Configuration.ConfigurationPropertyAttribute("", IsDefaultCollection=true)]
        public System.Web.Configuration.HttpModuleActionCollection Modules { get { throw null; } }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
    }
    public sealed partial class HttpRuntimeSection : System.Configuration.ConfigurationSection
    {
        public HttpRuntimeSection() { }
        [System.Configuration.ConfigurationPropertyAttribute("allowDynamicModuleRegistration", DefaultValue=true)]
        public bool AllowDynamicModuleRegistration { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("apartmentThreading", DefaultValue=false)]
        public bool ApartmentThreading { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("appRequestQueueLimit", DefaultValue=5000)]
        [System.Configuration.IntegerValidatorAttribute(MinValue=1)]
        public int AppRequestQueueLimit { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("asyncPreloadMode", DefaultValue=System.Web.Configuration.AsyncPreloadModeFlags.None)]
        public System.Web.Configuration.AsyncPreloadModeFlags AsyncPreloadMode { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("defaultRegexMatchTimeout", DefaultValue="00:00:00")]
        public System.TimeSpan DefaultRegexMatchTimeout { get { throw null; } set { } }
        [System.ComponentModel.TypeConverterAttribute(typeof(System.Configuration.TimeSpanSecondsConverter))]
        [System.Configuration.ConfigurationPropertyAttribute("delayNotificationTimeout", DefaultValue="00:00:00")]
        public System.TimeSpan DelayNotificationTimeout { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("enable", DefaultValue=true)]
        public bool Enable { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("enableHeaderChecking", DefaultValue=true)]
        public bool EnableHeaderChecking { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("enableKernelOutputCache", DefaultValue=true)]
        public bool EnableKernelOutputCache { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("enableVersionHeader", DefaultValue=true)]
        public bool EnableVersionHeader { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("encoderType", DefaultValue="System.Web.Util.HttpEncoder")]
        [System.Configuration.StringValidatorAttribute(MinLength=1)]
        public string EncoderType { get { throw null; } set { } }
        [System.ComponentModel.TypeConverterAttribute(typeof(System.Configuration.TimeSpanSecondsConverter))]
        [System.Configuration.ConfigurationPropertyAttribute("executionTimeout", DefaultValue="00:01:50")]
        [System.Configuration.TimeSpanValidatorAttribute(MinValueString="00:00:00", MaxValueString="10675199.02:48:05.4775807")]
        public System.TimeSpan ExecutionTimeout { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("fcnMode", DefaultValue=System.Web.Configuration.FcnMode.NotSet)]
        public System.Web.Configuration.FcnMode FcnMode { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("maxQueryStringLength", DefaultValue=2048)]
        [System.Configuration.IntegerValidatorAttribute(MinValue=0)]
        public int MaxQueryStringLength { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("maxRequestLength", DefaultValue=4096)]
        [System.Configuration.IntegerValidatorAttribute(MinValue=0)]
        public int MaxRequestLength { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("maxUrlLength", DefaultValue=260)]
        [System.Configuration.IntegerValidatorAttribute(MinValue=0)]
        public int MaxUrlLength { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("maxWaitChangeNotification", DefaultValue=0)]
        [System.Configuration.IntegerValidatorAttribute(MinValue=0)]
        public int MaxWaitChangeNotification { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("minFreeThreads", DefaultValue=8)]
        [System.Configuration.IntegerValidatorAttribute(MinValue=0)]
        public int MinFreeThreads { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("minLocalRequestFreeThreads", DefaultValue=4)]
        [System.Configuration.IntegerValidatorAttribute(MinValue=0)]
        public int MinLocalRequestFreeThreads { get { throw null; } set { } }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("relaxedUrlToFileSystemMapping", DefaultValue=false)]
        public bool RelaxedUrlToFileSystemMapping { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("requestLengthDiskThreshold", DefaultValue=80)]
        [System.Configuration.IntegerValidatorAttribute(MinValue=1)]
        public int RequestLengthDiskThreshold { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("requestPathInvalidCharacters", DefaultValue="<,>,*,%,&,:,\\,?")]
        public string RequestPathInvalidCharacters { get { throw null; } set { } }
        [System.ComponentModel.TypeConverterAttribute("System.Web.Configuration.VersionConverter")]
        [System.Configuration.ConfigurationPropertyAttribute("requestValidationMode", DefaultValue="4.0")]
        public System.Version RequestValidationMode { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("requestValidationType", DefaultValue="System.Web.Util.RequestValidator")]
        [System.Configuration.StringValidatorAttribute(MinLength=1)]
        public string RequestValidationType { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("requireRootedSaveAsPath", DefaultValue=true)]
        public bool RequireRootedSaveAsPath { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("sendCacheControlHeader", DefaultValue=true)]
        public bool SendCacheControlHeader { get { throw null; } set { } }
        [System.ComponentModel.TypeConverterAttribute(typeof(System.Configuration.TimeSpanSecondsConverter))]
        [System.Configuration.ConfigurationPropertyAttribute("shutdownTimeout", DefaultValue="00:01:30")]
        public System.TimeSpan ShutdownTimeout { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("targetFramework", DefaultValue=null)]
        public string TargetFramework { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("useFullyQualifiedRedirectUrl", DefaultValue=false)]
        public bool UseFullyQualifiedRedirectUrl { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("waitChangeNotification", DefaultValue=0)]
        [System.Configuration.IntegerValidatorAttribute(MinValue=0)]
        public int WaitChangeNotification { get { throw null; } set { } }
        protected override void SetReadOnly() { }
    }
    public partial interface IConfigMapPath
    {
        string GetAppPathForPath(string siteID, string path);
        void GetDefaultSiteNameAndID(out string siteName, out string siteID);
        string GetMachineConfigFilename();
        void GetPathConfigFilename(string siteID, string path, out string directory, out string baseName);
        string GetRootWebConfigFilename();
        string MapPath(string siteID, string path);
        void ResolveSiteArgument(string siteArgument, out string siteName, out string siteID);
    }
    public partial interface IConfigMapPathFactory
    {
        System.Web.Configuration.IConfigMapPath Create(string virtualPath, string physicalPath);
    }
    public sealed partial class IdentitySection : System.Configuration.ConfigurationSection
    {
        public IdentitySection() { }
        [System.Configuration.ConfigurationPropertyAttribute("impersonate", DefaultValue=false)]
        public bool Impersonate { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("password", DefaultValue="")]
        public string Password { get { throw null; } set { } }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("userName", DefaultValue="")]
        public string UserName { get { throw null; } set { } }
        protected override object GetRuntimeObject() { throw null; }
        protected override void Reset(System.Configuration.ConfigurationElement parentElement) { }
        protected override void Unmerge(System.Configuration.ConfigurationElement sourceElement, System.Configuration.ConfigurationElement parentElement, System.Configuration.ConfigurationSaveMode saveMode) { }
    }
    public sealed partial class IgnoreDeviceFilterElement : System.Configuration.ConfigurationElement
    {
        public IgnoreDeviceFilterElement(string name) { }
        protected override System.Configuration.ConfigurationElementProperty ElementProperty { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("name", IsRequired=true, IsKey=true)]
        [System.Configuration.StringValidatorAttribute(MinLength=1)]
        public string Name { get { throw null; } }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
    }
    [System.Configuration.ConfigurationCollectionAttribute(typeof(System.Web.Configuration.IgnoreDeviceFilterElement), AddItemName="filter", CollectionType=System.Configuration.ConfigurationElementCollectionType.BasicMap)]
    public sealed partial class IgnoreDeviceFilterElementCollection : System.Configuration.ConfigurationElementCollection
    {
        public IgnoreDeviceFilterElementCollection() { }
        public override System.Configuration.ConfigurationElementCollectionType CollectionType { get { throw null; } }
        protected override string ElementName { get { throw null; } }
        public System.Web.Configuration.IgnoreDeviceFilterElement this[int index] { get { throw null; } set { } }
        public new System.Web.Configuration.IgnoreDeviceFilterElement this[string name] { get { throw null; } }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
        public void Add(System.Web.Configuration.IgnoreDeviceFilterElement deviceFilter) { }
        public void Clear() { }
        protected override System.Configuration.ConfigurationElement CreateNewElement() { throw null; }
        protected override object GetElementKey(System.Configuration.ConfigurationElement element) { throw null; }
        public void Remove(string name) { }
        public void Remove(System.Web.Configuration.IgnoreDeviceFilterElement deviceFilter) { }
        public void RemoveAt(int index) { }
    }
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    [System.Runtime.InteropServices.GuidAttribute("A99B591A-23C6-4238-8452-C7B0E895063D")]
    public partial interface IRemoteWebConfigurationHostServer
    {
        string DoEncryptOrDecrypt(bool doEncrypt, string xmlString, string protectionProviderName, string protectionProviderType, string[] parameterKeys, string[] parameterValues);
        byte[] GetData(string fileName, bool getReadTimeOnly, out long readTime);
        void GetFileDetails(string name, out bool exists, out long size, out long createDate, out long lastWriteDate);
        string GetFilePaths(int webLevel, string path, string site, string locationSubPath);
        void WriteData(string fileName, string templateFileName, byte[] data, ref long readTime);
    }
    public sealed partial class LowerCaseStringConverter : System.ComponentModel.TypeConverter
    {
        public LowerCaseStringConverter() { }
        public override bool CanConvertFrom(System.ComponentModel.ITypeDescriptorContext ctx, System.Type type) { throw null; }
        public override bool CanConvertTo(System.ComponentModel.ITypeDescriptorContext ctx, System.Type type) { throw null; }
        public override object ConvertFrom(System.ComponentModel.ITypeDescriptorContext ctx, System.Globalization.CultureInfo ci, object data) { throw null; }
        public override object ConvertTo(System.ComponentModel.ITypeDescriptorContext ctx, System.Globalization.CultureInfo ci, object value, System.Type type) { throw null; }
    }
    public enum MachineKeyCompatibilityMode
    {
        Framework20SP1 = 0,
        Framework20SP2 = 1,
        Framework45 = 2,
    }
    public sealed partial class MachineKeySection : System.Configuration.ConfigurationSection
    {
        public MachineKeySection() { }
        [System.ComponentModel.TypeConverterAttribute(typeof(System.Configuration.WhiteSpaceTrimStringConverter))]
        [System.Configuration.ConfigurationPropertyAttribute("applicationName", DefaultValue="")]
        public string ApplicationName { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("compatibilityMode", DefaultValue=System.Web.Configuration.MachineKeyCompatibilityMode.Framework20SP1)]
        public System.Web.Configuration.MachineKeyCompatibilityMode CompatibilityMode { get { throw null; } set { } }
        [System.ComponentModel.TypeConverterAttribute(typeof(System.Configuration.WhiteSpaceTrimStringConverter))]
        [System.Configuration.ConfigurationPropertyAttribute("dataProtectorType", DefaultValue="")]
        public string DataProtectorType { get { throw null; } set { } }
        [System.ComponentModel.TypeConverterAttribute(typeof(System.Configuration.WhiteSpaceTrimStringConverter))]
        [System.Configuration.ConfigurationPropertyAttribute("decryption", DefaultValue="Auto")]
        [System.Configuration.StringValidatorAttribute(MinLength=1)]
        public string Decryption { get { throw null; } set { } }
        [System.ComponentModel.TypeConverterAttribute(typeof(System.Configuration.WhiteSpaceTrimStringConverter))]
        [System.Configuration.ConfigurationPropertyAttribute("decryptionKey", DefaultValue="AutoGenerate,IsolateApps")]
        [System.Configuration.StringValidatorAttribute(MinLength=1)]
        public string DecryptionKey { get { throw null; } set { } }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
        public System.Web.Configuration.MachineKeyValidation Validation { get { throw null; } set { } }
        [System.ComponentModel.TypeConverterAttribute(typeof(System.Configuration.WhiteSpaceTrimStringConverter))]
        [System.Configuration.ConfigurationPropertyAttribute("validation", DefaultValue="HMACSHA256")]
        [System.Configuration.StringValidatorAttribute(MinLength=1)]
        public string ValidationAlgorithm { get { throw null; } set { } }
        [System.ComponentModel.TypeConverterAttribute(typeof(System.Configuration.WhiteSpaceTrimStringConverter))]
        [System.Configuration.ConfigurationPropertyAttribute("validationKey", DefaultValue="AutoGenerate,IsolateApps")]
        [System.Configuration.StringValidatorAttribute(MinLength=1)]
        public string ValidationKey { get { throw null; } set { } }
        protected override void Reset(System.Configuration.ConfigurationElement parentElement) { }
        protected override void SetReadOnly() { }
    }
    public enum MachineKeyValidation
    {
        AES = 3,
        Custom = 7,
        HMACSHA256 = 4,
        HMACSHA384 = 5,
        HMACSHA512 = 6,
        MD5 = 0,
        SHA1 = 1,
        TripleDES = 2,
    }
    [System.Security.Permissions.HostProtectionAttribute(System.Security.Permissions.SecurityAction.LinkDemand, MayLeakOnAbort=true)]
    public sealed partial class MachineKeyValidationConverter : System.Configuration.ConfigurationConverterBase
    {
        public MachineKeyValidationConverter() { }
        public override object ConvertFrom(System.ComponentModel.ITypeDescriptorContext ctx, System.Globalization.CultureInfo ci, object data) { throw null; }
        public override object ConvertTo(System.ComponentModel.ITypeDescriptorContext ctx, System.Globalization.CultureInfo ci, object value, System.Type type) { throw null; }
    }
    public sealed partial class MembershipSection : System.Configuration.ConfigurationSection
    {
        public MembershipSection() { }
        [System.Configuration.ConfigurationPropertyAttribute("defaultProvider", DefaultValue="AspNetSqlMembershipProvider")]
        [System.Configuration.StringValidatorAttribute(MinLength=1)]
        public string DefaultProvider { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("hashAlgorithmType", DefaultValue="")]
        public string HashAlgorithmType { get { throw null; } set { } }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("providers")]
        public System.Configuration.ProviderSettingsCollection Providers { get { throw null; } }
        [System.ComponentModel.TypeConverterAttribute(typeof(System.Configuration.TimeSpanMinutesConverter))]
        [System.Configuration.ConfigurationPropertyAttribute("userIsOnlineTimeWindow", DefaultValue="00:15:00")]
        [System.Configuration.TimeSpanValidatorAttribute(MinValueString="00:01:00", MaxValueString="10675199.02:48:05.4775807")]
        public System.TimeSpan UserIsOnlineTimeWindow { get { throw null; } set { } }
    }
    [System.Configuration.ConfigurationCollectionAttribute(typeof(System.Web.Configuration.NamespaceInfo))]
    public sealed partial class NamespaceCollection : System.Configuration.ConfigurationElementCollection
    {
        public NamespaceCollection() { }
        [System.Configuration.ConfigurationPropertyAttribute("autoImportVBNamespace", DefaultValue=true)]
        public bool AutoImportVBNamespace { get { throw null; } set { } }
        public System.Web.Configuration.NamespaceInfo this[int index] { get { throw null; } set { } }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
        public void Add(System.Web.Configuration.NamespaceInfo namespaceInformation) { }
        public void Clear() { }
        protected override System.Configuration.ConfigurationElement CreateNewElement() { throw null; }
        protected override object GetElementKey(System.Configuration.ConfigurationElement element) { throw null; }
        public void Remove(string s) { }
        public void RemoveAt(int index) { }
    }
    public sealed partial class NamespaceInfo : System.Configuration.ConfigurationElement
    {
        public NamespaceInfo(string name) { }
        [System.Configuration.ConfigurationPropertyAttribute("namespace", IsRequired=true, IsKey=true, DefaultValue="")]
        [System.Configuration.StringValidatorAttribute(MinLength=1)]
        public string Namespace { get { throw null; } set { } }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
        public override bool Equals(object namespaceInformation) { throw null; }
        public override int GetHashCode() { throw null; }
    }
    public sealed partial class OutputCacheProfile : System.Configuration.ConfigurationElement
    {
        public OutputCacheProfile(string name) { }
        [System.Configuration.ConfigurationPropertyAttribute("duration", DefaultValue=-1)]
        public int Duration { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("enabled", DefaultValue=true)]
        public bool Enabled { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("location")]
        public System.Web.UI.OutputCacheLocation Location { get { throw null; } set { } }
        [System.ComponentModel.TypeConverterAttribute(typeof(System.Configuration.WhiteSpaceTrimStringConverter))]
        [System.Configuration.ConfigurationPropertyAttribute("name", IsRequired=true, IsKey=true, DefaultValue="")]
        [System.Configuration.StringValidatorAttribute(MinLength=1)]
        public string Name { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("noStore", DefaultValue=false)]
        public bool NoStore { get { throw null; } set { } }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("sqlDependency")]
        public string SqlDependency { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("varyByContentEncoding")]
        public string VaryByContentEncoding { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("varyByControl")]
        public string VaryByControl { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("varyByCustom")]
        public string VaryByCustom { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("varyByHeader")]
        public string VaryByHeader { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("varyByParam")]
        public string VaryByParam { get { throw null; } set { } }
    }
    [System.Configuration.ConfigurationCollectionAttribute(typeof(System.Web.Configuration.OutputCacheProfile))]
    public sealed partial class OutputCacheProfileCollection : System.Configuration.ConfigurationElementCollection
    {
        public OutputCacheProfileCollection() { }
        public string[] AllKeys { get { throw null; } }
        public System.Web.Configuration.OutputCacheProfile this[int index] { get { throw null; } set { } }
        public new System.Web.Configuration.OutputCacheProfile this[string name] { get { throw null; } }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
        public void Add(System.Web.Configuration.OutputCacheProfile name) { }
        public void Clear() { }
        protected override System.Configuration.ConfigurationElement CreateNewElement() { throw null; }
        public System.Web.Configuration.OutputCacheProfile Get(int index) { throw null; }
        public System.Web.Configuration.OutputCacheProfile Get(string name) { throw null; }
        protected override object GetElementKey(System.Configuration.ConfigurationElement element) { throw null; }
        public string GetKey(int index) { throw null; }
        public void Remove(string name) { }
        public void RemoveAt(int index) { }
        public void Set(System.Web.Configuration.OutputCacheProfile user) { }
    }
    public sealed partial class OutputCacheSection : System.Configuration.ConfigurationSection
    {
        public OutputCacheSection() { }
        [System.Configuration.ConfigurationPropertyAttribute("defaultProvider", DefaultValue="AspNetInternalProvider")]
        [System.Configuration.StringValidatorAttribute(MinLength=1)]
        public string DefaultProviderName { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("enableFragmentCache", DefaultValue=true)]
        public bool EnableFragmentCache { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("enableKernelCacheForVaryByStar", DefaultValue=false)]
        public bool EnableKernelCacheForVaryByStar { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("enableOutputCache", DefaultValue=true)]
        public bool EnableOutputCache { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("omitVaryStar", DefaultValue=false)]
        public bool OmitVaryStar { get { throw null; } set { } }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("providers")]
        public System.Configuration.ProviderSettingsCollection Providers { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("sendCacheControlHeader", DefaultValue=true)]
        public bool SendCacheControlHeader { get { throw null; } set { } }
    }
    public sealed partial class OutputCacheSettingsSection : System.Configuration.ConfigurationSection
    {
        public OutputCacheSettingsSection() { }
        [System.Configuration.ConfigurationPropertyAttribute("outputCacheProfiles")]
        public System.Web.Configuration.OutputCacheProfileCollection OutputCacheProfiles { get { throw null; } }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
    }
    public enum PagesEnableSessionState
    {
        False = 0,
        ReadOnly = 1,
        True = 2,
    }
    public sealed partial class PagesSection : System.Configuration.ConfigurationSection
    {
        public PagesSection() { }
        [System.ComponentModel.TypeConverterAttribute(typeof(System.Configuration.TimeSpanSecondsConverter))]
        [System.Configuration.ConfigurationPropertyAttribute("asyncTimeout", DefaultValue="00:00:45")]
        [System.Configuration.TimeSpanValidatorAttribute(MinValueString="00:00:00", MaxValueString="10675199.02:48:05.4775807")]
        public System.TimeSpan AsyncTimeout { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("autoEventWireup", DefaultValue=true)]
        public bool AutoEventWireup { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("buffer", DefaultValue=true)]
        public bool Buffer { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("clientIDMode", DefaultValue=System.Web.UI.ClientIDMode.Predictable)]
        public System.Web.UI.ClientIDMode ClientIDMode { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("compilationMode", DefaultValue=System.Web.UI.CompilationMode.Always)]
        public System.Web.UI.CompilationMode CompilationMode { get { throw null; } set { } }
        [System.ComponentModel.TypeConverterAttribute("System.Web.Configuration.VersionConverter")]
        [System.Configuration.ConfigurationPropertyAttribute("controlRenderingCompatibilityVersion", DefaultValue="4.0")]
        public System.Version ControlRenderingCompatibilityVersion { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("controls")]
        public System.Web.Configuration.TagPrefixCollection Controls { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("enableEventValidation", DefaultValue=true)]
        public bool EnableEventValidation { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("enableSessionState", DefaultValue="true")]
        public System.Web.Configuration.PagesEnableSessionState EnableSessionState { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("enableViewState", DefaultValue=true)]
        public bool EnableViewState { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("enableViewStateMac", DefaultValue=true)]
        public bool EnableViewStateMac { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("ignoreDeviceFilters")]
        public System.Web.Configuration.IgnoreDeviceFilterElementCollection IgnoreDeviceFilters { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("maintainScrollPositionOnPostBack", DefaultValue=false)]
        public bool MaintainScrollPositionOnPostBack { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("masterPageFile", DefaultValue="")]
        public string MasterPageFile { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("maxPageStateFieldLength", DefaultValue=-1)]
        public int MaxPageStateFieldLength { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("namespaces")]
        public System.Web.Configuration.NamespaceCollection Namespaces { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("pageBaseType", DefaultValue="System.Web.UI.Page")]
        public string PageBaseType { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("pageParserFilterType", DefaultValue="")]
        public string PageParserFilterType { get { throw null; } set { } }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("renderAllHiddenFieldsAtTopOfForm", DefaultValue=true)]
        public bool RenderAllHiddenFieldsAtTopOfForm { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("smartNavigation", DefaultValue=false)]
        public bool SmartNavigation { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("styleSheetTheme", DefaultValue="")]
        public string StyleSheetTheme { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("tagMapping")]
        public System.Web.Configuration.TagMapCollection TagMapping { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("theme", DefaultValue="")]
        public string Theme { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("userControlBaseType", DefaultValue="System.Web.UI.UserControl")]
        public string UserControlBaseType { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("validateRequest", DefaultValue=true)]
        public bool ValidateRequest { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("viewStateEncryptionMode", DefaultValue=System.Web.UI.ViewStateEncryptionMode.Auto)]
        public System.Web.UI.ViewStateEncryptionMode ViewStateEncryptionMode { get { throw null; } set { } }
        protected override void DeserializeSection(System.Xml.XmlReader reader) { }
        protected override void SetReadOnly() { }
    }
    public sealed partial class PartialTrustVisibleAssembliesSection : System.Configuration.ConfigurationSection
    {
        public PartialTrustVisibleAssembliesSection() { }
        [System.Configuration.ConfigurationPropertyAttribute("", IsDefaultCollection=true)]
        public System.Web.Configuration.PartialTrustVisibleAssemblyCollection PartialTrustVisibleAssemblies { get { throw null; } }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
    }
    public sealed partial class PartialTrustVisibleAssembly : System.Configuration.ConfigurationElement
    {
        public PartialTrustVisibleAssembly(string assemblyName, string publicKey) { }
        [System.Configuration.ConfigurationPropertyAttribute("assemblyName", IsRequired=true, IsKey=true, DefaultValue="")]
        [System.Configuration.StringValidatorAttribute(MinLength=1)]
        public string AssemblyName { get { throw null; } set { } }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("publicKey", IsRequired=true, IsKey=false, DefaultValue="")]
        [System.Configuration.StringValidatorAttribute(MinLength=1)]
        public string PublicKey { get { throw null; } set { } }
    }
    [System.Configuration.ConfigurationCollectionAttribute(typeof(string))]
    public sealed partial class PartialTrustVisibleAssemblyCollection : System.Configuration.ConfigurationElementCollection
    {
        public PartialTrustVisibleAssemblyCollection() { }
        public System.Web.Configuration.PartialTrustVisibleAssembly this[int index] { get { throw null; } set { } }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
        public void Add(System.Web.Configuration.PartialTrustVisibleAssembly partialTrustVisibleAssembly) { }
        public void Clear() { }
        protected override System.Configuration.ConfigurationElement CreateNewElement() { throw null; }
        protected override object GetElementKey(System.Configuration.ConfigurationElement element) { throw null; }
        public void Remove(string key) { }
        public void RemoveAt(int index) { }
    }
    [System.ObsoleteAttribute("This type is obsolete. The Passport authentication product is no longer supported and has been superseded by Live ID.")]
    public sealed partial class PassportAuthentication : System.Configuration.ConfigurationElement
    {
        public PassportAuthentication() { }
        protected override System.Configuration.ConfigurationElementProperty ElementProperty { get { throw null; } }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("redirectUrl", DefaultValue="internal")]
        [System.Configuration.StringValidatorAttribute]
        public string RedirectUrl { get { throw null; } set { } }
    }
    public enum ProcessModelComAuthenticationLevel
    {
        Call = 1,
        Connect = 2,
        Default = 3,
        None = 0,
        Pkt = 4,
        PktIntegrity = 5,
        PktPrivacy = 6,
    }
    public enum ProcessModelComImpersonationLevel
    {
        Anonymous = 1,
        Default = 0,
        Delegate = 2,
        Identify = 3,
        Impersonate = 4,
    }
    public enum ProcessModelLogLevel
    {
        All = 1,
        Errors = 2,
        None = 0,
    }
    public sealed partial class ProcessModelSection : System.Configuration.ConfigurationSection
    {
        public ProcessModelSection() { }
        [System.Configuration.ConfigurationPropertyAttribute("autoConfig", DefaultValue=false)]
        public bool AutoConfig { get { throw null; } set { } }
        [System.ComponentModel.TypeConverterAttribute(typeof(System.Configuration.InfiniteTimeSpanConverter))]
        [System.Configuration.ConfigurationPropertyAttribute("clientConnectedCheck", DefaultValue="00:00:05")]
        public System.TimeSpan ClientConnectedCheck { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("comAuthenticationLevel", DefaultValue=System.Web.Configuration.ProcessModelComAuthenticationLevel.Connect)]
        public System.Web.Configuration.ProcessModelComAuthenticationLevel ComAuthenticationLevel { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("comImpersonationLevel", DefaultValue=System.Web.Configuration.ProcessModelComImpersonationLevel.Impersonate)]
        public System.Web.Configuration.ProcessModelComImpersonationLevel ComImpersonationLevel { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("cpuMask", DefaultValue="0xffffffff")]
        public int CpuMask { get { throw null; } set { } }
        protected override System.Configuration.ConfigurationElementProperty ElementProperty { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("enable", DefaultValue=true)]
        public bool Enable { get { throw null; } set { } }
        [System.ComponentModel.TypeConverterAttribute(typeof(System.Configuration.InfiniteTimeSpanConverter))]
        [System.Configuration.ConfigurationPropertyAttribute("idleTimeout", DefaultValue="10675199.02:48:05.4775807")]
        public System.TimeSpan IdleTimeout { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("logLevel", DefaultValue=System.Web.Configuration.ProcessModelLogLevel.Errors)]
        public System.Web.Configuration.ProcessModelLogLevel LogLevel { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("maxAppDomains", DefaultValue=2000)]
        [System.Configuration.IntegerValidatorAttribute(MinValue=1, MaxValue=2147483646)]
        public int MaxAppDomains { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("maxIoThreads", DefaultValue=20)]
        [System.Configuration.IntegerValidatorAttribute(MinValue=1, MaxValue=2147483646)]
        public int MaxIOThreads { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("maxWorkerThreads", DefaultValue=20)]
        [System.Configuration.IntegerValidatorAttribute(MinValue=1, MaxValue=2147483646)]
        public int MaxWorkerThreads { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("memoryLimit", DefaultValue=60)]
        public int MemoryLimit { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("minIoThreads", DefaultValue=1)]
        [System.Configuration.IntegerValidatorAttribute(MinValue=1, MaxValue=2147483646)]
        public int MinIOThreads { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("minWorkerThreads", DefaultValue=1)]
        [System.Configuration.IntegerValidatorAttribute(MinValue=1, MaxValue=2147483646)]
        public int MinWorkerThreads { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("password", DefaultValue="AutoGenerate")]
        public string Password { get { throw null; } set { } }
        [System.ComponentModel.TypeConverterAttribute(typeof(System.Configuration.InfiniteTimeSpanConverter))]
        [System.Configuration.ConfigurationPropertyAttribute("pingFrequency", DefaultValue="10675199.02:48:05.4775807")]
        public System.TimeSpan PingFrequency { get { throw null; } set { } }
        [System.ComponentModel.TypeConverterAttribute(typeof(System.Configuration.InfiniteTimeSpanConverter))]
        [System.Configuration.ConfigurationPropertyAttribute("pingTimeout", DefaultValue="10675199.02:48:05.4775807")]
        public System.TimeSpan PingTimeout { get { throw null; } set { } }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
        [System.ComponentModel.TypeConverterAttribute(typeof(System.Configuration.InfiniteIntConverter))]
        [System.Configuration.ConfigurationPropertyAttribute("requestLimit", DefaultValue=2147483647)]
        [System.Configuration.IntegerValidatorAttribute(MinValue=0)]
        public int RequestLimit { get { throw null; } set { } }
        [System.ComponentModel.TypeConverterAttribute(typeof(System.Configuration.InfiniteIntConverter))]
        [System.Configuration.ConfigurationPropertyAttribute("requestQueueLimit", DefaultValue=5000)]
        [System.Configuration.IntegerValidatorAttribute(MinValue=0)]
        public int RequestQueueLimit { get { throw null; } set { } }
        [System.ComponentModel.TypeConverterAttribute(typeof(System.Configuration.InfiniteTimeSpanConverter))]
        [System.Configuration.ConfigurationPropertyAttribute("responseDeadlockInterval", DefaultValue="00:03:00")]
        [System.Configuration.TimeSpanValidatorAttribute(MinValueString="00:00:00", MaxValueString="10675199.02:48:05.4775807")]
        public System.TimeSpan ResponseDeadlockInterval { get { throw null; } set { } }
        [System.ComponentModel.TypeConverterAttribute(typeof(System.Configuration.InfiniteTimeSpanConverter))]
        [System.Configuration.ConfigurationPropertyAttribute("responseRestartDeadlockInterval", DefaultValue="00:03:00")]
        public System.TimeSpan ResponseRestartDeadlockInterval { get { throw null; } set { } }
        [System.ComponentModel.TypeConverterAttribute(typeof(System.Configuration.InfiniteIntConverter))]
        [System.Configuration.ConfigurationPropertyAttribute("restartQueueLimit", DefaultValue=10)]
        [System.Configuration.IntegerValidatorAttribute(MinValue=0)]
        public int RestartQueueLimit { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("serverErrorMessageFile", DefaultValue="")]
        public string ServerErrorMessageFile { get { throw null; } set { } }
        [System.ComponentModel.TypeConverterAttribute(typeof(System.Configuration.InfiniteTimeSpanConverter))]
        [System.Configuration.ConfigurationPropertyAttribute("shutdownTimeout", DefaultValue="00:00:05")]
        [System.Configuration.TimeSpanValidatorAttribute(MinValueString="00:00:00", MaxValueString="10675199.02:48:05.4775807")]
        public System.TimeSpan ShutdownTimeout { get { throw null; } set { } }
        [System.ComponentModel.TypeConverterAttribute(typeof(System.Configuration.InfiniteTimeSpanConverter))]
        [System.Configuration.ConfigurationPropertyAttribute("timeout", DefaultValue="10675199.02:48:05.4775807")]
        public System.TimeSpan Timeout { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("userName", DefaultValue="machine")]
        public string UserName { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("webGarden", DefaultValue=false)]
        public bool WebGarden { get { throw null; } set { } }
    }
    public sealed partial class ProfileGroupSettings : System.Configuration.ConfigurationElement
    {
        public ProfileGroupSettings(string name) { }
        [System.Configuration.ConfigurationPropertyAttribute("name", IsRequired=true, IsKey=true)]
        public string Name { get { throw null; } }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("", IsDefaultCollection=true)]
        public System.Web.Configuration.ProfilePropertySettingsCollection PropertySettings { get { throw null; } }
        public override bool Equals(object obj) { throw null; }
        public override int GetHashCode() { throw null; }
    }
    [System.Configuration.ConfigurationCollectionAttribute(typeof(System.Web.Configuration.ProfileGroupSettings), AddItemName="group")]
    public sealed partial class ProfileGroupSettingsCollection : System.Configuration.ConfigurationElementCollection
    {
        public ProfileGroupSettingsCollection() { }
        public string[] AllKeys { get { throw null; } }
        public System.Web.Configuration.ProfileGroupSettings this[int index] { get { throw null; } set { } }
        public new System.Web.Configuration.ProfileGroupSettings this[string name] { get { throw null; } }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
        public void Add(System.Web.Configuration.ProfileGroupSettings group) { }
        public void Clear() { }
        protected override System.Configuration.ConfigurationElement CreateNewElement() { throw null; }
        public System.Web.Configuration.ProfileGroupSettings Get(int index) { throw null; }
        public System.Web.Configuration.ProfileGroupSettings Get(string name) { throw null; }
        protected override object GetElementKey(System.Configuration.ConfigurationElement element) { throw null; }
        public string GetKey(int index) { throw null; }
        public int IndexOf(System.Web.Configuration.ProfileGroupSettings group) { throw null; }
        protected override bool IsModified() { throw null; }
        public void Remove(string name) { }
        public void RemoveAt(int index) { }
        protected override void ResetModified() { }
        public void Set(System.Web.Configuration.ProfileGroupSettings group) { }
    }
    [System.FlagsAttribute]
    public enum ProfileGuidedOptimizationsFlags
    {
        All = 1,
        None = 0,
    }
    public sealed partial class ProfilePropertySettings : System.Configuration.ConfigurationElement
    {
        public ProfilePropertySettings(string name) { }
        public ProfilePropertySettings(string name, bool readOnly, System.Web.Configuration.SerializationMode serializeAs, string providerName, string defaultValue, string profileType, bool allowAnonymous, string customProviderData) { }
        [System.Configuration.ConfigurationPropertyAttribute("allowAnonymous", DefaultValue=false)]
        public bool AllowAnonymous { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("customProviderData", DefaultValue="")]
        public string CustomProviderData { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("defaultValue", DefaultValue="")]
        public string DefaultValue { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("name", IsRequired=true, IsKey=true)]
        public string Name { get { throw null; } set { } }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("provider", DefaultValue="")]
        public string Provider { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("readOnly", DefaultValue=false)]
        public bool ReadOnly { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("serializeAs", DefaultValue=System.Web.Configuration.SerializationMode.ProviderSpecific)]
        public System.Web.Configuration.SerializationMode SerializeAs { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("type", DefaultValue="string")]
        public string Type { get { throw null; } set { } }
    }
    [System.Configuration.ConfigurationCollectionAttribute(typeof(System.Web.Configuration.ProfilePropertySettings))]
    public partial class ProfilePropertySettingsCollection : System.Configuration.ConfigurationElementCollection
    {
        public ProfilePropertySettingsCollection() { }
        public string[] AllKeys { get { throw null; } }
        protected virtual bool AllowClear { get { throw null; } }
        public System.Web.Configuration.ProfilePropertySettings this[int index] { get { throw null; } set { } }
        public new System.Web.Configuration.ProfilePropertySettings this[string name] { get { throw null; } }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
        protected override bool ThrowOnDuplicate { get { throw null; } }
        public void Add(System.Web.Configuration.ProfilePropertySettings propertySettings) { }
        public void Clear() { }
        protected override System.Configuration.ConfigurationElement CreateNewElement() { throw null; }
        public System.Web.Configuration.ProfilePropertySettings Get(int index) { throw null; }
        public System.Web.Configuration.ProfilePropertySettings Get(string name) { throw null; }
        protected override object GetElementKey(System.Configuration.ConfigurationElement element) { throw null; }
        public string GetKey(int index) { throw null; }
        public int IndexOf(System.Web.Configuration.ProfilePropertySettings propertySettings) { throw null; }
        protected override bool OnDeserializeUnrecognizedElement(string elementName, System.Xml.XmlReader reader) { throw null; }
        public void Remove(string name) { }
        public void RemoveAt(int index) { }
        public void Set(System.Web.Configuration.ProfilePropertySettings propertySettings) { }
    }
    public sealed partial class ProfileSection : System.Configuration.ConfigurationSection
    {
        public ProfileSection() { }
        [System.Configuration.ConfigurationPropertyAttribute("automaticSaveEnabled", DefaultValue=true)]
        public bool AutomaticSaveEnabled { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("defaultProvider", DefaultValue="AspNetSqlProfileProvider")]
        [System.Configuration.StringValidatorAttribute(MinLength=1)]
        public string DefaultProvider { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("enabled", DefaultValue=true)]
        public bool Enabled { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("inherits", DefaultValue="")]
        public string Inherits { get { throw null; } set { } }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("properties")]
        public System.Web.Configuration.RootProfilePropertySettingsCollection PropertySettings { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("providers")]
        public System.Configuration.ProviderSettingsCollection Providers { get { throw null; } }
    }
    public sealed partial class ProfileSettings : System.Configuration.ConfigurationElement
    {
        public ProfileSettings(string name) { }
        public ProfileSettings(string name, int minInstances, int maxLimit, System.TimeSpan minInterval) { }
        public ProfileSettings(string name, int minInstances, int maxLimit, System.TimeSpan minInterval, string custom) { }
        [System.Configuration.ConfigurationPropertyAttribute("custom", DefaultValue="")]
        public string Custom { get { throw null; } set { } }
        [System.ComponentModel.TypeConverterAttribute(typeof(System.Configuration.InfiniteIntConverter))]
        [System.Configuration.ConfigurationPropertyAttribute("maxLimit", DefaultValue=2147483647)]
        [System.Configuration.IntegerValidatorAttribute(MinValue=0)]
        public int MaxLimit { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("minInstances", DefaultValue=1)]
        [System.Configuration.IntegerValidatorAttribute(MinValue=1)]
        public int MinInstances { get { throw null; } set { } }
        [System.ComponentModel.TypeConverterAttribute(typeof(System.Configuration.InfiniteTimeSpanConverter))]
        [System.Configuration.ConfigurationPropertyAttribute("minInterval", DefaultValue="00:00:00")]
        public System.TimeSpan MinInterval { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("name", IsRequired=true, IsKey=true, DefaultValue="")]
        [System.Configuration.StringValidatorAttribute(MinLength=1)]
        public string Name { get { throw null; } set { } }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
    }
    [System.Configuration.ConfigurationCollectionAttribute(typeof(System.Web.Configuration.ProfileSettings))]
    public sealed partial class ProfileSettingsCollection : System.Configuration.ConfigurationElementCollection
    {
        public ProfileSettingsCollection() { }
        public System.Web.Configuration.ProfileSettings this[int index] { get { throw null; } set { } }
        public new System.Web.Configuration.ProfileSettings this[string key] { get { throw null; } }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
        public void Add(System.Web.Configuration.ProfileSettings profilesSettings) { }
        public void Clear() { }
        public bool Contains(string name) { throw null; }
        protected override System.Configuration.ConfigurationElement CreateNewElement() { throw null; }
        protected override object GetElementKey(System.Configuration.ConfigurationElement element) { throw null; }
        public int IndexOf(string name) { throw null; }
        public void Insert(int index, System.Web.Configuration.ProfileSettings authorizationSettings) { }
        public void Remove(string name) { }
        public void RemoveAt(int index) { }
    }
    [System.Configuration.ConfigurationCollectionAttribute(typeof(System.Web.Configuration.ProtocolElement))]
    public sealed partial class ProtocolCollection : System.Configuration.ConfigurationElementCollection
    {
        public ProtocolCollection() { }
        public string[] AllKeys { get { throw null; } }
        public System.Web.Configuration.ProtocolElement this[int index] { get { throw null; } set { } }
        public new System.Web.Configuration.ProtocolElement this[string name] { get { throw null; } }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
        public void Add(System.Web.Configuration.ProtocolElement protocolElement) { }
        public void Clear() { }
        protected override System.Configuration.ConfigurationElement CreateNewElement() { throw null; }
        protected override object GetElementKey(System.Configuration.ConfigurationElement element) { throw null; }
        public void Remove(string name) { }
        public void Remove(System.Web.Configuration.ProtocolElement protocolElement) { }
        public void RemoveAt(int index) { }
    }
    public sealed partial class ProtocolElement : System.Configuration.ConfigurationElement
    {
        public ProtocolElement() { }
        public ProtocolElement(string name) { }
        [System.Configuration.ConfigurationPropertyAttribute("appDomainHandlerType")]
        public string AppDomainHandlerType { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("name", IsRequired=true, IsKey=true)]
        [System.Configuration.StringValidatorAttribute(MinLength=1)]
        public string Name { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("processHandlerType")]
        public string ProcessHandlerType { get { throw null; } set { } }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("validate", DefaultValue=false)]
        public bool Validate { get { throw null; } set { } }
        protected override void PostDeserialize() { }
    }
    public sealed partial class ProtocolsConfigurationHandler : System.Configuration.IConfigurationSectionHandler
    {
        public ProtocolsConfigurationHandler() { }
        public object Create(object parent, object configContextObj, System.Xml.XmlNode section) { throw null; }
    }
    public sealed partial class ProtocolsSection : System.Configuration.ConfigurationSection
    {
        public ProtocolsSection() { }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("protocols", IsRequired=true, IsDefaultCollection=true)]
        public System.Web.Configuration.ProtocolCollection Protocols { get { throw null; } }
    }
    public static partial class ProvidersHelper
    {
        [System.Web.AspNetHostingPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, Level=System.Web.AspNetHostingPermissionLevel.Low)]
        public static System.Configuration.Provider.ProviderBase InstantiateProvider(System.Configuration.ProviderSettings providerSettings, System.Type providerType) { throw null; }
        [System.Web.AspNetHostingPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, Level=System.Web.AspNetHostingPermissionLevel.Low)]
        public static void InstantiateProviders(System.Configuration.ProviderSettingsCollection configProviders, System.Configuration.Provider.ProviderCollection providers, System.Type providerType) { }
    }
    public partial class RegexWorker
    {
        public RegexWorker(System.Web.HttpBrowserCapabilities browserCaps) { }
        public string this[string key] { get { throw null; } }
        public bool ProcessRegex(string target, string regexExpression) { throw null; }
    }
    [System.Runtime.InteropServices.ClassInterfaceAttribute(System.Runtime.InteropServices.ClassInterfaceType.AutoDual)]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    [System.Runtime.InteropServices.GuidAttribute("9FDB6D2C-90EA-4e42-99E6-38B96E28698E")]
    [System.Runtime.InteropServices.ProgIdAttribute("System.Web.Configuration.RemoteWebConfigurationHostServerV4_32")]
    [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, Unrestricted=true)]
    public partial class RemoteWebConfigurationHostServer : System.Web.Configuration.IRemoteWebConfigurationHostServer
    {
        public RemoteWebConfigurationHostServer() { }
        public string DoEncryptOrDecrypt(bool doEncrypt, string xmlString, string protectionProviderName, string protectionProviderType, string[] paramKeys, string[] paramValues) { throw null; }
        public byte[] GetData(string fileName, bool getReadTimeOnly, out long readTime) { throw null; }
        public void GetFileDetails(string name, out bool exists, out long size, out long createDate, out long lastWriteDate) { throw null; }
        public string GetFilePaths(int webLevelAsInt, string path, string site, string locationSubPath) { throw null; }
        public void WriteData(string fileName, string templateFileName, byte[] data, ref long readTime) { }
    }
    public sealed partial class RoleManagerSection : System.Configuration.ConfigurationSection
    {
        public RoleManagerSection() { }
        [System.Configuration.ConfigurationPropertyAttribute("cacheRolesInCookie", DefaultValue=false)]
        public bool CacheRolesInCookie { get { throw null; } set { } }
        [System.ComponentModel.TypeConverterAttribute(typeof(System.Configuration.WhiteSpaceTrimStringConverter))]
        [System.Configuration.ConfigurationPropertyAttribute("cookieName", DefaultValue=".ASPXROLES")]
        [System.Configuration.StringValidatorAttribute(MinLength=1)]
        public string CookieName { get { throw null; } set { } }
        [System.ComponentModel.TypeConverterAttribute(typeof(System.Configuration.WhiteSpaceTrimStringConverter))]
        [System.Configuration.ConfigurationPropertyAttribute("cookiePath", DefaultValue="/")]
        [System.Configuration.StringValidatorAttribute(MinLength=1)]
        public string CookiePath { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("cookieProtection", DefaultValue=System.Web.Security.CookieProtection.All)]
        public System.Web.Security.CookieProtection CookieProtection { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("cookieRequireSSL", DefaultValue=false)]
        public bool CookieRequireSSL { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("cookieSlidingExpiration", DefaultValue=true)]
        public bool CookieSlidingExpiration { get { throw null; } set { } }
        [System.ComponentModel.TypeConverterAttribute(typeof(System.Configuration.TimeSpanMinutesOrInfiniteConverter))]
        [System.Configuration.ConfigurationPropertyAttribute("cookieTimeout", DefaultValue="00:30:00")]
        [System.Configuration.TimeSpanValidatorAttribute(MinValueString="00:00:00", MaxValueString="10675199.02:48:05.4775807")]
        public System.TimeSpan CookieTimeout { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("createPersistentCookie", DefaultValue=false)]
        public bool CreatePersistentCookie { get { throw null; } set { } }
        [System.ComponentModel.TypeConverterAttribute(typeof(System.Configuration.WhiteSpaceTrimStringConverter))]
        [System.Configuration.ConfigurationPropertyAttribute("defaultProvider", DefaultValue="AspNetSqlRoleProvider")]
        [System.Configuration.StringValidatorAttribute(MinLength=1)]
        public string DefaultProvider { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("domain")]
        public string Domain { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("enabled", DefaultValue=false)]
        public bool Enabled { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("maxCachedResults", DefaultValue=25)]
        public int MaxCachedResults { get { throw null; } set { } }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("providers")]
        public System.Configuration.ProviderSettingsCollection Providers { get { throw null; } }
    }
    [System.Configuration.ConfigurationCollectionAttribute(typeof(System.Web.Configuration.ProfilePropertySettings))]
    public sealed partial class RootProfilePropertySettingsCollection : System.Web.Configuration.ProfilePropertySettingsCollection
    {
        public RootProfilePropertySettingsCollection() { }
        protected override bool AllowClear { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("group")]
        public System.Web.Configuration.ProfileGroupSettingsCollection GroupSettings { get { throw null; } }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
        protected override bool ThrowOnDuplicate { get { throw null; } }
        public override bool Equals(object rootProfilePropertySettingsCollection) { throw null; }
        public override int GetHashCode() { throw null; }
        protected override bool IsModified() { throw null; }
        protected override bool OnDeserializeUnrecognizedElement(string elementName, System.Xml.XmlReader reader) { throw null; }
        protected override void Reset(System.Configuration.ConfigurationElement parentElement) { }
        protected override void ResetModified() { }
        protected override bool SerializeElement(System.Xml.XmlWriter writer, bool serializeCollectionKey) { throw null; }
        protected override void Unmerge(System.Configuration.ConfigurationElement sourceElement, System.Configuration.ConfigurationElement parentElement, System.Configuration.ConfigurationSaveMode saveMode) { }
    }
    public sealed partial class RuleSettings : System.Configuration.ConfigurationElement
    {
        public RuleSettings(string name, string eventName, string provider) { }
        public RuleSettings(string name, string eventName, string provider, string profile, int minInstances, int maxLimit, System.TimeSpan minInterval) { }
        public RuleSettings(string name, string eventName, string provider, string profile, int minInstances, int maxLimit, System.TimeSpan minInterval, string custom) { }
        [System.Configuration.ConfigurationPropertyAttribute("custom", DefaultValue="")]
        public string Custom { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("eventName", IsRequired=true, DefaultValue="")]
        public string EventName { get { throw null; } set { } }
        [System.ComponentModel.TypeConverterAttribute(typeof(System.Configuration.InfiniteIntConverter))]
        [System.Configuration.ConfigurationPropertyAttribute("maxLimit", DefaultValue=2147483647)]
        [System.Configuration.IntegerValidatorAttribute(MinValue=0)]
        public int MaxLimit { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("minInstances", DefaultValue=1)]
        [System.Configuration.IntegerValidatorAttribute(MinValue=1)]
        public int MinInstances { get { throw null; } set { } }
        [System.ComponentModel.TypeConverterAttribute(typeof(System.Configuration.InfiniteTimeSpanConverter))]
        [System.Configuration.ConfigurationPropertyAttribute("minInterval", DefaultValue="00:00:00")]
        public System.TimeSpan MinInterval { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("name", IsRequired=true, IsKey=true, DefaultValue="")]
        [System.Configuration.StringValidatorAttribute(MinLength=1)]
        public string Name { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("profile", DefaultValue="")]
        public string Profile { get { throw null; } set { } }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("provider", DefaultValue="")]
        public string Provider { get { throw null; } set { } }
    }
    [System.Configuration.ConfigurationCollectionAttribute(typeof(System.Web.Configuration.RuleSettings))]
    public sealed partial class RuleSettingsCollection : System.Configuration.ConfigurationElementCollection
    {
        public RuleSettingsCollection() { }
        public System.Web.Configuration.RuleSettings this[int index] { get { throw null; } set { } }
        public new System.Web.Configuration.RuleSettings this[string key] { get { throw null; } }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
        public void Add(System.Web.Configuration.RuleSettings ruleSettings) { }
        public void Clear() { }
        public bool Contains(string name) { throw null; }
        protected override System.Configuration.ConfigurationElement CreateNewElement() { throw null; }
        protected override object GetElementKey(System.Configuration.ConfigurationElement element) { throw null; }
        public int IndexOf(string name) { throw null; }
        public void Insert(int index, System.Web.Configuration.RuleSettings eventSettings) { }
        public void Remove(string name) { }
        public void RemoveAt(int index) { }
    }
    public sealed partial class SecurityPolicySection : System.Configuration.ConfigurationSection
    {
        public SecurityPolicySection() { }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("", IsDefaultCollection=true)]
        public System.Web.Configuration.TrustLevelCollection TrustLevels { get { throw null; } }
    }
    public enum SerializationMode
    {
        Binary = 2,
        ProviderSpecific = 3,
        String = 0,
        Xml = 1,
    }
    public sealed partial class SessionPageStateSection : System.Configuration.ConfigurationSection
    {
        public const int DefaultHistorySize = 9;
        public SessionPageStateSection() { }
        [System.Configuration.ConfigurationPropertyAttribute("historySize", DefaultValue=9)]
        [System.Configuration.IntegerValidatorAttribute(MinValue=1)]
        public int HistorySize { get { throw null; } set { } }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
    }
    public sealed partial class SessionStateSection : System.Configuration.ConfigurationSection
    {
        public SessionStateSection() { }
        [System.Configuration.ConfigurationPropertyAttribute("allowCustomSqlDatabase", DefaultValue=false)]
        public bool AllowCustomSqlDatabase { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("compressionEnabled", DefaultValue=false)]
        public bool CompressionEnabled { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("cookieless")]
        public System.Web.HttpCookieMode Cookieless { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("cookieName", DefaultValue="ASP.NET_SessionId")]
        public string CookieName { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("cookieSameSite")]
        public System.Web.SameSiteMode CookieSameSite { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("customProvider", DefaultValue="")]
        public string CustomProvider { get { throw null; } set { } }
        protected override System.Configuration.ConfigurationElementProperty ElementProperty { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("mode", DefaultValue=System.Web.SessionState.SessionStateMode.InProc)]
        public System.Web.SessionState.SessionStateMode Mode { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("partitionResolverType", DefaultValue="")]
        public string PartitionResolverType { get { throw null; } set { } }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("providers")]
        public System.Configuration.ProviderSettingsCollection Providers { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("regenerateExpiredSessionId", DefaultValue=true)]
        public bool RegenerateExpiredSessionId { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("sessionIDManagerType", DefaultValue="")]
        public string SessionIDManagerType { get { throw null; } set { } }
        [System.ComponentModel.TypeConverterAttribute(typeof(System.Configuration.TimeSpanSecondsOrInfiniteConverter))]
        [System.Configuration.ConfigurationPropertyAttribute("sqlCommandTimeout", DefaultValue="00:00:30")]
        public System.TimeSpan SqlCommandTimeout { get { throw null; } set { } }
        [System.ComponentModel.TypeConverterAttribute(typeof(System.Configuration.TimeSpanSecondsOrInfiniteConverter))]
        [System.Configuration.ConfigurationPropertyAttribute("sqlConnectionRetryInterval", DefaultValue="00:00:00")]
        public System.TimeSpan SqlConnectionRetryInterval { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("sqlConnectionString", DefaultValue="data source=localhost;Integrated Security=SSPI")]
        public string SqlConnectionString { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("stateConnectionString", DefaultValue="tcpip=loopback:42424")]
        public string StateConnectionString { get { throw null; } set { } }
        [System.ComponentModel.TypeConverterAttribute(typeof(System.Configuration.TimeSpanSecondsOrInfiniteConverter))]
        [System.Configuration.ConfigurationPropertyAttribute("stateNetworkTimeout", DefaultValue="00:00:10")]
        public System.TimeSpan StateNetworkTimeout { get { throw null; } set { } }
        [System.ComponentModel.TypeConverterAttribute(typeof(System.Configuration.TimeSpanMinutesOrInfiniteConverter))]
        [System.Configuration.ConfigurationPropertyAttribute("timeout", DefaultValue="00:20:00")]
        [System.Configuration.TimeSpanValidatorAttribute(MinValueString="00:01:00", MaxValueString="10675199.02:48:05.4775807")]
        public System.TimeSpan Timeout { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("useHostingIdentity", DefaultValue=true)]
        public bool UseHostingIdentity { get { throw null; } set { } }
        protected override void PostDeserialize() { }
    }
    public sealed partial class SiteMapSection : System.Configuration.ConfigurationSection
    {
        public SiteMapSection() { }
        [System.Configuration.ConfigurationPropertyAttribute("defaultProvider", DefaultValue="AspNetXmlSiteMapProvider")]
        [System.Configuration.StringValidatorAttribute(MinLength=1)]
        public string DefaultProvider { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("enabled", DefaultValue=true)]
        public bool Enabled { get { throw null; } set { } }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("providers")]
        public System.Configuration.ProviderSettingsCollection Providers { get { throw null; } }
    }
    public sealed partial class SqlCacheDependencyDatabase : System.Configuration.ConfigurationElement
    {
        public SqlCacheDependencyDatabase(string name, string connectionStringName) { }
        public SqlCacheDependencyDatabase(string name, string connectionStringName, int pollTime) { }
        [System.Configuration.ConfigurationPropertyAttribute("connectionStringName", IsRequired=true)]
        [System.Configuration.StringValidatorAttribute(MinLength=1)]
        public string ConnectionStringName { get { throw null; } set { } }
        protected override System.Configuration.ConfigurationElementProperty ElementProperty { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("name", IsRequired=true, IsKey=true)]
        [System.Configuration.StringValidatorAttribute(MinLength=1)]
        public string Name { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("pollTime", DefaultValue=60000)]
        public int PollTime { get { throw null; } set { } }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
    }
    [System.Configuration.ConfigurationCollectionAttribute(typeof(System.Web.Configuration.SqlCacheDependencyDatabase))]
    public sealed partial class SqlCacheDependencyDatabaseCollection : System.Configuration.ConfigurationElementCollection
    {
        public SqlCacheDependencyDatabaseCollection() { }
        public string[] AllKeys { get { throw null; } }
        public System.Web.Configuration.SqlCacheDependencyDatabase this[int index] { get { throw null; } set { } }
        public new System.Web.Configuration.SqlCacheDependencyDatabase this[string name] { get { throw null; } }
        public void Add(System.Web.Configuration.SqlCacheDependencyDatabase name) { }
        public void Clear() { }
        protected override System.Configuration.ConfigurationElement CreateNewElement() { throw null; }
        public System.Web.Configuration.SqlCacheDependencyDatabase Get(int index) { throw null; }
        public System.Web.Configuration.SqlCacheDependencyDatabase Get(string name) { throw null; }
        protected override object GetElementKey(System.Configuration.ConfigurationElement element) { throw null; }
        public string GetKey(int index) { throw null; }
        public void Remove(string name) { }
        public void RemoveAt(int index) { }
        public void Set(System.Web.Configuration.SqlCacheDependencyDatabase user) { }
    }
    public sealed partial class SqlCacheDependencySection : System.Configuration.ConfigurationSection
    {
        public SqlCacheDependencySection() { }
        [System.Configuration.ConfigurationPropertyAttribute("databases")]
        public System.Web.Configuration.SqlCacheDependencyDatabaseCollection Databases { get { throw null; } }
        protected override System.Configuration.ConfigurationElementProperty ElementProperty { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("enabled", DefaultValue=true)]
        public bool Enabled { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("pollTime", DefaultValue=60000)]
        public int PollTime { get { throw null; } set { } }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
        protected override void PostDeserialize() { }
    }
    public sealed partial class SystemWebCachingSectionGroup : System.Configuration.ConfigurationSectionGroup
    {
        public SystemWebCachingSectionGroup() { }
        [System.Configuration.ConfigurationPropertyAttribute("cache")]
        public System.Web.Configuration.CacheSection Cache { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("outputCache")]
        public System.Web.Configuration.OutputCacheSection OutputCache { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("outputCacheSettings")]
        public System.Web.Configuration.OutputCacheSettingsSection OutputCacheSettings { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("sqlCacheDependency")]
        public System.Web.Configuration.SqlCacheDependencySection SqlCacheDependency { get { throw null; } }
    }
    public sealed partial class SystemWebSectionGroup : System.Configuration.ConfigurationSectionGroup
    {
        public SystemWebSectionGroup() { }
        [System.Configuration.ConfigurationPropertyAttribute("anonymousIdentification")]
        public System.Web.Configuration.AnonymousIdentificationSection AnonymousIdentification { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("authentication")]
        public System.Web.Configuration.AuthenticationSection Authentication { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("authorization")]
        public System.Web.Configuration.AuthorizationSection Authorization { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("browserCaps")]
        public System.Configuration.DefaultSection BrowserCaps { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("clientTarget")]
        public System.Web.Configuration.ClientTargetSection ClientTarget { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("compilation")]
        public System.Web.Configuration.CompilationSection Compilation { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("customErrors")]
        public System.Web.Configuration.CustomErrorsSection CustomErrors { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("deployment")]
        public System.Web.Configuration.DeploymentSection Deployment { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("deviceFilters")]
        public System.Configuration.DefaultSection DeviceFilters { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("fullTrustAssemblies")]
        public System.Web.Configuration.FullTrustAssembliesSection FullTrustAssemblies { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("globalization")]
        public System.Web.Configuration.GlobalizationSection Globalization { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("healthMonitoring")]
        public System.Web.Configuration.HealthMonitoringSection HealthMonitoring { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("hostingEnvironment")]
        public System.Web.Configuration.HostingEnvironmentSection HostingEnvironment { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("httpCookies")]
        public System.Web.Configuration.HttpCookiesSection HttpCookies { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("httpHandlers")]
        public System.Web.Configuration.HttpHandlersSection HttpHandlers { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("httpModules")]
        public System.Web.Configuration.HttpModulesSection HttpModules { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("httpRuntime")]
        public System.Web.Configuration.HttpRuntimeSection HttpRuntime { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("identity")]
        public System.Web.Configuration.IdentitySection Identity { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("machineKey")]
        public System.Web.Configuration.MachineKeySection MachineKey { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("membership")]
        public System.Web.Configuration.MembershipSection Membership { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("mobileControls")]
        [System.ObsoleteAttribute("System.Web.Mobile.dll is obsolete.")]
        public System.Configuration.ConfigurationSection MobileControls { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("pages")]
        public System.Web.Configuration.PagesSection Pages { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("partialTrustVisibleAssemblies")]
        public System.Web.Configuration.PartialTrustVisibleAssembliesSection PartialTrustVisibleAssemblies { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("processModel")]
        public System.Web.Configuration.ProcessModelSection ProcessModel { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("profile")]
        public System.Web.Configuration.ProfileSection Profile { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("protocols")]
        public System.Configuration.DefaultSection Protocols { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("roleManager")]
        public System.Web.Configuration.RoleManagerSection RoleManager { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("securityPolicy")]
        public System.Web.Configuration.SecurityPolicySection SecurityPolicy { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("sessionState")]
        public System.Web.Configuration.SessionStateSection SessionState { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("siteMap")]
        public System.Web.Configuration.SiteMapSection SiteMap { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("trace")]
        public System.Web.Configuration.TraceSection Trace { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("trust")]
        public System.Web.Configuration.TrustSection Trust { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("urlMappings")]
        public System.Web.Configuration.UrlMappingsSection UrlMappings { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("webControls")]
        public System.Web.Configuration.WebControlsSection WebControls { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("webParts")]
        public System.Web.Configuration.WebPartsSection WebParts { get { throw null; } }
#if SERVICES_DEP
        [System.Configuration.ConfigurationPropertyAttribute("webServices")]
        public System.Web.Services.Configuration.WebServicesSection WebServices { get { throw null; } }
#endif
        [System.Configuration.ConfigurationPropertyAttribute("xhtmlConformance")]
        public System.Web.Configuration.XhtmlConformanceSection XhtmlConformance { get { throw null; } }
    }
    [System.Configuration.ConfigurationCollectionAttribute(typeof(System.Web.Configuration.TagMapInfo))]
    public sealed partial class TagMapCollection : System.Configuration.ConfigurationElementCollection
    {
        public TagMapCollection() { }
        public System.Web.Configuration.TagMapInfo this[int index] { get { throw null; } set { } }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
        public void Add(System.Web.Configuration.TagMapInfo tagMapInformation) { }
        public void Clear() { }
        protected override System.Configuration.ConfigurationElement CreateNewElement() { throw null; }
        protected override object GetElementKey(System.Configuration.ConfigurationElement element) { throw null; }
        public void Remove(System.Web.Configuration.TagMapInfo tagMapInformation) { }
    }
    public sealed partial class TagMapInfo : System.Configuration.ConfigurationElement
    {
        public TagMapInfo(string tagTypeName, string mappedTagTypeName) { }
        [System.Configuration.ConfigurationPropertyAttribute("mappedTagType")]
        [System.Configuration.StringValidatorAttribute(MinLength=1)]
        public string MappedTagType { get { throw null; } set { } }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("tagType", IsRequired=true, IsKey=true, DefaultValue="")]
        [System.Configuration.StringValidatorAttribute(MinLength=1)]
        public string TagType { get { throw null; } set { } }
        public override bool Equals(object o) { throw null; }
        public override int GetHashCode() { throw null; }
        protected override bool SerializeElement(System.Xml.XmlWriter writer, bool serializeCollectionKey) { throw null; }
    }
    [System.Configuration.ConfigurationCollectionAttribute(typeof(System.Web.Configuration.TagPrefixInfo), AddItemName="add", CollectionType=System.Configuration.ConfigurationElementCollectionType.BasicMap)]
    public sealed partial class TagPrefixCollection : System.Configuration.ConfigurationElementCollection
    {
        public TagPrefixCollection() { }
        public override System.Configuration.ConfigurationElementCollectionType CollectionType { get { throw null; } }
        protected override string ElementName { get { throw null; } }
        public System.Web.Configuration.TagPrefixInfo this[int index] { get { throw null; } set { } }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
        protected override bool ThrowOnDuplicate { get { throw null; } }
        public void Add(System.Web.Configuration.TagPrefixInfo tagPrefixInformation) { }
        public void Clear() { }
        protected override System.Configuration.ConfigurationElement CreateNewElement() { throw null; }
        protected override object GetElementKey(System.Configuration.ConfigurationElement element) { throw null; }
        public void Remove(System.Web.Configuration.TagPrefixInfo tagPrefixInformation) { }
    }
    public sealed partial class TagPrefixInfo : System.Configuration.ConfigurationElement
    {
        public TagPrefixInfo(string tagPrefix, string nameSpace, string assembly, string tagName, string source) { }
        [System.Configuration.ConfigurationPropertyAttribute("assembly")]
        public string Assembly { get { throw null; } set { } }
        protected override System.Configuration.ConfigurationElementProperty ElementProperty { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("namespace")]
        public string Namespace { get { throw null; } set { } }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("src")]
        public string Source { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("tagName")]
        public string TagName { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("tagPrefix", IsRequired=true, DefaultValue="/")]
        [System.Configuration.StringValidatorAttribute(MinLength=1)]
        public string TagPrefix { get { throw null; } set { } }
        public override bool Equals(object prefix) { throw null; }
        public override int GetHashCode() { throw null; }
    }
    public enum TicketCompatibilityMode
    {
        Framework20 = 0,
        Framework40 = 1,
    }
    public enum TraceDisplayMode
    {
        SortByCategory = 2,
        SortByTime = 1,
    }
    public sealed partial class TraceSection : System.Configuration.ConfigurationSection
    {
        public TraceSection() { }
        [System.Configuration.ConfigurationPropertyAttribute("enabled", DefaultValue=false)]
        public bool Enabled { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("localOnly", DefaultValue=true)]
        public bool LocalOnly { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("mostRecent", DefaultValue=false)]
        public bool MostRecent { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("pageOutput", DefaultValue=false)]
        public bool PageOutput { get { throw null; } set { } }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("requestLimit", DefaultValue=10)]
        [System.Configuration.IntegerValidatorAttribute(MinValue=0)]
        public int RequestLimit { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("traceMode", DefaultValue=System.Web.Configuration.TraceDisplayMode.SortByTime)]
        public System.Web.Configuration.TraceDisplayMode TraceMode { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("writeToDiagnosticsTrace", DefaultValue=false)]
        public bool WriteToDiagnosticsTrace { get { throw null; } set { } }
    }
    public sealed partial class TransformerInfo : System.Configuration.ConfigurationElement
    {
        public TransformerInfo(string name, string type) { }
        [System.Configuration.ConfigurationPropertyAttribute("name", IsRequired=true, DefaultValue="", IsKey=true)]
        [System.Configuration.StringValidatorAttribute(MinLength=1)]
        public string Name { get { throw null; } set { } }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("type", IsRequired=true, DefaultValue="")]
        [System.Configuration.StringValidatorAttribute(MinLength=1)]
        public string Type { get { throw null; } set { } }
        public override bool Equals(object o) { throw null; }
        public override int GetHashCode() { throw null; }
    }
    [System.Configuration.ConfigurationCollectionAttribute(typeof(System.Web.Configuration.TransformerInfo))]
    public sealed partial class TransformerInfoCollection : System.Configuration.ConfigurationElementCollection
    {
        public TransformerInfoCollection() { }
        public System.Web.Configuration.TransformerInfo this[int index] { get { throw null; } set { } }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
        public void Add(System.Web.Configuration.TransformerInfo transformerInfo) { }
        public void Clear() { }
        protected override System.Configuration.ConfigurationElement CreateNewElement() { throw null; }
        protected override object GetElementKey(System.Configuration.ConfigurationElement element) { throw null; }
        public void Remove(string s) { }
        public void RemoveAt(int index) { }
    }
    public sealed partial class TrustLevel : System.Configuration.ConfigurationElement
    {
        public TrustLevel(string name, string policyFile) { }
        [System.Configuration.ConfigurationPropertyAttribute("name", IsRequired=true, DefaultValue="Full", IsKey=true)]
        [System.Configuration.StringValidatorAttribute(MinLength=1)]
        public string Name { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("policyFile", IsRequired=true, DefaultValue="internal")]
        public string PolicyFile { get { throw null; } set { } }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
    }
    [System.Configuration.ConfigurationCollectionAttribute(typeof(System.Web.Configuration.TrustLevel), AddItemName="trustLevel", CollectionType=System.Configuration.ConfigurationElementCollectionType.BasicMap)]
    public sealed partial class TrustLevelCollection : System.Configuration.ConfigurationElementCollection
    {
        public TrustLevelCollection() { }
        public override System.Configuration.ConfigurationElementCollectionType CollectionType { get { throw null; } }
        protected override string ElementName { get { throw null; } }
        public System.Web.Configuration.TrustLevel this[int index] { get { throw null; } set { } }
        public new System.Web.Configuration.TrustLevel this[string key] { get { throw null; } }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
        protected override bool ThrowOnDuplicate { get { throw null; } }
        public void Add(System.Web.Configuration.TrustLevel trustLevel) { }
        public void Clear() { }
        protected override System.Configuration.ConfigurationElement CreateNewElement() { throw null; }
        public System.Web.Configuration.TrustLevel Get(int index) { throw null; }
        protected override object GetElementKey(System.Configuration.ConfigurationElement element) { throw null; }
        protected override bool IsElementName(string elementname) { throw null; }
        public void Remove(System.Web.Configuration.TrustLevel trustLevel) { }
        public void RemoveAt(int index) { }
        public void Set(int index, System.Web.Configuration.TrustLevel trustLevel) { }
    }
    public sealed partial class TrustSection : System.Configuration.ConfigurationSection
    {
        public TrustSection() { }
        [System.Configuration.ConfigurationPropertyAttribute("hostSecurityPolicyResolverType", DefaultValue="")]
        public string HostSecurityPolicyResolverType { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("legacyCasModel", DefaultValue=false)]
        public bool LegacyCasModel { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("level", IsRequired=true, DefaultValue="Full")]
        [System.Configuration.StringValidatorAttribute(MinLength=1)]
        public string Level { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("originUrl", DefaultValue="")]
        public string OriginUrl { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("permissionSetName", DefaultValue="ASP.Net")]
        public string PermissionSetName { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("processRequestInApplicationTrust", DefaultValue=true)]
        public bool ProcessRequestInApplicationTrust { get { throw null; } set { } }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
    }
    public sealed partial class UrlMapping : System.Configuration.ConfigurationElement
    {
        public UrlMapping(string url, string mappedUrl) { }
        [System.Configuration.ConfigurationPropertyAttribute("mappedUrl", IsRequired=true)]
        public string MappedUrl { get { throw null; } }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("url", IsRequired=true, IsKey=true)]
        public string Url { get { throw null; } }
    }
    [System.Configuration.ConfigurationCollectionAttribute(typeof(System.Web.Configuration.UrlMapping))]
    public sealed partial class UrlMappingCollection : System.Configuration.ConfigurationElementCollection
    {
        public UrlMappingCollection() { }
        public string[] AllKeys { get { throw null; } }
        public System.Web.Configuration.UrlMapping this[int index] { get { throw null; } set { } }
        public new System.Web.Configuration.UrlMapping this[string name] { get { throw null; } }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
        public void Add(System.Web.Configuration.UrlMapping urlMapping) { }
        public void Clear() { }
        protected override System.Configuration.ConfigurationElement CreateNewElement() { throw null; }
        protected override object GetElementKey(System.Configuration.ConfigurationElement element) { throw null; }
        public string GetKey(int index) { throw null; }
        public void Remove(string name) { }
        public void Remove(System.Web.Configuration.UrlMapping urlMapping) { }
        public void RemoveAt(int index) { }
    }
    public sealed partial class UrlMappingsSection : System.Configuration.ConfigurationSection
    {
        public UrlMappingsSection() { }
        [System.Configuration.ConfigurationPropertyAttribute("enabled", DefaultValue=true)]
        public bool IsEnabled { get { throw null; } set { } }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("", IsDefaultCollection=true)]
        public System.Web.Configuration.UrlMappingCollection UrlMappings { get { throw null; } }
    }
    public partial class UserMapPath : System.Web.Configuration.IConfigMapPath
    {
        public UserMapPath(System.Configuration.ConfigurationFileMap fileMap) { }
        public string GetAppPathForPath(string siteID, string path) { throw null; }
        public void GetDefaultSiteNameAndID(out string siteName, out string siteID) { throw null; }
        public string GetMachineConfigFilename() { throw null; }
        public void GetPathConfigFilename(string siteID, string path, out string directory, out string baseName) { throw null; }
        public string GetRootWebConfigFilename() { throw null; }
        public string MapPath(string siteID, string path) { throw null; }
        public void ResolveSiteArgument(string siteArgument, out string siteName, out string siteID) { throw null; }
    }
    public sealed partial class VirtualDirectoryMapping
    {
        public VirtualDirectoryMapping(string physicalDirectory, bool isAppRoot) { }
        public VirtualDirectoryMapping(string physicalDirectory, bool isAppRoot, string configFileBaseName) { }
        public string ConfigFileBaseName { get { throw null; } set { } }
        public bool IsAppRoot { get { throw null; } set { } }
        public string PhysicalDirectory { get { throw null; } set { } }
        public string VirtualDirectory { get { throw null; } }
    }
    [System.SerializableAttribute]
    public sealed partial class VirtualDirectoryMappingCollection : System.Collections.Specialized.NameObjectCollectionBase
    {
        public VirtualDirectoryMappingCollection() { }
        public System.Collections.ICollection AllKeys { get { throw null; } }
        public System.Web.Configuration.VirtualDirectoryMapping this[int index] { get { throw null; } }
        public System.Web.Configuration.VirtualDirectoryMapping this[string virtualDirectory] { get { throw null; } }
        public void Add(string virtualDirectory, System.Web.Configuration.VirtualDirectoryMapping mapping) { }
        public void Clear() { }
        public void CopyTo(System.Web.Configuration.VirtualDirectoryMapping[] array, int index) { }
        public System.Web.Configuration.VirtualDirectoryMapping Get(int index) { throw null; }
        public System.Web.Configuration.VirtualDirectoryMapping Get(string virtualDirectory) { throw null; }
        public string GetKey(int index) { throw null; }
        public void Remove(string virtualDirectory) { }
        public void RemoveAt(int index) { }
    }
    public enum WebApplicationLevel
    {
        AboveApplication = 10,
        AtApplication = 20,
        BelowApplication = 30,
    }
    public sealed partial class WebConfigurationFileMap : System.Configuration.ConfigurationFileMap
    {
        public WebConfigurationFileMap() { }
        public WebConfigurationFileMap(string machineConfigFileName) { }
        public System.Web.Configuration.VirtualDirectoryMappingCollection VirtualDirectories { get { throw null; } }
        public override object Clone() { throw null; }
    }
    public static partial class WebConfigurationManager
    {
        public static System.Collections.Specialized.NameValueCollection AppSettings { get { throw null; } }
        public static System.Configuration.ConnectionStringSettingsCollection ConnectionStrings { get { throw null; } }
        public static object GetSection(string sectionName) { throw null; }
        public static object GetSection(string sectionName, string path) { throw null; }
        public static object GetWebApplicationSection(string sectionName) { throw null; }
        public static System.Configuration.Configuration OpenMachineConfiguration() { throw null; }
        public static System.Configuration.Configuration OpenMachineConfiguration(string locationSubPath) { throw null; }
        public static System.Configuration.Configuration OpenMachineConfiguration(string locationSubPath, string server) { throw null; }
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, Unrestricted=true)]
        public static System.Configuration.Configuration OpenMachineConfiguration(string locationSubPath, string server, System.IntPtr userToken) { throw null; }
        public static System.Configuration.Configuration OpenMachineConfiguration(string locationSubPath, string server, string userName, string password) { throw null; }
        public static System.Configuration.Configuration OpenMappedMachineConfiguration(System.Configuration.ConfigurationFileMap fileMap) { throw null; }
        public static System.Configuration.Configuration OpenMappedMachineConfiguration(System.Configuration.ConfigurationFileMap fileMap, string locationSubPath) { throw null; }
        public static System.Configuration.Configuration OpenMappedWebConfiguration(System.Web.Configuration.WebConfigurationFileMap fileMap, string path) { throw null; }
        public static System.Configuration.Configuration OpenMappedWebConfiguration(System.Web.Configuration.WebConfigurationFileMap fileMap, string path, string site) { throw null; }
        public static System.Configuration.Configuration OpenMappedWebConfiguration(System.Web.Configuration.WebConfigurationFileMap fileMap, string path, string site, string locationSubPath) { throw null; }
        public static System.Configuration.Configuration OpenWebConfiguration(string path) { throw null; }
        public static System.Configuration.Configuration OpenWebConfiguration(string path, string site) { throw null; }
        public static System.Configuration.Configuration OpenWebConfiguration(string path, string site, string locationSubPath) { throw null; }
        public static System.Configuration.Configuration OpenWebConfiguration(string path, string site, string locationSubPath, string server) { throw null; }
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, Unrestricted=true)]
        public static System.Configuration.Configuration OpenWebConfiguration(string path, string site, string locationSubPath, string server, System.IntPtr userToken) { throw null; }
        public static System.Configuration.Configuration OpenWebConfiguration(string path, string site, string locationSubPath, string server, string userName, string password) { throw null; }
    }
    public sealed partial class WebContext
    {
        public WebContext(System.Web.Configuration.WebApplicationLevel pathLevel, string site, string applicationPath, string path, string locationSubPath, string appConfigPath) { }
        public System.Web.Configuration.WebApplicationLevel ApplicationLevel { get { throw null; } }
        public string ApplicationPath { get { throw null; } }
        public string LocationSubPath { get { throw null; } }
        public string Path { get { throw null; } }
        public string Site { get { throw null; } }
        public override string ToString() { throw null; }
    }
    public sealed partial class WebControlsSection : System.Configuration.ConfigurationSection
    {
        public WebControlsSection() { }
        [System.Configuration.ConfigurationPropertyAttribute("clientScriptsLocation", IsRequired=true, DefaultValue="/aspnet_client/{0}/{1}/")]
        [System.Configuration.StringValidatorAttribute(MinLength=1)]
        public string ClientScriptsLocation { get { throw null; } }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
        protected override object GetRuntimeObject() { throw null; }
    }
    public sealed partial class WebPartsPersonalization : System.Configuration.ConfigurationElement
    {
        public WebPartsPersonalization() { }
        [System.Configuration.ConfigurationPropertyAttribute("authorization")]
        public System.Web.Configuration.WebPartsPersonalizationAuthorization Authorization { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("defaultProvider", DefaultValue="AspNetSqlPersonalizationProvider")]
        [System.Configuration.StringValidatorAttribute(MinLength=1)]
        public string DefaultProvider { get { throw null; } set { } }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("providers")]
        public System.Configuration.ProviderSettingsCollection Providers { get { throw null; } }
    }
    public sealed partial class WebPartsPersonalizationAuthorization : System.Configuration.ConfigurationElement
    {
        public WebPartsPersonalizationAuthorization() { }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("", IsDefaultCollection=true)]
        public System.Web.Configuration.AuthorizationRuleCollection Rules { get { throw null; } }
    }
    public sealed partial class WebPartsSection : System.Configuration.ConfigurationSection
    {
        public WebPartsSection() { }
        [System.Configuration.ConfigurationPropertyAttribute("enableExport", DefaultValue=false)]
        public bool EnableExport { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("personalization")]
        public System.Web.Configuration.WebPartsPersonalization Personalization { get { throw null; } }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("transformers")]
        public System.Web.Configuration.TransformerInfoCollection Transformers { get { throw null; } }
        protected override object GetRuntimeObject() { throw null; }
    }
    public enum XhtmlConformanceMode
    {
        Legacy = 1,
        Strict = 2,
        Transitional = 0,
    }
    public sealed partial class XhtmlConformanceSection : System.Configuration.ConfigurationSection
    {
        public XhtmlConformanceSection() { }
        [System.Configuration.ConfigurationPropertyAttribute("mode", DefaultValue=System.Web.Configuration.XhtmlConformanceMode.Transitional)]
        public System.Web.Configuration.XhtmlConformanceMode Mode { get { throw null; } set { } }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
    }
}
namespace System.Web.Configuration.Internal
{
    [System.Runtime.InteropServices.ComVisibleAttribute(false)]
    public partial interface IInternalConfigWebHost
    {
        string GetConfigPathFromSiteIDAndVPath(string siteID, string vpath);
        void GetSiteIDAndVPathFromConfigPath(string configPath, out string siteID, out string vpath);
    }
}
namespace System.Web.Globalization
{
    public partial interface IStringLocalizerProvider
    {
        string GetLocalizedString(System.Globalization.CultureInfo culture, string name, params object[] arguments);
    }
    public sealed partial class ResourceFileStringLocalizerProvider : System.Web.Globalization.IStringLocalizerProvider
    {
        public const string ResourceFileName = "DataAnnotation.Localization";
        public ResourceFileStringLocalizerProvider() { }
        public string GetLocalizedString(System.Globalization.CultureInfo culture, string name, params object[] arguments) { throw null; }
    }
    public static partial class StringLocalizerProviders
    {
        public static System.Web.Globalization.IStringLocalizerProvider DataAnnotationStringLocalizerProvider { get { throw null; } set { } }
    }
}
namespace System.Web.Handlers
{
    public sealed partial class AssemblyResourceLoader : System.Web.IHttpHandler
    {
        public AssemblyResourceLoader() { }
        bool System.Web.IHttpHandler.IsReusable { get { throw null; } }
        void System.Web.IHttpHandler.ProcessRequest(System.Web.HttpContext context) { }
    }
    public partial class TraceHandler : System.Web.IHttpHandler
    {
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, Unrestricted=true)]
        public TraceHandler() { }
        protected bool IsReusable { get { throw null; } }
        bool System.Web.IHttpHandler.IsReusable { get { throw null; } }
        protected void ProcessRequest(System.Web.HttpContext context) { }
        protected void ShowDetails(System.Data.DataSet data) { }
        protected void ShowRequests(System.Collections.IList data) { }
        protected void ShowVersionDetails() { }
        void System.Web.IHttpHandler.ProcessRequest(System.Web.HttpContext context) { }
    }
}
namespace System.Web.Hosting
{
    [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.LinkDemand, Unrestricted=true)]
    public sealed partial class AppDomainFactory : System.Web.Hosting.IAppDomainFactory
    {
        public AppDomainFactory() { }
        [return: System.Runtime.InteropServices.MarshalAs(System.Runtime.InteropServices.UnmanagedType.Interface)]
        public object Create(string module, string typeName, string appId, string appPath, string strUrlOfAppOrigin, int iZone) { throw null; }
    }
    public partial class AppDomainInfo : System.Web.Hosting.IAppDomainInfo
    {
        internal AppDomainInfo() { }
        public string GetId() { throw null; }
        public string GetPhysicalPath() { throw null; }
        public int GetSiteId() { throw null; }
        public string GetVirtualPath() { throw null; }
        public bool IsIdle() { throw null; }
    }
    public partial class AppDomainInfoEnum : System.Web.Hosting.IAppDomainInfoEnum
    {
        internal AppDomainInfoEnum() { }
        public int Count() { throw null; }
        public System.Web.Hosting.IAppDomainInfo GetData() { throw null; }
        public bool MoveNext() { throw null; }
        public void Reset() { }
    }
    public abstract partial class AppDomainProtocolHandler : System.MarshalByRefObject, System.Web.Hosting.IRegisteredObject
    {
        protected AppDomainProtocolHandler() { }
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.LinkDemand, Flags=System.Security.Permissions.SecurityPermissionFlag.Infrastructure)]
        public override object InitializeLifetimeService() { throw null; }
        public abstract void StartListenerChannel(System.Web.Hosting.IListenerChannelCallback listenerChannelCallback);
        public virtual void Stop(bool immediate) { }
        public abstract void StopListenerChannel(int listenerChannelId, bool immediate);
        public abstract void StopProtocol(bool immediate);
    }
    public sealed partial class ApplicationHost
    {
        internal ApplicationHost() { }
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, Unrestricted=true)]
        public static object CreateApplicationHost(System.Type hostType, string virtualDir, string physicalDir) { throw null; }
    }
    [System.SerializableAttribute]
    public sealed partial class ApplicationInfo
    {
        internal ApplicationInfo() { }
        public string ID { get { throw null; } }
        public string PhysicalPath { get { throw null; } }
        public string VirtualPath { get { throw null; } }
    }
    public sealed partial class ApplicationManager : System.MarshalByRefObject
    {
        internal ApplicationManager() { }
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, Unrestricted=true)]
        public void Close() { }
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, UnmanagedCode=true)]
        public System.Web.Hosting.IRegisteredObject CreateObject(string appId, System.Type type, string virtualPath, string physicalPath, bool failIfExists) { throw null; }
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, Unrestricted=true)]
        public System.Web.Hosting.IRegisteredObject CreateObject(string appId, System.Type type, string virtualPath, string physicalPath, bool failIfExists, bool throwOnError) { throw null; }
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, Unrestricted=true)]
        public System.Web.Hosting.IRegisteredObject CreateObject(System.Web.Hosting.IApplicationHost appHost, System.Type type) { throw null; }
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, Unrestricted=true)]
        public System.AppDomain GetAppDomain(string appId) { throw null; }
        public System.AppDomain GetAppDomain(System.Web.Hosting.IApplicationHost appHost) { throw null; }
        public static System.Web.Hosting.ApplicationManager GetApplicationManager() { throw null; }
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, Unrestricted=true)]
        public System.Web.Hosting.IRegisteredObject GetObject(string appId, System.Type type) { throw null; }
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, Unrestricted=true)]
        public System.Web.Hosting.ApplicationInfo[] GetRunningApplications() { throw null; }
        public override object InitializeLifetimeService() { throw null; }
        public bool IsIdle() { throw null; }
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, Unrestricted=true)]
        public void Open() { }
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, Unrestricted=true)]
        public void ShutdownAll() { }
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, Unrestricted=true)]
        public void ShutdownApplication(string appId) { }
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, Unrestricted=true)]
        public void StopObject(string appId, System.Type type) { }
    }
    public sealed partial class ApplicationMonitors
    {
        internal ApplicationMonitors() { }
        public System.Web.Hosting.IApplicationMonitor MemoryMonitor { get { throw null; } set { } }
    }
    [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.LinkDemand, Unrestricted=true)]
    public sealed partial class AppManagerAppDomainFactory : System.Web.Hosting.IAppManagerAppDomainFactory
    {
        public AppManagerAppDomainFactory() { }
        [return: System.Runtime.InteropServices.MarshalAs(System.Runtime.InteropServices.UnmanagedType.Interface)]
        public object Create(string appId, string appPath) { throw null; }
        public void Stop() { }
    }
    public sealed partial class AspNetMemoryMonitor : System.IDisposable, System.IObservable<System.Web.Hosting.LowPhysicalMemoryInfo>, System.IObservable<System.Web.Hosting.RecycleLimitInfo>, System.Web.Hosting.IApplicationMonitor
    {
        internal AspNetMemoryMonitor() { }
        public System.IObserver<System.Web.Hosting.LowPhysicalMemoryInfo> DefaultLowPhysicalMemoryObserver { get { throw null; } set { } }
        public System.IObserver<System.Web.Hosting.RecycleLimitInfo> DefaultRecycleLimitObserver { get { throw null; } set { } }
        public void Dispose() { }
        public void Start() { }
        public void Stop() { }
        public System.IDisposable Subscribe(System.IObserver<System.Web.Hosting.LowPhysicalMemoryInfo> observer) { throw null; }
        public System.IDisposable Subscribe(System.IObserver<System.Web.Hosting.RecycleLimitInfo> observer) { throw null; }
    }
    public sealed partial class HostingEnvironment : System.MarshalByRefObject
    {
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, Unrestricted=true)]
        public HostingEnvironment() { }
        public static System.Web.Hosting.IApplicationHost ApplicationHost { [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, Unrestricted=true)]get { throw null; } }
        public static string ApplicationID { get { throw null; } }
        public static System.Web.Hosting.ApplicationMonitors ApplicationMonitors { get { throw null; } }
        public static string ApplicationPhysicalPath { get { throw null; } }
        public static string ApplicationVirtualPath { get { throw null; } }
        public static System.Web.Caching.Cache Cache { get { throw null; } }
        public static bool InClientBuildManager { get { throw null; } }
        public static System.Exception InitializationException { get { throw null; } }
        public static bool IsDevelopmentEnvironment { get { throw null; } }
        public static bool IsHosted { get { throw null; } }
        public static int MaxConcurrentRequestsPerCPU { get { throw null; } [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, Unrestricted=true)]set { } }
        public static int MaxConcurrentThreadsPerCPU { get { throw null; } [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, Unrestricted=true)]set { } }
        public static System.Web.ApplicationShutdownReason ShutdownReason { get { throw null; } }
        public static string SiteName { get { throw null; } }
        public static System.Web.Hosting.VirtualPathProvider VirtualPathProvider { get { throw null; } }
        public static event System.EventHandler StopListening { add { } remove { } }
        public static void DecrementBusyCount() { }
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, ControlPrincipal=true)]
        public static System.IDisposable Impersonate() { throw null; }
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, Unrestricted=true)]
        public static System.IDisposable Impersonate(System.IntPtr token) { throw null; }
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, Unrestricted=true)]
        public static System.IDisposable Impersonate(System.IntPtr userToken, string virtualPath) { throw null; }
        public static void IncrementBusyCount() { }
        public override object InitializeLifetimeService() { throw null; }
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, Unrestricted=true)]
        public static void InitiateShutdown() { }
        public static string MapPath(string virtualPath) { throw null; }
        public static void MessageReceived() { }
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.LinkDemand, Unrestricted=true)]
        public static void QueueBackgroundWorkItem(System.Action<System.Threading.CancellationToken> workItem) { }
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.LinkDemand, Unrestricted=true)]
        public static void QueueBackgroundWorkItem(System.Func<System.Threading.CancellationToken, System.Threading.Tasks.Task> workItem) { }
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, Unrestricted=true)]
        public static void RegisterObject(System.Web.Hosting.IRegisteredObject obj) { }
        public static void RegisterVirtualPathProvider(System.Web.Hosting.VirtualPathProvider virtualPathProvider) { }
        public static System.IDisposable SetCultures() { throw null; }
        public static System.IDisposable SetCultures(string virtualPath) { throw null; }
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, Unrestricted=true)]
        public static void UnregisterObject(System.Web.Hosting.IRegisteredObject obj) { }
    }
    [System.Security.Permissions.PermissionSetAttribute(System.Security.Permissions.SecurityAction.InheritanceDemand, Unrestricted=true)]
    public partial class HostSecurityPolicyResolver
    {
        public HostSecurityPolicyResolver() { }
        public virtual System.Web.Hosting.HostSecurityPolicyResults ResolvePolicy(System.Security.Policy.Evidence evidence) { throw null; }
    }
    public enum HostSecurityPolicyResults
    {
        AppDomainTrust = 2,
        DefaultPolicy = 0,
        FullTrust = 1,
        Nothing = 3,
    }
    public partial interface IAdphManager
    {
        void StartAppDomainProtocolListenerChannel([System.Runtime.InteropServices.In][System.Runtime.InteropServices.MarshalAs(System.Runtime.InteropServices.UnmanagedType.LPWStr)]string appId, [System.Runtime.InteropServices.In][System.Runtime.InteropServices.MarshalAs(System.Runtime.InteropServices.UnmanagedType.LPWStr)]string protocolId, System.Web.Hosting.IListenerChannelCallback listenerChannelCallback);
        void StopAppDomainProtocol([System.Runtime.InteropServices.In][System.Runtime.InteropServices.MarshalAs(System.Runtime.InteropServices.UnmanagedType.LPWStr)]string appId, [System.Runtime.InteropServices.In][System.Runtime.InteropServices.MarshalAs(System.Runtime.InteropServices.UnmanagedType.LPWStr)]string protocolId, bool immediate);
        void StopAppDomainProtocolListenerChannel([System.Runtime.InteropServices.In][System.Runtime.InteropServices.MarshalAs(System.Runtime.InteropServices.UnmanagedType.LPWStr)]string appId, [System.Runtime.InteropServices.In][System.Runtime.InteropServices.MarshalAs(System.Runtime.InteropServices.UnmanagedType.LPWStr)]string protocolId, int listenerChannelId, bool immediate);
    }
    [System.Runtime.InteropServices.GuidAttribute("e6e21054-a7dc-4378-877d-b7f4a2d7e8ba")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]
    public partial interface IAppDomainFactory
    {
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.LinkDemand, Unrestricted=true)]
        [return: System.Runtime.InteropServices.MarshalAs(System.Runtime.InteropServices.UnmanagedType.Interface)]
        object Create([System.Runtime.InteropServices.In][System.Runtime.InteropServices.MarshalAs(System.Runtime.InteropServices.UnmanagedType.BStr)]string module, [System.Runtime.InteropServices.In][System.Runtime.InteropServices.MarshalAs(System.Runtime.InteropServices.UnmanagedType.BStr)]string typeName, [System.Runtime.InteropServices.In][System.Runtime.InteropServices.MarshalAs(System.Runtime.InteropServices.UnmanagedType.BStr)]string appId, [System.Runtime.InteropServices.In][System.Runtime.InteropServices.MarshalAs(System.Runtime.InteropServices.UnmanagedType.BStr)]string appPath, [System.Runtime.InteropServices.In][System.Runtime.InteropServices.MarshalAs(System.Runtime.InteropServices.UnmanagedType.BStr)]string strUrlOfAppOrigin, [System.Runtime.InteropServices.In][System.Runtime.InteropServices.MarshalAs(System.Runtime.InteropServices.UnmanagedType.I4)]int iZone);
    }
    [System.Runtime.InteropServices.GuidAttribute("5BC9C234-6CD7-49bf-A07A-6FDB7F22DFFF")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]
    public partial interface IAppDomainInfo
    {
        [return: System.Runtime.InteropServices.MarshalAs(System.Runtime.InteropServices.UnmanagedType.BStr)]
        string GetId();
        [return: System.Runtime.InteropServices.MarshalAs(System.Runtime.InteropServices.UnmanagedType.BStr)]
        string GetPhysicalPath();
        [return: System.Runtime.InteropServices.MarshalAs(System.Runtime.InteropServices.UnmanagedType.I4)]
        int GetSiteId();
        [return: System.Runtime.InteropServices.MarshalAs(System.Runtime.InteropServices.UnmanagedType.BStr)]
        string GetVirtualPath();
        [return: System.Runtime.InteropServices.MarshalAs(System.Runtime.InteropServices.UnmanagedType.Bool)]
        bool IsIdle();
    }
    [System.Runtime.InteropServices.GuidAttribute("F79648FB-558B-4a09-88F1-1E3BCB30E34F")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]
    public partial interface IAppDomainInfoEnum
    {
        [return: System.Runtime.InteropServices.MarshalAs(System.Runtime.InteropServices.UnmanagedType.I4)]
        int Count();
        [return: System.Runtime.InteropServices.MarshalAs(System.Runtime.InteropServices.UnmanagedType.Interface)]
        System.Web.Hosting.IAppDomainInfo GetData();
        [return: System.Runtime.InteropServices.MarshalAs(System.Runtime.InteropServices.UnmanagedType.Bool)]
        bool MoveNext();
        void Reset();
    }
    public partial interface IApplicationHost
    {
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.InheritanceDemand, Unrestricted=true)]
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.LinkDemand, Unrestricted=true)]
        System.Web.Configuration.IConfigMapPathFactory GetConfigMapPathFactory();
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.InheritanceDemand, Unrestricted=true)]
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.LinkDemand, Unrestricted=true)]
        System.IntPtr GetConfigToken();
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.InheritanceDemand, Unrestricted=true)]
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.LinkDemand, Unrestricted=true)]
        string GetPhysicalPath();
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.InheritanceDemand, Unrestricted=true)]
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.LinkDemand, Unrestricted=true)]
        string GetSiteID();
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.InheritanceDemand, Unrestricted=true)]
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.LinkDemand, Unrestricted=true)]
        string GetSiteName();
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.InheritanceDemand, Unrestricted=true)]
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.LinkDemand, Unrestricted=true)]
        string GetVirtualPath();
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.InheritanceDemand, Unrestricted=true)]
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.LinkDemand, Unrestricted=true)]
        void MessageReceived();
    }
    public partial interface IApplicationMonitor : System.IDisposable
    {
        void Start();
        void Stop();
    }
    [System.Runtime.InteropServices.GuidAttribute("AE54F424-71BC-4da5-AA2F-8C0CD53496FC")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]
    public partial interface IApplicationPreloadManager
    {
        void SetApplicationPreloadState([System.Runtime.InteropServices.In][System.Runtime.InteropServices.MarshalAs(System.Runtime.InteropServices.UnmanagedType.LPWStr)]string context, [System.Runtime.InteropServices.In][System.Runtime.InteropServices.MarshalAs(System.Runtime.InteropServices.UnmanagedType.LPWStr)]string appId, [System.Runtime.InteropServices.In][System.Runtime.InteropServices.MarshalAs(System.Runtime.InteropServices.UnmanagedType.Bool)]bool enabled);
        void SetApplicationPreloadUtil([System.Runtime.InteropServices.In][System.Runtime.InteropServices.MarshalAs(System.Runtime.InteropServices.UnmanagedType.Interface)]System.Web.Hosting.IApplicationPreloadUtil preloadUtil);
    }
    [System.Runtime.InteropServices.GuidAttribute("940D8ADD-9E40-4475-9A67-2CDCDF57995C")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]
    public partial interface IApplicationPreloadUtil
    {
        void GetApplicationPreloadInfo([System.Runtime.InteropServices.In][System.Runtime.InteropServices.MarshalAs(System.Runtime.InteropServices.UnmanagedType.LPWStr)]string context, [System.Runtime.InteropServices.MarshalAs(System.Runtime.InteropServices.UnmanagedType.Bool)]out bool enabled, [System.Runtime.InteropServices.MarshalAs(System.Runtime.InteropServices.UnmanagedType.BStr)]out string startupObjType, [System.Runtime.InteropServices.MarshalAs(System.Runtime.InteropServices.UnmanagedType.SafeArray)]out string[] parametersForStartupObj);
        void ReportApplicationPreloadFailure([System.Runtime.InteropServices.In][System.Runtime.InteropServices.MarshalAs(System.Runtime.InteropServices.UnmanagedType.LPWStr)]string context, [System.Runtime.InteropServices.In][System.Runtime.InteropServices.MarshalAs(System.Runtime.InteropServices.UnmanagedType.U4)]int errorCode, [System.Runtime.InteropServices.In][System.Runtime.InteropServices.MarshalAs(System.Runtime.InteropServices.UnmanagedType.LPWStr)]string errorMessage);
    }
    [System.Runtime.InteropServices.GuidAttribute("02998279-7175-4d59-aa5a-fb8e44d4ca9d")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]
    public partial interface IAppManagerAppDomainFactory
    {
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.LinkDemand, Unrestricted=true)]
        [return: System.Runtime.InteropServices.MarshalAs(System.Runtime.InteropServices.UnmanagedType.Interface)]
        object Create([System.Runtime.InteropServices.In][System.Runtime.InteropServices.MarshalAs(System.Runtime.InteropServices.UnmanagedType.BStr)]string appId, [System.Runtime.InteropServices.In][System.Runtime.InteropServices.MarshalAs(System.Runtime.InteropServices.UnmanagedType.BStr)]string appPath);
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.LinkDemand, Unrestricted=true)]
        void Stop();
    }
    [System.Runtime.InteropServices.GuidAttribute("08a2c56f-7c16-41c1-a8be-432917a1a2d1")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]
    public partial interface IISAPIRuntime
    {
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.InheritanceDemand, Unrestricted=true)]
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.LinkDemand, Unrestricted=true)]
        void DoGCCollect();
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.InheritanceDemand, Unrestricted=true)]
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.LinkDemand, Unrestricted=true)]
        [return: System.Runtime.InteropServices.MarshalAs(System.Runtime.InteropServices.UnmanagedType.I4)]
        int ProcessRequest([System.Runtime.InteropServices.In]System.IntPtr ecb, [System.Runtime.InteropServices.In][System.Runtime.InteropServices.MarshalAs(System.Runtime.InteropServices.UnmanagedType.I4)]int useProcessModel);
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.InheritanceDemand, Unrestricted=true)]
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.LinkDemand, Unrestricted=true)]
        void StartProcessing();
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.InheritanceDemand, Unrestricted=true)]
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.LinkDemand, Unrestricted=true)]
        void StopProcessing();
    }
    [System.Runtime.InteropServices.GuidAttribute("dc3b0a85-9da7-47e4-ba1b-e27da9db8a1e")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]
    public partial interface IListenerChannelCallback
    {
        void GetBlob([System.Runtime.InteropServices.In][System.Runtime.InteropServices.Out][System.Runtime.InteropServices.MarshalAs(System.Runtime.InteropServices.UnmanagedType.LPArray)]byte[] buffer, ref int bufferSize);
        int GetBlobLength();
        int GetId();
        void ReportMessageReceived();
        void ReportStarted();
        void ReportStopped(int hr);
    }
    [System.Runtime.InteropServices.GuidAttribute("1cc9099d-0a8d-41cb-87d6-845e4f8c4e91")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]
    public partial interface IPphManager
    {
        void StartProcessProtocolListenerChannel([System.Runtime.InteropServices.In][System.Runtime.InteropServices.MarshalAs(System.Runtime.InteropServices.UnmanagedType.LPWStr)]string protocolId, System.Web.Hosting.IListenerChannelCallback listenerChannelCallback);
        void StopProcessProtocol([System.Runtime.InteropServices.In][System.Runtime.InteropServices.MarshalAs(System.Runtime.InteropServices.UnmanagedType.LPWStr)]string protocolId, bool immediate);
        void StopProcessProtocolListenerChannel([System.Runtime.InteropServices.In][System.Runtime.InteropServices.MarshalAs(System.Runtime.InteropServices.UnmanagedType.LPWStr)]string protocolId, int listenerChannelId, bool immediate);
    }
    [System.Runtime.InteropServices.GuidAttribute("0ccd465e-3114-4ca3-ad50-cea561307e93")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]
    public partial interface IProcessHost
    {
        void EnumerateAppDomains([System.Runtime.InteropServices.MarshalAs(System.Runtime.InteropServices.UnmanagedType.Interface)]out System.Web.Hosting.IAppDomainInfoEnum appDomainInfoEnum);
        void Shutdown();
        void ShutdownApplication([System.Runtime.InteropServices.In][System.Runtime.InteropServices.MarshalAs(System.Runtime.InteropServices.UnmanagedType.LPWStr)]string appId);
        void StartApplication([System.Runtime.InteropServices.In][System.Runtime.InteropServices.MarshalAs(System.Runtime.InteropServices.UnmanagedType.LPWStr)]string appId, [System.Runtime.InteropServices.In][System.Runtime.InteropServices.MarshalAs(System.Runtime.InteropServices.UnmanagedType.LPWStr)]string appPath, [System.Runtime.InteropServices.MarshalAs(System.Runtime.InteropServices.UnmanagedType.Interface)]out object runtimeInterface);
    }
    [System.Runtime.InteropServices.GuidAttribute("02fd465d-5c5d-4b7e-95b6-82faa031b74a")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]
    public partial interface IProcessHostFactoryHelper
    {
        [return: System.Runtime.InteropServices.MarshalAs(System.Runtime.InteropServices.UnmanagedType.Interface)]
        object GetProcessHost(System.Web.Hosting.IProcessHostSupportFunctions functions);
    }
    [System.Runtime.InteropServices.GuidAttribute("9d98b251-453e-44f6-9cec-8b5aed970129")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]
    public partial interface IProcessHostIdleAndHealthCheck
    {
        [return: System.Runtime.InteropServices.MarshalAs(System.Runtime.InteropServices.UnmanagedType.Bool)]
        bool IsIdle();
        void Ping(System.Web.Hosting.IProcessPingCallback callback);
    }
    public partial interface IProcessHostPreloadClient
    {
        void Preload(string[] parameters);
    }
    [System.Runtime.InteropServices.GuidAttribute("35f9c4c1-3800-4d17-99bc-018a62243687")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]
    [System.Security.SuppressUnmanagedCodeSecurityAttribute]
    public partial interface IProcessHostSupportFunctions
    {
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.InheritanceDemand, Unrestricted=true)]
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.LinkDemand, Unrestricted=true)]
        [return: System.Runtime.InteropServices.MarshalAs(System.Runtime.InteropServices.UnmanagedType.BStr)]
        string GetAppHostConfigFilename();
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.InheritanceDemand, Unrestricted=true)]
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.LinkDemand, Unrestricted=true)]
        void GetApplicationProperties([System.Runtime.InteropServices.In][System.Runtime.InteropServices.MarshalAs(System.Runtime.InteropServices.UnmanagedType.LPWStr)]string appId, out string virtualPath, out string physicalPath, out string siteName, out string siteId);
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.InheritanceDemand, Unrestricted=true)]
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.LinkDemand, Unrestricted=true)]
        [return: System.Runtime.InteropServices.MarshalAs(System.Runtime.InteropServices.UnmanagedType.SysInt)]
        System.IntPtr GetConfigToken([System.Runtime.InteropServices.In][System.Runtime.InteropServices.MarshalAs(System.Runtime.InteropServices.UnmanagedType.LPWStr)]string appId);
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.InheritanceDemand, Unrestricted=true)]
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.LinkDemand, Unrestricted=true)]
        [return: System.Runtime.InteropServices.MarshalAs(System.Runtime.InteropServices.UnmanagedType.SysInt)]
        System.IntPtr GetNativeConfigurationSystem();
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.InheritanceDemand, Unrestricted=true)]
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.LinkDemand, Unrestricted=true)]
        [return: System.Runtime.InteropServices.MarshalAs(System.Runtime.InteropServices.UnmanagedType.BStr)]
        string GetRootWebConfigFilename();
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.InheritanceDemand, Unrestricted=true)]
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.LinkDemand, Unrestricted=true)]
        void MapPath([System.Runtime.InteropServices.In][System.Runtime.InteropServices.MarshalAs(System.Runtime.InteropServices.UnmanagedType.LPWStr)]string appId, [System.Runtime.InteropServices.In][System.Runtime.InteropServices.MarshalAs(System.Runtime.InteropServices.UnmanagedType.LPWStr)]string virtualPath, out string physicalPath);
    }
    [System.Runtime.InteropServices.GuidAttribute("f11dc4c9-ddd1-4566-ad53-cf6f3a28fefe")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]
    public partial interface IProcessPingCallback
    {
        void Respond();
    }
    public partial interface IRegisteredObject
    {
        void Stop(bool immediate);
    }
    public sealed partial class ISAPIRuntime : System.MarshalByRefObject, System.Web.Hosting.IISAPIRuntime, System.Web.Hosting.IRegisteredObject
    {
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, Unrestricted=true)]
        public ISAPIRuntime() { }
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.LinkDemand, Unrestricted=true)]
        public void DoGCCollect() { }
        public override object InitializeLifetimeService() { throw null; }
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.LinkDemand, Unrestricted=true)]
        public int ProcessRequest(System.IntPtr ecb, int iWRType) { throw null; }
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.LinkDemand, Unrestricted=true)]
        public void StartProcessing() { }
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.LinkDemand, Unrestricted=true)]
        public void StopProcessing() { }
        void System.Web.Hosting.IRegisteredObject.Stop(bool immediate) { }
    }
    public partial interface IStopListeningRegisteredObject : System.Web.Hosting.IRegisteredObject
    {
        void StopListening();
    }
    public partial interface ISuspendibleRegisteredObject : System.Web.Hosting.IRegisteredObject
    {
        System.Action Suspend();
    }
    public sealed partial class LowPhysicalMemoryInfo
    {
        public LowPhysicalMemoryInfo(int currentPercentUsed, int percentLimit) { }
        public int CurrentPercentUsed { get { throw null; } }
        public int PercentLimit { get { throw null; } }
        public bool RequestGC { get { throw null; } set { } }
    }
    public partial class LowPhysicalMemoryObserver : System.IObserver<System.Web.Hosting.LowPhysicalMemoryInfo>
    {
        public LowPhysicalMemoryObserver() { }
        public void OnCompleted() { }
        public void OnError(System.Exception error) { }
        public void OnNext(System.Web.Hosting.LowPhysicalMemoryInfo lowMemoryInfo) { }
    }
    public sealed partial class ProcessHost : System.MarshalByRefObject, System.Web.Hosting.IAdphManager, System.Web.Hosting.IApplicationPreloadManager, System.Web.Hosting.IPphManager, System.Web.Hosting.IProcessHost, System.Web.Hosting.IProcessHostIdleAndHealthCheck
    {
        internal ProcessHost() { }
        public void EnumerateAppDomains(out System.Web.Hosting.IAppDomainInfoEnum appDomainInfoEnum) { throw null; }
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.LinkDemand, Flags=System.Security.Permissions.SecurityPermissionFlag.Infrastructure)]
        public override object InitializeLifetimeService() { throw null; }
        public bool IsIdle() { throw null; }
        public void Ping(System.Web.Hosting.IProcessPingCallback callback) { }
        public void SetApplicationPreloadState(string context, string appId, bool enabled) { }
        public void SetApplicationPreloadUtil(System.Web.Hosting.IApplicationPreloadUtil applicationPreloadUtil) { }
        public void Shutdown() { }
        public void ShutdownApplication(string appId) { }
        public void StartAppDomainProtocolListenerChannel(string appId, string protocolId, System.Web.Hosting.IListenerChannelCallback listenerChannelCallback) { }
        public void StartApplication(string appId, string appPath, out object runtimeInterface) { throw null; }
        public void StartProcessProtocolListenerChannel(string protocolId, System.Web.Hosting.IListenerChannelCallback listenerChannelCallback) { }
        public void StopAppDomainProtocol(string appId, string protocolId, bool immediate) { }
        public void StopAppDomainProtocolListenerChannel(string appId, string protocolId, int listenerChannelId, bool immediate) { }
        public void StopProcessProtocol(string protocolId, bool immediate) { }
        public void StopProcessProtocolListenerChannel(string protocolId, int listenerChannelId, bool immediate) { }
    }
    public sealed partial class ProcessHostFactoryHelper : System.MarshalByRefObject, System.Web.Hosting.IProcessHostFactoryHelper
    {
        public ProcessHostFactoryHelper() { }
        public object GetProcessHost(System.Web.Hosting.IProcessHostSupportFunctions functions) { throw null; }
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.LinkDemand, Flags=System.Security.Permissions.SecurityPermissionFlag.Infrastructure)]
        public override object InitializeLifetimeService() { throw null; }
    }
    public abstract partial class ProcessProtocolHandler : System.MarshalByRefObject
    {
        protected ProcessProtocolHandler() { }
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.LinkDemand, Flags=System.Security.Permissions.SecurityPermissionFlag.Infrastructure)]
        public override object InitializeLifetimeService() { throw null; }
        public abstract void StartListenerChannel(System.Web.Hosting.IListenerChannelCallback listenerChannelCallback, System.Web.Hosting.IAdphManager AdphManager);
        public abstract void StopListenerChannel(int listenerChannelId, bool immediate);
        public abstract void StopProtocol(bool immediate);
    }
    public sealed partial class RecycleLimitInfo
    {
        public RecycleLimitInfo(long currentPrivateBytes, long recycleLimit, System.Web.Hosting.RecycleLimitNotificationFrequency recycleLimitNearFrequency) { }
        public long CurrentPrivateBytes { get { throw null; } }
        public long RecycleLimit { get { throw null; } }
        public bool RequestGC { get { throw null; } set { } }
        public System.Web.Hosting.RecycleLimitNotificationFrequency TrimFrequency { get { throw null; } }
    }
    public partial class RecycleLimitMonitor : System.MarshalByRefObject
    {
        internal RecycleLimitMonitor() { }
        public void Dispose() { }
        public override object InitializeLifetimeService() { throw null; }
        public partial class RecycleLimitMonitorSingleton : System.MarshalByRefObject
        {
            internal RecycleLimitMonitorSingleton() { }
            public void Dispose() { }
            public static void EnsureCreated() { }
            public override object InitializeLifetimeService() { throw null; }
            public void RegisterProxyAndStart(System.Web.Hosting.RecycleLimitMonitor proxy, string applicationID) { }
            public void UnregisterProxyAndStop(System.Web.Hosting.RecycleLimitMonitor proxy) { }
        }
    }
    public enum RecycleLimitNotificationFrequency
    {
        High = 0,
        Low = 2,
        Medium = 1,
    }
    public partial class RecycleLimitObserver : System.IObserver<System.Web.Hosting.RecycleLimitInfo>
    {
        public RecycleLimitObserver() { }
        public void OnCompleted() { }
        public void OnError(System.Exception error) { }
        public void OnNext(System.Web.Hosting.RecycleLimitInfo recycleLimitInfo) { }
    }
    [System.Runtime.InteropServices.ComVisibleAttribute(false)]
    public partial class SimpleWorkerRequest : System.Web.HttpWorkerRequest
    {
        public SimpleWorkerRequest(string page, string query, System.IO.TextWriter output) { }
        public SimpleWorkerRequest(string appVirtualDir, string appPhysicalDir, string page, string query, System.IO.TextWriter output) { }
        public override string MachineConfigPath { get { throw null; } }
        public override string MachineInstallDirectory { get { throw null; } }
        public override string RootWebConfigPath { get { throw null; } }
        public override void EndOfRequest() { }
        public override void FlushResponse(bool finalFlush) { }
        public override string GetAppPath() { throw null; }
        public override string GetAppPathTranslated() { throw null; }
        public override string GetFilePath() { throw null; }
        public override string GetFilePathTranslated() { throw null; }
        public override string GetHttpVerbName() { throw null; }
        public override string GetHttpVersion() { throw null; }
        public override string GetLocalAddress() { throw null; }
        public override int GetLocalPort() { throw null; }
        public override string GetPathInfo() { throw null; }
        public override string GetQueryString() { throw null; }
        public override string GetRawUrl() { throw null; }
        public override string GetRemoteAddress() { throw null; }
        public override int GetRemotePort() { throw null; }
        public override string GetServerVariable(string name) { throw null; }
        public override string GetUriPath() { throw null; }
        public override System.IntPtr GetUserToken() { throw null; }
        public override string MapPath(string path) { throw null; }
        public override void SendKnownResponseHeader(int index, string value) { }
        public override void SendResponseFromFile(System.IntPtr handle, long offset, long length) { }
        public override void SendResponseFromFile(string filename, long offset, long length) { }
        public override void SendResponseFromMemory(byte[] data, int length) { }
        public override void SendStatus(int statusCode, string statusDescription) { }
        public override void SendUnknownResponseHeader(string name, string value) { }
    }
    public abstract partial class VirtualDirectory : System.Web.Hosting.VirtualFileBase
    {
        protected VirtualDirectory(string virtualPath) { }
        public abstract System.Collections.IEnumerable Children { get; }
        public abstract System.Collections.IEnumerable Directories { get; }
        public abstract System.Collections.IEnumerable Files { get; }
        public override bool IsDirectory { get { throw null; } }
    }
    public abstract partial class VirtualFile : System.Web.Hosting.VirtualFileBase
    {
        protected VirtualFile(string virtualPath) { }
        public override bool IsDirectory { get { throw null; } }
        public abstract System.IO.Stream Open();
    }
    public abstract partial class VirtualFileBase : System.MarshalByRefObject
    {
        protected VirtualFileBase() { }
        public abstract bool IsDirectory { get; }
        public virtual string Name { get { throw null; } }
        public string VirtualPath { get { throw null; } }
        public override object InitializeLifetimeService() { throw null; }
    }
    public abstract partial class VirtualPathProvider : System.MarshalByRefObject
    {
        protected VirtualPathProvider() { }
        protected internal System.Web.Hosting.VirtualPathProvider Previous { get { throw null; } }
        public virtual string CombineVirtualPaths(string basePath, string relativePath) { throw null; }
        public virtual bool DirectoryExists(string virtualDir) { throw null; }
        public virtual bool FileExists(string virtualPath) { throw null; }
        public virtual System.Web.Caching.CacheDependency GetCacheDependency(string virtualPath, System.Collections.IEnumerable virtualPathDependencies, System.DateTime utcStart) { throw null; }
        public virtual string GetCacheKey(string virtualPath) { throw null; }
        public virtual System.Web.Hosting.VirtualDirectory GetDirectory(string virtualDir) { throw null; }
        public virtual System.Web.Hosting.VirtualFile GetFile(string virtualPath) { throw null; }
        public virtual string GetFileHash(string virtualPath, System.Collections.IEnumerable virtualPathDependencies) { throw null; }
        protected virtual void Initialize() { }
        public override object InitializeLifetimeService() { throw null; }
        public static System.IO.Stream OpenFile(string virtualPath) { throw null; }
    }
}
namespace System.Web.Instrumentation
{
    public partial class PageExecutionContext
    {
        public PageExecutionContext() { }
        public bool IsLiteral { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } [System.Runtime.CompilerServices.CompilerGeneratedAttribute]set { } }
        public int Length { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } [System.Runtime.CompilerServices.CompilerGeneratedAttribute]set { } }
        public int StartPosition { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } [System.Runtime.CompilerServices.CompilerGeneratedAttribute]set { } }
        public System.IO.TextWriter TextWriter { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } [System.Runtime.CompilerServices.CompilerGeneratedAttribute]set { } }
        public string VirtualPath { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } [System.Runtime.CompilerServices.CompilerGeneratedAttribute]set { } }
    }
    public abstract partial class PageExecutionListener
    {
        protected PageExecutionListener() { }
        public abstract void BeginContext(System.Web.Instrumentation.PageExecutionContext context);
        public abstract void EndContext(System.Web.Instrumentation.PageExecutionContext context);
    }
    public sealed partial class PageInstrumentationService
    {
        public PageInstrumentationService() { }
        public System.Collections.Generic.IList<System.Web.Instrumentation.PageExecutionListener> ExecutionListeners { get { throw null; } }
        public static bool IsEnabled { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } [System.Runtime.CompilerServices.CompilerGeneratedAttribute]set { } }
    }
}
namespace System.Web.Mail
{
    [System.ObsoleteAttribute("The recommended alternative is System.Net.Mail.Attachment. http://go.microsoft.com/fwlink/?linkid=14202")]
    public partial class MailAttachment
    {
        public MailAttachment(string filename) { }
        public MailAttachment(string filename, System.Web.Mail.MailEncoding encoding) { }
        public System.Web.Mail.MailEncoding Encoding { get { throw null; } }
        public string Filename { get { throw null; } }
    }
    [System.ObsoleteAttribute("The recommended alternative is System.Net.Mime.TransferEncoding. http://go.microsoft.com/fwlink/?linkid=14202")]
    public enum MailEncoding
    {
        Base64 = 1,
        UUEncode = 0,
    }
    [System.ObsoleteAttribute("The recommended alternative is System.Net.Mail.MailMessage.IsBodyHtml. http://go.microsoft.com/fwlink/?linkid=14202")]
    public enum MailFormat
    {
        Html = 1,
        Text = 0,
    }
    [System.ObsoleteAttribute("The recommended alternative is System.Net.Mail.MailMessage. http://go.microsoft.com/fwlink/?linkid=14202")]
    public partial class MailMessage
    {
        public MailMessage() { }
        public System.Collections.IList Attachments { get { throw null; } }
        public string Bcc { get { throw null; } set { } }
        public string Body { get { throw null; } set { } }
        public System.Text.Encoding BodyEncoding { get { throw null; } set { } }
        public System.Web.Mail.MailFormat BodyFormat { get { throw null; } set { } }
        public string Cc { get { throw null; } set { } }
        public System.Collections.IDictionary Fields { get { throw null; } }
        public string From { get { throw null; } set { } }
        public System.Collections.IDictionary Headers { get { throw null; } }
        public System.Web.Mail.MailPriority Priority { get { throw null; } set { } }
        public string Subject { get { throw null; } set { } }
        public string To { get { throw null; } set { } }
        public string UrlContentBase { get { throw null; } set { } }
        public string UrlContentLocation { get { throw null; } set { } }
    }
    [System.ObsoleteAttribute("The recommended alternative is System.Net.Mail.MailPriority. http://go.microsoft.com/fwlink/?linkid=14202")]
    public enum MailPriority
    {
        High = 2,
        Low = 1,
        Normal = 0,
    }
    [System.ObsoleteAttribute("The recommended alternative is System.Net.Mail.SmtpClient. http://go.microsoft.com/fwlink/?linkid=14202")]
    public partial class SmtpMail
    {
        internal SmtpMail() { }
        public static string SmtpServer { get { throw null; } set { } }
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.Assert, UnmanagedCode=true)]
        [System.Web.AspNetHostingPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, Level=System.Web.AspNetHostingPermissionLevel.Medium)]
        public static void Send(string from, string to, string subject, string messageText) { }
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.Assert, UnmanagedCode=true)]
        [System.Web.AspNetHostingPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, Level=System.Web.AspNetHostingPermissionLevel.Medium)]
        public static void Send(System.Web.Mail.MailMessage message) { }
    }
}
namespace System.Web.Management
{
    public abstract partial class BufferedWebEventProvider : System.Web.Management.WebEventProvider
    {
        protected BufferedWebEventProvider() { }
        public string BufferMode { get { throw null; } }
        public bool UseBuffering { get { throw null; } }
        public override void Flush() { }
        public override void Initialize(string name, System.Collections.Specialized.NameValueCollection config) { }
        public override void ProcessEvent(System.Web.Management.WebBaseEvent eventRaised) { }
        public abstract void ProcessEventFlush(System.Web.Management.WebEventBufferFlushInfo flushInfo);
        public override void Shutdown() { }
    }
    public sealed partial class EventLogWebEventProvider : System.Web.Management.WebEventProvider
    {
        internal EventLogWebEventProvider() { }
        public override void Flush() { }
        public override void Initialize(string name, System.Collections.Specialized.NameValueCollection config) { }
        public override void ProcessEvent(System.Web.Management.WebBaseEvent eventRaised) { }
        public override void Shutdown() { }
    }
    public enum EventNotificationType
    {
        Flush = 2,
        Regular = 0,
        Unbuffered = 3,
        Urgent = 1,
    }
    public sealed partial class IisTraceWebEventProvider : System.Web.Management.WebEventProvider
    {
        public IisTraceWebEventProvider() { }
        public override void Flush() { }
        public override void Initialize(string name, System.Collections.Specialized.NameValueCollection config) { }
        public override void ProcessEvent(System.Web.Management.WebBaseEvent eventRaised) { }
        public override void Shutdown() { }
    }
    [System.Runtime.InteropServices.GuidAttribute("c84f668a-cc3f-11d7-b79e-505054503030")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]
    public partial interface IRegiisUtility
    {
        void ProtectedConfigAction(long actionToPerform, [System.Runtime.InteropServices.In][System.Runtime.InteropServices.MarshalAs(System.Runtime.InteropServices.UnmanagedType.LPWStr)]string firstArgument, [System.Runtime.InteropServices.In][System.Runtime.InteropServices.MarshalAs(System.Runtime.InteropServices.UnmanagedType.LPWStr)]string secondArgument, [System.Runtime.InteropServices.In][System.Runtime.InteropServices.MarshalAs(System.Runtime.InteropServices.UnmanagedType.LPWStr)]string providerName, [System.Runtime.InteropServices.In][System.Runtime.InteropServices.MarshalAs(System.Runtime.InteropServices.UnmanagedType.LPWStr)]string appPath, [System.Runtime.InteropServices.In][System.Runtime.InteropServices.MarshalAs(System.Runtime.InteropServices.UnmanagedType.LPWStr)]string site, [System.Runtime.InteropServices.In][System.Runtime.InteropServices.MarshalAs(System.Runtime.InteropServices.UnmanagedType.LPWStr)]string cspOrLocation, int keySize, out System.IntPtr exception);
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, Flags=System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode)]
        void RegisterAsnetMmcAssembly(int doReg, [System.Runtime.InteropServices.In][System.Runtime.InteropServices.MarshalAs(System.Runtime.InteropServices.UnmanagedType.LPWStr)]string assemblyName, [System.Runtime.InteropServices.In][System.Runtime.InteropServices.MarshalAs(System.Runtime.InteropServices.UnmanagedType.LPWStr)]string binaryDirectory, out System.IntPtr exception);
        void RegisterSystemWebAssembly(int doReg, out System.IntPtr exception);
        void RemoveBrowserCaps(out System.IntPtr exception);
    }
    public partial interface IWebEventCustomEvaluator
    {
        bool CanFire(System.Web.Management.WebBaseEvent raisedEvent, System.Web.Management.RuleFiringRecord record);
    }
    public sealed partial class MailEventNotificationInfo
    {
        internal MailEventNotificationInfo() { }
        public System.Web.Management.WebBaseEventCollection Events { get { throw null; } }
        public int EventsDiscardedByBuffer { get { throw null; } }
        public int EventsDiscardedDueToMessageLimit { get { throw null; } }
        public int EventsInBuffer { get { throw null; } }
        public int EventsInNotification { get { throw null; } }
        public int EventsRemaining { get { throw null; } }
        public System.DateTime LastNotificationUtc { get { throw null; } }
        public System.Net.Mail.MailMessage Message { get { throw null; } }
        public int MessageSequence { get { throw null; } }
        public int MessagesInNotification { get { throw null; } }
        public int NotificationSequence { get { throw null; } }
        public System.Web.Management.EventNotificationType NotificationType { get { throw null; } }
    }
    public abstract partial class MailWebEventProvider : System.Web.Management.BufferedWebEventProvider
    {
        internal MailWebEventProvider() { }
        public override void Initialize(string name, System.Collections.Specialized.NameValueCollection config) { }
        public override void ProcessEvent(System.Web.Management.WebBaseEvent eventRaised) { }
        public override void ProcessEventFlush(System.Web.Management.WebEventBufferFlushInfo flushInfo) { }
        public override void Shutdown() { }
    }
    public sealed partial class RegiisUtility : System.Web.Management.IRegiisUtility
    {
        public RegiisUtility() { }
        public void ProtectedConfigAction(long options, string firstArgument, string secondArgument, string providerName, string appPath, string site, string cspOrLocation, int keySize, out System.IntPtr exception) { throw null; }
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, Flags=System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode)]
        public void RegisterAsnetMmcAssembly(int doReg, string typeName, string binaryDirectory, out System.IntPtr exception) { throw null; }
        public void RegisterSystemWebAssembly(int doReg, out System.IntPtr exception) { throw null; }
        public void RemoveBrowserCaps(out System.IntPtr exception) { throw null; }
    }
    public sealed partial class RuleFiringRecord
    {
        internal RuleFiringRecord() { }
        public System.DateTime LastFired { get { throw null; } }
        public int TimesRaised { get { throw null; } }
    }
    public enum SessionStateType
    {
        Custom = 2,
        Persisted = 1,
        Temporary = 0,
    }
    public sealed partial class SimpleMailWebEventProvider : System.Web.Management.MailWebEventProvider
    {
        internal SimpleMailWebEventProvider() { }
        public override void Initialize(string name, System.Collections.Specialized.NameValueCollection config) { }
    }
    [System.SerializableAttribute]
    public sealed partial class SqlExecutionException : System.SystemException
    {
        public SqlExecutionException() { }
        public SqlExecutionException(string message) { }
        public SqlExecutionException(string message, System.Exception innerException) { }
        public SqlExecutionException(string message, string server, string database, string sqlFile, string commands, System.Data.SqlClient.SqlException sqlException) { }
        public string Commands { get { throw null; } }
        public string Database { get { throw null; } }
        public System.Data.SqlClient.SqlException Exception { get { throw null; } }
        public string Server { get { throw null; } }
        public string SqlFile { get { throw null; } }
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, SerializationFormatter=true)]
        public override void GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) { }
    }
    [System.FlagsAttribute]
    public enum SqlFeatures
    {
        All = 1073741855,
        Membership = 1,
        None = 0,
        Personalization = 8,
        Profile = 2,
        RoleManager = 4,
        SqlWebEventProvider = 16,
    }
    [System.Web.AspNetHostingPermissionAttribute(System.Security.Permissions.SecurityAction.LinkDemand, Level=System.Web.AspNetHostingPermissionLevel.High)]
    public static partial class SqlServices
    {
        public static string GenerateApplicationServicesScripts(bool install, System.Web.Management.SqlFeatures features, string database) { throw null; }
        public static string GenerateSessionStateScripts(bool install, System.Web.Management.SessionStateType type, string customDatabase) { throw null; }
        public static void Install(string server, string user, string password, string database, System.Web.Management.SqlFeatures features) { }
        public static void Install(string server, string database, System.Web.Management.SqlFeatures features) { }
        public static void Install(string database, System.Web.Management.SqlFeatures features, string connectionString) { }
        public static void InstallSessionState(string server, string user, string password, string customDatabase, System.Web.Management.SessionStateType type) { }
        public static void InstallSessionState(string server, string customDatabase, System.Web.Management.SessionStateType type) { }
        public static void InstallSessionState(string customDatabase, System.Web.Management.SessionStateType type, string connectionString) { }
        public static void Uninstall(string server, string user, string password, string database, System.Web.Management.SqlFeatures features) { }
        public static void Uninstall(string server, string database, System.Web.Management.SqlFeatures features) { }
        public static void Uninstall(string database, System.Web.Management.SqlFeatures features, string connectionString) { }
        public static void UninstallSessionState(string server, string user, string password, string customDatabase, System.Web.Management.SessionStateType type) { }
        public static void UninstallSessionState(string server, string customDatabase, System.Web.Management.SessionStateType type) { }
        public static void UninstallSessionState(string customDatabase, System.Web.Management.SessionStateType type, string connectionString) { }
    }
    [System.Security.Permissions.PermissionSetAttribute(System.Security.Permissions.SecurityAction.InheritanceDemand, Unrestricted=true)]
    public partial class SqlWebEventProvider : System.Web.Management.BufferedWebEventProvider
    {
        protected internal SqlWebEventProvider() { }
        protected virtual void EventProcessingComplete(System.Web.Management.WebBaseEventCollection raisedEvents) { }
        public override void Initialize(string name, System.Collections.Specialized.NameValueCollection config) { }
        public override void ProcessEvent(System.Web.Management.WebBaseEvent eventRaised) { }
        public override void ProcessEventFlush(System.Web.Management.WebEventBufferFlushInfo flushInfo) { }
        public override void Shutdown() { }
    }
    public sealed partial class TemplatedMailWebEventProvider : System.Web.Management.MailWebEventProvider
    {
        internal TemplatedMailWebEventProvider() { }
        public static System.Web.Management.MailEventNotificationInfo CurrentNotification { get { throw null; } }
        public override void Initialize(string name, System.Collections.Specialized.NameValueCollection config) { }
    }
    public sealed partial class TraceWebEventProvider : System.Web.Management.WebEventProvider
    {
        internal TraceWebEventProvider() { }
        public override void Flush() { }
        public override void Initialize(string name, System.Collections.Specialized.NameValueCollection config) { }
        public override void ProcessEvent(System.Web.Management.WebBaseEvent eventRaised) { }
        public override void Shutdown() { }
    }
    public sealed partial class WebApplicationInformation
    {
        internal WebApplicationInformation() { }
        public string ApplicationDomain { get { throw null; } }
        public string ApplicationPath { get { throw null; } }
        public string ApplicationVirtualPath { get { throw null; } }
        public string MachineName { get { throw null; } }
        public string TrustLevel { get { throw null; } }
        public void FormatToString(System.Web.Management.WebEventFormatter formatter) { }
        public override string ToString() { throw null; }
    }
    public partial class WebApplicationLifetimeEvent : System.Web.Management.WebManagementEvent
    {
        protected internal WebApplicationLifetimeEvent(string message, object eventSource, int eventCode) : base (default(string), default(object), default(int)) { }
        protected internal WebApplicationLifetimeEvent(string message, object eventSource, int eventCode, int eventDetailCode) : base (default(string), default(object), default(int)) { }
        protected internal override void IncrementPerfCounters() { }
    }
    public partial class WebAuditEvent : System.Web.Management.WebManagementEvent
    {
        protected internal WebAuditEvent(string message, object eventSource, int eventCode) : base (default(string), default(object), default(int)) { }
        protected internal WebAuditEvent(string message, object eventSource, int eventCode, int eventDetailCode) : base (default(string), default(object), default(int)) { }
        public System.Web.Management.WebRequestInformation RequestInformation { get { throw null; } }
    }
    public partial class WebAuthenticationFailureAuditEvent : System.Web.Management.WebFailureAuditEvent
    {
        protected internal WebAuthenticationFailureAuditEvent(string message, object eventSource, int eventCode, int eventDetailCode, string nameToAuthenticate) : base (default(string), default(object), default(int)) { }
        protected internal WebAuthenticationFailureAuditEvent(string message, object eventSource, int eventCode, string nameToAuthenticate) : base (default(string), default(object), default(int)) { }
        public string NameToAuthenticate { get { throw null; } }
    }
    public partial class WebAuthenticationSuccessAuditEvent : System.Web.Management.WebSuccessAuditEvent
    {
        protected internal WebAuthenticationSuccessAuditEvent(string message, object eventSource, int eventCode, int eventDetailCode, string nameToAuthenticate) : base (default(string), default(object), default(int)) { }
        protected internal WebAuthenticationSuccessAuditEvent(string message, object eventSource, int eventCode, string nameToAuthenticate) : base (default(string), default(object), default(int)) { }
        public string NameToAuthenticate { get { throw null; } }
    }
    public partial class WebBaseErrorEvent : System.Web.Management.WebManagementEvent
    {
        protected internal WebBaseErrorEvent(string message, object eventSource, int eventCode, System.Exception e) : base (default(string), default(object), default(int)) { }
        protected internal WebBaseErrorEvent(string message, object eventSource, int eventCode, int eventDetailCode, System.Exception e) : base (default(string), default(object), default(int)) { }
        public System.Exception ErrorException { get { throw null; } }
        protected internal override void IncrementPerfCounters() { }
    }
    public partial class WebBaseEvent
    {
        protected internal WebBaseEvent(string message, object eventSource, int eventCode) { }
        protected internal WebBaseEvent(string message, object eventSource, int eventCode, int eventDetailCode) { }
        public static System.Web.Management.WebApplicationInformation ApplicationInformation { get { throw null; } }
        public int EventCode { get { throw null; } }
        public int EventDetailCode { get { throw null; } }
        public System.Guid EventID { get { throw null; } }
        public long EventOccurrence { get { throw null; } }
        public long EventSequence { get { throw null; } }
        public object EventSource { get { throw null; } }
        public System.DateTime EventTime { get { throw null; } }
        public System.DateTime EventTimeUtc { get { throw null; } }
        public string Message { get { throw null; } }
        public virtual void FormatCustomEventDetails(System.Web.Management.WebEventFormatter formatter) { }
        protected internal virtual void IncrementPerfCounters() { }
        [System.Web.AspNetHostingPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, Level=System.Web.AspNetHostingPermissionLevel.Medium)]
        public virtual void Raise() { }
        [System.Web.AspNetHostingPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, Level=System.Web.AspNetHostingPermissionLevel.Medium)]
        public static void Raise(System.Web.Management.WebBaseEvent eventRaised) { }
        public override string ToString() { throw null; }
        public virtual string ToString(bool includeAppInfo, bool includeCustomEventDetails) { throw null; }
    }
    public sealed partial class WebBaseEventCollection : System.Collections.ReadOnlyCollectionBase
    {
        public WebBaseEventCollection(System.Collections.ICollection events) { }
        public System.Web.Management.WebBaseEvent this[int index] { get { throw null; } }
        public bool Contains(System.Web.Management.WebBaseEvent value) { throw null; }
        public int IndexOf(System.Web.Management.WebBaseEvent value) { throw null; }
    }
    public partial class WebErrorEvent : System.Web.Management.WebBaseErrorEvent
    {
        protected internal WebErrorEvent(string message, object eventSource, int eventCode, System.Exception exception) : base (default(string), default(object), default(int), default(System.Exception)) { }
        protected internal WebErrorEvent(string message, object eventSource, int eventCode, int eventDetailCode, System.Exception exception) : base (default(string), default(object), default(int), default(System.Exception)) { }
        public System.Web.Management.WebRequestInformation RequestInformation { get { throw null; } }
        public System.Web.Management.WebThreadInformation ThreadInformation { get { throw null; } }
        protected internal override void IncrementPerfCounters() { }
    }
    public sealed partial class WebEventBufferFlushInfo
    {
        internal WebEventBufferFlushInfo() { }
        public System.Web.Management.WebBaseEventCollection Events { get { throw null; } }
        public int EventsDiscardedSinceLastNotification { get { throw null; } }
        public int EventsInBuffer { get { throw null; } }
        public System.DateTime LastNotificationUtc { get { throw null; } }
        public int NotificationSequence { get { throw null; } }
        public System.Web.Management.EventNotificationType NotificationType { get { throw null; } }
    }
    public sealed partial class WebEventCodes
    {
        internal WebEventCodes() { }
        public const int ApplicationCodeBase = 1000;
        public const int ApplicationCompilationEnd = 1004;
        public const int ApplicationCompilationStart = 1003;
        public const int ApplicationDetailCodeBase = 50000;
        public const int ApplicationHeartbeat = 1005;
        public const int ApplicationShutdown = 1002;
        public const int ApplicationShutdownBinDirChangeOrDirectoryRename = 50007;
        public const int ApplicationShutdownBrowsersDirChangeOrDirectoryRename = 50008;
        public const int ApplicationShutdownBuildManagerChange = 50017;
        public const int ApplicationShutdownChangeInGlobalAsax = 50003;
        public const int ApplicationShutdownChangeInSecurityPolicyFile = 50006;
        public const int ApplicationShutdownCodeDirChangeOrDirectoryRename = 50009;
        public const int ApplicationShutdownConfigurationChange = 50004;
        public const int ApplicationShutdownHostingEnvironment = 50002;
        public const int ApplicationShutdownHttpRuntimeClose = 50013;
        public const int ApplicationShutdownIdleTimeout = 50011;
        public const int ApplicationShutdownInitializationError = 50014;
        public const int ApplicationShutdownMaxRecompilationsReached = 50015;
        public const int ApplicationShutdownPhysicalApplicationPathChanged = 50012;
        public const int ApplicationShutdownResourcesDirChangeOrDirectoryRename = 50010;
        public const int ApplicationShutdownUnknown = 50001;
        public const int ApplicationShutdownUnloadAppDomainCalled = 50005;
        public const int ApplicationStart = 1001;
        public const int AuditCodeBase = 4000;
        public const int AuditDetailCodeBase = 50200;
        public const int AuditFileAuthorizationFailure = 4008;
        public const int AuditFileAuthorizationSuccess = 4004;
        public const int AuditFormsAuthenticationFailure = 4005;
        public const int AuditFormsAuthenticationSuccess = 4001;
        public const int AuditInvalidViewStateFailure = 4009;
        public const int AuditMembershipAuthenticationFailure = 4006;
        public const int AuditMembershipAuthenticationSuccess = 4002;
        public const int AuditUnhandledAccessException = 4011;
        public const int AuditUnhandledSecurityException = 4010;
        public const int AuditUrlAuthorizationFailure = 4007;
        public const int AuditUrlAuthorizationSuccess = 4003;
        public const int ErrorCodeBase = 3000;
        public const int ExpiredTicketFailure = 50202;
        public const int InvalidEventCode = -1;
        public const int InvalidTicketFailure = 50201;
        public const int InvalidViewState = 50204;
        public const int InvalidViewStateMac = 50203;
        public const int MiscCodeBase = 6000;
        public const int RequestCodeBase = 2000;
        public const int RequestTransactionAbort = 2002;
        public const int RequestTransactionComplete = 2001;
        public const int RuntimeErrorPostTooLarge = 3004;
        public const int RuntimeErrorRequestAbort = 3001;
        public const int RuntimeErrorUnhandledException = 3005;
        public const int RuntimeErrorValidationFailure = 3003;
        public const int RuntimeErrorViewStateFailure = 3002;
        public const int RuntimeErrorWebResourceFailure = 3012;
        public const int SqlProviderEventsDropped = 50301;
        public const int StateServerConnectionError = 50016;
        public const int UndefinedEventCode = 0;
        public const int UndefinedEventDetailCode = 0;
        public const int WebErrorCompilationError = 3007;
        public const int WebErrorConfigurationError = 3008;
        public const int WebErrorObjectStateFormatterDeserializationError = 3011;
        public const int WebErrorOtherError = 3009;
        public const int WebErrorParserError = 3006;
        public const int WebErrorPropertyDeserializationError = 3010;
        public const int WebEventDetailCodeBase = 50300;
        public const int WebEventProviderInformation = 6001;
        public const int WebExtendedBase = 100000;
    }
    public partial class WebEventFormatter
    {
        internal WebEventFormatter() { }
        public int IndentationLevel { get { throw null; } set { } }
        public int TabSize { get { throw null; } set { } }
        public void AppendLine(string s) { }
        public new string ToString() { throw null; }
    }
    public static partial class WebEventManager
    {
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, Unrestricted=true)]
        public static void Flush() { }
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, Unrestricted=true)]
        public static void Flush(string providerName) { }
    }
    public abstract partial class WebEventProvider : System.Configuration.Provider.ProviderBase
    {
        protected WebEventProvider() { }
        public abstract void Flush();
        public abstract void ProcessEvent(System.Web.Management.WebBaseEvent raisedEvent);
        public abstract void Shutdown();
    }
    public partial class WebFailureAuditEvent : System.Web.Management.WebAuditEvent
    {
        protected internal WebFailureAuditEvent(string message, object eventSource, int eventCode) : base (default(string), default(object), default(int)) { }
        protected internal WebFailureAuditEvent(string message, object eventSource, int eventCode, int eventDetailCode) : base (default(string), default(object), default(int)) { }
        protected internal override void IncrementPerfCounters() { }
    }
    public partial class WebHeartbeatEvent : System.Web.Management.WebManagementEvent
    {
        protected internal WebHeartbeatEvent(string message, int eventCode) : base (default(string), default(object), default(int)) { }
        public System.Web.Management.WebProcessStatistics ProcessStatistics { get { throw null; } }
    }
    [System.Security.Permissions.PermissionSetAttribute(System.Security.Permissions.SecurityAction.InheritanceDemand, Unrestricted=true)]
    public partial class WebManagementEvent : System.Web.Management.WebBaseEvent
    {
        protected internal WebManagementEvent(string message, object eventSource, int eventCode) : base (default(string), default(object), default(int)) { }
        protected internal WebManagementEvent(string message, object eventSource, int eventCode, int eventDetailCode) : base (default(string), default(object), default(int)) { }
        public System.Web.Management.WebProcessInformation ProcessInformation { get { throw null; } }
    }
    public sealed partial class WebProcessInformation
    {
        internal WebProcessInformation() { }
        public string AccountName { get { throw null; } }
        public int ProcessID { get { throw null; } }
        public string ProcessName { get { throw null; } }
        public void FormatToString(System.Web.Management.WebEventFormatter formatter) { }
    }
    public partial class WebProcessStatistics
    {
        public WebProcessStatistics() { }
        public int AppDomainCount { get { throw null; } }
        public long ManagedHeapSize { get { throw null; } }
        public long PeakWorkingSet { get { throw null; } }
        public System.DateTime ProcessStartTime { get { throw null; } }
        public int RequestsExecuting { get { throw null; } }
        public int RequestsQueued { get { throw null; } }
        public int RequestsRejected { get { throw null; } }
        public int ThreadCount { get { throw null; } }
        public long WorkingSet { get { throw null; } }
        public virtual void FormatToString(System.Web.Management.WebEventFormatter formatter) { }
    }
    public partial class WebRequestErrorEvent : System.Web.Management.WebBaseErrorEvent
    {
        protected internal WebRequestErrorEvent(string message, object eventSource, int eventCode, System.Exception exception) : base (default(string), default(object), default(int), default(System.Exception)) { }
        protected internal WebRequestErrorEvent(string message, object eventSource, int eventCode, int eventDetailCode, System.Exception exception) : base (default(string), default(object), default(int), default(System.Exception)) { }
        public System.Web.Management.WebRequestInformation RequestInformation { get { throw null; } }
        public System.Web.Management.WebThreadInformation ThreadInformation { get { throw null; } }
        protected internal override void IncrementPerfCounters() { }
    }
    public partial class WebRequestEvent : System.Web.Management.WebManagementEvent
    {
        protected internal WebRequestEvent(string message, object eventSource, int eventCode) : base (default(string), default(object), default(int)) { }
        protected internal WebRequestEvent(string message, object eventSource, int eventCode, int eventDetailCode) : base (default(string), default(object), default(int)) { }
        public System.Web.Management.WebRequestInformation RequestInformation { get { throw null; } }
        protected internal override void IncrementPerfCounters() { }
    }
    public sealed partial class WebRequestInformation
    {
        internal WebRequestInformation() { }
        public System.Security.Principal.IPrincipal Principal { get { throw null; } }
        public string RequestPath { get { throw null; } }
        public string RequestUrl { get { throw null; } }
        public string ThreadAccountName { get { throw null; } }
        public string UserHostAddress { get { throw null; } }
        public void FormatToString(System.Web.Management.WebEventFormatter formatter) { }
    }
    public partial class WebSuccessAuditEvent : System.Web.Management.WebAuditEvent
    {
        protected internal WebSuccessAuditEvent(string message, object eventSource, int eventCode) : base (default(string), default(object), default(int)) { }
        protected internal WebSuccessAuditEvent(string message, object eventSource, int eventCode, int eventDetailCode) : base (default(string), default(object), default(int)) { }
        protected internal override void IncrementPerfCounters() { }
    }
    public sealed partial class WebThreadInformation
    {
        internal WebThreadInformation() { }
        public bool IsImpersonating { get { throw null; } }
        public string StackTrace { get { throw null; } }
        public string ThreadAccountName { get { throw null; } }
        public int ThreadID { get { throw null; } }
        public void FormatToString(System.Web.Management.WebEventFormatter formatter) { }
    }
    public partial class WebViewStateFailureAuditEvent : System.Web.Management.WebFailureAuditEvent
    {
        protected internal WebViewStateFailureAuditEvent(string message, object eventSource, int eventCode, int eventDetailCode, System.Web.UI.ViewStateException viewStateException) : base (default(string), default(object), default(int)) { }
        protected internal WebViewStateFailureAuditEvent(string message, object eventSource, int eventCode, System.Web.UI.ViewStateException viewStateException) : base (default(string), default(object), default(int)) { }
        public System.Web.UI.ViewStateException ViewStateException { get { throw null; } }
    }
    public partial class WmiWebEventProvider : System.Web.Management.WebEventProvider
    {
        public WmiWebEventProvider() { }
        public override void Flush() { }
        public override void Initialize(string name, System.Collections.Specialized.NameValueCollection config) { }
        public override void ProcessEvent(System.Web.Management.WebBaseEvent eventRaised) { }
        public override void Shutdown() { }
    }
}
namespace System.Web.ModelBinding
{
    public sealed partial class ArrayModelBinderProvider : System.Web.ModelBinding.ModelBinderProvider
    {
        public ArrayModelBinderProvider() { }
        public override System.Web.ModelBinding.IModelBinder GetBinder(System.Web.ModelBinding.ModelBindingExecutionContext modelBindingExecutionContext, System.Web.ModelBinding.ModelBindingContext bindingContext) { throw null; }
    }
    public partial class ArrayModelBinder<TElement> : System.Web.ModelBinding.CollectionModelBinder<TElement>
    {
        public ArrayModelBinder() { }
        protected override bool CreateOrReplaceCollection(System.Web.ModelBinding.ModelBindingExecutionContext modelBindingExecutionContext, System.Web.ModelBinding.ModelBindingContext bindingContext, System.Collections.Generic.IList<TElement> newCollection) { throw null; }
    }
    public abstract partial class AssociatedMetadataProvider : System.Web.ModelBinding.ModelMetadataProvider
    {
        protected AssociatedMetadataProvider() { }
        protected abstract System.Web.ModelBinding.ModelMetadata CreateMetadata(System.Collections.Generic.IEnumerable<System.Attribute> attributes, System.Type containerType, System.Func<object> modelAccessor, System.Type modelType, string propertyName);
        protected virtual System.Collections.Generic.IEnumerable<System.Attribute> FilterAttributes(System.Type containerType, System.ComponentModel.PropertyDescriptor propertyDescriptor, System.Collections.Generic.IEnumerable<System.Attribute> attributes) { throw null; }
        public override System.Collections.Generic.IEnumerable<System.Web.ModelBinding.ModelMetadata> GetMetadataForProperties(object container, System.Type containerType) { throw null; }
        protected virtual System.Web.ModelBinding.ModelMetadata GetMetadataForProperty(System.Func<object> modelAccessor, System.Type containerType, System.ComponentModel.PropertyDescriptor propertyDescriptor) { throw null; }
        public override System.Web.ModelBinding.ModelMetadata GetMetadataForProperty(System.Func<object> modelAccessor, System.Type containerType, string propertyName) { throw null; }
        public override System.Web.ModelBinding.ModelMetadata GetMetadataForType(System.Func<object> modelAccessor, System.Type modelType) { throw null; }
        protected virtual System.ComponentModel.ICustomTypeDescriptor GetTypeDescriptor(System.Type type) { throw null; }
    }
    public abstract partial class AssociatedValidatorProvider : System.Web.ModelBinding.ModelValidatorProvider
    {
        protected AssociatedValidatorProvider() { }
        protected virtual System.ComponentModel.ICustomTypeDescriptor GetTypeDescriptor(System.Type type) { throw null; }
        public sealed override System.Collections.Generic.IEnumerable<System.Web.ModelBinding.ModelValidator> GetValidators(System.Web.ModelBinding.ModelMetadata metadata, System.Web.ModelBinding.ModelBindingExecutionContext context) { throw null; }
        protected abstract System.Collections.Generic.IEnumerable<System.Web.ModelBinding.ModelValidator> GetValidators(System.Web.ModelBinding.ModelMetadata metadata, System.Web.ModelBinding.ModelBindingExecutionContext context, System.Collections.Generic.IEnumerable<System.Attribute> attributes);
    }
    public sealed partial class BinaryDataModelBinderProvider : System.Web.ModelBinding.ModelBinderProvider
    {
        public BinaryDataModelBinderProvider() { }
        public override System.Web.ModelBinding.IModelBinder GetBinder(System.Web.ModelBinding.ModelBindingExecutionContext modelBindingExecutionContext, System.Web.ModelBinding.ModelBindingContext bindingContext) { throw null; }
    }
    public enum BindingBehavior
    {
        Never = 1,
        Optional = 0,
        Required = 2,
    }
    [System.AttributeUsageAttribute(System.AttributeTargets.Class | System.AttributeTargets.Property, AllowMultiple=false, Inherited=true)]
    public partial class BindingBehaviorAttribute : System.Attribute
    {
        public BindingBehaviorAttribute(System.Web.ModelBinding.BindingBehavior behavior) { }
        public System.Web.ModelBinding.BindingBehavior Behavior { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } }
        public override object TypeId { get { throw null; } }
    }
    [System.AttributeUsageAttribute(System.AttributeTargets.Class | System.AttributeTargets.Property, AllowMultiple=false, Inherited=true)]
    public sealed partial class BindNeverAttribute : System.Web.ModelBinding.BindingBehaviorAttribute
    {
        public BindNeverAttribute() : base (default(System.Web.ModelBinding.BindingBehavior)) { }
    }
    [System.AttributeUsageAttribute(System.AttributeTargets.Class | System.AttributeTargets.Property, AllowMultiple=false, Inherited=true)]
    public sealed partial class BindRequiredAttribute : System.Web.ModelBinding.BindingBehaviorAttribute
    {
        public BindRequiredAttribute() : base (default(System.Web.ModelBinding.BindingBehavior)) { }
    }
    public sealed partial class CollectionModelBinderProvider : System.Web.ModelBinding.ModelBinderProvider
    {
        public CollectionModelBinderProvider() { }
        public override System.Web.ModelBinding.IModelBinder GetBinder(System.Web.ModelBinding.ModelBindingExecutionContext modelBindingExecutionContext, System.Web.ModelBinding.ModelBindingContext bindingContext) { throw null; }
    }
    public partial class CollectionModelBinder<TElement> : System.Web.ModelBinding.IModelBinder
    {
        public CollectionModelBinder() { }
        public virtual bool BindModel(System.Web.ModelBinding.ModelBindingExecutionContext modelBindingExecutionContext, System.Web.ModelBinding.ModelBindingContext bindingContext) { throw null; }
        protected virtual bool CreateOrReplaceCollection(System.Web.ModelBinding.ModelBindingExecutionContext modelBindingExecutionContext, System.Web.ModelBinding.ModelBindingContext bindingContext, System.Collections.Generic.IList<TElement> newCollection) { throw null; }
    }
    public partial class ComplexModel
    {
        public ComplexModel(System.Web.ModelBinding.ModelMetadata modelMetadata, System.Collections.Generic.IEnumerable<System.Web.ModelBinding.ModelMetadata> propertyMetadata) { }
        public System.Web.ModelBinding.ModelMetadata ModelMetadata { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } }
        public System.Collections.ObjectModel.ReadOnlyCollection<System.Web.ModelBinding.ModelMetadata> PropertyMetadata { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } }
        public System.Collections.Generic.IDictionary<System.Web.ModelBinding.ModelMetadata, System.Web.ModelBinding.ComplexModelResult> Results { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } }
    }
    public sealed partial class ComplexModelBinder : System.Web.ModelBinding.IModelBinder
    {
        public ComplexModelBinder() { }
        public bool BindModel(System.Web.ModelBinding.ModelBindingExecutionContext modelBindingExecutionContext, System.Web.ModelBinding.ModelBindingContext bindingContext) { throw null; }
    }
    public sealed partial class ComplexModelBinderProvider : System.Web.ModelBinding.ModelBinderProvider
    {
        public ComplexModelBinderProvider() { }
        public override System.Web.ModelBinding.IModelBinder GetBinder(System.Web.ModelBinding.ModelBindingExecutionContext modelBindingExecutionContext, System.Web.ModelBinding.ModelBindingContext bindingContext) { throw null; }
    }
    public sealed partial class ComplexModelResult
    {
        public ComplexModelResult(object model, System.Web.ModelBinding.ModelValidationNode validationNode) { }
        public object Model { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } }
        public System.Web.ModelBinding.ModelValidationNode ValidationNode { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } }
    }
    [System.AttributeUsageAttribute(System.AttributeTargets.Parameter, Inherited=false, AllowMultiple=false)]
    public sealed partial class ControlAttribute : System.Web.ModelBinding.ValueProviderSourceAttribute
    {
        public ControlAttribute() { }
        public ControlAttribute(string controlID) { }
        public ControlAttribute(string controlID, string propertyName) { }
        public string ControlID { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } }
        public string PropertyName { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } }
        public override string GetModelName() { throw null; }
        public override System.Web.ModelBinding.IValueProvider GetValueProvider(System.Web.ModelBinding.ModelBindingExecutionContext modelBindingExecutionContext) { throw null; }
    }
    public sealed partial class ControlValueProvider : System.Web.ModelBinding.SimpleValueProvider
    {
        public ControlValueProvider(System.Web.ModelBinding.ModelBindingExecutionContext modelBindingExecutionContext, string propertyName) : base (default(System.Web.ModelBinding.ModelBindingExecutionContext)) { }
        public string PropertyName { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } }
        protected override object FetchValue(string controlId) { throw null; }
    }
    [System.AttributeUsageAttribute(System.AttributeTargets.Parameter, Inherited=false, AllowMultiple=false)]
    public sealed partial class CookieAttribute : System.Web.ModelBinding.ValueProviderSourceAttribute, System.Web.ModelBinding.IUnvalidatedValueProviderSource, System.Web.ModelBinding.IValueProviderSource
    {
        public CookieAttribute() { }
        public CookieAttribute(string name) { }
        public string Name { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } }
        public bool ValidateInput { get { throw null; } set { } }
        public override string GetModelName() { throw null; }
        public override System.Web.ModelBinding.IValueProvider GetValueProvider(System.Web.ModelBinding.ModelBindingExecutionContext modelBindingExecutionContext) { throw null; }
    }
    public sealed partial class CookieValueProvider : System.Web.ModelBinding.IUnvalidatedValueProvider, System.Web.ModelBinding.IValueProvider
    {
        public CookieValueProvider(System.Web.ModelBinding.ModelBindingExecutionContext modelBindingExecutionContext) { }
        public bool ContainsPrefix(string prefix) { throw null; }
        public System.Web.ModelBinding.ValueProviderResult GetValue(string key) { throw null; }
        public System.Web.ModelBinding.ValueProviderResult GetValue(string key, bool skipValidation) { throw null; }
    }
    public partial class DataAnnotationsModelMetadata : System.Web.ModelBinding.ModelMetadata
    {
        public DataAnnotationsModelMetadata(System.Web.ModelBinding.DataAnnotationsModelMetadataProvider provider, System.Type containerType, System.Func<object> modelAccessor, System.Type modelType, string propertyName, System.ComponentModel.DataAnnotations.DisplayColumnAttribute displayColumnAttribute) : base (default(System.Web.ModelBinding.ModelMetadataProvider), default(System.Type), default(System.Func<object>), default(System.Type), default(string)) { }
        protected override string GetSimpleDisplayText() { throw null; }
    }
    public partial class DataAnnotationsModelMetadataProvider : System.Web.ModelBinding.AssociatedMetadataProvider
    {
        public DataAnnotationsModelMetadataProvider() { }
        protected override System.Web.ModelBinding.ModelMetadata CreateMetadata(System.Collections.Generic.IEnumerable<System.Attribute> attributes, System.Type containerType, System.Func<object> modelAccessor, System.Type modelType, string propertyName) { throw null; }
    }
    public delegate System.Web.ModelBinding.ModelValidator DataAnnotationsModelValidationFactory(System.Web.ModelBinding.ModelMetadata metadata, System.Web.ModelBinding.ModelBindingExecutionContext context, System.ComponentModel.DataAnnotations.ValidationAttribute attribute);
    public partial class DataAnnotationsModelValidator : System.Web.ModelBinding.ModelValidator
    {
        public DataAnnotationsModelValidator(System.Web.ModelBinding.ModelMetadata metadata, System.Web.ModelBinding.ModelBindingExecutionContext context, System.ComponentModel.DataAnnotations.ValidationAttribute attribute) : base (default(System.Web.ModelBinding.ModelMetadata), default(System.Web.ModelBinding.ModelBindingExecutionContext)) { }
        protected internal System.ComponentModel.DataAnnotations.ValidationAttribute Attribute { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } }
        protected internal string ErrorMessage { get { throw null; } }
        public override bool IsRequired { get { throw null; } }
        protected virtual string GetLocalizedErrorMessage(string errorMessage) { throw null; }
        protected string GetLocalizedString(string name, params object[] arguments) { throw null; }
        public override System.Collections.Generic.IEnumerable<System.Web.ModelBinding.ModelValidationResult> Validate(object container) { throw null; }
    }
    public partial class DataAnnotationsModelValidatorProvider : System.Web.ModelBinding.AssociatedValidatorProvider
    {
        public DataAnnotationsModelValidatorProvider() { }
        public static bool AddImplicitRequiredAttributeForValueTypes { get { throw null; } set { } }
        protected override System.Collections.Generic.IEnumerable<System.Web.ModelBinding.ModelValidator> GetValidators(System.Web.ModelBinding.ModelMetadata metadata, System.Web.ModelBinding.ModelBindingExecutionContext context, System.Collections.Generic.IEnumerable<System.Attribute> attributes) { throw null; }
        public static void RegisterAdapter(System.Type attributeType, System.Type adapterType) { }
        public static void RegisterAdapterFactory(System.Type attributeType, System.Web.ModelBinding.DataAnnotationsModelValidationFactory factory) { }
        public static void RegisterDefaultAdapter(System.Type adapterType) { }
        public static void RegisterDefaultAdapterFactory(System.Web.ModelBinding.DataAnnotationsModelValidationFactory factory) { }
        public static void RegisterDefaultValidatableObjectAdapter(System.Type adapterType) { }
        public static void RegisterDefaultValidatableObjectAdapterFactory(System.Web.ModelBinding.DataAnnotationsValidatableObjectAdapterFactory factory) { }
        public static void RegisterValidatableObjectAdapter(System.Type modelType, System.Type adapterType) { }
        public static void RegisterValidatableObjectAdapterFactory(System.Type modelType, System.Web.ModelBinding.DataAnnotationsValidatableObjectAdapterFactory factory) { }
    }
    public partial class DataAnnotationsModelValidator<TAttribute> : System.Web.ModelBinding.DataAnnotationsModelValidator where TAttribute : System.ComponentModel.DataAnnotations.ValidationAttribute
    {
        public DataAnnotationsModelValidator(System.Web.ModelBinding.ModelMetadata metadata, System.Web.ModelBinding.ModelBindingExecutionContext context, TAttribute attribute) : base (default(System.Web.ModelBinding.ModelMetadata), default(System.Web.ModelBinding.ModelBindingExecutionContext), default(System.ComponentModel.DataAnnotations.ValidationAttribute)) { }
        protected new TAttribute Attribute { get { throw null; } }
    }
    public delegate System.Web.ModelBinding.ModelValidator DataAnnotationsValidatableObjectAdapterFactory(System.Web.ModelBinding.ModelMetadata metadata, System.Web.ModelBinding.ModelBindingExecutionContext context);
    public partial class DefaultModelBinder : System.Web.ModelBinding.IModelBinder
    {
        public DefaultModelBinder() { }
        public System.Web.ModelBinding.ModelBinderProviderCollection Providers { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } }
        public bool BindModel(System.Web.ModelBinding.ModelBindingExecutionContext modelBindingExecutionContext, System.Web.ModelBinding.ModelBindingContext bindingContext) { throw null; }
    }
    public sealed partial class DictionaryModelBinderProvider : System.Web.ModelBinding.ModelBinderProvider
    {
        public DictionaryModelBinderProvider() { }
        public override System.Web.ModelBinding.IModelBinder GetBinder(System.Web.ModelBinding.ModelBindingExecutionContext modelBindingExecutionContext, System.Web.ModelBinding.ModelBindingContext bindingContext) { throw null; }
    }
    public partial class DictionaryModelBinder<TKey, TValue> : System.Web.ModelBinding.CollectionModelBinder<System.Collections.Generic.KeyValuePair<TKey, TValue>>
    {
        public DictionaryModelBinder() { }
        protected override bool CreateOrReplaceCollection(System.Web.ModelBinding.ModelBindingExecutionContext modelBindingExecutionContext, System.Web.ModelBinding.ModelBindingContext bindingContext, System.Collections.Generic.IList<System.Collections.Generic.KeyValuePair<TKey, TValue>> newCollection) { throw null; }
    }
    public partial class DictionaryValueProvider<TValue> : System.Web.ModelBinding.IValueProvider
    {
        public DictionaryValueProvider(System.Collections.Generic.IDictionary<string, TValue> dictionary, System.Globalization.CultureInfo culture) { }
        public virtual bool ContainsPrefix(string prefix) { throw null; }
        public virtual System.Web.ModelBinding.ValueProviderResult GetValue(string key) { throw null; }
    }
    public partial class EmptyModelMetadataProvider : System.Web.ModelBinding.AssociatedMetadataProvider
    {
        public EmptyModelMetadataProvider() { }
        protected override System.Web.ModelBinding.ModelMetadata CreateMetadata(System.Collections.Generic.IEnumerable<System.Attribute> attributes, System.Type containerType, System.Func<object> modelAccessor, System.Type modelType, string propertyName) { throw null; }
    }
    [System.AttributeUsageAttribute(System.AttributeTargets.Class | System.AttributeTargets.Interface, AllowMultiple=false, Inherited=true)]
    public sealed partial class ExtensibleModelBinderAttribute : System.Attribute
    {
        public ExtensibleModelBinderAttribute(System.Type binderType) { }
        public System.Type BinderType { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } }
        public bool SuppressPrefixCheck { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } [System.Runtime.CompilerServices.CompilerGeneratedAttribute]set { } }
    }
    [System.AttributeUsageAttribute(System.AttributeTargets.Parameter, Inherited=false, AllowMultiple=false)]
    public sealed partial class FormAttribute : System.Web.ModelBinding.ValueProviderSourceAttribute, System.Web.ModelBinding.IUnvalidatedValueProviderSource, System.Web.ModelBinding.IValueProviderSource
    {
        public FormAttribute() { }
        public FormAttribute(string fieldName) { }
        public string FieldName { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } }
        public bool ValidateInput { get { throw null; } set { } }
        public override string GetModelName() { throw null; }
        public override System.Web.ModelBinding.IValueProvider GetValueProvider(System.Web.ModelBinding.ModelBindingExecutionContext modelBindingExecutionContext) { throw null; }
    }
    public sealed partial class FormValueProvider : System.Web.ModelBinding.NameValueCollectionValueProvider
    {
        public FormValueProvider(System.Web.ModelBinding.ModelBindingExecutionContext modelBindingExecutionContext) : base (default(System.Collections.Specialized.NameValueCollection), default(System.Globalization.CultureInfo)) { }
    }
    public sealed partial class GenericModelBinderProvider : System.Web.ModelBinding.ModelBinderProvider
    {
        public GenericModelBinderProvider(System.Type modelType, System.Func<System.Type[], System.Web.ModelBinding.IModelBinder> modelBinderFactory) { }
        public GenericModelBinderProvider(System.Type modelType, System.Type modelBinderType) { }
        public GenericModelBinderProvider(System.Type modelType, System.Web.ModelBinding.IModelBinder modelBinder) { }
        public System.Type ModelType { get { throw null; } }
        public bool SuppressPrefixCheck { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } [System.Runtime.CompilerServices.CompilerGeneratedAttribute]set { } }
        public override System.Web.ModelBinding.IModelBinder GetBinder(System.Web.ModelBinding.ModelBindingExecutionContext modelBindingExecutionContext, System.Web.ModelBinding.ModelBindingContext bindingContext) { throw null; }
    }
    public partial interface IMetadataAware
    {
        void OnMetadataCreated(System.Web.ModelBinding.ModelMetadata metadata);
    }
    public partial interface IModelBinder
    {
        bool BindModel(System.Web.ModelBinding.ModelBindingExecutionContext modelBindingExecutionContext, System.Web.ModelBinding.ModelBindingContext bindingContext);
    }
    public partial interface IModelNameProvider
    {
        string GetModelName();
    }
    public partial interface IUnvalidatedValueProvider : System.Web.ModelBinding.IValueProvider
    {
        System.Web.ModelBinding.ValueProviderResult GetValue(string key, bool skipValidation);
    }
    public partial interface IUnvalidatedValueProviderSource : System.Web.ModelBinding.IValueProviderSource
    {
        bool ValidateInput { get; set; }
    }
    public partial interface IValueProvider
    {
        bool ContainsPrefix(string prefix);
        System.Web.ModelBinding.ValueProviderResult GetValue(string key);
    }
    public partial interface IValueProviderSource
    {
        System.Web.ModelBinding.IValueProvider GetValueProvider(System.Web.ModelBinding.ModelBindingExecutionContext modelBindingExecutionContext);
    }
    public sealed partial class KeyValuePairModelBinderProvider : System.Web.ModelBinding.ModelBinderProvider
    {
        public KeyValuePairModelBinderProvider() { }
        public override System.Web.ModelBinding.IModelBinder GetBinder(System.Web.ModelBinding.ModelBindingExecutionContext modelBindingExecutionContext, System.Web.ModelBinding.ModelBindingContext bindingContext) { throw null; }
    }
    public sealed partial class KeyValuePairModelBinder<TKey, TValue> : System.Web.ModelBinding.IModelBinder
    {
        public KeyValuePairModelBinder() { }
        public bool BindModel(System.Web.ModelBinding.ModelBindingExecutionContext modelBindingExecutionContext, System.Web.ModelBinding.ModelBindingContext bindingContext) { throw null; }
    }
    public sealed partial class MaxLengthAttributeAdapter : System.Web.ModelBinding.DataAnnotationsModelValidator<System.ComponentModel.DataAnnotations.MaxLengthAttribute>
    {
        public MaxLengthAttributeAdapter(System.Web.ModelBinding.ModelMetadata metadata, System.Web.ModelBinding.ModelBindingExecutionContext context, System.ComponentModel.DataAnnotations.MaxLengthAttribute attribute) : base (default(System.Web.ModelBinding.ModelMetadata), default(System.Web.ModelBinding.ModelBindingExecutionContext), default(System.ComponentModel.DataAnnotations.MaxLengthAttribute)) { }
        protected override string GetLocalizedErrorMessage(string errorMessage) { throw null; }
    }
    public sealed partial class MinLengthAttributeAdapter : System.Web.ModelBinding.DataAnnotationsModelValidator<System.ComponentModel.DataAnnotations.MinLengthAttribute>
    {
        public MinLengthAttributeAdapter(System.Web.ModelBinding.ModelMetadata metadata, System.Web.ModelBinding.ModelBindingExecutionContext context, System.ComponentModel.DataAnnotations.MinLengthAttribute attribute) : base (default(System.Web.ModelBinding.ModelMetadata), default(System.Web.ModelBinding.ModelBindingExecutionContext), default(System.ComponentModel.DataAnnotations.MinLengthAttribute)) { }
        protected override string GetLocalizedErrorMessage(string errorMessage) { throw null; }
    }
    public partial class ModelBinderDictionary : System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Type, System.Web.ModelBinding.IModelBinder>>, System.Collections.Generic.IDictionary<System.Type, System.Web.ModelBinding.IModelBinder>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.Type, System.Web.ModelBinding.IModelBinder>>, System.Collections.IEnumerable
    {
        public ModelBinderDictionary() { }
        public int Count { get { throw null; } }
        public System.Web.ModelBinding.IModelBinder DefaultBinder { get { throw null; } set { } }
        public bool IsReadOnly { get { throw null; } }
        public System.Web.ModelBinding.IModelBinder this[System.Type key] { get { throw null; } set { } }
        public System.Collections.Generic.ICollection<System.Type> Keys { get { throw null; } }
        public System.Collections.Generic.ICollection<System.Web.ModelBinding.IModelBinder> Values { get { throw null; } }
        public void Add(System.Collections.Generic.KeyValuePair<System.Type, System.Web.ModelBinding.IModelBinder> item) { }
        public void Add(System.Type key, System.Web.ModelBinding.IModelBinder value) { }
        public void Clear() { }
        public bool Contains(System.Collections.Generic.KeyValuePair<System.Type, System.Web.ModelBinding.IModelBinder> item) { throw null; }
        public bool ContainsKey(System.Type key) { throw null; }
        public void CopyTo(System.Collections.Generic.KeyValuePair<System.Type, System.Web.ModelBinding.IModelBinder>[] array, int arrayIndex) { }
        public System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<System.Type, System.Web.ModelBinding.IModelBinder>> GetEnumerator() { throw null; }
        public bool Remove(System.Collections.Generic.KeyValuePair<System.Type, System.Web.ModelBinding.IModelBinder> item) { throw null; }
        public bool Remove(System.Type key) { throw null; }
        System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() { throw null; }
        public bool TryGetValue(System.Type key, out System.Web.ModelBinding.IModelBinder value) { throw null; }
    }
    public delegate string ModelBinderErrorMessageProvider(System.Web.ModelBinding.ModelBindingExecutionContext modelBindingExecutionContext, System.Web.ModelBinding.ModelMetadata modelMetadata, object incomingValue);
    public static partial class ModelBinderErrorMessageProviders
    {
        public static System.Web.ModelBinding.ModelBinderErrorMessageProvider TypeConversionErrorMessageProvider { get { throw null; } set { } }
        public static System.Web.ModelBinding.ModelBinderErrorMessageProvider ValueRequiredErrorMessageProvider { get { throw null; } set { } }
    }
    public abstract partial class ModelBinderProvider
    {
        protected ModelBinderProvider() { }
        public abstract System.Web.ModelBinding.IModelBinder GetBinder(System.Web.ModelBinding.ModelBindingExecutionContext modelBindingExecutionContext, System.Web.ModelBinding.ModelBindingContext bindingContext);
    }
    public sealed partial class ModelBinderProviderCollection : System.Collections.ObjectModel.Collection<System.Web.ModelBinding.ModelBinderProvider>
    {
        public ModelBinderProviderCollection() { }
        public ModelBinderProviderCollection(System.Collections.Generic.IList<System.Web.ModelBinding.ModelBinderProvider> list) { }
        public System.Web.ModelBinding.IModelBinder GetBinder(System.Web.ModelBinding.ModelBindingExecutionContext modelBindingExecutionContext, System.Web.ModelBinding.ModelBindingContext bindingContext) { throw null; }
        protected override void InsertItem(int index, System.Web.ModelBinding.ModelBinderProvider item) { }
        public void RegisterBinderForGenericType(System.Type modelType, System.Func<System.Type[], System.Web.ModelBinding.IModelBinder> modelBinderFactory) { }
        public void RegisterBinderForGenericType(System.Type modelType, System.Type modelBinderType) { }
        public void RegisterBinderForGenericType(System.Type modelType, System.Web.ModelBinding.IModelBinder modelBinder) { }
        public void RegisterBinderForType(System.Type modelType, System.Func<System.Web.ModelBinding.IModelBinder> modelBinderFactory) { }
        public void RegisterBinderForType(System.Type modelType, System.Web.ModelBinding.IModelBinder modelBinder) { }
        protected override void SetItem(int index, System.Web.ModelBinding.ModelBinderProvider item) { }
    }
    [System.AttributeUsageAttribute(System.AttributeTargets.Class, AllowMultiple=false, Inherited=true)]
    public sealed partial class ModelBinderProviderOptionsAttribute : System.Attribute
    {
        public ModelBinderProviderOptionsAttribute() { }
        public bool FrontOfList { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } [System.Runtime.CompilerServices.CompilerGeneratedAttribute]set { } }
    }
    public static partial class ModelBinderProviders
    {
        public static System.Web.ModelBinding.ModelBinderProviderCollection Providers { get { throw null; } }
    }
    public static partial class ModelBinders
    {
        public static System.Web.ModelBinding.ModelBinderDictionary Binders { get { throw null; } }
    }
    public partial class ModelBindingContext
    {
        public ModelBindingContext() { }
        public ModelBindingContext(System.Web.ModelBinding.ModelBindingContext bindingContext) { }
        public object Model { get { throw null; } set { } }
        public System.Web.ModelBinding.ModelBinderProviderCollection ModelBinderProviders { get { throw null; } set { } }
        public System.Web.ModelBinding.ModelMetadata ModelMetadata { get { throw null; } set { } }
        public string ModelName { get { throw null; } set { } }
        public System.Web.ModelBinding.ModelStateDictionary ModelState { get { throw null; } set { } }
        public System.Type ModelType { get { throw null; } }
        public System.Collections.Generic.IDictionary<string, System.Web.ModelBinding.ModelMetadata> PropertyMetadata { get { throw null; } }
        public bool ValidateRequest { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } [System.Runtime.CompilerServices.CompilerGeneratedAttribute]set { } }
        public System.Web.ModelBinding.ModelValidationNode ValidationNode { get { throw null; } set { } }
        public System.Web.ModelBinding.IValueProvider ValueProvider { get { throw null; } set { } }
    }
    public partial class ModelBindingExecutionContext
    {
        public ModelBindingExecutionContext(System.Web.HttpContextBase httpContext, System.Web.ModelBinding.ModelStateDictionary modelState) { }
        public virtual System.Web.HttpContextBase HttpContext { get { throw null; } }
        public virtual System.Web.ModelBinding.ModelStateDictionary ModelState { get { throw null; } }
        public virtual TService GetService<TService>() { throw null; }
        public virtual void PublishService<TService>(TService service) { }
        public virtual TService TryGetService<TService>() { throw null; }
    }
    [System.SerializableAttribute]
    public partial class ModelError
    {
        public ModelError(System.Exception exception) { }
        public ModelError(System.Exception exception, string errorMessage) { }
        public ModelError(string errorMessage) { }
        public string ErrorMessage { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } }
        public System.Exception Exception { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } }
    }
    [System.SerializableAttribute]
    public partial class ModelErrorCollection : System.Collections.ObjectModel.Collection<System.Web.ModelBinding.ModelError>
    {
        public ModelErrorCollection() { }
        public void Add(System.Exception exception) { }
        public void Add(string errorMessage) { }
    }
    public partial class ModelMetadata
    {
        public const int DefaultOrder = 10000;
        public ModelMetadata(System.Web.ModelBinding.ModelMetadataProvider provider, System.Type containerType, System.Func<object> modelAccessor, System.Type modelType, string propertyName) { }
        public virtual System.Collections.Generic.Dictionary<string, object> AdditionalValues { get { throw null; } }
        public System.Type ContainerType { get { throw null; } }
        public virtual bool ConvertEmptyStringToNull { get { throw null; } set { } }
        public virtual string DataTypeName { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } [System.Runtime.CompilerServices.CompilerGeneratedAttribute]set { } }
        public virtual string Description { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } [System.Runtime.CompilerServices.CompilerGeneratedAttribute]set { } }
        public virtual string DisplayFormatString { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } [System.Runtime.CompilerServices.CompilerGeneratedAttribute]set { } }
        public virtual string DisplayName { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } [System.Runtime.CompilerServices.CompilerGeneratedAttribute]set { } }
        public virtual string EditFormatString { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } [System.Runtime.CompilerServices.CompilerGeneratedAttribute]set { } }
        public virtual bool HideSurroundingHtml { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } [System.Runtime.CompilerServices.CompilerGeneratedAttribute]set { } }
        public virtual bool IsComplexType { get { throw null; } }
        public bool IsNullableValueType { get { throw null; } }
        public virtual bool IsReadOnly { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } [System.Runtime.CompilerServices.CompilerGeneratedAttribute]set { } }
        public virtual bool IsRequired { get { throw null; } set { } }
        public object Model { get { throw null; } set { } }
        public System.Type ModelType { get { throw null; } }
        public virtual string NullDisplayText { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } [System.Runtime.CompilerServices.CompilerGeneratedAttribute]set { } }
        public virtual int Order { get { throw null; } set { } }
        public virtual System.Collections.Generic.IEnumerable<System.Web.ModelBinding.ModelMetadata> Properties { get { throw null; } }
        public string PropertyName { get { throw null; } }
        protected System.Web.ModelBinding.ModelMetadataProvider Provider { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } [System.Runtime.CompilerServices.CompilerGeneratedAttribute]set { } }
        public virtual bool RequestValidationEnabled { get { throw null; } set { } }
        public virtual string ShortDisplayName { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } [System.Runtime.CompilerServices.CompilerGeneratedAttribute]set { } }
        public virtual bool ShowForDisplay { get { throw null; } set { } }
        public virtual bool ShowForEdit { get { throw null; } set { } }
        public virtual string SimpleDisplayText { get { throw null; } set { } }
        public virtual string TemplateHint { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } [System.Runtime.CompilerServices.CompilerGeneratedAttribute]set { } }
        public virtual string Watermark { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } [System.Runtime.CompilerServices.CompilerGeneratedAttribute]set { } }
        public string GetDisplayName() { throw null; }
        protected virtual string GetSimpleDisplayText() { throw null; }
        public virtual System.Collections.Generic.IEnumerable<System.Web.ModelBinding.ModelValidator> GetValidators(System.Web.ModelBinding.ModelBindingExecutionContext context) { throw null; }
    }
    public abstract partial class ModelMetadataProvider
    {
        protected ModelMetadataProvider() { }
        public abstract System.Collections.Generic.IEnumerable<System.Web.ModelBinding.ModelMetadata> GetMetadataForProperties(object container, System.Type containerType);
        public abstract System.Web.ModelBinding.ModelMetadata GetMetadataForProperty(System.Func<object> modelAccessor, System.Type containerType, string propertyName);
        public abstract System.Web.ModelBinding.ModelMetadata GetMetadataForType(System.Func<object> modelAccessor, System.Type modelType);
    }
    public static partial class ModelMetadataProviders
    {
        public static System.Web.ModelBinding.ModelMetadataProvider Current { get { throw null; } set { } }
    }
    [System.SerializableAttribute]
    public partial class ModelState
    {
        public ModelState() { }
        public System.Web.ModelBinding.ModelErrorCollection Errors { get { throw null; } }
        public System.Web.ModelBinding.ValueProviderResult Value { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } [System.Runtime.CompilerServices.CompilerGeneratedAttribute]set { } }
    }
    [System.SerializableAttribute]
    public partial class ModelStateDictionary : System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, System.Web.ModelBinding.ModelState>>, System.Collections.Generic.IDictionary<string, System.Web.ModelBinding.ModelState>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Web.ModelBinding.ModelState>>, System.Collections.IEnumerable
    {
        public ModelStateDictionary() { }
        public ModelStateDictionary(System.Web.ModelBinding.ModelStateDictionary dictionary) { }
        public int Count { get { throw null; } }
        public bool IsReadOnly { get { throw null; } }
        public bool IsValid { get { throw null; } }
        public System.Web.ModelBinding.ModelState this[string key] { get { throw null; } set { } }
        public System.Collections.Generic.ICollection<string> Keys { get { throw null; } }
        public System.Collections.Generic.ICollection<System.Web.ModelBinding.ModelState> Values { get { throw null; } }
        public void Add(System.Collections.Generic.KeyValuePair<string, System.Web.ModelBinding.ModelState> item) { }
        public void Add(string key, System.Web.ModelBinding.ModelState value) { }
        public void AddModelError(string key, System.Exception exception) { }
        public void AddModelError(string key, string errorMessage) { }
        public void Clear() { }
        public bool Contains(System.Collections.Generic.KeyValuePair<string, System.Web.ModelBinding.ModelState> item) { throw null; }
        public bool ContainsKey(string key) { throw null; }
        public void CopyTo(System.Collections.Generic.KeyValuePair<string, System.Web.ModelBinding.ModelState>[] array, int arrayIndex) { }
        public System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<string, System.Web.ModelBinding.ModelState>> GetEnumerator() { throw null; }
        public bool IsValidField(string key) { throw null; }
        public void Merge(System.Web.ModelBinding.ModelStateDictionary dictionary) { }
        public bool Remove(System.Collections.Generic.KeyValuePair<string, System.Web.ModelBinding.ModelState> item) { throw null; }
        public bool Remove(string key) { throw null; }
        public void SetModelValue(string key, System.Web.ModelBinding.ValueProviderResult value) { }
        System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() { throw null; }
        public bool TryGetValue(string key, out System.Web.ModelBinding.ModelState value) { throw null; }
    }
    public sealed partial class ModelValidatedEventArgs : System.EventArgs
    {
        public ModelValidatedEventArgs(System.Web.ModelBinding.ModelBindingExecutionContext modelBindingExecutionContext, System.Web.ModelBinding.ModelValidationNode parentNode) { }
        public System.Web.ModelBinding.ModelBindingExecutionContext ModelBindingExecutionContext { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } }
        public System.Web.ModelBinding.ModelValidationNode ParentNode { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } }
    }
    public sealed partial class ModelValidatingEventArgs : System.ComponentModel.CancelEventArgs
    {
        public ModelValidatingEventArgs(System.Web.ModelBinding.ModelBindingExecutionContext modelBindingExecutionContext, System.Web.ModelBinding.ModelValidationNode parentNode) { }
        public System.Web.ModelBinding.ModelBindingExecutionContext ModelBindingExecutionContext { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } }
        public System.Web.ModelBinding.ModelValidationNode ParentNode { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } }
    }
    public sealed partial class ModelValidationNode
    {
        public ModelValidationNode(System.Web.ModelBinding.ModelMetadata modelMetadata, string modelStateKey) { }
        public ModelValidationNode(System.Web.ModelBinding.ModelMetadata modelMetadata, string modelStateKey, System.Collections.Generic.IEnumerable<System.Web.ModelBinding.ModelValidationNode> childNodes) { }
        public System.Collections.Generic.ICollection<System.Web.ModelBinding.ModelValidationNode> ChildNodes { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } }
        public System.Web.ModelBinding.ModelMetadata ModelMetadata { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } }
        public string ModelStateKey { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } }
        public bool SuppressValidation { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } [System.Runtime.CompilerServices.CompilerGeneratedAttribute]set { } }
        public bool ValidateAllProperties { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } [System.Runtime.CompilerServices.CompilerGeneratedAttribute]set { } }
        public event System.EventHandler<System.Web.ModelBinding.ModelValidatedEventArgs> Validated { add { } remove { } }
        public event System.EventHandler<System.Web.ModelBinding.ModelValidatingEventArgs> Validating { add { } remove { } }
        public void CombineWith(System.Web.ModelBinding.ModelValidationNode otherNode) { }
        public void Validate(System.Web.ModelBinding.ModelBindingExecutionContext modelBindingExecutionContext) { }
        public void Validate(System.Web.ModelBinding.ModelBindingExecutionContext modelBindingExecutionContext, System.Web.ModelBinding.ModelValidationNode parentNode) { }
    }
    public partial class ModelValidationResult
    {
        public ModelValidationResult() { }
        public string MemberName { get { throw null; } set { } }
        public string Message { get { throw null; } set { } }
    }
    public abstract partial class ModelValidator
    {
        protected ModelValidator(System.Web.ModelBinding.ModelMetadata metadata, System.Web.ModelBinding.ModelBindingExecutionContext modelBindingExecutionContext) { }
        public virtual bool IsRequired { get { throw null; } }
        protected internal System.Web.ModelBinding.ModelMetadata Metadata { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } }
        protected internal System.Web.ModelBinding.ModelBindingExecutionContext ModelBindingExecutionContext { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } }
        public static System.Web.ModelBinding.ModelValidator GetModelValidator(System.Web.ModelBinding.ModelMetadata metadata, System.Web.ModelBinding.ModelBindingExecutionContext context) { throw null; }
        public abstract System.Collections.Generic.IEnumerable<System.Web.ModelBinding.ModelValidationResult> Validate(object container);
    }
    public abstract partial class ModelValidatorProvider
    {
        protected ModelValidatorProvider() { }
        public abstract System.Collections.Generic.IEnumerable<System.Web.ModelBinding.ModelValidator> GetValidators(System.Web.ModelBinding.ModelMetadata metadata, System.Web.ModelBinding.ModelBindingExecutionContext context);
    }
    public partial class ModelValidatorProviderCollection : System.Collections.ObjectModel.Collection<System.Web.ModelBinding.ModelValidatorProvider>
    {
        public ModelValidatorProviderCollection() { }
        public ModelValidatorProviderCollection(System.Collections.Generic.IList<System.Web.ModelBinding.ModelValidatorProvider> list) { }
        public System.Collections.Generic.IEnumerable<System.Web.ModelBinding.ModelValidator> GetValidators(System.Web.ModelBinding.ModelMetadata metadata, System.Web.ModelBinding.ModelBindingExecutionContext context) { throw null; }
        protected override void InsertItem(int index, System.Web.ModelBinding.ModelValidatorProvider item) { }
        protected override void SetItem(int index, System.Web.ModelBinding.ModelValidatorProvider item) { }
    }
    public static partial class ModelValidatorProviders
    {
        public static System.Web.ModelBinding.ModelValidatorProviderCollection Providers { get { throw null; } }
    }
    public partial class MutableObjectModelBinder : System.Web.ModelBinding.IModelBinder
    {
        public MutableObjectModelBinder() { }
        public virtual bool BindModel(System.Web.ModelBinding.ModelBindingExecutionContext modelBindingExecutionContext, System.Web.ModelBinding.ModelBindingContext bindingContext) { throw null; }
        protected virtual bool CanUpdateProperty(System.Web.ModelBinding.ModelMetadata propertyMetadata) { throw null; }
        protected virtual object CreateModel(System.Web.ModelBinding.ModelBindingExecutionContext modelBindingExecutionContext, System.Web.ModelBinding.ModelBindingContext bindingContext) { throw null; }
        protected virtual void EnsureModel(System.Web.ModelBinding.ModelBindingExecutionContext modelBindingExecutionContext, System.Web.ModelBinding.ModelBindingContext bindingContext) { }
        protected virtual System.Collections.Generic.IEnumerable<System.Web.ModelBinding.ModelMetadata> GetMetadataForProperties(System.Web.ModelBinding.ModelBindingExecutionContext modelBindingExecutionContext, System.Web.ModelBinding.ModelBindingContext bindingContext) { throw null; }
        protected virtual void SetProperty(System.Web.ModelBinding.ModelBindingExecutionContext modelBindingExecutionContext, System.Web.ModelBinding.ModelBindingContext bindingContext, System.Web.ModelBinding.ModelMetadata propertyMetadata, System.Web.ModelBinding.ComplexModelResult complexModelResult) { }
    }
    public sealed partial class MutableObjectModelBinderProvider : System.Web.ModelBinding.ModelBinderProvider
    {
        public MutableObjectModelBinderProvider() { }
        public override System.Web.ModelBinding.IModelBinder GetBinder(System.Web.ModelBinding.ModelBindingExecutionContext modelBindingExecutionContext, System.Web.ModelBinding.ModelBindingContext bindingContext) { throw null; }
    }
    public partial class NameValueCollectionValueProvider : System.Web.ModelBinding.IUnvalidatedValueProvider, System.Web.ModelBinding.IValueProvider
    {
        public NameValueCollectionValueProvider(System.Collections.Specialized.NameValueCollection collection, System.Collections.Specialized.NameValueCollection unvalidatedCollection, System.Globalization.CultureInfo culture) { }
        public NameValueCollectionValueProvider(System.Collections.Specialized.NameValueCollection collection, System.Globalization.CultureInfo culture) { }
        public virtual bool ContainsPrefix(string prefix) { throw null; }
        public virtual System.Web.ModelBinding.ValueProviderResult GetValue(string key) { throw null; }
        public virtual System.Web.ModelBinding.ValueProviderResult GetValue(string key, bool skipValidation) { throw null; }
    }
    [System.AttributeUsageAttribute(System.AttributeTargets.Parameter, Inherited=false, AllowMultiple=false)]
    public sealed partial class ProfileAttribute : System.Web.ModelBinding.ValueProviderSourceAttribute
    {
        public ProfileAttribute() { }
        public ProfileAttribute(string key) { }
        public string Key { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } }
        public override string GetModelName() { throw null; }
        public override System.Web.ModelBinding.IValueProvider GetValueProvider(System.Web.ModelBinding.ModelBindingExecutionContext modelBindingExecutionContext) { throw null; }
    }
    public sealed partial class ProfileValueProvider : System.Web.ModelBinding.SimpleValueProvider
    {
        public ProfileValueProvider(System.Web.ModelBinding.ModelBindingExecutionContext modelBindingExecutionContext) : base (default(System.Web.ModelBinding.ModelBindingExecutionContext)) { }
        protected override object FetchValue(string key) { throw null; }
    }
    [System.AttributeUsageAttribute(System.AttributeTargets.Parameter, Inherited=false, AllowMultiple=false)]
    public sealed partial class QueryStringAttribute : System.Web.ModelBinding.ValueProviderSourceAttribute, System.Web.ModelBinding.IUnvalidatedValueProviderSource, System.Web.ModelBinding.IValueProviderSource
    {
        public QueryStringAttribute() { }
        public QueryStringAttribute(string key) { }
        public string Key { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } }
        public bool ValidateInput { get { throw null; } set { } }
        public override string GetModelName() { throw null; }
        public override System.Web.ModelBinding.IValueProvider GetValueProvider(System.Web.ModelBinding.ModelBindingExecutionContext modelBindingExecutionContext) { throw null; }
    }
    public sealed partial class QueryStringValueProvider : System.Web.ModelBinding.NameValueCollectionValueProvider
    {
        public QueryStringValueProvider(System.Web.ModelBinding.ModelBindingExecutionContext modelBindingExecutionContext) : base (default(System.Collections.Specialized.NameValueCollection), default(System.Globalization.CultureInfo)) { }
    }
    public sealed partial class RangeAttributeAdapter : System.Web.ModelBinding.DataAnnotationsModelValidator<System.ComponentModel.DataAnnotations.RangeAttribute>
    {
        public RangeAttributeAdapter(System.Web.ModelBinding.ModelMetadata metadata, System.Web.ModelBinding.ModelBindingExecutionContext context, System.ComponentModel.DataAnnotations.RangeAttribute attribute) : base (default(System.Web.ModelBinding.ModelMetadata), default(System.Web.ModelBinding.ModelBindingExecutionContext), default(System.ComponentModel.DataAnnotations.RangeAttribute)) { }
        protected override string GetLocalizedErrorMessage(string errorMessage) { throw null; }
    }
    public sealed partial class RegularExpressionAttributeAdapter : System.Web.ModelBinding.DataAnnotationsModelValidator<System.ComponentModel.DataAnnotations.RegularExpressionAttribute>
    {
        public RegularExpressionAttributeAdapter(System.Web.ModelBinding.ModelMetadata metadata, System.Web.ModelBinding.ModelBindingExecutionContext context, System.ComponentModel.DataAnnotations.RegularExpressionAttribute attribute) : base (default(System.Web.ModelBinding.ModelMetadata), default(System.Web.ModelBinding.ModelBindingExecutionContext), default(System.ComponentModel.DataAnnotations.RegularExpressionAttribute)) { }
        protected override string GetLocalizedErrorMessage(string errorMessage) { throw null; }
    }
    public sealed partial class RequiredAttributeAdapter : System.Web.ModelBinding.DataAnnotationsModelValidator<System.ComponentModel.DataAnnotations.RequiredAttribute>
    {
        public RequiredAttributeAdapter(System.Web.ModelBinding.ModelMetadata metadata, System.Web.ModelBinding.ModelBindingExecutionContext context, System.ComponentModel.DataAnnotations.RequiredAttribute attribute) : base (default(System.Web.ModelBinding.ModelMetadata), default(System.Web.ModelBinding.ModelBindingExecutionContext), default(System.ComponentModel.DataAnnotations.RequiredAttribute)) { }
    }
    [System.AttributeUsageAttribute(System.AttributeTargets.Parameter, Inherited=false, AllowMultiple=false)]
    public sealed partial class RouteDataAttribute : System.Web.ModelBinding.ValueProviderSourceAttribute
    {
        public RouteDataAttribute() { }
        public RouteDataAttribute(string key) { }
        public string Key { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } }
        public override string GetModelName() { throw null; }
        public override System.Web.ModelBinding.IValueProvider GetValueProvider(System.Web.ModelBinding.ModelBindingExecutionContext modelBindingExecutionContext) { throw null; }
    }
    public sealed partial class RouteDataValueProvider : System.Web.ModelBinding.DictionaryValueProvider<object>
    {
        public RouteDataValueProvider(System.Web.ModelBinding.ModelBindingExecutionContext modelBindingExecutionContext) : base (default(System.Collections.Generic.IDictionary<string, object>), default(System.Globalization.CultureInfo)) { }
    }
    [System.AttributeUsageAttribute(System.AttributeTargets.Parameter, Inherited=false, AllowMultiple=false)]
    public sealed partial class SessionAttribute : System.Web.ModelBinding.ValueProviderSourceAttribute
    {
        public SessionAttribute() { }
        public SessionAttribute(string name) { }
        public string Name { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } }
        public override string GetModelName() { throw null; }
        public override System.Web.ModelBinding.IValueProvider GetValueProvider(System.Web.ModelBinding.ModelBindingExecutionContext modelBindingExecutionContext) { throw null; }
    }
    public sealed partial class SimpleModelBinderProvider : System.Web.ModelBinding.ModelBinderProvider
    {
        public SimpleModelBinderProvider(System.Type modelType, System.Func<System.Web.ModelBinding.IModelBinder> modelBinderFactory) { }
        public SimpleModelBinderProvider(System.Type modelType, System.Web.ModelBinding.IModelBinder modelBinder) { }
        public System.Type ModelType { get { throw null; } }
        public bool SuppressPrefixCheck { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } [System.Runtime.CompilerServices.CompilerGeneratedAttribute]set { } }
        public override System.Web.ModelBinding.IModelBinder GetBinder(System.Web.ModelBinding.ModelBindingExecutionContext modelBindingExecutionContext, System.Web.ModelBinding.ModelBindingContext bindingContext) { throw null; }
    }
    public abstract partial class SimpleValueProvider : System.Web.ModelBinding.IValueProvider
    {
        protected SimpleValueProvider(System.Web.ModelBinding.ModelBindingExecutionContext modelBindingExecutionContext) { }
        protected SimpleValueProvider(System.Web.ModelBinding.ModelBindingExecutionContext modelBindingExecutionContext, System.Globalization.CultureInfo cultureInfo) { }
        protected System.Web.ModelBinding.ModelBindingExecutionContext ModelBindingExecutionContext { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } }
        public virtual bool ContainsPrefix(string prefix) { throw null; }
        protected abstract object FetchValue(string key);
        public virtual System.Web.ModelBinding.ValueProviderResult GetValue(string key) { throw null; }
    }
    public sealed partial class StringLengthAttributeAdapter : System.Web.ModelBinding.DataAnnotationsModelValidator<System.ComponentModel.DataAnnotations.StringLengthAttribute>
    {
        public StringLengthAttributeAdapter(System.Web.ModelBinding.ModelMetadata metadata, System.Web.ModelBinding.ModelBindingExecutionContext context, System.ComponentModel.DataAnnotations.StringLengthAttribute attribute) : base (default(System.Web.ModelBinding.ModelMetadata), default(System.Web.ModelBinding.ModelBindingExecutionContext), default(System.ComponentModel.DataAnnotations.StringLengthAttribute)) { }
        protected override string GetLocalizedErrorMessage(string errorMessage) { throw null; }
    }
    public sealed partial class TypeConverterModelBinder : System.Web.ModelBinding.IModelBinder
    {
        public TypeConverterModelBinder() { }
        public bool BindModel(System.Web.ModelBinding.ModelBindingExecutionContext modelBindingExecutionContext, System.Web.ModelBinding.ModelBindingContext bindingContext) { throw null; }
    }
    public sealed partial class TypeConverterModelBinderProvider : System.Web.ModelBinding.ModelBinderProvider
    {
        public TypeConverterModelBinderProvider() { }
        public override System.Web.ModelBinding.IModelBinder GetBinder(System.Web.ModelBinding.ModelBindingExecutionContext modelBindingExecutionContext, System.Web.ModelBinding.ModelBindingContext bindingContext) { throw null; }
    }
    public sealed partial class TypeMatchModelBinder : System.Web.ModelBinding.IModelBinder
    {
        public TypeMatchModelBinder() { }
        public bool BindModel(System.Web.ModelBinding.ModelBindingExecutionContext modelBindingExecutionContext, System.Web.ModelBinding.ModelBindingContext bindingContext) { throw null; }
    }
    [System.Web.ModelBinding.ModelBinderProviderOptionsAttribute(FrontOfList=true)]
    public sealed partial class TypeMatchModelBinderProvider : System.Web.ModelBinding.ModelBinderProvider
    {
        public TypeMatchModelBinderProvider() { }
        public override System.Web.ModelBinding.IModelBinder GetBinder(System.Web.ModelBinding.ModelBindingExecutionContext modelBindingExecutionContext, System.Web.ModelBinding.ModelBindingContext bindingContext) { throw null; }
    }
    [System.AttributeUsageAttribute(System.AttributeTargets.Parameter, Inherited=false, AllowMultiple=false)]
    public sealed partial class UserProfileAttribute : System.Attribute, System.Web.ModelBinding.IValueProviderSource
    {
        public UserProfileAttribute() { }
        public System.Web.ModelBinding.IValueProvider GetValueProvider(System.Web.ModelBinding.ModelBindingExecutionContext modelBindingExecutionContext) { throw null; }
    }
    public sealed partial class UserProfileValueProvider : System.Web.ModelBinding.SimpleValueProvider
    {
        public UserProfileValueProvider(System.Web.ModelBinding.ModelBindingExecutionContext modelBindingExecutionContext) : base (default(System.Web.ModelBinding.ModelBindingExecutionContext)) { }
        protected override object FetchValue(string key) { throw null; }
    }
    public partial class ValidatableObjectAdapter : System.Web.ModelBinding.ModelValidator
    {
        public ValidatableObjectAdapter(System.Web.ModelBinding.ModelMetadata metadata, System.Web.ModelBinding.ModelBindingExecutionContext context) : base (default(System.Web.ModelBinding.ModelMetadata), default(System.Web.ModelBinding.ModelBindingExecutionContext)) { }
        public override System.Collections.Generic.IEnumerable<System.Web.ModelBinding.ModelValidationResult> Validate(object container) { throw null; }
    }
    public partial class ValueProviderCollection : System.Collections.ObjectModel.Collection<System.Web.ModelBinding.IValueProvider>, System.Web.ModelBinding.IUnvalidatedValueProvider, System.Web.ModelBinding.IValueProvider
    {
        public ValueProviderCollection() { }
        public ValueProviderCollection(System.Collections.Generic.IList<System.Web.ModelBinding.IValueProvider> list) { }
        public virtual bool ContainsPrefix(string prefix) { throw null; }
        public virtual System.Web.ModelBinding.ValueProviderResult GetValue(string key) { throw null; }
        public virtual System.Web.ModelBinding.ValueProviderResult GetValue(string key, bool skipValidation) { throw null; }
        protected override void InsertItem(int index, System.Web.ModelBinding.IValueProvider item) { }
        protected override void SetItem(int index, System.Web.ModelBinding.IValueProvider item) { }
    }
    [System.SerializableAttribute]
    public partial class ValueProviderResult
    {
        protected ValueProviderResult() { }
        public ValueProviderResult(object rawValue, string attemptedValue, System.Globalization.CultureInfo culture) { }
        public string AttemptedValue { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } [System.Runtime.CompilerServices.CompilerGeneratedAttribute]protected set { } }
        public System.Globalization.CultureInfo Culture { get { throw null; } protected set { } }
        public object RawValue { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } [System.Runtime.CompilerServices.CompilerGeneratedAttribute]protected set { } }
        public object ConvertTo(System.Type type) { throw null; }
        public virtual object ConvertTo(System.Type type, System.Globalization.CultureInfo culture) { throw null; }
    }
    public abstract partial class ValueProviderSourceAttribute : System.Attribute, System.Web.ModelBinding.IModelNameProvider, System.Web.ModelBinding.IValueProviderSource
    {
        protected ValueProviderSourceAttribute() { }
        public virtual string GetModelName() { throw null; }
        public abstract System.Web.ModelBinding.IValueProvider GetValueProvider(System.Web.ModelBinding.ModelBindingExecutionContext modelBindingExecutionContext);
    }
    [System.AttributeUsageAttribute(System.AttributeTargets.Parameter, Inherited=false, AllowMultiple=false)]
    public sealed partial class ViewStateAttribute : System.Web.ModelBinding.ValueProviderSourceAttribute
    {
        public ViewStateAttribute() { }
        public ViewStateAttribute(string key) { }
        public string Key { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } }
        public override string GetModelName() { throw null; }
        public override System.Web.ModelBinding.IValueProvider GetValueProvider(System.Web.ModelBinding.ModelBindingExecutionContext modelBindingExecutionContext) { throw null; }
    }
    public sealed partial class ViewStateValueProvider : System.Web.ModelBinding.SimpleValueProvider
    {
        public ViewStateValueProvider(System.Web.ModelBinding.ModelBindingExecutionContext modelBindingExecutionContext) : base (default(System.Web.ModelBinding.ModelBindingExecutionContext)) { }
        protected override object FetchValue(string key) { throw null; }
    }
}
namespace System.Web.Profile
{
    [System.AttributeUsageAttribute(System.AttributeTargets.Property)]
    public sealed partial class CustomProviderDataAttribute : System.Attribute
    {
        public CustomProviderDataAttribute(string customProviderData) { }
        public string CustomProviderData { get { throw null; } }
        public override bool IsDefaultAttribute() { throw null; }
    }
    public partial class DefaultProfile : System.Web.Profile.ProfileBase
    {
        public DefaultProfile() { }
    }
    public enum ProfileAuthenticationOption
    {
        All = 2,
        Anonymous = 0,
        Authenticated = 1,
    }
    public sealed partial class ProfileAutoSaveEventArgs : System.EventArgs
    {
        public ProfileAutoSaveEventArgs(System.Web.HttpContext context) { }
        public System.Web.HttpContext Context { get { throw null; } }
        public bool ContinueWithProfileAutoSave { get { throw null; } set { } }
    }
    public delegate void ProfileAutoSaveEventHandler(object sender, System.Web.Profile.ProfileAutoSaveEventArgs e);
    public partial class ProfileBase : System.Configuration.SettingsBase
    {
        public ProfileBase() { }
        public bool IsAnonymous { get { throw null; } }
        public bool IsDirty { get { throw null; } }
        public override object this[string propertyName] { get { throw null; } set { } }
        public System.DateTime LastActivityDate { get { throw null; } }
        public System.DateTime LastUpdatedDate { get { throw null; } }
        public static new System.Configuration.SettingsPropertyCollection Properties { get { throw null; } }
        public string UserName { get { throw null; } }
        public static System.Web.Profile.ProfileBase Create(string username) { throw null; }
        public static System.Web.Profile.ProfileBase Create(string username, bool isAuthenticated) { throw null; }
        public System.Web.Profile.ProfileGroupBase GetProfileGroup(string groupName) { throw null; }
        public object GetPropertyValue(string propertyName) { throw null; }
        public void Initialize(string username, bool isAuthenticated) { }
        public override void Save() { }
        public void SetPropertyValue(string propertyName, object propertyValue) { }
    }
    public sealed partial class ProfileEventArgs : System.EventArgs
    {
        public ProfileEventArgs(System.Web.HttpContext context) { }
        public System.Web.HttpContext Context { get { throw null; } }
        public System.Web.Profile.ProfileBase Profile { get { throw null; } set { } }
    }
    public delegate void ProfileEventHandler(object sender, System.Web.Profile.ProfileEventArgs e);
    public partial class ProfileGroupBase
    {
        public ProfileGroupBase() { }
        public object this[string propertyName] { get { throw null; } set { } }
        public object GetPropertyValue(string propertyName) { throw null; }
        public void Init(System.Web.Profile.ProfileBase parent, string myName) { }
        public void SetPropertyValue(string propertyName, object propertyValue) { }
    }
    [System.SerializableAttribute]
    public partial class ProfileInfo
    {
        protected ProfileInfo() { }
        public ProfileInfo(string username, bool isAnonymous, System.DateTime lastActivityDate, System.DateTime lastUpdatedDate, int size) { }
        public virtual bool IsAnonymous { get { throw null; } }
        public virtual System.DateTime LastActivityDate { get { throw null; } }
        public virtual System.DateTime LastUpdatedDate { get { throw null; } }
        public virtual int Size { get { throw null; } }
        public virtual string UserName { get { throw null; } }
    }
    [System.SerializableAttribute]
    public sealed partial class ProfileInfoCollection : System.Collections.ICollection, System.Collections.IEnumerable
    {
        public ProfileInfoCollection() { }
        public int Count { get { throw null; } }
        public bool IsSynchronized { get { throw null; } }
        public System.Web.Profile.ProfileInfo this[string name] { get { throw null; } }
        public object SyncRoot { get { throw null; } }
        public void Add(System.Web.Profile.ProfileInfo profileInfo) { }
        public void Clear() { }
        public void CopyTo(System.Array array, int index) { }
        public void CopyTo(System.Web.Profile.ProfileInfo[] array, int index) { }
        public System.Collections.IEnumerator GetEnumerator() { throw null; }
        public void Remove(string name) { }
        public void SetReadOnly() { }
    }
    public static partial class ProfileManager
    {
        public static string ApplicationName { get { throw null; } set { } }
        public static bool AutomaticSaveEnabled { get { throw null; } }
        public static bool Enabled { get { throw null; } }
        public static System.Web.Profile.ProfileProvider Provider { get { throw null; } }
        public static System.Web.Profile.ProfileProviderCollection Providers { get { throw null; } }
        public static void AddDynamicProfileProperty(System.Web.Configuration.ProfilePropertySettings property) { }
        public static int DeleteInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption authenticationOption, System.DateTime userInactiveSinceDate) { throw null; }
        public static bool DeleteProfile(string username) { throw null; }
        public static int DeleteProfiles(string[] usernames) { throw null; }
        public static int DeleteProfiles(System.Web.Profile.ProfileInfoCollection profiles) { throw null; }
        public static System.Web.Profile.ProfileInfoCollection FindInactiveProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch, System.DateTime userInactiveSinceDate) { throw null; }
        public static System.Web.Profile.ProfileInfoCollection FindInactiveProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch, System.DateTime userInactiveSinceDate, int pageIndex, int pageSize, out int totalRecords) { throw null; }
        public static System.Web.Profile.ProfileInfoCollection FindProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch) { throw null; }
        public static System.Web.Profile.ProfileInfoCollection FindProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch, int pageIndex, int pageSize, out int totalRecords) { throw null; }
        public static System.Web.Profile.ProfileInfoCollection GetAllInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption authenticationOption, System.DateTime userInactiveSinceDate) { throw null; }
        public static System.Web.Profile.ProfileInfoCollection GetAllInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption authenticationOption, System.DateTime userInactiveSinceDate, int pageIndex, int pageSize, out int totalRecords) { throw null; }
        public static System.Web.Profile.ProfileInfoCollection GetAllProfiles(System.Web.Profile.ProfileAuthenticationOption authenticationOption) { throw null; }
        public static System.Web.Profile.ProfileInfoCollection GetAllProfiles(System.Web.Profile.ProfileAuthenticationOption authenticationOption, int pageIndex, int pageSize, out int totalRecords) { throw null; }
        public static int GetNumberOfInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption authenticationOption, System.DateTime userInactiveSinceDate) { throw null; }
        public static int GetNumberOfProfiles(System.Web.Profile.ProfileAuthenticationOption authenticationOption) { throw null; }
    }
    public sealed partial class ProfileMigrateEventArgs : System.EventArgs
    {
        public ProfileMigrateEventArgs(System.Web.HttpContext context, string anonymousId) { }
        public string AnonymousID { get { throw null; } }
        public System.Web.HttpContext Context { get { throw null; } }
    }
    public delegate void ProfileMigrateEventHandler(object sender, System.Web.Profile.ProfileMigrateEventArgs e);
    public sealed partial class ProfileModule : System.Web.IHttpModule
    {
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, Unrestricted=true)]
        public ProfileModule() { }
        public event System.Web.Profile.ProfileMigrateEventHandler MigrateAnonymous { add { } remove { } }
        public event System.Web.Profile.ProfileEventHandler Personalize { add { } remove { } }
        public event System.Web.Profile.ProfileAutoSaveEventHandler ProfileAutoSaving { add { } remove { } }
        public void Dispose() { }
        public void Init(System.Web.HttpApplication app) { }
    }
    public abstract partial class ProfileProvider : System.Configuration.SettingsProvider
    {
        protected ProfileProvider() { }
        public abstract int DeleteInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption authenticationOption, System.DateTime userInactiveSinceDate);
        public abstract int DeleteProfiles(string[] usernames);
        public abstract int DeleteProfiles(System.Web.Profile.ProfileInfoCollection profiles);
        public abstract System.Web.Profile.ProfileInfoCollection FindInactiveProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch, System.DateTime userInactiveSinceDate, int pageIndex, int pageSize, out int totalRecords);
        public abstract System.Web.Profile.ProfileInfoCollection FindProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch, int pageIndex, int pageSize, out int totalRecords);
        public abstract System.Web.Profile.ProfileInfoCollection GetAllInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption authenticationOption, System.DateTime userInactiveSinceDate, int pageIndex, int pageSize, out int totalRecords);
        public abstract System.Web.Profile.ProfileInfoCollection GetAllProfiles(System.Web.Profile.ProfileAuthenticationOption authenticationOption, int pageIndex, int pageSize, out int totalRecords);
        public abstract int GetNumberOfInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption authenticationOption, System.DateTime userInactiveSinceDate);
    }
    [System.AttributeUsageAttribute(System.AttributeTargets.Property)]
    public sealed partial class ProfileProviderAttribute : System.Attribute
    {
        public ProfileProviderAttribute(string providerName) { }
        public string ProviderName { get { throw null; } }
    }
    public sealed partial class ProfileProviderCollection : System.Configuration.SettingsProviderCollection
    {
        public ProfileProviderCollection() { }
        public new System.Web.Profile.ProfileProvider this[string name] { get { throw null; } }
        public override void Add(System.Configuration.Provider.ProviderBase provider) { }
    }
    [System.AttributeUsageAttribute(System.AttributeTargets.Property)]
    public sealed partial class SettingsAllowAnonymousAttribute : System.Attribute
    {
        public SettingsAllowAnonymousAttribute(bool allow) { }
        public bool Allow { get { throw null; } }
        public override bool IsDefaultAttribute() { throw null; }
    }
    public partial class SqlProfileProvider : System.Web.Profile.ProfileProvider
    {
        public SqlProfileProvider() { }
        public override string ApplicationName { get { throw null; } set { } }
        public override int DeleteInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption authenticationOption, System.DateTime userInactiveSinceDate) { throw null; }
        public override int DeleteProfiles(string[] usernames) { throw null; }
        public override int DeleteProfiles(System.Web.Profile.ProfileInfoCollection profiles) { throw null; }
        public override System.Web.Profile.ProfileInfoCollection FindInactiveProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch, System.DateTime userInactiveSinceDate, int pageIndex, int pageSize, out int totalRecords) { throw null; }
        public override System.Web.Profile.ProfileInfoCollection FindProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch, int pageIndex, int pageSize, out int totalRecords) { throw null; }
        public override System.Web.Profile.ProfileInfoCollection GetAllInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption authenticationOption, System.DateTime userInactiveSinceDate, int pageIndex, int pageSize, out int totalRecords) { throw null; }
        public override System.Web.Profile.ProfileInfoCollection GetAllProfiles(System.Web.Profile.ProfileAuthenticationOption authenticationOption, int pageIndex, int pageSize, out int totalRecords) { throw null; }
        public override int GetNumberOfInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption authenticationOption, System.DateTime userInactiveSinceDate) { throw null; }
        public override System.Configuration.SettingsPropertyValueCollection GetPropertyValues(System.Configuration.SettingsContext sc, System.Configuration.SettingsPropertyCollection properties) { throw null; }
        public override void Initialize(string name, System.Collections.Specialized.NameValueCollection config) { }
        public override void SetPropertyValues(System.Configuration.SettingsContext sc, System.Configuration.SettingsPropertyValueCollection properties) { }
    }
}
namespace System.Web.Routing
{
    [System.Runtime.CompilerServices.TypeForwardedFromAttribute("System.Web.Routing, Version=3.5.0.0, Culture=Neutral, PublicKeyToken=31bf3856ad364e35")]
    public partial class HttpMethodConstraint : System.Web.Routing.IRouteConstraint
    {
        public HttpMethodConstraint(params string[] allowedMethods) { }
        public System.Collections.Generic.ICollection<string> AllowedMethods { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } }
        protected virtual bool Match(System.Web.HttpContextBase httpContext, System.Web.Routing.Route route, string parameterName, System.Web.Routing.RouteValueDictionary values, System.Web.Routing.RouteDirection routeDirection) { throw null; }
        bool System.Web.Routing.IRouteConstraint.Match(System.Web.HttpContextBase httpContext, System.Web.Routing.Route route, string parameterName, System.Web.Routing.RouteValueDictionary values, System.Web.Routing.RouteDirection routeDirection) { throw null; }
    }
    [System.Runtime.CompilerServices.TypeForwardedFromAttribute("System.Web.Routing, Version=3.5.0.0, Culture=Neutral, PublicKeyToken=31bf3856ad364e35")]
    public partial interface IRouteConstraint
    {
        bool Match(System.Web.HttpContextBase httpContext, System.Web.Routing.Route route, string parameterName, System.Web.Routing.RouteValueDictionary values, System.Web.Routing.RouteDirection routeDirection);
    }
    [System.Runtime.CompilerServices.TypeForwardedFromAttribute("System.Web.Routing, Version=3.5.0.0, Culture=Neutral, PublicKeyToken=31bf3856ad364e35")]
    public partial interface IRouteHandler
    {
        System.Web.IHttpHandler GetHttpHandler(System.Web.Routing.RequestContext requestContext);
    }
    public partial class PageRouteHandler : System.Web.Routing.IRouteHandler
    {
        public PageRouteHandler(string virtualPath) { }
        public PageRouteHandler(string virtualPath, bool checkPhysicalUrlAccess) { }
        public bool CheckPhysicalUrlAccess { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } }
        public string VirtualPath { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } }
        public virtual System.Web.IHttpHandler GetHttpHandler(System.Web.Routing.RequestContext requestContext) { throw null; }
        public string GetSubstitutedVirtualPath(System.Web.Routing.RequestContext requestContext) { throw null; }
    }
    [System.Runtime.CompilerServices.TypeForwardedFromAttribute("System.Web.Routing, Version=3.5.0.0, Culture=Neutral, PublicKeyToken=31bf3856ad364e35")]
    public partial class RequestContext
    {
        public RequestContext() { }
        public RequestContext(System.Web.HttpContextBase httpContext, System.Web.Routing.RouteData routeData) { }
        public virtual System.Web.HttpContextBase HttpContext { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } [System.Runtime.CompilerServices.CompilerGeneratedAttribute]set { } }
        public virtual System.Web.Routing.RouteData RouteData { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } [System.Runtime.CompilerServices.CompilerGeneratedAttribute]set { } }
    }
    [System.Runtime.CompilerServices.TypeForwardedFromAttribute("System.Web.Routing, Version=3.5.0.0, Culture=Neutral, PublicKeyToken=31bf3856ad364e35")]
    public partial class Route : System.Web.Routing.RouteBase
    {
        public Route(string url, System.Web.Routing.IRouteHandler routeHandler) { }
        public Route(string url, System.Web.Routing.RouteValueDictionary defaults, System.Web.Routing.IRouteHandler routeHandler) { }
        public Route(string url, System.Web.Routing.RouteValueDictionary defaults, System.Web.Routing.RouteValueDictionary constraints, System.Web.Routing.IRouteHandler routeHandler) { }
        public Route(string url, System.Web.Routing.RouteValueDictionary defaults, System.Web.Routing.RouteValueDictionary constraints, System.Web.Routing.RouteValueDictionary dataTokens, System.Web.Routing.IRouteHandler routeHandler) { }
        public System.Web.Routing.RouteValueDictionary Constraints { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } [System.Runtime.CompilerServices.CompilerGeneratedAttribute]set { } }
        public System.Web.Routing.RouteValueDictionary DataTokens { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } [System.Runtime.CompilerServices.CompilerGeneratedAttribute]set { } }
        public System.Web.Routing.RouteValueDictionary Defaults { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } [System.Runtime.CompilerServices.CompilerGeneratedAttribute]set { } }
        public System.Web.Routing.IRouteHandler RouteHandler { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } [System.Runtime.CompilerServices.CompilerGeneratedAttribute]set { } }
        public string Url { get { throw null; } set { } }
        public override System.Web.Routing.RouteData GetRouteData(System.Web.HttpContextBase httpContext) { throw null; }
        public override System.Web.Routing.VirtualPathData GetVirtualPath(System.Web.Routing.RequestContext requestContext, System.Web.Routing.RouteValueDictionary values) { throw null; }
        protected virtual bool ProcessConstraint(System.Web.HttpContextBase httpContext, object constraint, string parameterName, System.Web.Routing.RouteValueDictionary values, System.Web.Routing.RouteDirection routeDirection) { throw null; }
    }
    [System.Runtime.CompilerServices.TypeForwardedFromAttribute("System.Web.Routing, Version=3.5.0.0, Culture=Neutral, PublicKeyToken=31bf3856ad364e35")]
    public abstract partial class RouteBase
    {
        protected RouteBase() { }
        public bool RouteExistingFiles { get { throw null; } set { } }
        public abstract System.Web.Routing.RouteData GetRouteData(System.Web.HttpContextBase httpContext);
        public abstract System.Web.Routing.VirtualPathData GetVirtualPath(System.Web.Routing.RequestContext requestContext, System.Web.Routing.RouteValueDictionary values);
    }
    [System.Runtime.CompilerServices.TypeForwardedFromAttribute("System.Web.Routing, Version=3.5.0.0, Culture=Neutral, PublicKeyToken=31bf3856ad364e35")]
    public partial class RouteCollection : System.Collections.ObjectModel.Collection<System.Web.Routing.RouteBase>
    {
        public RouteCollection() { }
        public RouteCollection(System.Web.Hosting.VirtualPathProvider virtualPathProvider) { }
        public bool AppendTrailingSlash { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } [System.Runtime.CompilerServices.CompilerGeneratedAttribute]set { } }
        public System.Web.Routing.RouteBase this[string name] { get { throw null; } }
        public bool LowercaseUrls { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } [System.Runtime.CompilerServices.CompilerGeneratedAttribute]set { } }
        public bool RouteExistingFiles { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } [System.Runtime.CompilerServices.CompilerGeneratedAttribute]set { } }
        public void Add(string name, System.Web.Routing.RouteBase item) { }
        protected override void ClearItems() { }
        public System.IDisposable GetReadLock() { throw null; }
        public System.Web.Routing.RouteData GetRouteData(System.Web.HttpContextBase httpContext) { throw null; }
        public System.Web.Routing.VirtualPathData GetVirtualPath(System.Web.Routing.RequestContext requestContext, string name, System.Web.Routing.RouteValueDictionary values) { throw null; }
        public System.Web.Routing.VirtualPathData GetVirtualPath(System.Web.Routing.RequestContext requestContext, System.Web.Routing.RouteValueDictionary values) { throw null; }
        public System.IDisposable GetWriteLock() { throw null; }
        public void Ignore(string url) { }
        public void Ignore(string url, object constraints) { }
        protected override void InsertItem(int index, System.Web.Routing.RouteBase item) { }
        public System.Web.Routing.Route MapPageRoute(string routeName, string routeUrl, string physicalFile) { throw null; }
        public System.Web.Routing.Route MapPageRoute(string routeName, string routeUrl, string physicalFile, bool checkPhysicalUrlAccess) { throw null; }
        public System.Web.Routing.Route MapPageRoute(string routeName, string routeUrl, string physicalFile, bool checkPhysicalUrlAccess, System.Web.Routing.RouteValueDictionary defaults) { throw null; }
        public System.Web.Routing.Route MapPageRoute(string routeName, string routeUrl, string physicalFile, bool checkPhysicalUrlAccess, System.Web.Routing.RouteValueDictionary defaults, System.Web.Routing.RouteValueDictionary constraints) { throw null; }
        public System.Web.Routing.Route MapPageRoute(string routeName, string routeUrl, string physicalFile, bool checkPhysicalUrlAccess, System.Web.Routing.RouteValueDictionary defaults, System.Web.Routing.RouteValueDictionary constraints, System.Web.Routing.RouteValueDictionary dataTokens) { throw null; }
        protected override void RemoveItem(int index) { }
        protected override void SetItem(int index, System.Web.Routing.RouteBase item) { }
    }
    [System.Runtime.CompilerServices.TypeForwardedFromAttribute("System.Web.Routing, Version=3.5.0.0, Culture=Neutral, PublicKeyToken=31bf3856ad364e35")]
    public partial class RouteData
    {
        public RouteData() { }
        public RouteData(System.Web.Routing.RouteBase route, System.Web.Routing.IRouteHandler routeHandler) { }
        public System.Web.Routing.RouteValueDictionary DataTokens { get { throw null; } }
        public System.Web.Routing.RouteBase Route { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } [System.Runtime.CompilerServices.CompilerGeneratedAttribute]set { } }
        public System.Web.Routing.IRouteHandler RouteHandler { get { throw null; } set { } }
        public System.Web.Routing.RouteValueDictionary Values { get { throw null; } }
        public string GetRequiredString(string valueName) { throw null; }
    }
    [System.Runtime.CompilerServices.TypeForwardedFromAttribute("System.Web.Routing, Version=3.5.0.0, Culture=Neutral, PublicKeyToken=31bf3856ad364e35")]
    public enum RouteDirection
    {
        IncomingRequest = 0,
        UrlGeneration = 1,
    }
    [System.Runtime.CompilerServices.TypeForwardedFromAttribute("System.Web.Routing, Version=3.5.0.0, Culture=Neutral, PublicKeyToken=31bf3856ad364e35")]
    public partial class RouteTable
    {
        public RouteTable() { }
        public static System.Web.Routing.RouteCollection Routes { get { throw null; } }
    }
    [System.Runtime.CompilerServices.TypeForwardedFromAttribute("System.Web.Routing, Version=3.5.0.0, Culture=Neutral, PublicKeyToken=31bf3856ad364e35")]
    public partial class RouteValueDictionary : System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, object>>, System.Collections.Generic.IDictionary<string, object>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, object>>, System.Collections.IEnumerable
    {
        public RouteValueDictionary() { }
        public RouteValueDictionary(System.Collections.Generic.IDictionary<string, object> dictionary) { }
        public RouteValueDictionary(object values) { }
        public int Count { get { throw null; } }
        public object this[string key] { get { throw null; } set { } }
        public System.Collections.Generic.Dictionary<string, object>.KeyCollection Keys { get { throw null; } }
        bool System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.IsReadOnly { get { throw null; } }
        System.Collections.Generic.ICollection<string> System.Collections.Generic.IDictionary<System.String,System.Object>.Keys { get { throw null; } }
        System.Collections.Generic.ICollection<object> System.Collections.Generic.IDictionary<System.String,System.Object>.Values { get { throw null; } }
        public System.Collections.Generic.Dictionary<string, object>.ValueCollection Values { get { throw null; } }
        public void Add(string key, object value) { }
        public void Clear() { }
        public bool ContainsKey(string key) { throw null; }
        public bool ContainsValue(object value) { throw null; }
        public System.Collections.Generic.Dictionary<string, object>.Enumerator GetEnumerator() { throw null; }
        public bool Remove(string key) { throw null; }
        void System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.Add(System.Collections.Generic.KeyValuePair<string, object> item) { }
        bool System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.Contains(System.Collections.Generic.KeyValuePair<string, object> item) { throw null; }
        void System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.CopyTo(System.Collections.Generic.KeyValuePair<string, object>[] array, int arrayIndex) { }
        bool System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.Remove(System.Collections.Generic.KeyValuePair<string, object> item) { throw null; }
        System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<string, object>> System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.GetEnumerator() { throw null; }
        System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() { throw null; }
        public bool TryGetValue(string key, out object value) { throw null; }
    }
    [System.Runtime.CompilerServices.TypeForwardedFromAttribute("System.Web.Routing, Version=3.5.0.0, Culture=Neutral, PublicKeyToken=31bf3856ad364e35")]
    public partial class StopRoutingHandler : System.Web.Routing.IRouteHandler
    {
        public StopRoutingHandler() { }
        protected virtual System.Web.IHttpHandler GetHttpHandler(System.Web.Routing.RequestContext requestContext) { throw null; }
        System.Web.IHttpHandler System.Web.Routing.IRouteHandler.GetHttpHandler(System.Web.Routing.RequestContext requestContext) { throw null; }
    }
    [System.Runtime.CompilerServices.TypeForwardedFromAttribute("System.Web.Routing, Version=3.5.0.0, Culture=Neutral, PublicKeyToken=31bf3856ad364e35")]
    public abstract partial class UrlRoutingHandler : System.Web.IHttpHandler
    {
        protected UrlRoutingHandler() { }
        protected virtual bool IsReusable { get { throw null; } }
        public System.Web.Routing.RouteCollection RouteCollection { get { throw null; } set { } }
        bool System.Web.IHttpHandler.IsReusable { get { throw null; } }
        protected virtual void ProcessRequest(System.Web.HttpContext httpContext) { }
        protected virtual void ProcessRequest(System.Web.HttpContextBase httpContext) { }
        void System.Web.IHttpHandler.ProcessRequest(System.Web.HttpContext context) { }
        protected abstract void VerifyAndProcessRequest(System.Web.IHttpHandler httpHandler, System.Web.HttpContextBase httpContext);
    }
    [System.Runtime.CompilerServices.TypeForwardedFromAttribute("System.Web.Routing, Version=3.5.0.0, Culture=Neutral, PublicKeyToken=31bf3856ad364e35")]
    public partial class UrlRoutingModule : System.Web.IHttpModule
    {
        public UrlRoutingModule() { }
        public System.Web.Routing.RouteCollection RouteCollection { get { throw null; } set { } }
        protected virtual void Dispose() { }
        protected virtual void Init(System.Web.HttpApplication application) { }
        [System.ObsoleteAttribute("This method is obsolete. Override the Init method to use the PostMapRequestHandler event.")]
        public virtual void PostMapRequestHandler(System.Web.HttpContextBase context) { }
        public virtual void PostResolveRequestCache(System.Web.HttpContextBase context) { }
        void System.Web.IHttpModule.Dispose() { }
        void System.Web.IHttpModule.Init(System.Web.HttpApplication application) { }
    }
    [System.Runtime.CompilerServices.TypeForwardedFromAttribute("System.Web.Routing, Version=3.5.0.0, Culture=Neutral, PublicKeyToken=31bf3856ad364e35")]
    public partial class VirtualPathData
    {
        public VirtualPathData(System.Web.Routing.RouteBase route, string virtualPath) { }
        public System.Web.Routing.RouteValueDictionary DataTokens { get { throw null; } }
        public System.Web.Routing.RouteBase Route { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } [System.Runtime.CompilerServices.CompilerGeneratedAttribute]set { } }
        public string VirtualPath { get { throw null; } set { } }
    }
}
namespace System.Web.Security
{
    public enum ActiveDirectoryConnectionProtection
    {
        None = 0,
        SignAndSeal = 2,
        Ssl = 1,
    }
#if false
    [System.DirectoryServices.DirectoryServicesPermissionAttribute(System.Security.Permissions.SecurityAction.InheritanceDemand, Unrestricted=true)]
    [System.DirectoryServices.DirectoryServicesPermissionAttribute(System.Security.Permissions.SecurityAction.LinkDemand, Unrestricted=true)]
#endif
    public partial class ActiveDirectoryMembershipProvider : System.Web.Security.MembershipProvider
    {
        public ActiveDirectoryMembershipProvider() { }
        public override string ApplicationName { get { throw null; } set { } }
        public System.Web.Security.ActiveDirectoryConnectionProtection CurrentConnectionProtection { get { throw null; } }
        public override bool EnablePasswordReset { get { throw null; } }
        public override bool EnablePasswordRetrieval { get { throw null; } }
        public bool EnableSearchMethods { get { throw null; } }
        public override int MaxInvalidPasswordAttempts { get { throw null; } }
        public override int MinRequiredNonAlphanumericCharacters { get { throw null; } }
        public override int MinRequiredPasswordLength { get { throw null; } }
        public int PasswordAnswerAttemptLockoutDuration { get { throw null; } }
        public override int PasswordAttemptWindow { get { throw null; } }
        public override System.Web.Security.MembershipPasswordFormat PasswordFormat { get { throw null; } }
        public override string PasswordStrengthRegularExpression { get { throw null; } }
        public override bool RequiresQuestionAndAnswer { get { throw null; } }
        public override bool RequiresUniqueEmail { get { throw null; } }
#if false
        [System.DirectoryServices.DirectoryServicesPermissionAttribute(System.Security.Permissions.SecurityAction.Assert, Unrestricted=true)]
        [System.DirectoryServices.DirectoryServicesPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, Unrestricted=true)]
        [System.DirectoryServices.DirectoryServicesPermissionAttribute(System.Security.Permissions.SecurityAction.InheritanceDemand, Unrestricted=true)]
#endif
        public override bool ChangePassword(string username, string oldPassword, string newPassword) { throw null; }
#if false
        [System.DirectoryServices.DirectoryServicesPermissionAttribute(System.Security.Permissions.SecurityAction.Assert, Unrestricted=true)]
        [System.DirectoryServices.DirectoryServicesPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, Unrestricted=true)]
        [System.DirectoryServices.DirectoryServicesPermissionAttribute(System.Security.Permissions.SecurityAction.InheritanceDemand, Unrestricted=true)]
#endif
        public override bool ChangePasswordQuestionAndAnswer(string username, string password, string newPasswordQuestion, string newPasswordAnswer) { throw null; }
#if false
        [System.DirectoryServices.DirectoryServicesPermissionAttribute(System.Security.Permissions.SecurityAction.Assert, Unrestricted=true)]
        [System.DirectoryServices.DirectoryServicesPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, Unrestricted=true)]
        [System.DirectoryServices.DirectoryServicesPermissionAttribute(System.Security.Permissions.SecurityAction.InheritanceDemand, Unrestricted=true)]
#endif
        public override System.Web.Security.MembershipUser CreateUser(string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, object providerUserKey, out System.Web.Security.MembershipCreateStatus status) { throw null; }
#if false
        [System.DirectoryServices.DirectoryServicesPermissionAttribute(System.Security.Permissions.SecurityAction.Assert, Unrestricted=true)]
        [System.DirectoryServices.DirectoryServicesPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, Unrestricted=true)]
        [System.DirectoryServices.DirectoryServicesPermissionAttribute(System.Security.Permissions.SecurityAction.InheritanceDemand, Unrestricted=true)]
#endif
        public override bool DeleteUser(string username, bool deleteAllRelatedData) { throw null; }
#if false
        [System.DirectoryServices.DirectoryServicesPermissionAttribute(System.Security.Permissions.SecurityAction.Assert, Unrestricted=true)]
        [System.DirectoryServices.DirectoryServicesPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, Unrestricted=true)]
        [System.DirectoryServices.DirectoryServicesPermissionAttribute(System.Security.Permissions.SecurityAction.InheritanceDemand, Unrestricted=true)]
#endif
        public override System.Web.Security.MembershipUserCollection FindUsersByEmail(string emailToMatch, int pageIndex, int pageSize, out int totalRecords) { throw null; }
#if false
        [System.DirectoryServices.DirectoryServicesPermissionAttribute(System.Security.Permissions.SecurityAction.Assert, Unrestricted=true)]
        [System.DirectoryServices.DirectoryServicesPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, Unrestricted=true)]
        [System.DirectoryServices.DirectoryServicesPermissionAttribute(System.Security.Permissions.SecurityAction.InheritanceDemand, Unrestricted=true)]
#endif
        public override System.Web.Security.MembershipUserCollection FindUsersByName(string usernameToMatch, int pageIndex, int pageSize, out int totalRecords) { throw null; }
        public virtual string GeneratePassword() { throw null; }
#if false
        [System.DirectoryServices.DirectoryServicesPermissionAttribute(System.Security.Permissions.SecurityAction.Assert, Unrestricted=true)]
        [System.DirectoryServices.DirectoryServicesPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, Unrestricted=true)]
        [System.DirectoryServices.DirectoryServicesPermissionAttribute(System.Security.Permissions.SecurityAction.InheritanceDemand, Unrestricted=true)]
#endif
        public override System.Web.Security.MembershipUserCollection GetAllUsers(int pageIndex, int pageSize, out int totalRecords) { throw null; }
        public override int GetNumberOfUsersOnline() { throw null; }
        public override string GetPassword(string username, string passwordAnswer) { throw null; }
#if false
        [System.DirectoryServices.DirectoryServicesPermissionAttribute(System.Security.Permissions.SecurityAction.Assert, Unrestricted=true)]
        [System.DirectoryServices.DirectoryServicesPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, Unrestricted=true)]
        [System.DirectoryServices.DirectoryServicesPermissionAttribute(System.Security.Permissions.SecurityAction.InheritanceDemand, Unrestricted=true)]
#endif
        public override System.Web.Security.MembershipUser GetUser(object providerUserKey, bool userIsOnline) { throw null; }
#if false
        [System.DirectoryServices.DirectoryServicesPermissionAttribute(System.Security.Permissions.SecurityAction.Assert, Unrestricted=true)]
        [System.DirectoryServices.DirectoryServicesPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, Unrestricted=true)]
        [System.DirectoryServices.DirectoryServicesPermissionAttribute(System.Security.Permissions.SecurityAction.InheritanceDemand, Unrestricted=true)]
#endif
        public override System.Web.Security.MembershipUser GetUser(string username, bool userIsOnline) { throw null; }
#if false
        [System.DirectoryServices.DirectoryServicesPermissionAttribute(System.Security.Permissions.SecurityAction.Assert, Unrestricted=true)]
        [System.DirectoryServices.DirectoryServicesPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, Unrestricted=true)]
        [System.DirectoryServices.DirectoryServicesPermissionAttribute(System.Security.Permissions.SecurityAction.InheritanceDemand, Unrestricted=true)]
#endif
        public override string GetUserNameByEmail(string email) { throw null; }
#if false
        [System.DirectoryServices.DirectoryServicesPermissionAttribute(System.Security.Permissions.SecurityAction.Assert, Unrestricted=true)]
        [System.DirectoryServices.DirectoryServicesPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, Unrestricted=true)]
        [System.DirectoryServices.DirectoryServicesPermissionAttribute(System.Security.Permissions.SecurityAction.InheritanceDemand, Unrestricted=true)]
#endif
        public override void Initialize(string name, System.Collections.Specialized.NameValueCollection config) { }
#if false
        [System.DirectoryServices.DirectoryServicesPermissionAttribute(System.Security.Permissions.SecurityAction.Assert, Unrestricted=true)]
        [System.DirectoryServices.DirectoryServicesPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, Unrestricted=true)]
        [System.DirectoryServices.DirectoryServicesPermissionAttribute(System.Security.Permissions.SecurityAction.InheritanceDemand, Unrestricted=true)]
#endif
        public override string ResetPassword(string username, string passwordAnswer) { throw null; }
#if false
        [System.DirectoryServices.DirectoryServicesPermissionAttribute(System.Security.Permissions.SecurityAction.Assert, Unrestricted=true)]
        [System.DirectoryServices.DirectoryServicesPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, Unrestricted=true)]
        [System.DirectoryServices.DirectoryServicesPermissionAttribute(System.Security.Permissions.SecurityAction.InheritanceDemand, Unrestricted=true)]
#endif
        public override bool UnlockUser(string username) { throw null; }
#if false
        [System.DirectoryServices.DirectoryServicesPermissionAttribute(System.Security.Permissions.SecurityAction.Assert, Unrestricted=true)]
        [System.DirectoryServices.DirectoryServicesPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, Unrestricted=true)]
        [System.DirectoryServices.DirectoryServicesPermissionAttribute(System.Security.Permissions.SecurityAction.InheritanceDemand, Unrestricted=true)]
#endif
        public override void UpdateUser(System.Web.Security.MembershipUser user) { }
#if false
        [System.DirectoryServices.DirectoryServicesPermissionAttribute(System.Security.Permissions.SecurityAction.InheritanceDemand, Unrestricted=true)]
        [System.DirectoryServices.DirectoryServicesPermissionAttribute(System.Security.Permissions.SecurityAction.LinkDemand, Unrestricted=true)]
#endif
        public override bool ValidateUser(string username, string password) { throw null; }
    }
    [System.SerializableAttribute]
    public partial class ActiveDirectoryMembershipUser : System.Web.Security.MembershipUser
    {
        protected ActiveDirectoryMembershipUser() { }
        public ActiveDirectoryMembershipUser(string providerName, string name, object providerUserKey, string email, string passwordQuestion, string comment, bool isApproved, bool isLockedOut, System.DateTime creationDate, System.DateTime lastLoginDate, System.DateTime lastActivityDate, System.DateTime lastPasswordChangedDate, System.DateTime lastLockoutDate) { }
        public override string Comment { get { throw null; } set { } }
        public override string Email { get { throw null; } set { } }
        public override bool IsApproved { get { throw null; } set { } }
        public override System.DateTime LastActivityDate { get { throw null; } set { } }
        public override System.DateTime LastLoginDate { get { throw null; } set { } }
        public override object ProviderUserKey { get { throw null; } }
    }
    public sealed partial class AnonymousIdentificationEventArgs : System.EventArgs
    {
        public AnonymousIdentificationEventArgs(System.Web.HttpContext context) { }
        public string AnonymousID { get { throw null; } set { } }
        public System.Web.HttpContext Context { get { throw null; } }
    }
    public delegate void AnonymousIdentificationEventHandler(object sender, System.Web.Security.AnonymousIdentificationEventArgs e);
    public sealed partial class AnonymousIdentificationModule : System.Web.IHttpModule
    {
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, Unrestricted=true)]
        public AnonymousIdentificationModule() { }
        public static bool Enabled { get { throw null; } }
        public event System.Web.Security.AnonymousIdentificationEventHandler Creating { add { } remove { } }
        public static void ClearAnonymousIdentifier() { }
        public void Dispose() { }
        public void Init(System.Web.HttpApplication app) { }
    }
    public partial class AuthorizationStoreRoleProvider : System.Web.Security.RoleProvider
    {
        public AuthorizationStoreRoleProvider() { }
        public override string ApplicationName { get { throw null; } set { } }
        public int CacheRefreshInterval { get { throw null; } }
        public string ScopeName { get { throw null; } set { } }
        public override void AddUsersToRoles(string[] usernames, string[] roleNames) { }
        public override void CreateRole(string roleName) { }
        public override bool DeleteRole(string roleName, bool throwOnPopulatedRole) { throw null; }
        public override string[] FindUsersInRole(string roleName, string usernameToMatch) { throw null; }
        public override string[] GetAllRoles() { throw null; }
        public override string[] GetRolesForUser(string username) { throw null; }
        public override string[] GetUsersInRole(string roleName) { throw null; }
        public override void Initialize(string name, System.Collections.Specialized.NameValueCollection config) { }
        public override bool IsUserInRole(string username, string roleName) { throw null; }
        public override void RemoveUsersFromRoles(string[] userNames, string[] roleNames) { }
        public override bool RoleExists(string roleName) { throw null; }
    }
    public enum CookieProtection
    {
        All = 3,
        Encryption = 2,
        None = 0,
        Validation = 1,
    }
    public sealed partial class DefaultAuthenticationEventArgs : System.EventArgs
    {
        public DefaultAuthenticationEventArgs(System.Web.HttpContext context) { }
        public System.Web.HttpContext Context { get { throw null; } }
    }
    public delegate void DefaultAuthenticationEventHandler(object sender, System.Web.Security.DefaultAuthenticationEventArgs e);
    public sealed partial class DefaultAuthenticationModule : System.Web.IHttpModule
    {
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, Unrestricted=true)]
        public DefaultAuthenticationModule() { }
        public event System.Web.Security.DefaultAuthenticationEventHandler Authenticate { add { } remove { } }
        public void Dispose() { }
        public void Init(System.Web.HttpApplication app) { }
    }
    public sealed partial class FileAuthorizationModule : System.Web.IHttpModule
    {
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, UnmanagedCode=true)]
        public FileAuthorizationModule() { }
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, UnmanagedCode=true)]
        public static bool CheckFileAccessForUser(string virtualPath, System.IntPtr token, string verb) { throw null; }
        public void Dispose() { }
        public void Init(System.Web.HttpApplication app) { }
    }
    public sealed partial class FormsAuthentication
    {
        public FormsAuthentication() { }
        public static string CookieDomain { get { throw null; } }
        public static System.Web.HttpCookieMode CookieMode { get { throw null; } }
        public static System.Web.SameSiteMode CookieSameSite { get { throw null; } }
        public static bool CookiesSupported { get { throw null; } }
        public static string DefaultUrl { get { throw null; } }
        public static bool EnableCrossAppRedirects { get { throw null; } }
        public static string FormsCookieName { get { throw null; } }
        public static string FormsCookiePath { get { throw null; } }
        public static bool IsEnabled { get { throw null; } }
        public static string LoginUrl { get { throw null; } }
        public static bool RequireSSL { get { throw null; } }
        public static bool SlidingExpiration { get { throw null; } }
        public static System.Web.Configuration.TicketCompatibilityMode TicketCompatibilityMode { get { throw null; } }
        public static System.TimeSpan Timeout { get { throw null; } }
        [System.ObsoleteAttribute("The recommended alternative is to use the Membership APIs, such as Membership.ValidateUser. For more information, see http://go.microsoft.com/fwlink/?LinkId=252463.")]
        public static bool Authenticate(string name, string password) { throw null; }
        public static System.Web.Security.FormsAuthenticationTicket Decrypt(string encryptedTicket) { throw null; }
        public static void EnableFormsAuthentication(System.Collections.Specialized.NameValueCollection configurationData) { }
        public static string Encrypt(System.Web.Security.FormsAuthenticationTicket ticket) { throw null; }
        public static System.Web.HttpCookie GetAuthCookie(string userName, bool createPersistentCookie) { throw null; }
        public static System.Web.HttpCookie GetAuthCookie(string userName, bool createPersistentCookie, string strCookiePath) { throw null; }
        public static string GetRedirectUrl(string userName, bool createPersistentCookie) { throw null; }
        [System.ObsoleteAttribute("The recommended alternative is to use the Membership APIs, such as Membership.CreateUser. For more information, see http://go.microsoft.com/fwlink/?LinkId=252463.")]
        public static string HashPasswordForStoringInConfigFile(string password, string passwordFormat) { throw null; }
        public static void Initialize() { }
        public static void RedirectFromLoginPage(string userName, bool createPersistentCookie) { }
        public static void RedirectFromLoginPage(string userName, bool createPersistentCookie, string strCookiePath) { }
        public static void RedirectToLoginPage() { }
        public static void RedirectToLoginPage(string extraQueryString) { }
        public static System.Web.Security.FormsAuthenticationTicket RenewTicketIfOld(System.Web.Security.FormsAuthenticationTicket tOld) { throw null; }
        public static void SetAuthCookie(string userName, bool createPersistentCookie) { }
        public static void SetAuthCookie(string userName, bool createPersistentCookie, string strCookiePath) { }
        public static void SignOut() { }
    }
    public sealed partial class FormsAuthenticationEventArgs : System.EventArgs
    {
        public FormsAuthenticationEventArgs(System.Web.HttpContext context) { }
        public System.Web.HttpContext Context { get { throw null; } }
        public System.Security.Principal.IPrincipal User { get { throw null; } [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, ControlPrincipal=true)]set { } }
    }
    public delegate void FormsAuthenticationEventHandler(object sender, System.Web.Security.FormsAuthenticationEventArgs e);
    public sealed partial class FormsAuthenticationModule : System.Web.IHttpModule
    {
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, Unrestricted=true)]
        public FormsAuthenticationModule() { }
        public event System.Web.Security.FormsAuthenticationEventHandler Authenticate { add { } remove { } }
        public void Dispose() { }
        public void Init(System.Web.HttpApplication app) { }
    }
    [System.SerializableAttribute]
    public sealed partial class FormsAuthenticationTicket
    {
        public FormsAuthenticationTicket(int version, string name, System.DateTime issueDate, System.DateTime expiration, bool isPersistent, string userData) { }
        public FormsAuthenticationTicket(int version, string name, System.DateTime issueDate, System.DateTime expiration, bool isPersistent, string userData, string cookiePath) { }
        public FormsAuthenticationTicket(string name, bool isPersistent, int timeout) { }
        public string CookiePath { get { throw null; } }
        public System.DateTime Expiration { get { throw null; } }
        public bool Expired { get { throw null; } }
        public bool IsPersistent { get { throw null; } }
        public System.DateTime IssueDate { get { throw null; } }
        public string Name { get { throw null; } }
        public string UserData { get { throw null; } }
        public int Version { get { throw null; } }
    }
    [System.Runtime.InteropServices.ComVisibleAttribute(false)]
    [System.SerializableAttribute]
    public partial class FormsIdentity : System.Security.Claims.ClaimsIdentity
    {
        public FormsIdentity(System.Web.Security.FormsAuthenticationTicket ticket) { }
        protected FormsIdentity(System.Web.Security.FormsIdentity identity) { }
        public override string AuthenticationType { get { throw null; } }
        public override System.Collections.Generic.IEnumerable<System.Security.Claims.Claim> Claims { get { throw null; } }
        public override bool IsAuthenticated { get { throw null; } }
        public override string Name { get { throw null; } }
        public System.Web.Security.FormsAuthenticationTicket Ticket { get { throw null; } }
        public override System.Security.Claims.ClaimsIdentity Clone() { throw null; }
    }
    public static partial class MachineKey
    {
        [System.ObsoleteAttribute("This method is obsolete and is only provided for compatibility with existing code. It is recommended that new code use the Protect and Unprotect methods instead.")]
        public static byte[] Decode(string encodedData, System.Web.Security.MachineKeyProtection protectionOption) { throw null; }
        [System.ObsoleteAttribute("This method is obsolete and is only provided for compatibility with existing code. It is recommended that new code use the Protect and Unprotect methods instead.")]
        public static string Encode(byte[] data, System.Web.Security.MachineKeyProtection protectionOption) { throw null; }
        public static byte[] Protect(byte[] userData, params string[] purposes) { throw null; }
        public static byte[] Unprotect(byte[] protectedData, params string[] purposes) { throw null; }
    }
    public enum MachineKeyProtection
    {
        All = 0,
        Encryption = 1,
        Validation = 2,
    }
    public static partial class Membership
    {
        public static string ApplicationName { get { throw null; } set { } }
        public static bool EnablePasswordReset { get { throw null; } }
        public static bool EnablePasswordRetrieval { get { throw null; } }
        public static string HashAlgorithmType { get { throw null; } }
        public static int MaxInvalidPasswordAttempts { get { throw null; } }
        public static int MinRequiredNonAlphanumericCharacters { get { throw null; } }
        public static int MinRequiredPasswordLength { get { throw null; } }
        public static int PasswordAttemptWindow { get { throw null; } }
        public static string PasswordStrengthRegularExpression { get { throw null; } }
        public static System.Web.Security.MembershipProvider Provider { get { throw null; } }
        public static System.Web.Security.MembershipProviderCollection Providers { get { throw null; } }
        public static bool RequiresQuestionAndAnswer { get { throw null; } }
        public static int UserIsOnlineTimeWindow { get { throw null; } }
        public static event System.Web.Security.MembershipValidatePasswordEventHandler ValidatingPassword { add { } remove { } }
        public static System.Web.Security.MembershipUser CreateUser(string username, string password) { throw null; }
        public static System.Web.Security.MembershipUser CreateUser(string username, string password, string email) { throw null; }
        public static System.Web.Security.MembershipUser CreateUser(string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, object providerUserKey, out System.Web.Security.MembershipCreateStatus status) { throw null; }
        public static System.Web.Security.MembershipUser CreateUser(string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, out System.Web.Security.MembershipCreateStatus status) { throw null; }
        public static bool DeleteUser(string username) { throw null; }
        public static bool DeleteUser(string username, bool deleteAllRelatedData) { throw null; }
        public static System.Web.Security.MembershipUserCollection FindUsersByEmail(string emailToMatch) { throw null; }
        public static System.Web.Security.MembershipUserCollection FindUsersByEmail(string emailToMatch, int pageIndex, int pageSize, out int totalRecords) { throw null; }
        public static System.Web.Security.MembershipUserCollection FindUsersByName(string usernameToMatch) { throw null; }
        public static System.Web.Security.MembershipUserCollection FindUsersByName(string usernameToMatch, int pageIndex, int pageSize, out int totalRecords) { throw null; }
        public static string GeneratePassword(int length, int numberOfNonAlphanumericCharacters) { throw null; }
        public static System.Web.Security.MembershipUserCollection GetAllUsers() { throw null; }
        public static System.Web.Security.MembershipUserCollection GetAllUsers(int pageIndex, int pageSize, out int totalRecords) { throw null; }
        public static int GetNumberOfUsersOnline() { throw null; }
        public static System.Web.Security.MembershipUser GetUser() { throw null; }
        public static System.Web.Security.MembershipUser GetUser(bool userIsOnline) { throw null; }
        public static System.Web.Security.MembershipUser GetUser(object providerUserKey) { throw null; }
        public static System.Web.Security.MembershipUser GetUser(object providerUserKey, bool userIsOnline) { throw null; }
        public static System.Web.Security.MembershipUser GetUser(string username) { throw null; }
        public static System.Web.Security.MembershipUser GetUser(string username, bool userIsOnline) { throw null; }
        public static string GetUserNameByEmail(string emailToMatch) { throw null; }
        public static void UpdateUser(System.Web.Security.MembershipUser user) { }
        public static bool ValidateUser(string username, string password) { throw null; }
    }
    [System.AttributeUsageAttribute(System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.Property, AllowMultiple=false)]
    public partial class MembershipPasswordAttribute : System.ComponentModel.DataAnnotations.ValidationAttribute
    {
        public MembershipPasswordAttribute() { }
        public string MinNonAlphanumericCharactersError { get { throw null; } set { } }
        public string MinPasswordLengthError { get { throw null; } set { } }
        public int MinRequiredNonAlphanumericCharacters { get { throw null; } set { } }
        public int MinRequiredPasswordLength { get { throw null; } set { } }
        public string PasswordStrengthError { get { throw null; } set { } }
        public System.Nullable<int> PasswordStrengthRegexTimeout { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } [System.Runtime.CompilerServices.CompilerGeneratedAttribute]set { } }
        public string PasswordStrengthRegularExpression { get { throw null; } set { } }
        public System.Type ResourceType { get { throw null; } set { } }
        public override string FormatErrorMessage(string name) { throw null; }
        protected override System.ComponentModel.DataAnnotations.ValidationResult IsValid(object value, System.ComponentModel.DataAnnotations.ValidationContext validationContext) { throw null; }
    }
    [System.ObsoleteAttribute("This type is obsolete. The Passport authentication product is no longer supported and has been superseded by Live ID.")]
    public sealed partial class PassportAuthenticationEventArgs : System.EventArgs
    {
        public PassportAuthenticationEventArgs(System.Web.Security.PassportIdentity identity, System.Web.HttpContext context) { }
        public System.Web.HttpContext Context { get { throw null; } }
        public System.Web.Security.PassportIdentity Identity { get { throw null; } }
        public System.Security.Principal.IPrincipal User { get { throw null; } [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, ControlPrincipal=true)]set { } }
    }
    [System.ObsoleteAttribute("This type is obsolete. The Passport authentication product is no longer supported and has been superseded by Live ID.")]
    public delegate void PassportAuthenticationEventHandler(object sender, System.Web.Security.PassportAuthenticationEventArgs e);
    [System.ObsoleteAttribute("This type is obsolete. The Passport authentication product is no longer supported and has been superseded by Live ID.")]
    public sealed partial class PassportAuthenticationModule : System.Web.IHttpModule
    {
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, Unrestricted=true)]
        public PassportAuthenticationModule() { }
        public event System.Web.Security.PassportAuthenticationEventHandler Authenticate { add { } remove { } }
        public void Dispose() { }
        public void Init(System.Web.HttpApplication app) { }
    }
    [System.ObsoleteAttribute("This type is obsolete. The Passport authentication product is no longer supported and has been superseded by Live ID.")]
    public sealed partial class PassportIdentity : System.IDisposable, System.Security.Principal.IIdentity
    {
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, UnmanagedCode=true)]
        public PassportIdentity() { }
        public string AuthenticationType { get { throw null; } }
        public int Error { get { throw null; } }
        public bool GetFromNetworkServer { get { throw null; } }
        public bool HasSavedPassword { get { throw null; } }
        public bool HasTicket { get { throw null; } }
        public string HexPUID { get { throw null; } }
        public bool IsAuthenticated { get { throw null; } }
        public string this[string strProfileName] { get { throw null; } }
        public string Name { get { throw null; } }
        public int TicketAge { get { throw null; } }
        public int TimeSinceSignIn { get { throw null; } }
        public string AuthUrl() { throw null; }
        public string AuthUrl(string strReturnUrl) { throw null; }
        public string AuthUrl(string strReturnUrl, int iTimeWindow, bool fForceLogin, string strCoBrandedArgs, int iLangID, string strNameSpace, int iKPP, bool bUseSecureAuth) { throw null; }
        public string AuthUrl(string strReturnUrl, int iTimeWindow, int iForceLogin, string strCoBrandedArgs, int iLangID, string strNameSpace, int iKPP, int iUseSecureAuth) { throw null; }
        public string AuthUrl2() { throw null; }
        public string AuthUrl2(string strReturnUrl) { throw null; }
        public string AuthUrl2(string strReturnUrl, int iTimeWindow, bool fForceLogin, string strCoBrandedArgs, int iLangID, string strNameSpace, int iKPP, bool bUseSecureAuth) { throw null; }
        public string AuthUrl2(string strReturnUrl, int iTimeWindow, int iForceLogin, string strCoBrandedArgs, int iLangID, string strNameSpace, int iKPP, int iUseSecureAuth) { throw null; }
        public static string Compress(string strData) { throw null; }
        public static bool CryptIsValid() { throw null; }
        public static int CryptPutHost(string strHost) { throw null; }
        public static int CryptPutSite(string strSite) { throw null; }
        public static string Decompress(string strData) { throw null; }
        public static string Decrypt(string strData) { throw null; }
        public static string Encrypt(string strData) { throw null; }
        ~PassportIdentity() { }
        public object GetCurrentConfig(string strAttribute) { throw null; }
        public string GetDomainAttribute(string strAttribute, int iLCID, string strDomain) { throw null; }
        public string GetDomainFromMemberName(string strMemberName) { throw null; }
        public bool GetIsAuthenticated(int iTimeWindow, bool bForceLogin, bool bCheckSecure) { throw null; }
        public bool GetIsAuthenticated(int iTimeWindow, int iForceLogin, int iCheckSecure) { throw null; }
        public string GetLoginChallenge() { throw null; }
        public string GetLoginChallenge(string strReturnUrl) { throw null; }
        public string GetLoginChallenge(string szRetURL, int iTimeWindow, int fForceLogin, string szCOBrandArgs, int iLangID, string strNameSpace, int iKPP, int iUseSecureAuth, object oExtraParams) { throw null; }
        public object GetOption(string strOpt) { throw null; }
        public object GetProfileObject(string strProfileName) { throw null; }
        public bool HasFlag(int iFlagMask) { throw null; }
        public bool HasProfile(string strProfile) { throw null; }
        public bool HaveConsent(bool bNeedFullConsent, bool bNeedBirthdate) { throw null; }
        public int LoginUser() { throw null; }
        public int LoginUser(string strReturnUrl) { throw null; }
        public int LoginUser(string szRetURL, int iTimeWindow, bool fForceLogin, string szCOBrandArgs, int iLangID, string strNameSpace, int iKPP, bool fUseSecureAuth, object oExtraParams) { throw null; }
        public int LoginUser(string szRetURL, int iTimeWindow, int fForceLogin, string szCOBrandArgs, int iLangID, string strNameSpace, int iKPP, int iUseSecureAuth, object oExtraParams) { throw null; }
        public string LogoTag() { throw null; }
        public string LogoTag(string strReturnUrl) { throw null; }
        public string LogoTag(string strReturnUrl, int iTimeWindow, bool fForceLogin, string strCoBrandedArgs, int iLangID, bool fSecure, string strNameSpace, int iKPP, bool bUseSecureAuth) { throw null; }
        public string LogoTag(string strReturnUrl, int iTimeWindow, int iForceLogin, string strCoBrandedArgs, int iLangID, int iSecure, string strNameSpace, int iKPP, int iUseSecureAuth) { throw null; }
        public string LogoTag2() { throw null; }
        public string LogoTag2(string strReturnUrl) { throw null; }
        public string LogoTag2(string strReturnUrl, int iTimeWindow, bool fForceLogin, string strCoBrandedArgs, int iLangID, bool fSecure, string strNameSpace, int iKPP, bool bUseSecureAuth) { throw null; }
        public string LogoTag2(string strReturnUrl, int iTimeWindow, int iForceLogin, string strCoBrandedArgs, int iLangID, int iSecure, string strNameSpace, int iKPP, int iUseSecureAuth) { throw null; }
        public string LogoutURL() { throw null; }
        public string LogoutURL(string szReturnURL, string szCOBrandArgs, int iLangID, string strDomain, int iUseSecureAuth) { throw null; }
        public void SetOption(string strOpt, object vOpt) { }
        public static void SignOut(string strSignOutDotGifFileName) { }
        void System.IDisposable.Dispose() { }
        public object Ticket(string strAttribute) { throw null; }
    }
    [System.ObsoleteAttribute("This type is obsolete. The Passport authentication product is no longer supported and has been superseded by Live ID.")]
    public sealed partial class PassportPrincipal : System.Security.Principal.GenericPrincipal
    {
        public PassportPrincipal(System.Web.Security.PassportIdentity identity, string[] roles) : base (default(System.Security.Principal.IIdentity), default(string[])) { }
    }
    public sealed partial class RoleManagerEventArgs : System.EventArgs
    {
        public RoleManagerEventArgs(System.Web.HttpContext context) { }
        public System.Web.HttpContext Context { get { throw null; } }
        public bool RolesPopulated { get { throw null; } set { } }
    }
    public delegate void RoleManagerEventHandler(object sender, System.Web.Security.RoleManagerEventArgs e);
    public sealed partial class RoleManagerModule : System.Web.IHttpModule
    {
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, Unrestricted=true)]
        public RoleManagerModule() { }
        public event System.Web.Security.RoleManagerEventHandler GetRoles { add { } remove { } }
        public void Dispose() { }
        public void Init(System.Web.HttpApplication app) { }
    }
    [System.SerializableAttribute]
    public partial class RolePrincipal : System.Security.Claims.ClaimsPrincipal, System.Runtime.Serialization.ISerializable
    {
        protected RolePrincipal(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) { }
        public RolePrincipal(System.Security.Principal.IIdentity identity) { }
        public RolePrincipal(System.Security.Principal.IIdentity identity, string encryptedTicket) { }
        public RolePrincipal(string providerName, System.Security.Principal.IIdentity identity) { }
        public RolePrincipal(string providerName, System.Security.Principal.IIdentity identity, string encryptedTicket) { }
        public bool CachedListChanged { get { throw null; } }
        public string CookiePath { get { throw null; } }
        public bool Expired { get { throw null; } }
        public System.DateTime ExpireDate { get { throw null; } }
        public override System.Security.Principal.IIdentity Identity { get { throw null; } }
        public bool IsRoleListCached { get { throw null; } }
        public System.DateTime IssueDate { get { throw null; } }
        public string ProviderName { get { throw null; } }
        public int Version { get { throw null; } }
        protected override void GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) { }
        public string[] GetRoles() { throw null; }
        public override bool IsInRole(string role) { throw null; }
        public void SetDirty() { }
        void System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) { }
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.Assert, Flags=System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter)]
        public string ToEncryptedTicket() { throw null; }
    }
    public sealed partial class RoleProviderCollection : System.Configuration.Provider.ProviderCollection
    {
        public RoleProviderCollection() { }
        public new System.Web.Security.RoleProvider this[string name] { get { throw null; } }
        public override void Add(System.Configuration.Provider.ProviderBase provider) { }
        public void CopyTo(System.Web.Security.RoleProvider[] array, int index) { }
    }
    public static partial class Roles
    {
        public static string ApplicationName { get { throw null; } set { } }
        public static bool CacheRolesInCookie { get { throw null; } }
        public static string CookieName { get { throw null; } }
        public static string CookiePath { get { throw null; } }
        public static System.Web.Security.CookieProtection CookieProtectionValue { get { throw null; } }
        public static bool CookieRequireSSL { get { throw null; } }
        public static bool CookieSlidingExpiration { get { throw null; } }
        public static int CookieTimeout { get { throw null; } }
        public static bool CreatePersistentCookie { get { throw null; } }
        public static string Domain { get { throw null; } }
        public static bool Enabled { get { throw null; } set { } }
        public static int MaxCachedResults { get { throw null; } }
        public static System.Web.Security.RoleProvider Provider { get { throw null; } }
        public static System.Web.Security.RoleProviderCollection Providers { get { throw null; } }
        public static void AddUsersToRole(string[] usernames, string roleName) { }
        public static void AddUsersToRoles(string[] usernames, string[] roleNames) { }
        public static void AddUserToRole(string username, string roleName) { }
        public static void AddUserToRoles(string username, string[] roleNames) { }
        public static void CreateRole(string roleName) { }
        public static void DeleteCookie() { }
        public static bool DeleteRole(string roleName) { throw null; }
        public static bool DeleteRole(string roleName, bool throwOnPopulatedRole) { throw null; }
        public static string[] FindUsersInRole(string roleName, string usernameToMatch) { throw null; }
        public static string[] GetAllRoles() { throw null; }
        public static string[] GetRolesForUser() { throw null; }
        public static string[] GetRolesForUser(string username) { throw null; }
        public static string[] GetUsersInRole(string roleName) { throw null; }
        public static bool IsUserInRole(string roleName) { throw null; }
        public static bool IsUserInRole(string username, string roleName) { throw null; }
        public static void RemoveUserFromRole(string username, string roleName) { }
        public static void RemoveUserFromRoles(string username, string[] roleNames) { }
        public static void RemoveUsersFromRole(string[] usernames, string roleName) { }
        public static void RemoveUsersFromRoles(string[] usernames, string[] roleNames) { }
        public static bool RoleExists(string roleName) { throw null; }
    }
    public partial class SqlMembershipProvider : System.Web.Security.MembershipProvider
    {
        public SqlMembershipProvider() { }
        public override string ApplicationName { get { throw null; } set { } }
        public override bool EnablePasswordReset { get { throw null; } }
        public override bool EnablePasswordRetrieval { get { throw null; } }
        public override int MaxInvalidPasswordAttempts { get { throw null; } }
        public override int MinRequiredNonAlphanumericCharacters { get { throw null; } }
        public override int MinRequiredPasswordLength { get { throw null; } }
        public override int PasswordAttemptWindow { get { throw null; } }
        public override System.Web.Security.MembershipPasswordFormat PasswordFormat { get { throw null; } }
        public override string PasswordStrengthRegularExpression { get { throw null; } }
        public override bool RequiresQuestionAndAnswer { get { throw null; } }
        public override bool RequiresUniqueEmail { get { throw null; } }
        public override bool ChangePassword(string username, string oldPassword, string newPassword) { throw null; }
        public override bool ChangePasswordQuestionAndAnswer(string username, string password, string newPasswordQuestion, string newPasswordAnswer) { throw null; }
        public override System.Web.Security.MembershipUser CreateUser(string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, object providerUserKey, out System.Web.Security.MembershipCreateStatus status) { throw null; }
        public override bool DeleteUser(string username, bool deleteAllRelatedData) { throw null; }
        public override System.Web.Security.MembershipUserCollection FindUsersByEmail(string emailToMatch, int pageIndex, int pageSize, out int totalRecords) { throw null; }
        public override System.Web.Security.MembershipUserCollection FindUsersByName(string usernameToMatch, int pageIndex, int pageSize, out int totalRecords) { throw null; }
        public virtual string GeneratePassword() { throw null; }
        public override System.Web.Security.MembershipUserCollection GetAllUsers(int pageIndex, int pageSize, out int totalRecords) { throw null; }
        public override int GetNumberOfUsersOnline() { throw null; }
        public override string GetPassword(string username, string passwordAnswer) { throw null; }
        public override System.Web.Security.MembershipUser GetUser(object providerUserKey, bool userIsOnline) { throw null; }
        public override System.Web.Security.MembershipUser GetUser(string username, bool userIsOnline) { throw null; }
        public override string GetUserNameByEmail(string email) { throw null; }
        public override void Initialize(string name, System.Collections.Specialized.NameValueCollection config) { }
        public override string ResetPassword(string username, string passwordAnswer) { throw null; }
        public override bool UnlockUser(string username) { throw null; }
        public override void UpdateUser(System.Web.Security.MembershipUser user) { }
        public override bool ValidateUser(string username, string password) { throw null; }
    }
    public partial class SqlRoleProvider : System.Web.Security.RoleProvider
    {
        public SqlRoleProvider() { }
        public override string ApplicationName { get { throw null; } set { } }
        public override void AddUsersToRoles(string[] usernames, string[] roleNames) { }
        public override void CreateRole(string roleName) { }
        public override bool DeleteRole(string roleName, bool throwOnPopulatedRole) { throw null; }
        public override string[] FindUsersInRole(string roleName, string usernameToMatch) { throw null; }
        public override string[] GetAllRoles() { throw null; }
        public override string[] GetRolesForUser(string username) { throw null; }
        public override string[] GetUsersInRole(string roleName) { throw null; }
        public override void Initialize(string name, System.Collections.Specialized.NameValueCollection config) { }
        public override bool IsUserInRole(string username, string roleName) { throw null; }
        public override void RemoveUsersFromRoles(string[] usernames, string[] roleNames) { }
        public override bool RoleExists(string roleName) { throw null; }
    }
    public sealed partial class UrlAuthorizationModule : System.Web.IHttpModule
    {
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, Unrestricted=true)]
        public UrlAuthorizationModule() { }
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, Unrestricted=true)]
        public static bool CheckUrlAccessForPrincipal(string virtualPath, System.Security.Principal.IPrincipal user, string verb) { throw null; }
        public void Dispose() { }
        public void Init(System.Web.HttpApplication app) { }
    }
    public sealed partial class WindowsAuthenticationEventArgs : System.EventArgs
    {
        public WindowsAuthenticationEventArgs(System.Security.Principal.WindowsIdentity identity, System.Web.HttpContext context) { }
        public System.Web.HttpContext Context { get { throw null; } }
        public System.Security.Principal.WindowsIdentity Identity { get { throw null; } }
        public System.Security.Principal.IPrincipal User { get { throw null; } [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, ControlPrincipal=true)]set { } }
    }
    public delegate void WindowsAuthenticationEventHandler(object sender, System.Web.Security.WindowsAuthenticationEventArgs e);
    public sealed partial class WindowsAuthenticationModule : System.Web.IHttpModule
    {
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, Unrestricted=true)]
        public WindowsAuthenticationModule() { }
        public event System.Web.Security.WindowsAuthenticationEventHandler Authenticate { add { } remove { } }
        public void Dispose() { }
        public void Init(System.Web.HttpApplication app) { }
    }
    public partial class WindowsTokenRoleProvider : System.Web.Security.RoleProvider
    {
        public WindowsTokenRoleProvider() { }
        public override string ApplicationName { get { throw null; } set { } }
        public override void AddUsersToRoles(string[] usernames, string[] roleNames) { }
        public override void CreateRole(string roleName) { }
        public override bool DeleteRole(string roleName, bool throwOnPopulatedRole) { throw null; }
        public override string[] FindUsersInRole(string roleName, string usernameToMatch) { throw null; }
        public override string[] GetAllRoles() { throw null; }
        public override string[] GetRolesForUser(string username) { throw null; }
        public override string[] GetUsersInRole(string roleName) { throw null; }
        public override void Initialize(string name, System.Collections.Specialized.NameValueCollection config) { }
        public bool IsUserInRole(string username, System.Security.Principal.WindowsBuiltInRole role) { throw null; }
        public override bool IsUserInRole(string username, string roleName) { throw null; }
        public override void RemoveUsersFromRoles(string[] usernames, string[] roleNames) { }
        public override bool RoleExists(string roleName) { throw null; }
    }
}
namespace System.Web.Security.AntiXss
{
    public partial class AntiXssEncoder : System.Web.Util.HttpEncoder
    {
        public AntiXssEncoder() { }
        public static string CssEncode(string input) { throw null; }
        protected internal override void HtmlAttributeEncode(string value, System.IO.TextWriter output) { }
        public static string HtmlEncode(string input, bool useNamedEntities) { throw null; }
        protected internal override void HtmlEncode(string value, System.IO.TextWriter output) { }
        public static string HtmlFormUrlEncode(string input) { throw null; }
        public static string HtmlFormUrlEncode(string input, int codePage) { throw null; }
        public static string HtmlFormUrlEncode(string input, System.Text.Encoding inputEncoding) { throw null; }
        public static void MarkAsSafe(System.Web.Security.AntiXss.LowerCodeCharts lowerCodeCharts, System.Web.Security.AntiXss.LowerMidCodeCharts lowerMidCodeCharts, System.Web.Security.AntiXss.MidCodeCharts midCodeCharts, System.Web.Security.AntiXss.UpperMidCodeCharts upperMidCodeCharts, System.Web.Security.AntiXss.UpperCodeCharts upperCodeCharts) { }
        protected internal override byte[] UrlEncode(byte[] bytes, int offset, int count) { throw null; }
        public static string UrlEncode(string input) { throw null; }
        public static string UrlEncode(string input, int codePage) { throw null; }
        public static string UrlEncode(string input, System.Text.Encoding inputEncoding) { throw null; }
        protected internal override string UrlPathEncode(string value) { throw null; }
        public static string XmlAttributeEncode(string input) { throw null; }
        public static string XmlEncode(string input) { throw null; }
    }
    [System.FlagsAttribute]
    public enum LowerCodeCharts : long
    {
        Arabic = (long)4096,
        ArabicSupplement = (long)16384,
        Armenian = (long)1024,
        BasicLatin = (long)1,
        Bengali = (long)524288,
        C1ControlsAndLatin1Supplement = (long)2,
        CombiningDiacriticalMarks = (long)64,
        Cyrillic = (long)256,
        CyrillicSupplement = (long)512,
        Default = (long)127,
        Devanagari = (long)262144,
        GreekAndCoptic = (long)128,
        Gujarati = (long)2097152,
        Gurmukhi = (long)1048576,
        Hebrew = (long)2048,
        IpaExtensions = (long)16,
        Kannada = (long)33554432,
        Lao = (long)536870912,
        LatinExtendedA = (long)4,
        LatinExtendedB = (long)8,
        Malayalam = (long)67108864,
        Nko = (long)65536,
        None = (long)0,
        Oriya = (long)4194304,
        Samaritan = (long)131072,
        Sinhala = (long)134217728,
        SpacingModifierLetters = (long)32,
        Syriac = (long)8192,
        Tamil = (long)8388608,
        Telugu = (long)16777216,
        Thaana = (long)32768,
        Thai = (long)268435456,
        Tibetan = (long)1073741824,
    }
    [System.FlagsAttribute]
    public enum LowerMidCodeCharts : long
    {
        Balinese = (long)4194304,
        Buginese = (long)1048576,
        Buhid = (long)2048,
        Cherokee = (long)32,
        CombiningDiacriticalMarksSupplement = (long)536870912,
        Ethiopic = (long)8,
        EthiopicSupplement = (long)16,
        Georgian = (long)2,
        HangulJamo = (long)4,
        Hanunoo = (long)1024,
        Khmer = (long)8192,
        KhmerSymbols = (long)524288,
        LatinExtendedAdditional = (long)1073741824,
        Lepcha = (long)16777216,
        Limbu = (long)65536,
        Mongolian = (long)16384,
        Myanmar = (long)1,
        NewTaiLue = (long)262144,
        None = (long)0,
        Ogham = (long)128,
        OlChiki = (long)33554432,
        PhoneticExtensions = (long)134217728,
        PhoneticExtensionsSupplement = (long)268435456,
        Runic = (long)256,
        Sudanese = (long)8388608,
        Tagalog = (long)512,
        Tagbanwa = (long)4096,
        TaiLe = (long)131072,
        TaiTham = (long)2097152,
        UnifiedCanadianAboriginalSyllabics = (long)64,
        UnifiedCanadianAboriginalSyllabicsExtended = (long)32768,
        VedicExtensions = (long)67108864,
    }
    [System.FlagsAttribute]
    public enum MidCodeCharts : long
    {
        Arrows = (long)128,
        BlockElements = (long)16384,
        BoxDrawing = (long)8192,
        BraillePatterns = (long)1048576,
        CombiningDiacriticalMarksForSymbols = (long)16,
        ControlPictures = (long)1024,
        Coptic = (long)134217728,
        CurrencySymbols = (long)8,
        Dingbats = (long)131072,
        EnclosedAlphanumerics = (long)4096,
        EthiopicExtended = (long)16384,
        GeneralPunctuation = (long)2,
        GeometricShapes = (long)32768,
        GeorgianSupplement = (long)268435456,
        Glagolitic = (long)33554432,
        GreekExtended = (long)1,
        LatinExtendedC = (long)67108864,
        LetterlikeSymbols = (long)32,
        MathematicalOperators = (long)256,
        MiscellaneousMathematicalSymbolsA = (long)262144,
        MiscellaneousMathematicalSymbolsB = (long)4194304,
        MiscellaneousSymbols = (long)65536,
        MiscellaneousSymbolsAndArrows = (long)16777216,
        MiscellaneousTechnical = (long)512,
        None = (long)0,
        NumberForms = (long)64,
        OpticalCharacterRecognition = (long)2048,
        SuperscriptsAndSubscripts = (long)4,
        SupplementalArrowsA = (long)524288,
        SupplementalArrowsB = (long)2097152,
        SupplementalMathematicalOperators = (long)8388608,
        Tifinagh = (long)536870912,
    }
    [System.FlagsAttribute]
    public enum UpperCodeCharts
    {
        AlphabeticPresentationForms = 4096,
        ArabicPresentationFormsA = 8192,
        ArabicPresentationFormsB = 524288,
        Cham = 32,
        CjkCompatibilityForms = 131072,
        CjkCompatibilityIdeographs = 2048,
        CombiningHalfMarks = 65536,
        DevanagariExtended = 1,
        HalfWidthAndFullWidthForms = 1048576,
        HangulJamoExtendedA = 8,
        HangulJamoExtendedB = 1024,
        HangulSyllables = 512,
        Javanese = 16,
        KayahLi = 2,
        MeeteiMayek = 256,
        MyanmarExtendedA = 64,
        None = 0,
        Rejang = 4,
        SmallFormVariants = 262144,
        Specials = 2097152,
        TaiViet = 128,
        VariationSelectors = 16384,
        VerticalForms = 32768,
    }
    [System.FlagsAttribute]
    public enum UpperMidCodeCharts : long
    {
        Bamum = (long)16777216,
        Bopomofo = (long)256,
        BopomofoExtended = (long)2048,
        CjkCompatibility = (long)32768,
        CjkRadicalsSupplement = (long)4,
        CjkStrokes = (long)4096,
        CjkSymbolsAndPunctuation = (long)32,
        CjkUnifiedIdeographs = (long)262144,
        CjkUnifiedIdeographsExtensionA = (long)65536,
        CommonIndicNumberForms = (long)268435456,
        CyrillicExtendedA = (long)1,
        CyrillicExtendedB = (long)8388608,
        EnclosedCjkLettersAndMonths = (long)16384,
        HangulCompatibilityJamo = (long)512,
        Hiragana = (long)64,
        IdeographicDescriptionCharacters = (long)16,
        Kanbun = (long)1024,
        KangxiRadicals = (long)8,
        Katakana = (long)128,
        KatakanaPhoneticExtensions = (long)8192,
        LatinExtendedD = (long)67108864,
        Lisu = (long)2097152,
        ModifierToneLetters = (long)33554432,
        None = (long)0,
        Phagspa = (long)536870912,
        Saurashtra = (long)1073741824,
        SupplementalPunctuation = (long)2,
        SylotiNagri = (long)134217728,
        Vai = (long)4194304,
        YijingHexagramSymbols = (long)131072,
        YiRadicals = (long)1048576,
        YiSyllables = (long)524288,
    }
}
namespace System.Web.SessionState
{
    public sealed partial class HttpSessionState : System.Collections.ICollection, System.Collections.IEnumerable
    {
        internal HttpSessionState() { }
        public int CodePage { get { throw null; } set { } }
        public System.Web.SessionState.HttpSessionState Contents { get { throw null; } }
        public System.Web.HttpCookieMode CookieMode { get { throw null; } }
        public int Count { get { throw null; } }
        public bool IsCookieless { get { throw null; } }
        public bool IsNewSession { get { throw null; } }
        public bool IsReadOnly { get { throw null; } }
        public bool IsSynchronized { get { throw null; } }
        public object this[int index] { get { throw null; } set { } }
        public object this[string name] { get { throw null; } set { } }
        public System.Collections.Specialized.NameObjectCollectionBase.KeysCollection Keys { get { throw null; } }
        public int LCID { get { throw null; } set { } }
        public System.Web.SessionState.SessionStateMode Mode { get { throw null; } }
        public string SessionID { get { throw null; } }
        public System.Web.HttpStaticObjectsCollection StaticObjects { get { throw null; } }
        public object SyncRoot { get { throw null; } }
        public int Timeout { get { throw null; } set { } }
        public void Abandon() { }
        public void Add(string name, object value) { }
        public void Clear() { }
        public void CopyTo(System.Array array, int index) { }
        public System.Collections.IEnumerator GetEnumerator() { throw null; }
        public void Remove(string name) { }
        public void RemoveAll() { }
        public void RemoveAt(int index) { }
    }
    public partial class HttpSessionStateContainer : System.Web.SessionState.IHttpSessionState
    {
        public HttpSessionStateContainer(string id, System.Web.SessionState.ISessionStateItemCollection sessionItems, System.Web.HttpStaticObjectsCollection staticObjects, int timeout, bool newSession, System.Web.HttpCookieMode cookieMode, System.Web.SessionState.SessionStateMode mode, bool isReadonly) { }
        public int CodePage { get { throw null; } set { } }
        public System.Web.HttpCookieMode CookieMode { get { throw null; } }
        public int Count { get { throw null; } }
        public bool IsAbandoned { get { throw null; } }
        public bool IsCookieless { get { throw null; } }
        public bool IsNewSession { get { throw null; } }
        public bool IsReadOnly { get { throw null; } }
        public bool IsSynchronized { get { throw null; } }
        public object this[int index] { get { throw null; } set { } }
        public object this[string name] { get { throw null; } set { } }
        public System.Collections.Specialized.NameObjectCollectionBase.KeysCollection Keys { get { throw null; } }
        public int LCID { get { throw null; } set { } }
        public System.Web.SessionState.SessionStateMode Mode { get { throw null; } }
        public string SessionID { get { throw null; } }
        public System.Web.HttpStaticObjectsCollection StaticObjects { get { throw null; } }
        public object SyncRoot { get { throw null; } }
        public int Timeout { get { throw null; } set { } }
        public void Abandon() { }
        public void Add(string name, object value) { }
        public void Clear() { }
        public void CopyTo(System.Array array, int index) { }
        public System.Collections.IEnumerator GetEnumerator() { throw null; }
        public void Remove(string name) { }
        public void RemoveAll() { }
        public void RemoveAt(int index) { }
    }
    public partial interface IHttpSessionState
    {
        int CodePage { get; set; }
        System.Web.HttpCookieMode CookieMode { get; }
        int Count { get; }
        bool IsCookieless { get; }
        bool IsNewSession { get; }
        bool IsReadOnly { get; }
        bool IsSynchronized { get; }
        object this[int index] { get; set; }
        object this[string name] { get; set; }
        System.Collections.Specialized.NameObjectCollectionBase.KeysCollection Keys { get; }
        int LCID { get; set; }
        System.Web.SessionState.SessionStateMode Mode { get; }
        string SessionID { get; }
        System.Web.HttpStaticObjectsCollection StaticObjects { get; }
        object SyncRoot { get; }
        int Timeout { get; set; }
        void Abandon();
        void Add(string name, object value);
        void Clear();
        void CopyTo(System.Array array, int index);
        System.Collections.IEnumerator GetEnumerator();
        void Remove(string name);
        void RemoveAll();
        void RemoveAt(int index);
    }
    public partial interface IPartialSessionState
    {
        System.Collections.Generic.IList<string> PartialSessionStateKeys { get; }
    }
    public partial interface IReadOnlySessionState : System.Web.SessionState.IRequiresSessionState
    {
    }
    public partial interface IRequiresSessionState
    {
    }
    public partial interface ISessionIDManager
    {
        string CreateSessionID(System.Web.HttpContext context);
        string GetSessionID(System.Web.HttpContext context);
        void Initialize();
        bool InitializeRequest(System.Web.HttpContext context, bool suppressAutoDetectRedirect, out bool supportSessionIDReissue);
        void RemoveSessionID(System.Web.HttpContext context);
        void SaveSessionID(System.Web.HttpContext context, string id, out bool redirected, out bool cookieAdded);
        bool Validate(string id);
    }
    public partial interface ISessionStateItemCollection : System.Collections.ICollection, System.Collections.IEnumerable
    {
        bool Dirty { get; set; }
        object this[int index] { get; set; }
        object this[string name] { get; set; }
        System.Collections.Specialized.NameObjectCollectionBase.KeysCollection Keys { get; }
        void Clear();
        void Remove(string name);
        void RemoveAt(int index);
    }
    public partial interface ISessionStateModule : System.Web.IHttpModule
    {
        void ReleaseSessionState(System.Web.HttpContext context);
        System.Threading.Tasks.Task ReleaseSessionStateAsync(System.Web.HttpContext context);
    }
    [System.Runtime.InteropServices.GuidAttribute("7297744b-e188-40bf-b7e9-56698d25cf44")]
    [System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]
    public partial interface IStateRuntime
    {
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.InheritanceDemand, Unrestricted=true)]
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.LinkDemand, Unrestricted=true)]
        void ProcessRequest([System.Runtime.InteropServices.In][System.Runtime.InteropServices.MarshalAs(System.Runtime.InteropServices.UnmanagedType.SysInt)]System.IntPtr tracker, [System.Runtime.InteropServices.In][System.Runtime.InteropServices.MarshalAs(System.Runtime.InteropServices.UnmanagedType.I4)]int verb, [System.Runtime.InteropServices.In][System.Runtime.InteropServices.MarshalAs(System.Runtime.InteropServices.UnmanagedType.LPWStr)]string uri, [System.Runtime.InteropServices.In][System.Runtime.InteropServices.MarshalAs(System.Runtime.InteropServices.UnmanagedType.I4)]int exclusive, [System.Runtime.InteropServices.In][System.Runtime.InteropServices.MarshalAs(System.Runtime.InteropServices.UnmanagedType.I4)]int extraFlags, [System.Runtime.InteropServices.In][System.Runtime.InteropServices.MarshalAs(System.Runtime.InteropServices.UnmanagedType.I4)]int timeout, [System.Runtime.InteropServices.In][System.Runtime.InteropServices.MarshalAs(System.Runtime.InteropServices.UnmanagedType.I4)]int lockCookieExists, [System.Runtime.InteropServices.In][System.Runtime.InteropServices.MarshalAs(System.Runtime.InteropServices.UnmanagedType.I4)]int lockCookie, [System.Runtime.InteropServices.In][System.Runtime.InteropServices.MarshalAs(System.Runtime.InteropServices.UnmanagedType.I4)]int contentLength, [System.Runtime.InteropServices.In][System.Runtime.InteropServices.MarshalAs(System.Runtime.InteropServices.UnmanagedType.SysInt)]System.IntPtr content);
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.InheritanceDemand, Unrestricted=true)]
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.LinkDemand, Unrestricted=true)]
        void ProcessRequest([System.Runtime.InteropServices.In][System.Runtime.InteropServices.MarshalAs(System.Runtime.InteropServices.UnmanagedType.SysInt)]System.IntPtr tracker, [System.Runtime.InteropServices.In][System.Runtime.InteropServices.MarshalAs(System.Runtime.InteropServices.UnmanagedType.I4)]int verb, [System.Runtime.InteropServices.In][System.Runtime.InteropServices.MarshalAs(System.Runtime.InteropServices.UnmanagedType.LPWStr)]string uri, [System.Runtime.InteropServices.In][System.Runtime.InteropServices.MarshalAs(System.Runtime.InteropServices.UnmanagedType.I4)]int exclusive, [System.Runtime.InteropServices.In][System.Runtime.InteropServices.MarshalAs(System.Runtime.InteropServices.UnmanagedType.I4)]int timeout, [System.Runtime.InteropServices.In][System.Runtime.InteropServices.MarshalAs(System.Runtime.InteropServices.UnmanagedType.I4)]int lockCookieExists, [System.Runtime.InteropServices.In][System.Runtime.InteropServices.MarshalAs(System.Runtime.InteropServices.UnmanagedType.I4)]int lockCookie, [System.Runtime.InteropServices.In][System.Runtime.InteropServices.MarshalAs(System.Runtime.InteropServices.UnmanagedType.I4)]int contentLength, [System.Runtime.InteropServices.In][System.Runtime.InteropServices.MarshalAs(System.Runtime.InteropServices.UnmanagedType.SysInt)]System.IntPtr content);
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.InheritanceDemand, Unrestricted=true)]
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.LinkDemand, Unrestricted=true)]
        void StopProcessing();
    }
    public partial class SessionIDManager : System.Web.SessionState.ISessionIDManager
    {
        public SessionIDManager() { }
        public static int SessionIDMaxLength { get { throw null; } }
        public virtual string CreateSessionID(System.Web.HttpContext context) { throw null; }
        public virtual string Decode(string id) { throw null; }
        public virtual string Encode(string id) { throw null; }
        public string GetSessionID(System.Web.HttpContext context) { throw null; }
        public void Initialize() { }
        public bool InitializeRequest(System.Web.HttpContext context, bool suppressAutoDetectRedirect, out bool supportSessionIDReissue) { throw null; }
        public void RemoveSessionID(System.Web.HttpContext context) { }
        public void SaveSessionID(System.Web.HttpContext context, string id, out bool redirected, out bool cookieAdded) { throw null; }
        public virtual bool Validate(string id) { throw null; }
    }
    [System.FlagsAttribute]
    public enum SessionStateActions
    {
        InitializeItem = 1,
        None = 0,
    }
    public enum SessionStateBehavior
    {
        Default = 0,
        Disabled = 3,
        ReadOnly = 2,
        Required = 1,
    }
    public sealed partial class SessionStateItemCollection : System.Collections.Specialized.NameObjectCollectionBase, System.Collections.ICollection, System.Collections.IEnumerable, System.Web.SessionState.ISessionStateItemCollection
    {
        public SessionStateItemCollection() { }
        public bool Dirty { get { throw null; } set { } }
        public object this[int index] { get { throw null; } set { } }
        public object this[string name] { get { throw null; } set { } }
        public override System.Collections.Specialized.NameObjectCollectionBase.KeysCollection Keys { get { throw null; } }
        public void Clear() { }
        public static System.Web.SessionState.SessionStateItemCollection Deserialize(System.IO.BinaryReader reader) { throw null; }
        public override System.Collections.IEnumerator GetEnumerator() { throw null; }
        public void Remove(string name) { }
        public void RemoveAt(int index) { }
        public void Serialize(System.IO.BinaryWriter writer) { }
    }
    public delegate void SessionStateItemExpireCallback(string id, System.Web.SessionState.SessionStateStoreData item);
    public enum SessionStateMode
    {
        Custom = 4,
        InProc = 1,
        Off = 0,
        SQLServer = 3,
        StateServer = 2,
    }
    public sealed partial class SessionStateModule : System.Web.IHttpModule, System.Web.SessionState.ISessionStateModule
    {
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, Unrestricted=true)]
        public SessionStateModule() { }
        public event System.EventHandler End { add { } remove { } }
        public event System.EventHandler Start { add { } remove { } }
        public void Dispose() { }
        public void Init(System.Web.HttpApplication app) { }
        public void ReleaseSessionState(System.Web.HttpContext context) { }
        public System.Threading.Tasks.Task ReleaseSessionStateAsync(System.Web.HttpContext context) { throw null; }
    }
    public partial class SessionStateStoreData
    {
        public SessionStateStoreData(System.Web.SessionState.ISessionStateItemCollection sessionItems, System.Web.HttpStaticObjectsCollection staticObjects, int timeout) { }
        public virtual System.Web.SessionState.ISessionStateItemCollection Items { get { throw null; } }
        public virtual System.Web.HttpStaticObjectsCollection StaticObjects { get { throw null; } }
        public virtual int Timeout { get { throw null; } set { } }
    }
    public abstract partial class SessionStateStoreProviderBase : System.Configuration.Provider.ProviderBase
    {
        protected SessionStateStoreProviderBase() { }
        public abstract System.Web.SessionState.SessionStateStoreData CreateNewStoreData(System.Web.HttpContext context, int timeout);
        public abstract void CreateUninitializedItem(System.Web.HttpContext context, string id, int timeout);
        public abstract void Dispose();
        public abstract void EndRequest(System.Web.HttpContext context);
        public abstract System.Web.SessionState.SessionStateStoreData GetItem(System.Web.HttpContext context, string id, out bool locked, out System.TimeSpan lockAge, out object lockId, out System.Web.SessionState.SessionStateActions actions);
        public abstract System.Web.SessionState.SessionStateStoreData GetItemExclusive(System.Web.HttpContext context, string id, out bool locked, out System.TimeSpan lockAge, out object lockId, out System.Web.SessionState.SessionStateActions actions);
        public abstract void InitializeRequest(System.Web.HttpContext context);
        public abstract void ReleaseItemExclusive(System.Web.HttpContext context, string id, object lockId);
        public abstract void RemoveItem(System.Web.HttpContext context, string id, object lockId, System.Web.SessionState.SessionStateStoreData item);
        public abstract void ResetItemTimeout(System.Web.HttpContext context, string id);
        public abstract void SetAndReleaseItemExclusive(System.Web.HttpContext context, string id, System.Web.SessionState.SessionStateStoreData item, object lockId, bool newItem);
        public abstract bool SetItemExpireCallback(System.Web.SessionState.SessionStateItemExpireCallback expireCallback);
    }
    public static partial class SessionStateUtility
    {
        public static System.Runtime.Serialization.ISurrogateSelector SerializationSurrogateSelector { [System.Runtime.CompilerServices.CompilerGeneratedAttribute][System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.LinkDemand, SerializationFormatter=true)]get { throw null; } [System.Runtime.CompilerServices.CompilerGeneratedAttribute][System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.LinkDemand, SerializationFormatter=true)]set { } }
        public static void AddHttpSessionStateToContext(System.Web.HttpContext context, System.Web.SessionState.IHttpSessionState container) { }
        public static System.Web.SessionState.IHttpSessionState GetHttpSessionStateFromContext(System.Web.HttpContext context) { throw null; }
        public static System.Web.HttpStaticObjectsCollection GetSessionStaticObjects(System.Web.HttpContext context) { throw null; }
        public static bool IsSessionStateReadOnly(System.Web.HttpContext context) { throw null; }
        public static bool IsSessionStateRequired(System.Web.HttpContext context) { throw null; }
        public static void RaiseSessionEnd(System.Web.SessionState.IHttpSessionState session, object eventSource, System.EventArgs eventArgs) { }
        public static void RemoveHttpSessionStateFromContext(System.Web.HttpContext context) { }
    }
    [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.LinkDemand, Unrestricted=true)]
    public sealed partial class StateRuntime : System.Web.SessionState.IStateRuntime
    {
        public StateRuntime() { }
        public void ProcessRequest(System.IntPtr tracker, int verb, string uri, int exclusive, int extraFlags, int timeout, int lockCookieExists, int lockCookie, int contentLength, System.IntPtr content) { }
        public void ProcessRequest(System.IntPtr tracker, int verb, string uri, int exclusive, int timeout, int lockCookieExists, int lockCookie, int contentLength, System.IntPtr content) { }
        public void StopProcessing() { }
    }
}
namespace System.Web.UI
{
    public sealed partial class AttributeCollection
    {
        public AttributeCollection(System.Web.UI.StateBag bag) { }
        public int Count { get { throw null; } }
        public System.Web.UI.CssStyleCollection CssStyle { get { throw null; } }
        public string this[string key] { get { throw null; } set { } }
        public System.Collections.ICollection Keys { get { throw null; } }
        public void Add(string key, string value) { }
        public void AddAttributes(System.Web.UI.HtmlTextWriter writer) { }
        public void Clear() { }
        public override bool Equals(object o) { throw null; }
        public override int GetHashCode() { throw null; }
        public void Remove(string key) { }
        public void Render(System.Web.UI.HtmlTextWriter writer) { }
    }
    public partial class BaseParser
    {
        public BaseParser() { }
    }
    [System.ComponentModel.ToolboxItemAttribute(false)]
    public abstract partial class BasePartialCachingControl : System.Web.UI.Control
    {
        protected BasePartialCachingControl() { }
        public System.Web.UI.ControlCachePolicy CachePolicy { get { throw null; } }
        public System.Web.Caching.CacheDependency Dependency { get { throw null; } set { } }
        public override void Dispose() { }
        protected internal override void Render(System.Web.UI.HtmlTextWriter output) { }
    }
    public abstract partial class BaseTemplateParser : System.Web.UI.TemplateParser
    {
        protected BaseTemplateParser() { }
        protected System.Type GetReferencedType(string virtualPath) { throw null; }
        protected internal System.Type GetUserControlType(string virtualPath) { throw null; }
    }
    public sealed partial class BindableTemplateBuilder : System.Web.UI.TemplateBuilder, System.Web.UI.IBindableTemplate, System.Web.UI.ITemplate
    {
        public BindableTemplateBuilder() { }
        public System.Collections.Specialized.IOrderedDictionary ExtractValues(System.Web.UI.Control container) { throw null; }
        public override void OnAppendToParentBuilder(System.Web.UI.ControlBuilder parentBuilder) { }
    }
    public partial class BoundPropertyEntry : System.Web.UI.PropertyEntry
    {
        internal BoundPropertyEntry() { }
        public string ControlID { get { throw null; } set { } }
        public System.Type ControlType { get { throw null; } set { } }
        public string Expression { get { throw null; } set { } }
        public System.Web.Compilation.ExpressionBuilder ExpressionBuilder { get { throw null; } set { } }
        public string ExpressionPrefix { get { throw null; } set { } }
        public string FieldName { get { throw null; } set { } }
        public string FormatString { get { throw null; } set { } }
        public bool Generated { get { throw null; } set { } }
        public bool IsEncoded { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } [System.Runtime.CompilerServices.CompilerGeneratedAttribute]set { } }
        public object ParsedExpressionData { get { throw null; } set { } }
        public bool ReadOnlyProperty { get { throw null; } set { } }
        public bool TwoWayBound { get { throw null; } set { } }
        public bool UseSetAttribute { get { throw null; } set { } }
    }
    public abstract partial class BuilderPropertyEntry : System.Web.UI.PropertyEntry
    {
        internal BuilderPropertyEntry() { }
        public System.Web.UI.ControlBuilder Builder { get { throw null; } set { } }
    }
    public delegate System.Web.UI.Control BuildMethod();
    public delegate void BuildTemplateMethod(System.Web.UI.Control control);
    public partial class ChtmlTextWriter : System.Web.UI.Html32TextWriter
    {
        public ChtmlTextWriter(System.IO.TextWriter writer) : base (default(System.IO.TextWriter)) { }
        public ChtmlTextWriter(System.IO.TextWriter writer, string tabString) : base (default(System.IO.TextWriter)) { }
        protected System.Collections.Hashtable GlobalSuppressedAttributes { get { throw null; } }
        protected System.Collections.Hashtable RecognizedAttributes { get { throw null; } }
        protected System.Collections.Hashtable SuppressedAttributes { get { throw null; } }
        public virtual void AddRecognizedAttribute(string elementName, string attributeName) { }
        protected override bool OnAttributeRender(string name, string value, System.Web.UI.HtmlTextWriterAttribute key) { throw null; }
        protected override bool OnStyleAttributeRender(string name, string value, System.Web.UI.HtmlTextWriterStyle key) { throw null; }
        protected override bool OnTagRender(string name, System.Web.UI.HtmlTextWriterTag key) { throw null; }
        public virtual void RemoveRecognizedAttribute(string elementName, string attributeName) { }
        public override void WriteBreak() { }
        public override void WriteEncodedText(string text) { }
    }
    public enum ClientIDMode
    {
        AutoID = 1,
        Inherit = 0,
        Predictable = 2,
        Static = 3,
    }
    public sealed partial class ClientScriptManager
    {
        internal ClientScriptManager() { }
        public string GetCallbackEventReference(string target, string argument, string clientCallback, string context, string clientErrorCallback, bool useAsync) { throw null; }
        public string GetCallbackEventReference(System.Web.UI.Control control, string argument, string clientCallback, string context) { throw null; }
        public string GetCallbackEventReference(System.Web.UI.Control control, string argument, string clientCallback, string context, bool useAsync) { throw null; }
        public string GetCallbackEventReference(System.Web.UI.Control control, string argument, string clientCallback, string context, string clientErrorCallback, bool useAsync) { throw null; }
        public string GetPostBackClientHyperlink(System.Web.UI.Control control, string argument) { throw null; }
        public string GetPostBackClientHyperlink(System.Web.UI.Control control, string argument, bool registerForEventValidation) { throw null; }
        public string GetPostBackEventReference(System.Web.UI.Control control, string argument) { throw null; }
        public string GetPostBackEventReference(System.Web.UI.Control control, string argument, bool registerForEventValidation) { throw null; }
        public string GetPostBackEventReference(System.Web.UI.PostBackOptions options) { throw null; }
        public string GetPostBackEventReference(System.Web.UI.PostBackOptions options, bool registerForEventValidation) { throw null; }
        public string GetWebResourceUrl(System.Type type, string resourceName) { throw null; }
        public bool IsClientScriptBlockRegistered(string key) { throw null; }
        public bool IsClientScriptBlockRegistered(System.Type type, string key) { throw null; }
        public bool IsClientScriptIncludeRegistered(string key) { throw null; }
        public bool IsClientScriptIncludeRegistered(System.Type type, string key) { throw null; }
        public bool IsOnSubmitStatementRegistered(string key) { throw null; }
        public bool IsOnSubmitStatementRegistered(System.Type type, string key) { throw null; }
        public bool IsStartupScriptRegistered(string key) { throw null; }
        public bool IsStartupScriptRegistered(System.Type type, string key) { throw null; }
        public void RegisterArrayDeclaration(string arrayName, string arrayValue) { }
        public void RegisterClientScriptBlock(System.Type type, string key, string script) { }
        public void RegisterClientScriptBlock(System.Type type, string key, string script, bool addScriptTags) { }
        public void RegisterClientScriptInclude(string key, string url) { }
        public void RegisterClientScriptInclude(System.Type type, string key, string url) { }
        public void RegisterClientScriptResource(System.Type type, string resourceName) { }
        public void RegisterExpandoAttribute(string controlId, string attributeName, string attributeValue) { }
        public void RegisterExpandoAttribute(string controlId, string attributeName, string attributeValue, bool encode) { }
        public void RegisterForEventValidation(string uniqueId) { }
        public void RegisterForEventValidation(string uniqueId, string argument) { }
        public void RegisterForEventValidation(System.Web.UI.PostBackOptions options) { }
        public void RegisterHiddenField(string hiddenFieldName, string hiddenFieldInitialValue) { }
        public void RegisterOnSubmitStatement(System.Type type, string key, string script) { }
        public void RegisterStartupScript(System.Type type, string key, string script) { }
        public void RegisterStartupScript(System.Type type, string key, string script, bool addScriptTags) { }
        public void ValidateEvent(string uniqueId) { }
        public void ValidateEvent(string uniqueId, string argument) { }
    }
    public enum CodeBlockType
    {
        Code = 0,
        DataBinding = 2,
        EncodedExpression = 3,
        Expression = 1,
    }
    public enum CodeConstructType
    {
        CodeSnippet = 0,
        DataBindingSnippet = 2,
        EncodedExpressionSnippet = 4,
        ExpressionSnippet = 1,
        ScriptTag = 3,
    }
    public abstract partial class CodeStatementBuilder : System.Web.UI.ControlBuilder
    {
        protected CodeStatementBuilder() { }
        public abstract System.CodeDom.CodeStatement BuildStatement(System.CodeDom.CodeArgumentReferenceExpression writerReferenceExpression);
    }
    public enum CompilationMode
    {
        Always = 2,
        Auto = 0,
        Never = 1,
    }
    public sealed partial class CompiledBindableTemplateBuilder : System.Web.UI.IBindableTemplate, System.Web.UI.ITemplate
    {
        public CompiledBindableTemplateBuilder(System.Web.UI.BuildTemplateMethod buildTemplateMethod, System.Web.UI.ExtractTemplateValuesMethod extractTemplateValuesMethod) { }
        public System.Collections.Specialized.IOrderedDictionary ExtractValues(System.Web.UI.Control container) { throw null; }
        public void InstantiateIn(System.Web.UI.Control container) { }
    }
    public sealed partial class CompiledTemplateBuilder : System.Web.UI.ITemplate
    {
        public CompiledTemplateBuilder(System.Web.UI.BuildTemplateMethod buildTemplateMethod) { }
        public void InstantiateIn(System.Web.UI.Control container) { }
    }
    public partial class ComplexPropertyEntry : System.Web.UI.BuilderPropertyEntry
    {
        internal ComplexPropertyEntry() { }
        public bool IsCollectionItem { get { throw null; } }
        public bool ReadOnly { get { throw null; } set { } }
    }
    public enum ConflictOptions
    {
        CompareAllValues = 1,
        OverwriteChanges = 0,
    }
    [System.AttributeUsageAttribute(System.AttributeTargets.Class)]
    public sealed partial class ConstructorNeedsTagAttribute : System.Attribute
    {
        public ConstructorNeedsTagAttribute() { }
        public ConstructorNeedsTagAttribute(bool needsTag) { }
        public bool NeedsTag { get { throw null; } }
    }
    [System.ComponentModel.BindableAttribute(true)]
    [System.ComponentModel.DefaultPropertyAttribute("ID")]
    [System.ComponentModel.Design.Serialization.DesignerSerializerAttribute("Microsoft.VisualStudio.Web.WebForms.ControlCodeDomSerializer, Microsoft.VisualStudio.Web, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.ComponentModel.Design.Serialization.CodeDomSerializer, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.DesignerAttribute("System.Web.UI.Design.ControlDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.DesignerCategoryAttribute("Code")]
    [System.ComponentModel.ToolboxItemAttribute("System.Web.UI.Design.WebControlToolboxItem, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.ToolboxItemFilterAttribute("System.Web.UI", System.ComponentModel.ToolboxItemFilterType.Require)]
    [System.Web.UI.ThemeableAttribute(false)]
    public partial class Control : System.ComponentModel.IComponent, System.IDisposable, System.Web.UI.IControlBuilderAccessor, System.Web.UI.IControlDesignerAccessor, System.Web.UI.IDataBindingsAccessor, System.Web.UI.IExpressionsAccessor, System.Web.UI.IParserAccessor, System.Web.UI.IUrlResolutionService
    {
        public Control() { }
        protected System.Web.UI.Adapters.ControlAdapter Adapter { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string AppRelativeTemplateSourceDirectory { get { throw null; } [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]set { } }
        [System.ComponentModel.BindableAttribute(false)]
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public System.Web.UI.Control BindingContainer { get { throw null; } }
        protected bool ChildControlsCreated { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public virtual string ClientID { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.ClientIDMode.Inherit)]
        [System.Web.UI.ThemeableAttribute(false)]
        public virtual System.Web.UI.ClientIDMode ClientIDMode { get { throw null; } set { } }
        protected char ClientIDSeparator { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        protected internal virtual System.Web.HttpContext Context { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public virtual System.Web.UI.ControlCollection Controls { get { throw null; } }
        [System.ComponentModel.BindableAttribute(false)]
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public System.Web.UI.Control DataItemContainer { get { throw null; } }
        [System.ComponentModel.BindableAttribute(false)]
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public System.Web.UI.Control DataKeysContainer { get { throw null; } }
        protected internal bool DesignMode { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DefaultValueAttribute(true)]
        [System.Web.UI.ThemeableAttribute(false)]
        public virtual bool EnableTheming { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(true)]
        [System.Web.UI.ThemeableAttribute(false)]
        public virtual bool EnableViewState { get { throw null; } set { } }
        protected System.ComponentModel.EventHandlerList Events { get { throw null; } }
        protected bool HasChildViewState { get { throw null; } }
        [System.ComponentModel.MergablePropertyAttribute(false)]
        [System.ComponentModel.ParenthesizePropertyNameAttribute(true)]
        [System.Web.UI.FilterableAttribute(false)]
        [System.Web.UI.ThemeableAttribute(false)]
        public virtual string ID { get { throw null; } set { } }
        protected char IdSeparator { get { throw null; } }
        protected internal bool IsChildControlStateCleared { get { throw null; } }
        protected bool IsTrackingViewState { get { throw null; } }
        protected internal bool IsViewStateEnabled { get { throw null; } }
        protected bool LoadViewStateByID { get { throw null; } }
        [System.ComponentModel.BindableAttribute(false)]
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public virtual System.Web.UI.Control NamingContainer { get { throw null; } }
        [System.ComponentModel.BindableAttribute(false)]
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public virtual System.Web.UI.Page Page { get { throw null; } set { } }
        [System.ComponentModel.BindableAttribute(false)]
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public virtual System.Web.UI.Control Parent { get { throw null; } }
        [System.ComponentModel.BindableAttribute(false)]
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public virtual System.Version RenderingCompatibility { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.ComponentModel.ISite Site { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.Web.UI.FilterableAttribute(false)]
        public virtual string SkinID { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        System.Web.UI.ControlBuilder System.Web.UI.IControlBuilderAccessor.ControlBuilder { get { throw null; } }
        System.Collections.IDictionary System.Web.UI.IControlDesignerAccessor.UserData { get { throw null; } }
        System.Web.UI.DataBindingCollection System.Web.UI.IDataBindingsAccessor.DataBindings { get { throw null; } }
        bool System.Web.UI.IDataBindingsAccessor.HasDataBindings { get { throw null; } }
        System.Web.UI.ExpressionBindingCollection System.Web.UI.IExpressionsAccessor.Expressions { get { throw null; } }
        bool System.Web.UI.IExpressionsAccessor.HasExpressions { get { throw null; } }
        [System.ComponentModel.BindableAttribute(false)]
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public System.Web.UI.TemplateControl TemplateControl { get { throw null; } [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public virtual string TemplateSourceDirectory { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public virtual string UniqueID { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.ValidateRequestMode.Inherit)]
        public virtual System.Web.UI.ValidateRequestMode ValidateRequestMode { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        protected virtual System.Web.UI.StateBag ViewState { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        protected virtual bool ViewStateIgnoresCase { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.ViewStateMode.Inherit)]
        [System.Web.UI.ThemeableAttribute(false)]
        public virtual System.Web.UI.ViewStateMode ViewStateMode { get { throw null; } set { } }
        [System.ComponentModel.BindableAttribute(true)]
        [System.ComponentModel.DefaultValueAttribute(true)]
        public virtual bool Visible { get { throw null; } set { } }
        public event System.EventHandler DataBinding { add { } remove { } }
        public event System.EventHandler Disposed { add { } remove { } }
        public event System.EventHandler Init { add { } remove { } }
        public event System.EventHandler Load { add { } remove { } }
        public event System.EventHandler PreRender { add { } remove { } }
        public event System.EventHandler Unload { add { } remove { } }
        protected internal virtual void AddedControl(System.Web.UI.Control control, int index) { }
        protected virtual void AddParsedSubObject(object obj) { }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public virtual void ApplyStyleSheetSkin(System.Web.UI.Page page) { }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        protected void BeginRenderTracing(System.IO.TextWriter writer, object traceObject) { }
        protected void BuildProfileTree(string parentId, bool calcViewState) { }
        protected void ClearCachedClientID() { }
        protected void ClearChildControlState() { }
        protected void ClearChildState() { }
        protected void ClearChildViewState() { }
        protected void ClearEffectiveClientIDMode() { }
        protected internal virtual void CreateChildControls() { }
        protected virtual System.Web.UI.ControlCollection CreateControlCollection() { throw null; }
        public virtual void DataBind() { }
        protected virtual void DataBind(bool raiseOnDataBinding) { }
        protected virtual void DataBindChildren() { }
        public virtual void Dispose() { }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        protected void EndRenderTracing(System.IO.TextWriter writer, object traceObject) { }
        protected virtual void EnsureChildControls() { }
        protected void EnsureID() { }
        public virtual System.Web.UI.Control FindControl(string id) { throw null; }
        protected virtual System.Web.UI.Control FindControl(string id, int pathOffset) { throw null; }
        public virtual void Focus() { }
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, Unrestricted=true)]
        protected virtual System.Collections.IDictionary GetDesignModeState() { throw null; }
        public string GetRouteUrl(object routeParameters) { throw null; }
        public string GetRouteUrl(string routeName, object routeParameters) { throw null; }
        public string GetRouteUrl(string routeName, System.Web.Routing.RouteValueDictionary routeParameters) { throw null; }
        public string GetRouteUrl(System.Web.Routing.RouteValueDictionary routeParameters) { throw null; }
        public string GetUniqueIDRelativeTo(System.Web.UI.Control control) { throw null; }
        public virtual bool HasControls() { throw null; }
        protected bool HasEvents() { throw null; }
        protected bool IsLiteralContent() { throw null; }
        protected internal virtual void LoadControlState(object savedState) { }
        protected virtual void LoadViewState(object savedState) { }
        protected internal string MapPathSecure(string virtualPath) { throw null; }
        protected virtual bool OnBubbleEvent(object source, System.EventArgs args) { throw null; }
        protected virtual void OnDataBinding(System.EventArgs e) { }
        protected internal virtual void OnInit(System.EventArgs e) { }
        protected internal virtual void OnLoad(System.EventArgs e) { }
        protected internal virtual void OnPreRender(System.EventArgs e) { }
        protected internal virtual void OnUnload(System.EventArgs e) { }
        protected internal System.IO.Stream OpenFile(string path) { throw null; }
        protected void RaiseBubbleEvent(object source, System.EventArgs args) { }
        protected internal virtual void RemovedControl(System.Web.UI.Control control) { }
        protected internal virtual void Render(System.Web.UI.HtmlTextWriter writer) { }
        protected internal virtual void RenderChildren(System.Web.UI.HtmlTextWriter writer) { }
        public virtual void RenderControl(System.Web.UI.HtmlTextWriter writer) { }
        protected void RenderControl(System.Web.UI.HtmlTextWriter writer, System.Web.UI.Adapters.ControlAdapter adapter) { }
        protected virtual System.Web.UI.Adapters.ControlAdapter ResolveAdapter() { throw null; }
        public string ResolveClientUrl(string relativeUrl) { throw null; }
        public string ResolveUrl(string relativeUrl) { throw null; }
        protected internal virtual object SaveControlState() { throw null; }
        protected virtual object SaveViewState() { throw null; }
        protected virtual void SetDesignModeState(System.Collections.IDictionary data) { }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void SetRenderMethodDelegate(System.Web.UI.RenderMethod renderMethod) { }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public void SetTraceData(object traceDataKey, object traceDataValue) { }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public void SetTraceData(object tracedObject, object traceDataKey, object traceDataValue) { }
        System.Collections.IDictionary System.Web.UI.IControlDesignerAccessor.GetDesignModeState() { throw null; }
        void System.Web.UI.IControlDesignerAccessor.SetDesignModeState(System.Collections.IDictionary data) { }
        void System.Web.UI.IControlDesignerAccessor.SetOwnerControl(System.Web.UI.Control owner) { }
        void System.Web.UI.IParserAccessor.AddParsedSubObject(object obj) { }
        protected virtual void TrackViewState() { }
    }
    public partial class ControlBuilder
    {
        public static readonly string DesignerFilter;
        public ControlBuilder() { }
        public virtual System.Web.UI.ControlBuilder BindingContainerBuilder { get { throw null; } }
        public virtual System.Type BindingContainerType { get { throw null; } }
        public System.Collections.ICollection ComplexPropertyEntries { get { throw null; } }
        public System.Type ControlType { get { throw null; } }
        public System.Web.UI.IFilterResolutionService CurrentFilterResolutionService { get { throw null; } }
        public virtual System.Type DeclareType { get { throw null; } }
        protected bool FChildrenAsProperties { get { throw null; } }
        protected bool FIsNonParserAccessor { get { throw null; } }
        public virtual bool HasAspCode { get { throw null; } }
        public string ID { get { throw null; } set { } }
        protected bool InDesigner { get { throw null; } }
        protected bool InPageTheme { get { throw null; } }
        public virtual string ItemType { get { throw null; } }
        public bool Localize { get { throw null; } }
        public System.Type NamingContainerType { get { throw null; } }
        public string PageVirtualPath { get { throw null; } }
        protected internal System.Web.UI.TemplateParser Parser { get { throw null; } }
        public System.IServiceProvider ServiceProvider { get { throw null; } }
        public System.Collections.ArrayList SubBuilders { get { throw null; } }
        public string TagName { get { throw null; } }
        public System.Collections.ICollection TemplatePropertyEntries { get { throw null; } }
        public System.Web.UI.IThemeResolutionService ThemeResolutionService { get { throw null; } }
        public virtual bool AllowWhitespaceLiterals() { throw null; }
        public virtual void AppendLiteralString(string s) { }
        public virtual void AppendSubBuilder(System.Web.UI.ControlBuilder subBuilder) { }
        public virtual object BuildObject() { throw null; }
        public virtual void CloseControl() { }
        public static System.Web.UI.ControlBuilder CreateBuilderFromType(System.Web.UI.TemplateParser parser, System.Web.UI.ControlBuilder parentBuilder, System.Type type, string tagName, string id, System.Collections.IDictionary attribs, int line, string sourceFileName) { throw null; }
        public virtual System.Type GetChildControlType(string tagName, System.Collections.IDictionary attribs) { throw null; }
        public System.Web.UI.ObjectPersistData GetObjectPersistData() { throw null; }
        public string GetResourceKey() { throw null; }
        public virtual bool HasBody() { throw null; }
        public virtual bool HtmlDecodeLiterals() { throw null; }
        public virtual void Init(System.Web.UI.TemplateParser parser, System.Web.UI.ControlBuilder parentBuilder, System.Type type, string tagName, string id, System.Collections.IDictionary attribs) { }
        public virtual bool NeedsTagInnerText() { throw null; }
        public virtual void OnAppendToParentBuilder(System.Web.UI.ControlBuilder parentBuilder) { }
        public virtual void ProcessGeneratedCode(System.CodeDom.CodeCompileUnit codeCompileUnit, System.CodeDom.CodeTypeDeclaration baseType, System.CodeDom.CodeTypeDeclaration derivedType, System.CodeDom.CodeMemberMethod buildMethod, System.CodeDom.CodeMemberMethod dataBindingMethod) { }
        public void SetResourceKey(string resourceKey) { }
        public void SetServiceProvider(System.IServiceProvider serviceProvider) { }
        public virtual void SetTagInnerText(string text) { }
    }
    [System.AttributeUsageAttribute(System.AttributeTargets.Class)]
    public sealed partial class ControlBuilderAttribute : System.Attribute
    {
        public static readonly System.Web.UI.ControlBuilderAttribute Default;
        public ControlBuilderAttribute(System.Type builderType) { }
        public System.Type BuilderType { get { throw null; } }
        public override bool Equals(object obj) { throw null; }
        public override int GetHashCode() { throw null; }
        public override bool IsDefaultAttribute() { throw null; }
    }
    public sealed partial class ControlCachePolicy
    {
        internal ControlCachePolicy() { }
        public bool Cached { get { throw null; } set { } }
        public System.Web.Caching.CacheDependency Dependency { get { throw null; } set { } }
        public System.TimeSpan Duration { get { throw null; } set { } }
        public string ProviderName { get { throw null; } set { } }
        public bool SupportsCaching { get { throw null; } }
        public string VaryByControl { get { throw null; } set { } }
        public System.Web.HttpCacheVaryByParams VaryByParams { get { throw null; } }
        public void SetExpires(System.DateTime expirationTime) { }
        public void SetSlidingExpiration(bool useSlidingExpiration) { }
        public void SetVaryByCustom(string varyByCustom) { }
    }
    public partial class ControlCollection : System.Collections.ICollection, System.Collections.IEnumerable
    {
        public ControlCollection(System.Web.UI.Control owner) { }
        public virtual int Count { get { throw null; } }
        public bool IsReadOnly { get { throw null; } }
        public bool IsSynchronized { get { throw null; } }
        public virtual System.Web.UI.Control this[int index] { get { throw null; } }
        protected System.Web.UI.Control Owner { get { throw null; } }
        public object SyncRoot { get { throw null; } }
        public virtual void Add(System.Web.UI.Control child) { }
        public virtual void AddAt(int index, System.Web.UI.Control child) { }
        public virtual void Clear() { }
        public virtual bool Contains(System.Web.UI.Control c) { throw null; }
        public virtual void CopyTo(System.Array array, int index) { }
        public virtual System.Collections.IEnumerator GetEnumerator() { throw null; }
        public virtual int IndexOf(System.Web.UI.Control value) { throw null; }
        public virtual void Remove(System.Web.UI.Control value) { }
        public virtual void RemoveAt(int index) { }
    }
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public partial class ControlSkin
    {
        public ControlSkin(System.Type controlType, System.Web.UI.ControlSkinDelegate themeDelegate) { }
        public System.Type ControlType { get { throw null; } }
        public void ApplySkin(System.Web.UI.Control control) { }
    }
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public delegate System.Web.UI.Control ControlSkinDelegate(System.Web.UI.Control control);
    [System.AttributeUsageAttribute(System.AttributeTargets.Class)]
    public sealed partial class ControlValuePropertyAttribute : System.Attribute
    {
        public ControlValuePropertyAttribute(string name) { }
        public ControlValuePropertyAttribute(string name, object defaultValue) { }
        public ControlValuePropertyAttribute(string name, System.Type type, string defaultValue) { }
        public object DefaultValue { get { throw null; } }
        public string Name { get { throw null; } }
        public override bool Equals(object obj) { throw null; }
        public override int GetHashCode() { throw null; }
    }
    [System.AttributeUsageAttribute(System.AttributeTargets.Property)]
    public sealed partial class CssClassPropertyAttribute : System.Attribute
    {
        public CssClassPropertyAttribute() { }
    }
    public sealed partial class CssStyleCollection
    {
        internal CssStyleCollection() { }
        public int Count { get { throw null; } }
        public string this[string key] { get { throw null; } set { } }
        public string this[System.Web.UI.HtmlTextWriterStyle key] { get { throw null; } set { } }
        public System.Collections.ICollection Keys { get { throw null; } }
        public string Value { get { throw null; } set { } }
        public void Add(string key, string value) { }
        public void Add(System.Web.UI.HtmlTextWriterStyle key, string value) { }
        public void Clear() { }
        public void Remove(string key) { }
        public void Remove(System.Web.UI.HtmlTextWriterStyle key) { }
    }
    public sealed partial class DataBinder
    {
        public DataBinder() { }
        public static bool EnableCaching { get { throw null; } set { } }
        public static object Eval(object container, string expression) { throw null; }
        public static string Eval(object container, string expression, string format) { throw null; }
        public static object GetDataItem(object container) { throw null; }
        public static object GetDataItem(object container, out bool foundDataItem) { throw null; }
        public static object GetIndexedPropertyValue(object container, string expr) { throw null; }
        public static string GetIndexedPropertyValue(object container, string propName, string format) { throw null; }
        public static object GetPropertyValue(object container, string propName) { throw null; }
        public static string GetPropertyValue(object container, string propName, string format) { throw null; }
        public static bool IsBindableType(System.Type type) { throw null; }
    }
    public sealed partial class DataBinding
    {
        public DataBinding(string propertyName, System.Type propertyType, string expression) { }
        public string Expression { get { throw null; } set { } }
        public string PropertyName { get { throw null; } }
        public System.Type PropertyType { get { throw null; } }
        public override bool Equals(object obj) { throw null; }
        public override int GetHashCode() { throw null; }
    }
    public sealed partial class DataBindingCollection : System.Collections.ICollection, System.Collections.IEnumerable
    {
        public DataBindingCollection() { }
        public int Count { get { throw null; } }
        public bool IsReadOnly { get { throw null; } }
        public bool IsSynchronized { get { throw null; } }
        public System.Web.UI.DataBinding this[string propertyName] { get { throw null; } }
        public string[] RemovedBindings { get { throw null; } }
        public object SyncRoot { get { throw null; } }
        public event System.EventHandler Changed { add { } remove { } }
        public void Add(System.Web.UI.DataBinding binding) { }
        public void Clear() { }
        public bool Contains(string propertyName) { throw null; }
        public void CopyTo(System.Array array, int index) { }
        public System.Collections.IEnumerator GetEnumerator() { throw null; }
        public void Remove(string propertyName) { }
        public void Remove(string propertyName, bool addToRemovedList) { }
        public void Remove(System.Web.UI.DataBinding binding) { }
    }
    [System.AttributeUsageAttribute(System.AttributeTargets.Class)]
    public sealed partial class DataBindingHandlerAttribute : System.Attribute
    {
        public static readonly System.Web.UI.DataBindingHandlerAttribute Default;
        public DataBindingHandlerAttribute() { }
        public DataBindingHandlerAttribute(string typeName) { }
        public DataBindingHandlerAttribute(System.Type type) { }
        public string HandlerTypeName { get { throw null; } }
        public override bool Equals(object obj) { throw null; }
        public override int GetHashCode() { throw null; }
    }
    [System.ComponentModel.ToolboxItemAttribute(false)]
    public sealed partial class DataBoundLiteralControl : System.Web.UI.Control, System.Web.UI.ITextControl
    {
        public DataBoundLiteralControl(int staticLiteralsCount, int dataBoundLiteralCount) { }
        string System.Web.UI.ITextControl.Text { get { throw null; } set { } }
        public string Text { get { throw null; } }
        protected override System.Web.UI.ControlCollection CreateControlCollection() { throw null; }
        protected override void LoadViewState(object savedState) { }
        protected internal override void Render(System.Web.UI.HtmlTextWriter output) { }
        protected override object SaveViewState() { throw null; }
        public void SetDataBoundString(int index, string s) { }
        public void SetStaticString(int index, string s) { }
    }
    [System.AttributeUsageAttribute(System.AttributeTargets.Class)]
    public sealed partial class DataKeyPropertyAttribute : System.Attribute
    {
        public DataKeyPropertyAttribute(string name) { }
        public string Name { get { throw null; } }
        public override bool Equals(object obj) { throw null; }
        public override int GetHashCode() { throw null; }
    }
    public partial class DataSourceCacheDurationConverter : System.ComponentModel.Int32Converter
    {
        public DataSourceCacheDurationConverter() { }
        public override bool CanConvertFrom(System.ComponentModel.ITypeDescriptorContext context, System.Type sourceType) { throw null; }
        public override bool CanConvertTo(System.ComponentModel.ITypeDescriptorContext context, System.Type destinationType) { throw null; }
        public override object ConvertFrom(System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value) { throw null; }
        public override object ConvertTo(System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, System.Type destinationType) { throw null; }
        public override System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues(System.ComponentModel.ITypeDescriptorContext context) { throw null; }
        public override bool GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext context) { throw null; }
        public override bool GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext context) { throw null; }
    }
    public enum DataSourceCacheExpiry
    {
        Absolute = 0,
        Sliding = 1,
    }
    [System.FlagsAttribute]
    public enum DataSourceCapabilities
    {
        None = 0,
        Page = 2,
        RetrieveTotalRowCount = 4,
        Sort = 1,
    }
    [System.ComponentModel.BindableAttribute(false)]
    [System.ComponentModel.DesignerAttribute("System.Web.UI.Design.DataSourceDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.Web.UI.ControlBuilderAttribute(typeof(System.Web.UI.DataSourceControlBuilder))]
    [System.Web.UI.NonVisualControlAttribute]
    public abstract partial class DataSourceControl : System.Web.UI.Control, System.ComponentModel.IListSource, System.Web.UI.IDataSource
    {
        protected DataSourceControl() { }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override string ClientID { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override System.Web.UI.ClientIDMode ClientIDMode { get { throw null; } set { } }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override System.Web.UI.ControlCollection Controls { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override bool EnableTheming { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override string SkinID { get { throw null; } set { } }
        bool System.ComponentModel.IListSource.ContainsListCollection { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override bool Visible { get { throw null; } set { } }
        event System.EventHandler System.Web.UI.IDataSource.DataSourceChanged { add { } remove { } }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override void ApplyStyleSheetSkin(System.Web.UI.Page page) { }
        protected override System.Web.UI.ControlCollection CreateControlCollection() { throw null; }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override System.Web.UI.Control FindControl(string id) { throw null; }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override void Focus() { }
        protected abstract System.Web.UI.DataSourceView GetView(string viewName);
        protected virtual System.Collections.ICollection GetViewNames() { throw null; }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override bool HasControls() { throw null; }
        protected virtual void RaiseDataSourceChangedEvent(System.EventArgs e) { }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override void RenderControl(System.Web.UI.HtmlTextWriter writer) { }
        System.Collections.IList System.ComponentModel.IListSource.GetList() { throw null; }
        System.Web.UI.DataSourceView System.Web.UI.IDataSource.GetView(string viewName) { throw null; }
        System.Collections.ICollection System.Web.UI.IDataSource.GetViewNames() { throw null; }
    }
    public sealed partial class DataSourceControlBuilder : System.Web.UI.ControlBuilder
    {
        public DataSourceControlBuilder() { }
        public override bool AllowWhitespaceLiterals() { throw null; }
    }
    public enum DataSourceOperation
    {
        Delete = 0,
        Insert = 1,
        Select = 2,
        SelectCount = 4,
        Update = 3,
    }
    public sealed partial class DataSourceSelectArguments
    {
        public DataSourceSelectArguments() { }
        public DataSourceSelectArguments(int startRowIndex, int maximumRows) { }
        public DataSourceSelectArguments(string sortExpression) { }
        public DataSourceSelectArguments(string sortExpression, int startRowIndex, int maximumRows) { }
        public static System.Web.UI.DataSourceSelectArguments Empty { get { throw null; } }
        public int MaximumRows { get { throw null; } set { } }
        public bool RetrieveTotalRowCount { get { throw null; } set { } }
        public string SortExpression { get { throw null; } set { } }
        public int StartRowIndex { get { throw null; } set { } }
        public int TotalRowCount { get { throw null; } set { } }
        public void AddSupportedCapabilities(System.Web.UI.DataSourceCapabilities capabilities) { }
        public override bool Equals(object obj) { throw null; }
        public override int GetHashCode() { throw null; }
        public void RaiseUnsupportedCapabilitiesError(System.Web.UI.DataSourceView view) { }
    }
    public abstract partial class DataSourceView
    {
        protected DataSourceView(System.Web.UI.IDataSource owner, string viewName) { }
        public virtual bool CanDelete { get { throw null; } }
        public virtual bool CanInsert { get { throw null; } }
        public virtual bool CanPage { get { throw null; } }
        public virtual bool CanRetrieveTotalRowCount { get { throw null; } }
        public virtual bool CanSort { get { throw null; } }
        public virtual bool CanUpdate { get { throw null; } }
        protected System.ComponentModel.EventHandlerList Events { get { throw null; } }
        public string Name { get { throw null; } }
        public event System.EventHandler DataSourceViewChanged { add { } remove { } }
        public virtual bool CanExecute(string commandName) { throw null; }
        public virtual void Delete(System.Collections.IDictionary keys, System.Collections.IDictionary oldValues, System.Web.UI.DataSourceViewOperationCallback callback) { }
        protected virtual int ExecuteCommand(string commandName, System.Collections.IDictionary keys, System.Collections.IDictionary values) { throw null; }
        public virtual void ExecuteCommand(string commandName, System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Web.UI.DataSourceViewOperationCallback callback) { }
        protected virtual int ExecuteDelete(System.Collections.IDictionary keys, System.Collections.IDictionary oldValues) { throw null; }
        protected virtual int ExecuteInsert(System.Collections.IDictionary values) { throw null; }
        protected internal abstract System.Collections.IEnumerable ExecuteSelect(System.Web.UI.DataSourceSelectArguments arguments);
        protected virtual int ExecuteUpdate(System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues) { throw null; }
        public virtual void Insert(System.Collections.IDictionary values, System.Web.UI.DataSourceViewOperationCallback callback) { }
        protected virtual void OnDataSourceViewChanged(System.EventArgs e) { }
        protected internal virtual void RaiseUnsupportedCapabilityError(System.Web.UI.DataSourceCapabilities capability) { }
        public virtual void Select(System.Web.UI.DataSourceSelectArguments arguments, System.Web.UI.DataSourceViewSelectCallback callback) { }
        public virtual void Update(System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues, System.Web.UI.DataSourceViewOperationCallback callback) { }
    }
    public delegate bool DataSourceViewOperationCallback(int affectedRecords, System.Exception ex);
    public delegate void DataSourceViewSelectCallback(System.Collections.IEnumerable data);
    [System.ComponentModel.ToolboxItemAttribute(false)]
    [System.Web.UI.DataBindingHandlerAttribute("System.Web.UI.Design.TextDataBindingHandler, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    public sealed partial class DesignerDataBoundLiteralControl : System.Web.UI.Control
    {
        public DesignerDataBoundLiteralControl() { }
        public string Text { get { throw null; } set { } }
        protected override System.Web.UI.ControlCollection CreateControlCollection() { throw null; }
        protected override void LoadViewState(object savedState) { }
        protected internal override void Render(System.Web.UI.HtmlTextWriter output) { }
        protected override object SaveViewState() { throw null; }
    }
    public sealed partial class DesignTimeParseData
    {
        public DesignTimeParseData(System.ComponentModel.Design.IDesignerHost designerHost, string parseText) { }
        public DesignTimeParseData(System.ComponentModel.Design.IDesignerHost designerHost, string parseText, string filter) { }
        public System.EventHandler DataBindingHandler { get { throw null; } set { } }
        public System.ComponentModel.Design.IDesignerHost DesignerHost { get { throw null; } }
        public string DocumentUrl { get { throw null; } set { } }
        public string Filter { get { throw null; } }
        public string ParseText { get { throw null; } }
        public bool ShouldApplyTheme { get { throw null; } set { } }
        public System.Collections.ICollection UserControlRegisterEntries { get { throw null; } }
    }
    public static partial class DesignTimeTemplateParser
    {
        public static System.Web.UI.Control ParseControl(System.Web.UI.DesignTimeParseData data) { throw null; }
        public static System.Web.UI.Control[] ParseControls(System.Web.UI.DesignTimeParseData data) { throw null; }
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, Unrestricted=true)]
        public static System.Web.UI.ITemplate ParseTemplate(System.Web.UI.DesignTimeParseData data) { throw null; }
        public static System.Web.UI.ControlBuilder ParseTheme(System.ComponentModel.Design.IDesignerHost host, string theme, string themePath) { throw null; }
    }
    public partial class EmptyControlCollection : System.Web.UI.ControlCollection
    {
        public EmptyControlCollection(System.Web.UI.Control owner) : base (default(System.Web.UI.Control)) { }
        public override void Add(System.Web.UI.Control child) { }
        public override void AddAt(int index, System.Web.UI.Control child) { }
    }
    public partial class EventEntry
    {
        public EventEntry() { }
        public string HandlerMethodName { get { throw null; } set { } }
        public System.Type HandlerType { get { throw null; } set { } }
        public string Name { get { throw null; } set { } }
    }
    public sealed partial class ExpressionBinding
    {
        public ExpressionBinding(string propertyName, System.Type propertyType, string expressionPrefix, string expression) { }
        public string Expression { get { throw null; } set { } }
        public string ExpressionPrefix { get { throw null; } set { } }
        public bool Generated { get { throw null; } }
        public object ParsedExpressionData { get { throw null; } }
        public string PropertyName { get { throw null; } }
        public System.Type PropertyType { get { throw null; } }
        public override bool Equals(object obj) { throw null; }
        public override int GetHashCode() { throw null; }
    }
    public sealed partial class ExpressionBindingCollection : System.Collections.ICollection, System.Collections.IEnumerable
    {
        public ExpressionBindingCollection() { }
        public int Count { get { throw null; } }
        public bool IsReadOnly { get { throw null; } }
        public bool IsSynchronized { get { throw null; } }
        public System.Web.UI.ExpressionBinding this[string propertyName] { get { throw null; } }
        public System.Collections.ICollection RemovedBindings { get { throw null; } }
        public object SyncRoot { get { throw null; } }
        public event System.EventHandler Changed { add { } remove { } }
        public void Add(System.Web.UI.ExpressionBinding binding) { }
        public void Clear() { }
        public bool Contains(string propName) { throw null; }
        public void CopyTo(System.Array array, int index) { }
        public void CopyTo(System.Web.UI.ExpressionBinding[] array, int index) { }
        public System.Collections.IEnumerator GetEnumerator() { throw null; }
        public void Remove(string propertyName) { }
        public void Remove(string propertyName, bool addToRemovedList) { }
        public void Remove(System.Web.UI.ExpressionBinding binding) { }
    }
    public delegate System.Collections.Specialized.IOrderedDictionary ExtractTemplateValuesMethod(System.Web.UI.Control control);
    [System.AttributeUsageAttribute(System.AttributeTargets.Class)]
    public sealed partial class FileLevelControlBuilderAttribute : System.Attribute
    {
        public static readonly System.Web.UI.FileLevelControlBuilderAttribute Default;
        public FileLevelControlBuilderAttribute(System.Type builderType) { }
        public System.Type BuilderType { get { throw null; } }
        public override bool Equals(object obj) { throw null; }
        public override int GetHashCode() { throw null; }
        public override bool IsDefaultAttribute() { throw null; }
    }
    public partial class FileLevelMasterPageControlBuilder : System.Web.UI.FileLevelPageControlBuilder
    {
        public FileLevelMasterPageControlBuilder() { }
    }
    public partial class FileLevelPageControlBuilder : System.Web.UI.RootBuilder
    {
        public FileLevelPageControlBuilder() { }
        public override void AppendLiteralString(string text) { }
        public override void AppendSubBuilder(System.Web.UI.ControlBuilder subBuilder) { }
    }
    public partial class FileLevelUserControlBuilder : System.Web.UI.RootBuilder
    {
        public FileLevelUserControlBuilder() { }
    }
    [System.AttributeUsageAttribute(System.AttributeTargets.Class | System.AttributeTargets.Property)]
    public sealed partial class FilterableAttribute : System.Attribute
    {
        public static readonly System.Web.UI.FilterableAttribute Default;
        public static readonly System.Web.UI.FilterableAttribute No;
        public static readonly System.Web.UI.FilterableAttribute Yes;
        public FilterableAttribute(bool filterable) { }
        public bool Filterable { get { throw null; } }
        public override bool Equals(object obj) { throw null; }
        public override int GetHashCode() { throw null; }
        public override bool IsDefaultAttribute() { throw null; }
        public static bool IsObjectFilterable(object instance) { throw null; }
        public static bool IsPropertyFilterable(System.ComponentModel.PropertyDescriptor propertyDescriptor) { throw null; }
        public static bool IsTypeFilterable(System.Type type) { throw null; }
    }
    public partial class HiddenFieldPageStatePersister : System.Web.UI.PageStatePersister
    {
        public HiddenFieldPageStatePersister(System.Web.UI.Page page) : base (default(System.Web.UI.Page)) { }
        public override void Load() { }
        public override void Save() { }
    }
    [System.ComponentModel.BindableAttribute(false)]
    [System.ComponentModel.DesignerAttribute("System.Web.UI.Design.HierarchicalDataSourceDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.Web.UI.ControlBuilderAttribute(typeof(System.Web.UI.DataSourceControlBuilder))]
    [System.Web.UI.NonVisualControlAttribute]
    public abstract partial class HierarchicalDataSourceControl : System.Web.UI.Control, System.Web.UI.IHierarchicalDataSource
    {
        protected HierarchicalDataSourceControl() { }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override string ClientID { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override System.Web.UI.ClientIDMode ClientIDMode { get { throw null; } set { } }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override System.Web.UI.ControlCollection Controls { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override bool EnableTheming { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override string SkinID { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override bool Visible { get { throw null; } set { } }
        event System.EventHandler System.Web.UI.IHierarchicalDataSource.DataSourceChanged { add { } remove { } }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override void ApplyStyleSheetSkin(System.Web.UI.Page page) { }
        protected override System.Web.UI.ControlCollection CreateControlCollection() { throw null; }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override System.Web.UI.Control FindControl(string id) { throw null; }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override void Focus() { }
        protected abstract System.Web.UI.HierarchicalDataSourceView GetHierarchicalView(string viewPath);
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override bool HasControls() { throw null; }
        protected virtual void OnDataSourceChanged(System.EventArgs e) { }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override void RenderControl(System.Web.UI.HtmlTextWriter writer) { }
        System.Web.UI.HierarchicalDataSourceView System.Web.UI.IHierarchicalDataSource.GetHierarchicalView(string viewPath) { throw null; }
    }
    public abstract partial class HierarchicalDataSourceView
    {
        protected HierarchicalDataSourceView() { }
        public abstract System.Web.UI.IHierarchicalEnumerable Select();
    }
    public partial class Html32TextWriter : System.Web.UI.HtmlTextWriter
    {
        public Html32TextWriter(System.IO.TextWriter writer) : base (default(System.IO.TextWriter)) { }
        public Html32TextWriter(System.IO.TextWriter writer, string tabString) : base (default(System.IO.TextWriter)) { }
        protected System.Collections.Stack FontStack { get { throw null; } }
        public bool ShouldPerformDivTableSubstitution { get { throw null; } set { } }
        public bool SupportsBold { get { throw null; } set { } }
        public bool SupportsItalic { get { throw null; } set { } }
        protected override string GetTagName(System.Web.UI.HtmlTextWriterTag tagKey) { throw null; }
        protected override bool OnStyleAttributeRender(string name, string value, System.Web.UI.HtmlTextWriterStyle key) { throw null; }
        protected override bool OnTagRender(string name, System.Web.UI.HtmlTextWriterTag key) { throw null; }
        protected override string RenderAfterContent() { throw null; }
        protected override string RenderAfterTag() { throw null; }
        protected override string RenderBeforeContent() { throw null; }
        protected override string RenderBeforeTag() { throw null; }
        public override void RenderBeginTag(System.Web.UI.HtmlTextWriterTag tagKey) { }
        public override void RenderEndTag() { }
    }
    public partial class HtmlTextWriter : System.IO.TextWriter
    {
        public const string DefaultTabString = "\t";
        public const char DoubleQuoteChar = '"';
        public const string EndTagLeftChars = "</";
        public const char EqualsChar = '=';
        public const string EqualsDoubleQuoteString = "=\"";
        public const string SelfClosingChars = " /";
        public const string SelfClosingTagEnd = " />";
        public const char SemicolonChar = ';';
        public const char SingleQuoteChar = '\'';
        public const char SlashChar = '/';
        public const char SpaceChar = ' ';
        public const char StyleEqualsChar = ':';
        public const char TagLeftChar = '<';
        public const char TagRightChar = '>';
        public HtmlTextWriter(System.IO.TextWriter writer) { }
        public HtmlTextWriter(System.IO.TextWriter writer, string tabString) { }
        public override System.Text.Encoding Encoding { get { throw null; } }
        public int Indent { get { throw null; } set { } }
        public System.IO.TextWriter InnerWriter { get { throw null; } set { } }
        public override string NewLine { get { throw null; } set { } }
        protected System.Web.UI.HtmlTextWriterTag TagKey { get { throw null; } set { } }
        protected string TagName { get { throw null; } set { } }
        public virtual void AddAttribute(string name, string value) { }
        public virtual void AddAttribute(string name, string value, bool fEndode) { }
        protected virtual void AddAttribute(string name, string value, System.Web.UI.HtmlTextWriterAttribute key) { }
        public virtual void AddAttribute(System.Web.UI.HtmlTextWriterAttribute key, string value) { }
        public virtual void AddAttribute(System.Web.UI.HtmlTextWriterAttribute key, string value, bool fEncode) { }
        public virtual void AddStyleAttribute(string name, string value) { }
        protected virtual void AddStyleAttribute(string name, string value, System.Web.UI.HtmlTextWriterStyle key) { }
        public virtual void AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle key, string value) { }
        public virtual void BeginRender() { }
        public override void Close() { }
        protected string EncodeAttributeValue(string value, bool fEncode) { throw null; }
        protected virtual string EncodeAttributeValue(System.Web.UI.HtmlTextWriterAttribute attrKey, string value) { throw null; }
        protected string EncodeUrl(string url) { throw null; }
        public virtual void EndRender() { }
        public virtual void EnterStyle(System.Web.UI.WebControls.Style style) { }
        public virtual void EnterStyle(System.Web.UI.WebControls.Style style, System.Web.UI.HtmlTextWriterTag tag) { }
        public virtual void ExitStyle(System.Web.UI.WebControls.Style style) { }
        public virtual void ExitStyle(System.Web.UI.WebControls.Style style, System.Web.UI.HtmlTextWriterTag tag) { }
        protected virtual void FilterAttributes() { }
        public override void Flush() { }
        protected System.Web.UI.HtmlTextWriterAttribute GetAttributeKey(string attrName) { throw null; }
        protected string GetAttributeName(System.Web.UI.HtmlTextWriterAttribute attrKey) { throw null; }
        protected System.Web.UI.HtmlTextWriterStyle GetStyleKey(string styleName) { throw null; }
        protected string GetStyleName(System.Web.UI.HtmlTextWriterStyle styleKey) { throw null; }
        protected virtual System.Web.UI.HtmlTextWriterTag GetTagKey(string tagName) { throw null; }
        protected virtual string GetTagName(System.Web.UI.HtmlTextWriterTag tagKey) { throw null; }
        protected bool IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute key) { throw null; }
        protected bool IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute key, out string value) { throw null; }
        protected bool IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle key) { throw null; }
        protected bool IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle key, out string value) { throw null; }
        public virtual bool IsValidFormAttribute(string attribute) { throw null; }
        protected virtual bool OnAttributeRender(string name, string value, System.Web.UI.HtmlTextWriterAttribute key) { throw null; }
        protected virtual bool OnStyleAttributeRender(string name, string value, System.Web.UI.HtmlTextWriterStyle key) { throw null; }
        protected virtual bool OnTagRender(string name, System.Web.UI.HtmlTextWriterTag key) { throw null; }
        protected virtual void OutputTabs() { }
        protected string PopEndTag() { throw null; }
        protected void PushEndTag(string endTag) { }
        protected static void RegisterAttribute(string name, System.Web.UI.HtmlTextWriterAttribute key) { }
        protected static void RegisterStyle(string name, System.Web.UI.HtmlTextWriterStyle key) { }
        protected static void RegisterTag(string name, System.Web.UI.HtmlTextWriterTag key) { }
        protected virtual string RenderAfterContent() { throw null; }
        protected virtual string RenderAfterTag() { throw null; }
        protected virtual string RenderBeforeContent() { throw null; }
        protected virtual string RenderBeforeTag() { throw null; }
        public virtual void RenderBeginTag(string tagName) { }
        public virtual void RenderBeginTag(System.Web.UI.HtmlTextWriterTag tagKey) { }
        public virtual void RenderEndTag() { }
        public override void Write(bool value) { }
        public override void Write(char value) { }
        public override void Write(char[] buffer) { }
        public override void Write(char[] buffer, int index, int count) { }
        public override void Write(double value) { }
        public override void Write(int value) { }
        public override void Write(long value) { }
        public override void Write(object value) { }
        public override void Write(float value) { }
        public override void Write(string s) { }
        public override void Write(string format, object arg0) { }
        public override void Write(string format, object arg0, object arg1) { }
        public override void Write(string format, params object[] arg) { }
        public virtual void WriteAttribute(string name, string value) { }
        public virtual void WriteAttribute(string name, string value, bool fEncode) { }
        public virtual void WriteBeginTag(string tagName) { }
        public virtual void WriteBreak() { }
        public virtual void WriteEncodedText(string text) { }
        public virtual void WriteEncodedUrl(string url) { }
        public virtual void WriteEncodedUrlParameter(string urlText) { }
        public virtual void WriteEndTag(string tagName) { }
        public virtual void WriteFullBeginTag(string tagName) { }
        public override void WriteLine() { }
        public override void WriteLine(bool value) { }
        public override void WriteLine(char value) { }
        public override void WriteLine(char[] buffer) { }
        public override void WriteLine(char[] buffer, int index, int count) { }
        public override void WriteLine(double value) { }
        public override void WriteLine(int value) { }
        public override void WriteLine(long value) { }
        public override void WriteLine(object value) { }
        public override void WriteLine(float value) { }
        public override void WriteLine(string s) { }
        public override void WriteLine(string format, object arg0) { }
        public override void WriteLine(string format, object arg0, object arg1) { }
        public override void WriteLine(string format, params object[] arg) { }
        [System.CLSCompliantAttribute(false)]
        public override void WriteLine(uint value) { }
        public void WriteLineNoTabs(string s) { }
        public virtual void WriteStyleAttribute(string name, string value) { }
        public virtual void WriteStyleAttribute(string name, string value, bool fEncode) { }
        protected void WriteUrlEncodedString(string text, bool argument) { }
    }
    public enum HtmlTextWriterAttribute
    {
        Abbr = 40,
        Accesskey = 0,
        Align = 1,
        Alt = 2,
        AutoComplete = 41,
        Axis = 42,
        Background = 3,
        Bgcolor = 4,
        Border = 5,
        Bordercolor = 6,
        Cellpadding = 7,
        Cellspacing = 8,
        Checked = 9,
        Class = 10,
        Cols = 11,
        Colspan = 12,
        Content = 43,
        Coords = 44,
        DesignerRegion = 45,
        Dir = 46,
        Disabled = 13,
        For = 14,
        Headers = 47,
        Height = 15,
        Href = 16,
        Id = 17,
        Longdesc = 48,
        Maxlength = 18,
        Multiple = 19,
        Name = 20,
        Nowrap = 21,
        Onchange = 22,
        Onclick = 23,
        ReadOnly = 24,
        Rel = 49,
        Rows = 25,
        Rowspan = 26,
        Rules = 27,
        Scope = 50,
        Selected = 28,
        Shape = 51,
        Size = 29,
        Src = 30,
        Style = 31,
        Tabindex = 32,
        Target = 33,
        Title = 34,
        Type = 35,
        Usemap = 52,
        Valign = 36,
        Value = 37,
        VCardName = 53,
        Width = 38,
        Wrap = 39,
    }
    public enum HtmlTextWriterStyle
    {
        BackgroundColor = 0,
        BackgroundImage = 1,
        BorderCollapse = 2,
        BorderColor = 3,
        BorderStyle = 4,
        BorderWidth = 5,
        Color = 6,
        Cursor = 16,
        Direction = 17,
        Display = 18,
        Filter = 19,
        FontFamily = 7,
        FontSize = 8,
        FontStyle = 9,
        FontVariant = 20,
        FontWeight = 10,
        Height = 11,
        Left = 21,
        ListStyleImage = 14,
        ListStyleType = 15,
        Margin = 22,
        MarginBottom = 23,
        MarginLeft = 24,
        MarginRight = 25,
        MarginTop = 26,
        Overflow = 27,
        OverflowX = 28,
        OverflowY = 29,
        Padding = 30,
        PaddingBottom = 31,
        PaddingLeft = 32,
        PaddingRight = 33,
        PaddingTop = 34,
        Position = 35,
        TextAlign = 36,
        TextDecoration = 12,
        TextOverflow = 38,
        Top = 39,
        VerticalAlign = 37,
        Visibility = 40,
        WhiteSpace = 41,
        Width = 13,
        ZIndex = 42,
    }
    public enum HtmlTextWriterTag
    {
        A = 1,
        Acronym = 2,
        Address = 3,
        Area = 4,
        B = 5,
        Base = 6,
        Basefont = 7,
        Bdo = 8,
        Bgsound = 9,
        Big = 10,
        Blockquote = 11,
        Body = 12,
        Br = 13,
        Button = 14,
        Caption = 15,
        Center = 16,
        Cite = 17,
        Code = 18,
        Col = 19,
        Colgroup = 20,
        Dd = 21,
        Del = 22,
        Dfn = 23,
        Dir = 24,
        Div = 25,
        Dl = 26,
        Dt = 27,
        Em = 28,
        Embed = 29,
        Fieldset = 30,
        Font = 31,
        Form = 32,
        Frame = 33,
        Frameset = 34,
        H1 = 35,
        H2 = 36,
        H3 = 37,
        H4 = 38,
        H5 = 39,
        H6 = 40,
        Head = 41,
        Hr = 42,
        Html = 43,
        I = 44,
        Iframe = 45,
        Img = 46,
        Input = 47,
        Ins = 48,
        Isindex = 49,
        Kbd = 50,
        Label = 51,
        Legend = 52,
        Li = 53,
        Link = 54,
        Map = 55,
        Marquee = 56,
        Menu = 57,
        Meta = 58,
        Nobr = 59,
        Noframes = 60,
        Noscript = 61,
        Object = 62,
        Ol = 63,
        Option = 64,
        P = 65,
        Param = 66,
        Pre = 67,
        Q = 68,
        Rt = 69,
        Ruby = 70,
        S = 71,
        Samp = 72,
        Script = 73,
        Select = 74,
        Small = 75,
        Span = 76,
        Strike = 77,
        Strong = 78,
        Style = 79,
        Sub = 80,
        Sup = 81,
        Table = 82,
        Tbody = 83,
        Td = 84,
        Textarea = 85,
        Tfoot = 86,
        Th = 87,
        Thead = 88,
        Title = 89,
        Tr = 90,
        Tt = 91,
        U = 92,
        Ul = 93,
        Unknown = 0,
        Var = 94,
        Wbr = 95,
        Xml = 96,
    }
    public partial interface IAttributeAccessor
    {
        string GetAttribute(string key);
        void SetAttribute(string key, string value);
    }
    public partial interface IAutoFieldGenerator
    {
        System.Collections.ICollection GenerateFields(System.Web.UI.Control control);
    }
    public partial interface IBindableControl
    {
        void ExtractValues(System.Collections.Specialized.IOrderedDictionary dictionary);
    }
    public partial interface IBindableTemplate : System.Web.UI.ITemplate
    {
        System.Collections.Specialized.IOrderedDictionary ExtractValues(System.Web.UI.Control container);
    }
    public partial interface ICallbackEventHandler
    {
        string GetCallbackResult();
        void RaiseCallbackEvent(string eventArgument);
    }
    public partial interface ICheckBoxControl
    {
        bool Checked { get; set; }
        event System.EventHandler CheckedChanged;
    }
    public partial interface ICodeBlockTypeAccessor
    {
        System.Web.UI.CodeBlockType BlockType { get; }
    }
    public partial interface IControlBuilderAccessor
    {
        System.Web.UI.ControlBuilder ControlBuilder { get; }
    }
    public partial interface IControlDesignerAccessor
    {
        System.Collections.IDictionary UserData { get; }
        System.Collections.IDictionary GetDesignModeState();
        void SetDesignModeState(System.Collections.IDictionary data);
        void SetOwnerControl(System.Web.UI.Control owner);
    }
    public partial interface IDataBindingsAccessor
    {
        System.Web.UI.DataBindingCollection DataBindings { get; }
        bool HasDataBindings { get; }
    }
    public partial interface IDataItemContainer : System.Web.UI.INamingContainer
    {
        object DataItem { get; }
        int DataItemIndex { get; }
        int DisplayIndex { get; }
    }
    public partial interface IDataKeysControl
    {
        string[] ClientIDRowSuffix { get; }
        System.Web.UI.WebControls.DataKeyArray ClientIDRowSuffixDataKeys { get; }
    }
    public partial interface IDataSource
    {
        event System.EventHandler DataSourceChanged;
        System.Web.UI.DataSourceView GetView(string viewName);
        System.Collections.ICollection GetViewNames();
    }
    public partial interface IDataSourceViewSchemaAccessor
    {
        object DataSourceViewSchema { get; set; }
    }
    [System.AttributeUsageAttribute(System.AttributeTargets.Property)]
    public sealed partial class IDReferencePropertyAttribute : System.Attribute
    {
        public IDReferencePropertyAttribute() { }
        public IDReferencePropertyAttribute(System.Type referencedControlType) { }
        public System.Type ReferencedControlType { get { throw null; } }
        public override bool Equals(object obj) { throw null; }
        public override int GetHashCode() { throw null; }
    }
    public partial interface IEditableTextControl : System.Web.UI.ITextControl
    {
        event System.EventHandler TextChanged;
    }
    public partial interface IExpressionsAccessor
    {
        System.Web.UI.ExpressionBindingCollection Expressions { get; }
        bool HasExpressions { get; }
    }
    public partial interface IFilterResolutionService
    {
        int CompareFilters(string filter1, string filter2);
        bool EvaluateFilter(string filterName);
    }
    public partial interface IHierarchicalDataSource
    {
        event System.EventHandler DataSourceChanged;
        System.Web.UI.HierarchicalDataSourceView GetHierarchicalView(string viewPath);
    }
    public partial interface IHierarchicalEnumerable : System.Collections.IEnumerable
    {
        System.Web.UI.IHierarchyData GetHierarchyData(object enumeratedItem);
    }
    public partial interface IHierarchyData
    {
        bool HasChildren { get; }
        object Item { get; }
        string Path { get; }
        string Type { get; }
        System.Web.UI.IHierarchicalEnumerable GetChildren();
        System.Web.UI.IHierarchyData GetParent();
    }
    public sealed partial class ImageClickEventArgs : System.EventArgs
    {
        public int X;
        public double XRaw;
        public int Y;
        public double YRaw;
        public ImageClickEventArgs(int x, int y) { }
        public ImageClickEventArgs(int x, int y, double xRaw, double yRaw) { }
    }
    public delegate void ImageClickEventHandler(object sender, System.Web.UI.ImageClickEventArgs e);
    public partial interface INamingContainer
    {
    }
    public partial interface INavigateUIData
    {
        string Description { get; }
        string Name { get; }
        string NavigateUrl { get; }
        string Value { get; }
    }
    [System.SerializableAttribute]
    public sealed partial class IndexedString
    {
        public IndexedString(string s) { }
        public string Value { get { throw null; } }
    }
    public partial interface IParserAccessor
    {
        void AddParsedSubObject(object obj);
    }
    public partial interface IPostBackDataHandler
    {
        bool LoadPostData(string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);
        void RaisePostDataChangedEvent();
    }
    public partial interface IPostBackEventHandler
    {
        void RaisePostBackEvent(string eventArgument);
    }
    public partial interface IResourceUrlGenerator
    {
        string GetResourceUrl(System.Type type, string resourceName);
    }
    public partial interface IStateFormatter
    {
        object Deserialize(string serializedState);
        string Serialize(object state);
    }
    public partial interface IStateManager
    {
        bool IsTrackingViewState { get; }
        void LoadViewState(object state);
        object SaveViewState();
        void TrackViewState();
    }
    public partial interface IStyleSheet
    {
        void CreateStyleRule(System.Web.UI.WebControls.Style style, System.Web.UI.IUrlResolutionService urlResolver, string selector);
        void RegisterStyle(System.Web.UI.WebControls.Style style, System.Web.UI.IUrlResolutionService urlResolver);
    }
    public partial interface ITemplate
    {
        void InstantiateIn(System.Web.UI.Control container);
    }
    public partial interface ITextControl
    {
        string Text { get; set; }
    }
    public partial interface IThemeResolutionService
    {
        System.Web.UI.ThemeProvider[] GetAllThemeProviders();
        System.Web.UI.ThemeProvider GetStylesheetThemeProvider();
        System.Web.UI.ThemeProvider GetThemeProvider();
    }
    public partial interface IUrlResolutionService
    {
        string ResolveClientUrl(string relativeUrl);
    }
    public partial interface IUserControlDesignerAccessor
    {
        string InnerText { get; set; }
        string TagName { get; set; }
    }
    public partial interface IUserControlTypeResolutionService
    {
        System.Type GetType(string tagPrefix, string tagName);
    }
    public partial interface IValidator
    {
        string ErrorMessage { get; set; }
        bool IsValid { get; set; }
        void Validate();
    }
    public static partial class ListSourceHelper
    {
        public static bool ContainsListCollection(System.Web.UI.IDataSource dataSource) { throw null; }
        public static System.Collections.IList GetList(System.Web.UI.IDataSource dataSource) { throw null; }
    }
    [System.ComponentModel.ToolboxItemAttribute(false)]
    public partial class LiteralControl : System.Web.UI.Control, System.Web.UI.ITextControl
    {
        public LiteralControl() { }
        public LiteralControl(string text) { }
        public virtual string Text { get { throw null; } set { } }
        protected override System.Web.UI.ControlCollection CreateControlCollection() { throw null; }
        protected internal override void Render(System.Web.UI.HtmlTextWriter output) { }
    }
    public sealed partial class LosFormatter
    {
        public LosFormatter() { }
        public LosFormatter(bool enableMac, byte[] macKeyModifier) { }
        public LosFormatter(bool enableMac, string macKeyModifier) { }
        public object Deserialize(System.IO.Stream stream) { throw null; }
        public object Deserialize(System.IO.TextReader input) { throw null; }
        public object Deserialize(string input) { throw null; }
        public void Serialize(System.IO.Stream stream, object value) { }
        public void Serialize(System.IO.TextWriter output, object value) { }
    }
    [System.ComponentModel.DesignerAttribute("Microsoft.VisualStudio.Web.WebForms.MasterPageWebFormDesigner, Microsoft.VisualStudio.Web, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.ComponentModel.Design.IRootDesigner))]
    [System.Web.UI.ControlBuilderAttribute(typeof(System.Web.UI.MasterPageControlBuilder))]
    [System.Web.UI.ParseChildrenAttribute(false)]
    public partial class MasterPage : System.Web.UI.UserControl
    {
        public MasterPage() { }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        protected internal System.Collections.IList ContentPlaceHolders { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        protected internal System.Collections.IDictionary ContentTemplates { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public System.Web.UI.MasterPage Master { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute("")]
        public string MasterPageFile { get { throw null; } set { } }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        protected internal void AddContentTemplate(string templateName, System.Web.UI.ITemplate template) { }
        public void InstantiateInContentPlaceHolder(System.Web.UI.Control contentPlaceHolder, System.Web.UI.ITemplate template) { }
    }
    public partial class MasterPageControlBuilder : System.Web.UI.UserControlControlBuilder
    {
        public MasterPageControlBuilder() { }
    }
    [System.AttributeUsageAttribute(System.AttributeTargets.Class)]
    public sealed partial class NonVisualControlAttribute : System.Attribute
    {
        public static readonly System.Web.UI.NonVisualControlAttribute Default;
        public static readonly System.Web.UI.NonVisualControlAttribute NonVisual;
        public static readonly System.Web.UI.NonVisualControlAttribute Visual;
        public NonVisualControlAttribute() { }
        public NonVisualControlAttribute(bool nonVisual) { }
        public bool IsNonVisual { get { throw null; } }
        public override bool Equals(object obj) { throw null; }
        public override int GetHashCode() { throw null; }
        public override bool IsDefaultAttribute() { throw null; }
    }
    [System.ObsoleteAttribute("The recommended alternative is System.Convert and String.Format. http://go.microsoft.com/fwlink/?linkid=14202")]
    public sealed partial class ObjectConverter
    {
        public ObjectConverter() { }
        public static object ConvertValue(object value, System.Type toType, string formatString) { throw null; }
    }
    public partial class ObjectPersistData
    {
        public ObjectPersistData(System.Web.UI.ControlBuilder builder, System.Collections.IDictionary builtObjects) { }
        public System.Collections.ICollection AllPropertyEntries { get { throw null; } }
        public System.Collections.IDictionary BuiltObjects { get { throw null; } }
        public System.Collections.ICollection CollectionItems { get { throw null; } }
        public System.Collections.ICollection EventEntries { get { throw null; } }
        public bool IsCollection { get { throw null; } }
        public bool Localize { get { throw null; } }
        public System.Type ObjectType { get { throw null; } }
        public string ResourceKey { get { throw null; } }
        public void AddToObjectControlBuilderTable(System.Collections.IDictionary table) { }
        public System.Collections.IDictionary GetFilteredProperties(string filter) { throw null; }
        public System.Web.UI.PropertyEntry GetFilteredProperty(string filter, string name) { throw null; }
        public System.Collections.ICollection GetPropertyAllFilters(string name) { throw null; }
    }
    public sealed partial class ObjectStateFormatter : System.Runtime.Serialization.IFormatter, System.Web.UI.IStateFormatter
    {
        public ObjectStateFormatter() { }
        System.Runtime.Serialization.SerializationBinder System.Runtime.Serialization.IFormatter.Binder { get { throw null; } set { } }
        System.Runtime.Serialization.StreamingContext System.Runtime.Serialization.IFormatter.Context { get { throw null; } set { } }
        System.Runtime.Serialization.ISurrogateSelector System.Runtime.Serialization.IFormatter.SurrogateSelector { get { throw null; } set { } }
        public object Deserialize(System.IO.Stream inputStream) { throw null; }
        public object Deserialize(string inputString) { throw null; }
        public void Serialize(System.IO.Stream outputStream, object stateGraph) { }
        public string Serialize(object stateGraph) { throw null; }
        object System.Runtime.Serialization.IFormatter.Deserialize(System.IO.Stream serializationStream) { throw null; }
        void System.Runtime.Serialization.IFormatter.Serialize(System.IO.Stream serializationStream, object stateGraph) { }
        object System.Web.UI.IStateFormatter.Deserialize(string serializedState) { throw null; }
        string System.Web.UI.IStateFormatter.Serialize(object state) { throw null; }
    }
    public sealed partial class ObjectTagBuilder : System.Web.UI.ControlBuilder
    {
        public ObjectTagBuilder() { }
        public override void AppendLiteralString(string s) { }
        public override void AppendSubBuilder(System.Web.UI.ControlBuilder subBuilder) { }
        public override void Init(System.Web.UI.TemplateParser parser, System.Web.UI.ControlBuilder parentBuilder, System.Type type, string tagName, string id, System.Collections.IDictionary attribs) { }
    }
    public enum OutputCacheLocation
    {
        Any = 0,
        Client = 1,
        Downstream = 2,
        None = 4,
        Server = 3,
        ServerAndClient = 5,
    }
    public sealed partial class OutputCacheParameters
    {
        public OutputCacheParameters() { }
        public string CacheProfile { get { throw null; } set { } }
        public int Duration { get { throw null; } set { } }
        public bool Enabled { get { throw null; } set { } }
        public System.Web.UI.OutputCacheLocation Location { get { throw null; } set { } }
        public bool NoStore { get { throw null; } set { } }
        public string SqlDependency { get { throw null; } set { } }
        public string VaryByContentEncoding { get { throw null; } set { } }
        public string VaryByControl { get { throw null; } set { } }
        public string VaryByCustom { get { throw null; } set { } }
        public string VaryByHeader { get { throw null; } set { } }
        public string VaryByParam { get { throw null; } set { } }
    }
    [System.ComponentModel.DefaultEventAttribute("Load")]
    [System.ComponentModel.Design.Serialization.DesignerSerializerAttribute("Microsoft.VisualStudio.Web.WebForms.WebFormCodeDomSerializer, Microsoft.VisualStudio.Web, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.ComponentModel.Design.Serialization.TypeCodeDomSerializer, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.DesignerAttribute("Microsoft.VisualStudio.Web.WebForms.WebFormDesigner, Microsoft.VisualStudio.Web, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.ComponentModel.Design.IRootDesigner))]
    [System.ComponentModel.DesignerCategoryAttribute("ASPXCodeBehind")]
    [System.ComponentModel.ToolboxItemAttribute(false)]
    public partial class Page : System.Web.UI.TemplateControl, System.Web.IHttpHandler
    {
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public const string postEventArgumentID = "__EVENTARGUMENT";
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public const string postEventSourceID = "__EVENTTARGET";
        public Page() { }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public System.Web.HttpApplicationState Application { get { throw null; } }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        protected bool AspCompatMode { get { throw null; } set { } }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        protected bool AsyncMode { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.TimeSpan AsyncTimeout { get { throw null; } set { } }
        public System.Web.UI.Control AutoPostBackControl { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool Buffer { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public System.Web.Caching.Cache Cache { get { throw null; } }
        public string ClientQueryString { get { throw null; } }
        public System.Web.UI.ClientScriptManager ClientScript { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string ClientTarget { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public int CodePage { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public string ContentType { get { throw null; } set { } }
        protected internal override System.Web.HttpContext Context { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string Culture { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DefaultValueAttribute(true)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public virtual bool EnableEventValidation { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        public override bool EnableViewState { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool EnableViewStateMac { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public string ErrorPage { get { throw null; } set { } }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.ObsoleteAttribute("The recommended alternative is HttpResponse.AddFileDependencies. http://go.microsoft.com/fwlink/?linkid=14202")]
        protected System.Collections.ArrayList FileDependencies { set { } }
        public System.Web.UI.HtmlControls.HtmlForm Form { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public System.Web.UI.HtmlControls.HtmlHead Header { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override string ID { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public virtual new char IdSeparator { get { throw null; } }
        public bool IsAsync { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public bool IsCallback { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public bool IsCrossPagePostBack { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public bool IsPostBack { get { throw null; } }
        public bool IsPostBackEventControlRegistered { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool IsReusable { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public bool IsValid { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        public System.Collections.IDictionary Items { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public int LCID { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public bool MaintainScrollPositionOnPostBack { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public System.Web.UI.MasterPage Master { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute("")]
        public virtual string MasterPageFile { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public int MaxPageStateFieldLength { get { throw null; } set { } }
        [System.ComponentModel.BindableAttribute(true)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.ComponentModel.LocalizableAttribute(true)]
        public string MetaDescription { get { throw null; } set { } }
        [System.ComponentModel.BindableAttribute(true)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.ComponentModel.LocalizableAttribute(true)]
        public string MetaKeywords { get { throw null; } set { } }
        public System.Web.ModelBinding.ModelBindingExecutionContext ModelBindingExecutionContext { get { throw null; } }
        public System.Web.ModelBinding.ModelStateDictionary ModelState { get { throw null; } }
        public System.Web.UI.Adapters.PageAdapter PageAdapter { get { throw null; } }
        protected virtual System.Web.UI.PageStatePersister PageStatePersister { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public System.Web.UI.Page PreviousPage { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public System.Web.HttpRequest Request { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public System.Web.HttpResponse Response { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public string ResponseEncoding { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public System.Web.Routing.RouteData RouteData { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public System.Web.HttpServerUtility Server { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public virtual System.Web.SessionState.HttpSessionState Session { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool SkipFormActionValidation { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ObsoleteAttribute("The recommended alternative is Page.SetFocus and Page.MaintainScrollPositionOnPostBack. http://go.microsoft.com/fwlink/?linkid=14202")]
        [System.Web.UI.FilterableAttribute(false)]
        public bool SmartNavigation { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Web.UI.FilterableAttribute(false)]
        public virtual string StyleSheetTheme { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public virtual string Theme { get { throw null; } set { } }
        [System.ComponentModel.BindableAttribute(true)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.ComponentModel.LocalizableAttribute(true)]
        public string Title { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public System.Web.TraceContext Trace { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool TraceEnabled { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public System.Web.TraceMode TraceModeValue { get { throw null; } set { } }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        protected int TransactionMode { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string UICulture { get { throw null; } set { } }
        protected internal virtual string UniqueFilePathSuffix { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.UnobtrusiveValidationMode.None)]
        public System.Web.UI.UnobtrusiveValidationMode UnobtrusiveValidationMode { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public System.Security.Principal.IPrincipal User { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.ValidateRequestMode.Enabled)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override System.Web.UI.ValidateRequestMode ValidateRequestMode { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public System.Web.UI.ValidatorCollection Validators { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.ViewStateEncryptionMode.Auto)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public System.Web.UI.ViewStateEncryptionMode ViewStateEncryptionMode { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        public string ViewStateUserKey { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        public override bool Visible { get { throw null; } set { } }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public event System.EventHandler InitComplete { add { } remove { } }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public event System.EventHandler LoadComplete { add { } remove { } }
        public event System.EventHandler PreInit { add { } remove { } }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public event System.EventHandler PreLoad { add { } remove { } }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public event System.EventHandler PreRenderComplete { add { } remove { } }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public event System.EventHandler SaveStateComplete { add { } remove { } }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        protected internal void AddContentTemplate(string templateName, System.Web.UI.ITemplate template) { }
        public void AddOnPreRenderCompleteAsync(System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler) { }
        public void AddOnPreRenderCompleteAsync(System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state) { }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        protected internal void AddWrappedFileDependencies(object virtualFileDependencies) { }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        protected System.IAsyncResult AspCompatBeginProcessRequest(System.Web.HttpContext context, System.AsyncCallback cb, object extraData) { throw null; }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        protected void AspCompatEndProcessRequest(System.IAsyncResult result) { }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        protected System.IAsyncResult AsyncPageBeginProcessRequest(System.Web.HttpContext context, System.AsyncCallback callback, object extraData) { throw null; }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        protected void AsyncPageEndProcessRequest(System.IAsyncResult result) { }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        protected internal virtual System.Web.UI.HtmlTextWriter CreateHtmlTextWriter(System.IO.TextWriter tw) { throw null; }
        public static System.Web.UI.HtmlTextWriter CreateHtmlTextWriterFromType(System.IO.TextWriter tw, System.Type writerType) { throw null; }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public void DesignerInitialize() { }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        protected internal virtual System.Collections.Specialized.NameValueCollection DeterminePostBackMode() { throw null; }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        protected internal virtual System.Collections.Specialized.NameValueCollection DeterminePostBackModeUnvalidated() { throw null; }
        public void ExecuteRegisteredAsyncTasks() { }
        public override System.Web.UI.Control FindControl(string id) { throw null; }
        protected override void FrameworkInitialize() { }
        public object GetDataItem() { throw null; }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        [System.ObsoleteAttribute("The recommended alternative is ClientScript.GetPostBackEventReference. http://go.microsoft.com/fwlink/?linkid=14202")]
        public string GetPostBackClientEvent(System.Web.UI.Control control, string argument) { throw null; }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        [System.ObsoleteAttribute("The recommended alternative is ClientScript.GetPostBackClientHyperlink. http://go.microsoft.com/fwlink/?linkid=14202")]
        public string GetPostBackClientHyperlink(System.Web.UI.Control control, string argument) { throw null; }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        [System.ObsoleteAttribute("The recommended alternative is ClientScript.GetPostBackEventReference. http://go.microsoft.com/fwlink/?linkid=14202")]
        public string GetPostBackEventReference(System.Web.UI.Control control) { throw null; }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        [System.ObsoleteAttribute("The recommended alternative is ClientScript.GetPostBackEventReference. http://go.microsoft.com/fwlink/?linkid=14202")]
        public string GetPostBackEventReference(System.Web.UI.Control control, string argument) { throw null; }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public virtual int GetTypeHashCode() { throw null; }
        public System.Web.UI.ValidatorCollection GetValidators(string validationGroup) { throw null; }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        protected object GetWrappedFileDependencies(string[] virtualFileDependencies) { throw null; }
        protected virtual void InitializeCulture() { }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        protected virtual void InitOutputCache(int duration, string varyByContentEncoding, string varyByHeader, string varyByCustom, System.Web.UI.OutputCacheLocation location, string varyByParam) { }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        protected virtual void InitOutputCache(int duration, string varyByHeader, string varyByCustom, System.Web.UI.OutputCacheLocation location, string varyByParam) { }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        protected internal virtual void InitOutputCache(System.Web.UI.OutputCacheParameters cacheSettings) { }
        [System.ObsoleteAttribute("The recommended alternative is ClientScript.IsClientScriptBlockRegistered(string key). http://go.microsoft.com/fwlink/?linkid=14202")]
        public bool IsClientScriptBlockRegistered(string key) { throw null; }
        [System.ObsoleteAttribute("The recommended alternative is ClientScript.IsStartupScriptRegistered(string key). http://go.microsoft.com/fwlink/?linkid=14202")]
        public bool IsStartupScriptRegistered(string key) { throw null; }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        protected internal virtual object LoadPageStateFromPersistenceMedium() { throw null; }
        public string MapPath(string virtualPath) { throw null; }
        protected internal override void OnInit(System.EventArgs e) { }
        protected virtual void OnInitComplete(System.EventArgs e) { }
        protected virtual void OnLoadComplete(System.EventArgs e) { }
        protected virtual void OnPreInit(System.EventArgs e) { }
        protected virtual void OnPreLoad(System.EventArgs e) { }
        protected virtual void OnPreRenderComplete(System.EventArgs e) { }
        protected virtual void OnSaveStateComplete(System.EventArgs e) { }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public virtual void ProcessRequest(System.Web.HttpContext context) { }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        protected virtual void RaisePostBackEvent(System.Web.UI.IPostBackEventHandler sourceControl, string eventArgument) { }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        [System.ObsoleteAttribute("The recommended alternative is ClientScript.RegisterArrayDeclaration(string arrayName, string arrayValue). http://go.microsoft.com/fwlink/?linkid=14202")]
        public void RegisterArrayDeclaration(string arrayName, string arrayValue) { }
        public void RegisterAsyncTask(System.Web.UI.PageAsyncTask task) { }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        [System.ObsoleteAttribute("The recommended alternative is ClientScript.RegisterClientScriptBlock(Type type, string key, string script). http://go.microsoft.com/fwlink/?linkid=14202")]
        public virtual void RegisterClientScriptBlock(string key, string script) { }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        [System.ObsoleteAttribute("The recommended alternative is ClientScript.RegisterHiddenField(string hiddenFieldName, string hiddenFieldInitialValue). http://go.microsoft.com/fwlink/?linkid=14202")]
        public virtual void RegisterHiddenField(string hiddenFieldName, string hiddenFieldInitialValue) { }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        [System.ObsoleteAttribute("The recommended alternative is ClientScript.RegisterOnSubmitStatement(Type type, string key, string script). http://go.microsoft.com/fwlink/?linkid=14202")]
        public void RegisterOnSubmitStatement(string key, string script) { }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void RegisterRequiresControlState(System.Web.UI.Control control) { }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void RegisterRequiresPostBack(System.Web.UI.Control control) { }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public virtual void RegisterRequiresRaiseEvent(System.Web.UI.IPostBackEventHandler control) { }
        public void RegisterRequiresViewStateEncryption() { }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        [System.ObsoleteAttribute("The recommended alternative is ClientScript.RegisterStartupScript(Type type, string key, string script). http://go.microsoft.com/fwlink/?linkid=14202")]
        public virtual void RegisterStartupScript(string key, string script) { }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void RegisterViewStateHandler() { }
        protected internal override void Render(System.Web.UI.HtmlTextWriter writer) { }
        public bool RequiresControlState(System.Web.UI.Control control) { throw null; }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        protected internal virtual void SavePageStateToPersistenceMedium(object state) { }
        public void SetFocus(string clientID) { }
        public void SetFocus(System.Web.UI.Control control) { }
        public virtual bool TryUpdateModel<TModel>(TModel model) where TModel : class { throw null; }
        public virtual bool TryUpdateModel<TModel>(TModel model, System.Web.ModelBinding.IValueProvider valueProvider) where TModel : class { throw null; }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void UnregisterRequiresControlState(System.Web.UI.Control control) { }
        public virtual void UpdateModel<TModel>(TModel model) where TModel : class { }
        public virtual void UpdateModel<TModel>(TModel model, System.Web.ModelBinding.IValueProvider valueProvider) where TModel : class { }
        public virtual void Validate() { }
        public virtual void Validate(string validationGroup) { }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public virtual void VerifyRenderingInServerForm(System.Web.UI.Control control) { }
    }
    public sealed partial class PageAsyncTask
    {
        public PageAsyncTask(System.Func<System.Threading.CancellationToken, System.Threading.Tasks.Task> handler) { }
        public PageAsyncTask(System.Func<System.Threading.Tasks.Task> handler) { }
        public PageAsyncTask(System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, System.Web.EndEventHandler timeoutHandler, object state) { }
        public PageAsyncTask(System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, System.Web.EndEventHandler timeoutHandler, object state, bool executeInParallel) { }
        public System.Web.BeginEventHandler BeginHandler { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } }
        public System.Web.EndEventHandler EndHandler { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } }
        public bool ExecuteInParallel { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } }
        public object State { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } }
        public System.Web.EndEventHandler TimeoutHandler { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } }
    }
    [System.Security.Permissions.PermissionSetAttribute(System.Security.Permissions.SecurityAction.InheritanceDemand, Unrestricted=true)]
    [System.Security.Permissions.PermissionSetAttribute(System.Security.Permissions.SecurityAction.LinkDemand, Unrestricted=true)]
    public partial class PageHandlerFactory : System.Web.IHttpHandlerFactory
    {
        protected internal PageHandlerFactory() { }
        public virtual System.Web.IHttpHandler GetHandler(System.Web.HttpContext context, string requestType, string virtualPath, string path) { throw null; }
        public virtual void ReleaseHandler(System.Web.IHttpHandler handler) { }
    }
    public sealed partial class PageParser : System.Web.UI.TemplateControlParser
    {
        public PageParser() { }
        public static System.Type DefaultApplicationBaseType { get { throw null; } set { } }
        public static System.Type DefaultPageBaseType { get { throw null; } set { } }
        public static System.Type DefaultPageParserFilterType { get { throw null; } set { } }
        public static System.Type DefaultUserControlBaseType { get { throw null; } set { } }
        public static bool EnableLongStringsAsResources { get { throw null; } set { } }
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, Unrestricted=true)]
        public static System.Web.IHttpHandler GetCompiledPageInstance(string virtualPath, string inputFile, System.Web.HttpContext context) { throw null; }
    }
    [System.Web.AspNetHostingPermissionAttribute(System.Security.Permissions.SecurityAction.InheritanceDemand, Level=System.Web.AspNetHostingPermissionLevel.Medium)]
    [System.Web.AspNetHostingPermissionAttribute(System.Security.Permissions.SecurityAction.LinkDemand, Level=System.Web.AspNetHostingPermissionLevel.Medium)]
    public abstract partial class PageParserFilter
    {
        protected PageParserFilter() { }
        public virtual bool AllowCode { get { throw null; } }
        protected bool CalledFromParseControl { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } }
        protected int Line { get { throw null; } }
        public virtual int NumberOfControlsAllowed { get { throw null; } }
        public virtual int NumberOfDirectDependenciesAllowed { get { throw null; } }
        public virtual int TotalNumberOfDependenciesAllowed { get { throw null; } }
        protected string VirtualPath { get { throw null; } }
        protected void AddControl(System.Type type, System.Collections.IDictionary attributes) { }
        public virtual bool AllowBaseType(System.Type baseType) { throw null; }
        public virtual bool AllowControl(System.Type controlType, System.Web.UI.ControlBuilder builder) { throw null; }
        public virtual bool AllowServerSideInclude(string includeVirtualPath) { throw null; }
        public virtual bool AllowVirtualReference(string referenceVirtualPath, System.Web.UI.VirtualReferenceType referenceType) { throw null; }
        public virtual System.Web.UI.CompilationMode GetCompilationMode(System.Web.UI.CompilationMode current) { throw null; }
        public virtual System.Type GetNoCompileUserControlType() { throw null; }
        protected virtual void Initialize() { }
        public virtual void ParseComplete(System.Web.UI.ControlBuilder rootBuilder) { }
        public virtual void PreprocessDirective(string directiveName, System.Collections.IDictionary attributes) { }
        public virtual bool ProcessCodeConstruct(System.Web.UI.CodeConstructType codeType, string code) { throw null; }
        public virtual bool ProcessDataBindingAttribute(string controlId, string name, string value) { throw null; }
        public virtual bool ProcessEventHookup(string controlId, string eventName, string handlerName) { throw null; }
        protected void SetPageProperty(string filter, string name, string value) { }
    }
    public abstract partial class PageStatePersister
    {
        protected PageStatePersister(System.Web.UI.Page page) { }
        public object ControlState { get { throw null; } set { } }
        protected System.Web.UI.Page Page { get { throw null; } set { } }
        protected System.Web.UI.IStateFormatter StateFormatter { get { throw null; } }
        public object ViewState { get { throw null; } set { } }
        public abstract void Load();
        public abstract void Save();
    }
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public abstract partial class PageTheme
    {
        protected PageTheme() { }
        protected abstract string AppRelativeTemplateSourceDirectory { get; }
        protected abstract System.Collections.IDictionary ControlSkins { get; }
        protected abstract string[] LinkedStyleSheets { get; }
        protected System.Web.UI.Page Page { get { throw null; } }
        public static object CreateSkinKey(System.Type controlType, string skinID) { throw null; }
        protected object Eval(string expression) { throw null; }
        protected string Eval(string expression, string format) { throw null; }
        public bool TestDeviceFilter(string deviceFilterName) { throw null; }
        protected object XPath(string xPathExpression) { throw null; }
        protected string XPath(string xPathExpression, string format) { throw null; }
        protected string XPath(string xPathExpression, string format, System.Xml.IXmlNamespaceResolver resolver) { throw null; }
        protected object XPath(string xPathExpression, System.Xml.IXmlNamespaceResolver resolver) { throw null; }
        protected System.Collections.IEnumerable XPathSelect(string xPathExpression) { throw null; }
        protected System.Collections.IEnumerable XPathSelect(string xPathExpression, System.Xml.IXmlNamespaceResolver resolver) { throw null; }
    }
    [System.SerializableAttribute]
    public sealed partial class Pair
    {
        public object First;
        public object Second;
        public Pair() { }
        public Pair(object x, object y) { }
    }
    [System.AttributeUsageAttribute(System.AttributeTargets.Class)]
    public sealed partial class ParseChildrenAttribute : System.Attribute
    {
        public static readonly System.Web.UI.ParseChildrenAttribute Default;
        public static readonly System.Web.UI.ParseChildrenAttribute ParseAsChildren;
        public static readonly System.Web.UI.ParseChildrenAttribute ParseAsProperties;
        public ParseChildrenAttribute() { }
        public ParseChildrenAttribute(bool childrenAsProperties) { }
        public ParseChildrenAttribute(bool childrenAsProperties, string defaultProperty) { }
        public ParseChildrenAttribute(System.Type childControlType) { }
        public System.Type ChildControlType { get { throw null; } }
        public bool ChildrenAsProperties { get { throw null; } set { } }
        public string DefaultProperty { get { throw null; } set { } }
        public override bool Equals(object obj) { throw null; }
        public override int GetHashCode() { throw null; }
        public override bool IsDefaultAttribute() { throw null; }
    }
    public abstract partial class ParseRecorder
    {
        protected ParseRecorder() { }
        public static System.Collections.Generic.IList<System.Func<System.Web.UI.ParseRecorder>> RecorderFactories { get { throw null; } }
        public virtual void Initialize(System.Web.UI.TemplateParser parser) { }
        public virtual void ParseComplete(System.Web.UI.ControlBuilder root) { }
        public virtual void ProcessGeneratedCode(System.Web.UI.ControlBuilder builder, System.CodeDom.CodeCompileUnit codeCompileUnit, System.CodeDom.CodeTypeDeclaration baseType, System.CodeDom.CodeTypeDeclaration derivedType, System.CodeDom.CodeMemberMethod buildMethod, System.CodeDom.CodeMemberMethod dataBindingMethod) { }
        public virtual void RecordBeginTag(System.Web.UI.ControlBuilder builder, System.Text.RegularExpressions.Match tag) { }
        public virtual void RecordCodeBlock(System.Web.UI.ControlBuilder builder, System.Text.RegularExpressions.Match codeBlock) { }
        public virtual void RecordEmptyTag(System.Web.UI.ControlBuilder builder, System.Text.RegularExpressions.Match tag) { }
        public virtual void RecordEndTag(System.Web.UI.ControlBuilder builder, System.Text.RegularExpressions.Match tag) { }
    }
    [System.AttributeUsageAttribute(System.AttributeTargets.Class)]
    public sealed partial class PartialCachingAttribute : System.Attribute
    {
        public PartialCachingAttribute(int duration) { }
        public PartialCachingAttribute(int duration, string varyByParams, string varyByControls, string varyByCustom) { }
        public PartialCachingAttribute(int duration, string varyByParams, string varyByControls, string varyByCustom, bool shared) { }
        public PartialCachingAttribute(int duration, string varyByParams, string varyByControls, string varyByCustom, string sqlDependency, bool shared) { }
        public int Duration { get { throw null; } set { } }
        public string ProviderName { get { throw null; } set { } }
        public bool Shared { get { throw null; } set { } }
        public string SqlDependency { get { throw null; } set { } }
        public string VaryByControls { get { throw null; } set { } }
        public string VaryByCustom { get { throw null; } set { } }
        public string VaryByParams { get { throw null; } set { } }
    }
    public partial class PartialCachingControl : System.Web.UI.BasePartialCachingControl
    {
        internal PartialCachingControl() { }
        public System.Web.UI.Control CachedControl { get { throw null; } }
    }
    [System.AttributeUsageAttribute(System.AttributeTargets.Class)]
    public sealed partial class PersistChildrenAttribute : System.Attribute
    {
        public static readonly System.Web.UI.PersistChildrenAttribute Default;
        public static readonly System.Web.UI.PersistChildrenAttribute No;
        public static readonly System.Web.UI.PersistChildrenAttribute Yes;
        public PersistChildrenAttribute(bool persist) { }
        public PersistChildrenAttribute(bool persist, bool usesCustomPersistence) { }
        public bool Persist { get { throw null; } }
        public bool UsesCustomPersistence { get { throw null; } }
        public override bool Equals(object obj) { throw null; }
        public override int GetHashCode() { throw null; }
        public override bool IsDefaultAttribute() { throw null; }
    }
    public enum PersistenceMode
    {
        Attribute = 0,
        EncodedInnerDefaultProperty = 3,
        InnerDefaultProperty = 2,
        InnerProperty = 1,
    }
    [System.AttributeUsageAttribute(System.AttributeTargets.All)]
    public sealed partial class PersistenceModeAttribute : System.Attribute
    {
        public static readonly System.Web.UI.PersistenceModeAttribute Attribute;
        public static readonly System.Web.UI.PersistenceModeAttribute Default;
        public static readonly System.Web.UI.PersistenceModeAttribute EncodedInnerDefaultProperty;
        public static readonly System.Web.UI.PersistenceModeAttribute InnerDefaultProperty;
        public static readonly System.Web.UI.PersistenceModeAttribute InnerProperty;
        public PersistenceModeAttribute(System.Web.UI.PersistenceMode mode) { }
        public System.Web.UI.PersistenceMode Mode { get { throw null; } }
        public override bool Equals(object obj) { throw null; }
        public override int GetHashCode() { throw null; }
        public override bool IsDefaultAttribute() { throw null; }
    }
    public sealed partial class PostBackOptions
    {
        public PostBackOptions(System.Web.UI.Control targetControl) { }
        public PostBackOptions(System.Web.UI.Control targetControl, string argument) { }
        public PostBackOptions(System.Web.UI.Control targetControl, string argument, string actionUrl, bool autoPostBack, bool requiresJavaScriptProtocol, bool trackFocus, bool clientSubmit, bool performValidation, string validationGroup) { }
        [System.ComponentModel.DefaultValueAttribute("")]
        public string ActionUrl { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        public string Argument { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool AutoPostBack { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool ClientSubmit { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool PerformValidation { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool RequiresJavaScriptProtocol { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        public System.Web.UI.Control TargetControl { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool TrackFocus { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        public string ValidationGroup { get { throw null; } set { } }
    }
    public static partial class PropertyConverter
    {
        public static object EnumFromString(System.Type enumType, string value) { throw null; }
        public static string EnumToString(System.Type enumType, object enumValue) { throw null; }
        public static object ObjectFromString(System.Type objType, System.Reflection.MemberInfo propertyInfo, string value) { throw null; }
    }
    public abstract partial class PropertyEntry
    {
        internal PropertyEntry() { }
        public System.Type DeclaringType { get { throw null; } }
        public string Filter { get { throw null; } set { } }
        public string Name { get { throw null; } set { } }
        public System.Reflection.PropertyInfo PropertyInfo { get { throw null; } set { } }
        public System.Type Type { get { throw null; } set { } }
    }
    public delegate void RenderMethod(System.Web.UI.HtmlTextWriter output, System.Web.UI.Control container);
    public abstract partial class RenderTraceListener
    {
        protected RenderTraceListener() { }
        public static System.Collections.Generic.IList<System.Func<System.Web.UI.RenderTraceListener>> ListenerFactories { get { throw null; } }
        public virtual void BeginRendering(System.IO.TextWriter writer, object renderedObject) { }
        public virtual void EndRendering(System.IO.TextWriter writer, object renderedObject) { }
        public virtual void Initialize(System.Web.HttpContext context) { }
        public virtual void SetTraceData(object tracedObject, object traceDataKey, object traceDataValue) { }
        public virtual void ShareTraceData(object source, object destination) { }
    }
    public partial class RootBuilder : System.Web.UI.TemplateBuilder
    {
        public RootBuilder() { }
        public RootBuilder(System.Web.UI.TemplateParser parser) { }
        public System.Collections.IDictionary BuiltObjects { get { throw null; } }
        public override System.Type GetChildControlType(string tagName, System.Collections.IDictionary attribs) { throw null; }
        protected internal virtual void OnCodeGenerationComplete() { }
    }
    public partial class SessionPageStatePersister : System.Web.UI.PageStatePersister
    {
        public SessionPageStatePersister(System.Web.UI.Page page) : base (default(System.Web.UI.Page)) { }
        public override void Load() { }
        public override void Save() { }
    }
    public partial class SimplePropertyEntry : System.Web.UI.PropertyEntry
    {
        internal SimplePropertyEntry() { }
        public string PersistedValue { get { throw null; } set { } }
        public bool UseSetAttribute { get { throw null; } set { } }
        public object Value { get { throw null; } set { } }
    }
    public abstract partial class SimpleWebHandlerParser
    {
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, Unrestricted=true)]
        protected SimpleWebHandlerParser(System.Web.HttpContext context, string virtualPath, string physicalPath) { }
        protected abstract string DefaultDirectiveName { get; }
        protected System.Type GetCompiledTypeFromCache() { throw null; }
    }
    public sealed partial class SkinBuilder : System.Web.UI.ControlBuilder
    {
        public SkinBuilder(System.Web.UI.ThemeProvider provider, System.Web.UI.Control control, System.Web.UI.ControlBuilder skinBuilder, string themePath) { }
        public System.Web.UI.Control ApplyTheme() { throw null; }
    }
    public sealed partial class StateBag : System.Collections.ICollection, System.Collections.IDictionary, System.Collections.IEnumerable, System.Web.UI.IStateManager
    {
        public StateBag() { }
        public StateBag(bool ignoreCase) { }
        public int Count { get { throw null; } }
        public object this[string key] { get { throw null; } set { } }
        public System.Collections.ICollection Keys { get { throw null; } }
        bool System.Collections.ICollection.IsSynchronized { get { throw null; } }
        object System.Collections.ICollection.SyncRoot { get { throw null; } }
        bool System.Collections.IDictionary.IsFixedSize { get { throw null; } }
        bool System.Collections.IDictionary.IsReadOnly { get { throw null; } }
        object System.Collections.IDictionary.this[object key] { get { throw null; } set { } }
        bool System.Web.UI.IStateManager.IsTrackingViewState { get { throw null; } }
        public System.Collections.ICollection Values { get { throw null; } }
        public System.Web.UI.StateItem Add(string key, object value) { throw null; }
        public void Clear() { }
        public System.Collections.IDictionaryEnumerator GetEnumerator() { throw null; }
        public bool IsItemDirty(string key) { throw null; }
        public void Remove(string key) { }
        public void SetDirty(bool dirty) { }
        public void SetItemDirty(string key, bool dirty) { }
        void System.Collections.ICollection.CopyTo(System.Array array, int index) { }
        void System.Collections.IDictionary.Add(object key, object value) { }
        bool System.Collections.IDictionary.Contains(object key) { throw null; }
        void System.Collections.IDictionary.Remove(object key) { }
        System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() { throw null; }
        void System.Web.UI.IStateManager.LoadViewState(object state) { }
        object System.Web.UI.IStateManager.SaveViewState() { throw null; }
        void System.Web.UI.IStateManager.TrackViewState() { }
    }
    public sealed partial class StateItem
    {
        internal StateItem() { }
        public bool IsDirty { get { throw null; } set { } }
        public object Value { get { throw null; } set { } }
    }
    public abstract partial class StateManagedCollection : System.Collections.ICollection, System.Collections.IEnumerable, System.Collections.IList, System.Web.UI.IStateManager
    {
        protected StateManagedCollection() { }
        public int Count { get { throw null; } }
        int System.Collections.ICollection.Count { get { throw null; } }
        bool System.Collections.ICollection.IsSynchronized { get { throw null; } }
        object System.Collections.ICollection.SyncRoot { get { throw null; } }
        bool System.Collections.IList.IsFixedSize { get { throw null; } }
        bool System.Collections.IList.IsReadOnly { get { throw null; } }
        object System.Collections.IList.this[int index] { get { throw null; } set { } }
        bool System.Web.UI.IStateManager.IsTrackingViewState { get { throw null; } }
        public void Clear() { }
        public void CopyTo(System.Array array, int index) { }
        protected virtual object CreateKnownType(int index) { throw null; }
        public System.Collections.IEnumerator GetEnumerator() { throw null; }
        protected virtual System.Type[] GetKnownTypes() { throw null; }
        protected virtual void OnClear() { }
        protected virtual void OnClearComplete() { }
        protected virtual void OnInsert(int index, object value) { }
        protected virtual void OnInsertComplete(int index, object value) { }
        protected virtual void OnRemove(int index, object value) { }
        protected virtual void OnRemoveComplete(int index, object value) { }
        protected virtual void OnValidate(object value) { }
        public void SetDirty() { }
        protected abstract void SetDirtyObject(object o);
        System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() { throw null; }
        int System.Collections.IList.Add(object value) { throw null; }
        void System.Collections.IList.Clear() { }
        bool System.Collections.IList.Contains(object value) { throw null; }
        int System.Collections.IList.IndexOf(object value) { throw null; }
        void System.Collections.IList.Insert(int index, object value) { }
        void System.Collections.IList.Remove(object value) { }
        void System.Collections.IList.RemoveAt(int index) { }
        void System.Web.UI.IStateManager.LoadViewState(object savedState) { }
        object System.Web.UI.IStateManager.SaveViewState() { throw null; }
        void System.Web.UI.IStateManager.TrackViewState() { }
    }
    public partial class StaticPartialCachingControl : System.Web.UI.BasePartialCachingControl
    {
        public StaticPartialCachingControl(string ctrlID, string guid, int duration, string varyByParams, string varyByControls, string varyByCustom, string sqlDependency, System.Web.UI.BuildMethod buildMethod) { }
        public StaticPartialCachingControl(string ctrlID, string guid, int duration, string varyByParams, string varyByControls, string varyByCustom, string sqlDependency, System.Web.UI.BuildMethod buildMethod, string providerName) { }
        public StaticPartialCachingControl(string ctrlID, string guid, int duration, string varyByParams, string varyByControls, string varyByCustom, System.Web.UI.BuildMethod buildMethod) { }
        public static void BuildCachedControl(System.Web.UI.Control parent, string ctrlID, string guid, int duration, string varyByParams, string varyByControls, string varyByCustom, string sqlDependency, System.Web.UI.BuildMethod buildMethod) { }
        public static void BuildCachedControl(System.Web.UI.Control parent, string ctrlID, string guid, int duration, string varyByParams, string varyByControls, string varyByCustom, string sqlDependency, System.Web.UI.BuildMethod buildMethod, string providerName) { }
        public static void BuildCachedControl(System.Web.UI.Control parent, string ctrlID, string guid, int duration, string varyByParams, string varyByControls, string varyByCustom, System.Web.UI.BuildMethod buildMethod) { }
    }
    [System.AttributeUsageAttribute(System.AttributeTargets.Class, AllowMultiple=false)]
    public sealed partial class SupportsEventValidationAttribute : System.Attribute
    {
        public SupportsEventValidationAttribute() { }
    }
    [System.AttributeUsageAttribute(System.AttributeTargets.Assembly, AllowMultiple=true)]
    public sealed partial class TagPrefixAttribute : System.Attribute
    {
        public TagPrefixAttribute(string namespaceName, string tagPrefix) { }
        public string NamespaceName { get { throw null; } }
        public string TagPrefix { get { throw null; } }
    }
    public partial class TemplateBuilder : System.Web.UI.ControlBuilder, System.Web.UI.ITemplate
    {
        public TemplateBuilder() { }
        public virtual string Text { get { throw null; } set { } }
        public override object BuildObject() { throw null; }
        public override void CloseControl() { }
        public override void Init(System.Web.UI.TemplateParser parser, System.Web.UI.ControlBuilder parentBuilder, System.Type type, string tagName, string ID, System.Collections.IDictionary attribs) { }
        public virtual void InstantiateIn(System.Web.UI.Control container) { }
        public override bool NeedsTagInnerText() { throw null; }
        public override void SetTagInnerText(string text) { }
    }
    [System.AttributeUsageAttribute(System.AttributeTargets.Property)]
    public sealed partial class TemplateContainerAttribute : System.Attribute
    {
        public TemplateContainerAttribute(System.Type containerType) { }
        public TemplateContainerAttribute(System.Type containerType, System.ComponentModel.BindingDirection bindingDirection) { }
        public System.ComponentModel.BindingDirection BindingDirection { get { throw null; } }
        public System.Type ContainerType { get { throw null; } }
    }
    public abstract partial class TemplateControl : System.Web.UI.Control, System.Web.UI.IFilterResolutionService, System.Web.UI.INamingContainer
    {
        protected TemplateControl() { }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string AppRelativeVirtualPath { get { throw null; } set { } }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.ObsoleteAttribute("Use of this property is not recommended because it is no longer useful. http://go.microsoft.com/fwlink/?linkid=14202")]
        protected virtual int AutoHandlers { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(true)]
        public override bool EnableTheming { get { throw null; } set { } }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        protected virtual bool SupportAutoEvents { get { throw null; } }
        public event System.EventHandler AbortTransaction { add { } remove { } }
        public event System.EventHandler CommitTransaction { add { } remove { } }
        public event System.EventHandler Error { add { } remove { } }
        protected virtual void Construct() { }
        protected System.Web.UI.LiteralControl CreateResourceBasedLiteralControl(int offset, int size, bool fAsciiOnly) { throw null; }
        protected internal object Eval(string expression) { throw null; }
        protected internal string Eval(string expression, string format) { throw null; }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        protected virtual void FrameworkInitialize() { }
        protected object GetGlobalResourceObject(string className, string resourceKey) { throw null; }
        protected object GetGlobalResourceObject(string className, string resourceKey, System.Type objType, string propName) { throw null; }
        protected object GetLocalResourceObject(string resourceKey) { throw null; }
        protected object GetLocalResourceObject(string resourceKey, System.Type objType, string propName) { throw null; }
        public System.Web.UI.Control LoadControl(string virtualPath) { throw null; }
        public System.Web.UI.Control LoadControl(System.Type t, object[] parameters) { throw null; }
        public System.Web.UI.ITemplate LoadTemplate(string virtualPath) { throw null; }
        protected virtual void OnAbortTransaction(System.EventArgs e) { }
        protected virtual void OnCommitTransaction(System.EventArgs e) { }
        protected virtual void OnError(System.EventArgs e) { }
        public System.Web.UI.Control ParseControl(string content) { throw null; }
        public System.Web.UI.Control ParseControl(string content, bool ignoreParserFilter) { throw null; }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public object ReadStringResource() { throw null; }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public static object ReadStringResource(System.Type t) { throw null; }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        protected void SetStringResourcePointer(object stringResourcePointer, int maxResourceOffset) { }
        int System.Web.UI.IFilterResolutionService.CompareFilters(string filter1, string filter2) { throw null; }
        bool System.Web.UI.IFilterResolutionService.EvaluateFilter(string filterName) { throw null; }
        public virtual bool TestDeviceFilter(string filterName) { throw null; }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        protected void WriteUTF8ResourceString(System.Web.UI.HtmlTextWriter output, int offset, int size, bool fAsciiOnly) { }
        protected internal object XPath(string xPathExpression) { throw null; }
        protected internal string XPath(string xPathExpression, string format) { throw null; }
        protected internal string XPath(string xPathExpression, string format, System.Xml.IXmlNamespaceResolver resolver) { throw null; }
        protected internal object XPath(string xPathExpression, System.Xml.IXmlNamespaceResolver resolver) { throw null; }
        protected internal System.Collections.IEnumerable XPathSelect(string xPathExpression) { throw null; }
        protected internal System.Collections.IEnumerable XPathSelect(string xPathExpression, System.Xml.IXmlNamespaceResolver resolver) { throw null; }
    }
    public abstract partial class TemplateControlParser : System.Web.UI.BaseTemplateParser
    {
        protected TemplateControlParser() { }
    }
    public enum TemplateInstance
    {
        Multiple = 0,
        Single = 1,
    }
    [System.AttributeUsageAttribute(System.AttributeTargets.Property)]
    public sealed partial class TemplateInstanceAttribute : System.Attribute
    {
        public static readonly System.Web.UI.TemplateInstanceAttribute Default;
        public static readonly System.Web.UI.TemplateInstanceAttribute Multiple;
        public static readonly System.Web.UI.TemplateInstanceAttribute Single;
        public TemplateInstanceAttribute(System.Web.UI.TemplateInstance instances) { }
        public System.Web.UI.TemplateInstance Instances { get { throw null; } }
        public override bool Equals(object obj) { throw null; }
        public override int GetHashCode() { throw null; }
        public override bool IsDefaultAttribute() { throw null; }
    }
    public abstract partial class TemplateParser : System.Web.UI.BaseParser
    {
        internal TemplateParser() { }
        public string Text { get { throw null; } }
        protected void ParseFile(string physicalPath, string virtualPath) { }
        public static System.Web.UI.ITemplate ParseTemplate(string content, string virtualPath, bool ignoreFilter) { throw null; }
        protected void ProcessError(string message) { }
        protected void ProcessException(System.Exception ex) { }
    }
    public partial class TemplatePropertyEntry : System.Web.UI.BuilderPropertyEntry
    {
        internal TemplatePropertyEntry() { }
        public bool BindableTemplate { get { throw null; } }
    }
    [System.AttributeUsageAttribute(System.AttributeTargets.Class | System.AttributeTargets.Property)]
    public sealed partial class ThemeableAttribute : System.Attribute
    {
        public static readonly System.Web.UI.ThemeableAttribute Default;
        public static readonly System.Web.UI.ThemeableAttribute No;
        public static readonly System.Web.UI.ThemeableAttribute Yes;
        public ThemeableAttribute(bool themeable) { }
        public bool Themeable { get { throw null; } }
        public override bool Equals(object obj) { throw null; }
        public override int GetHashCode() { throw null; }
        public override bool IsDefaultAttribute() { throw null; }
        public static bool IsObjectThemeable(object instance) { throw null; }
        public static bool IsTypeThemeable(System.Type type) { throw null; }
    }
    public sealed partial class ThemeProvider
    {
        public ThemeProvider(System.ComponentModel.Design.IDesignerHost host, string name, string themeDefinition, string[] cssFiles, string themePath) { }
        public int ContentHashCode { get { throw null; } }
        public System.Collections.ICollection CssFiles { get { throw null; } }
        public System.ComponentModel.Design.IDesignerHost DesignerHost { get { throw null; } }
        public string ThemeName { get { throw null; } }
        public System.Web.UI.SkinBuilder GetSkinBuilder(System.Web.UI.Control control) { throw null; }
        public System.Collections.IDictionary GetSkinControlBuildersForControlType(System.Type type) { throw null; }
        public System.Collections.ICollection GetSkinsForControl(System.Type type) { throw null; }
    }
    [System.AttributeUsageAttribute(System.AttributeTargets.Class)]
    public sealed partial class ToolboxDataAttribute : System.Attribute
    {
        public static readonly System.Web.UI.ToolboxDataAttribute Default;
        public ToolboxDataAttribute(string data) { }
        public string Data { get { throw null; } }
        public override bool Equals(object obj) { throw null; }
        public override int GetHashCode() { throw null; }
        public override bool IsDefaultAttribute() { throw null; }
    }
    [System.SerializableAttribute]
    public sealed partial class Triplet
    {
        public object First;
        public object Second;
        public object Third;
        public Triplet() { }
        public Triplet(object x, object y) { }
        public Triplet(object x, object y, object z) { }
    }
    public enum UnobtrusiveValidationMode
    {
        None = 0,
        WebForms = 1,
    }
    [System.AttributeUsageAttribute(System.AttributeTargets.Property)]
    public sealed partial class UrlPropertyAttribute : System.Attribute
    {
        public UrlPropertyAttribute() { }
        public UrlPropertyAttribute(string filter) { }
        public string Filter { get { throw null; } }
        public override bool Equals(object obj) { throw null; }
        public override int GetHashCode() { throw null; }
    }
    [System.ComponentModel.DefaultEventAttribute("Load")]
    [System.ComponentModel.Design.Serialization.DesignerSerializerAttribute("Microsoft.VisualStudio.Web.WebForms.WebFormCodeDomSerializer, Microsoft.VisualStudio.Web, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.ComponentModel.Design.Serialization.TypeCodeDomSerializer, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.DesignerAttribute("Microsoft.VisualStudio.Web.WebForms.WebFormDesigner, Microsoft.VisualStudio.Web, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.ComponentModel.Design.IRootDesigner))]
    [System.ComponentModel.DesignerAttribute("System.Web.UI.Design.UserControlDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.ComponentModel.Design.IDesigner))]
    [System.ComponentModel.DesignerCategoryAttribute("ASPXCodeBehind")]
    [System.ComponentModel.ToolboxItemAttribute(false)]
    [System.Web.UI.ControlBuilderAttribute(typeof(System.Web.UI.UserControlControlBuilder))]
    [System.Web.UI.ParseChildrenAttribute(true)]
    public partial class UserControl : System.Web.UI.TemplateControl, System.Web.UI.IAttributeAccessor, System.Web.UI.INamingContainer, System.Web.UI.IUserControlDesignerAccessor
    {
        public UserControl() { }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public System.Web.HttpApplicationState Application { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public System.Web.UI.AttributeCollection Attributes { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public System.Web.Caching.Cache Cache { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public System.Web.UI.ControlCachePolicy CachePolicy { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public bool IsPostBack { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public System.Web.HttpRequest Request { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public System.Web.HttpResponse Response { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public System.Web.HttpServerUtility Server { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public System.Web.SessionState.HttpSessionState Session { get { throw null; } }
        string System.Web.UI.IUserControlDesignerAccessor.InnerText { get { throw null; } set { } }
        string System.Web.UI.IUserControlDesignerAccessor.TagName { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public System.Web.TraceContext Trace { get { throw null; } }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public void DesignerInitialize() { }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public void InitializeAsUserControl(System.Web.UI.Page page) { }
        protected override void LoadViewState(object savedState) { }
        public string MapPath(string virtualPath) { throw null; }
        protected internal override void OnInit(System.EventArgs e) { }
        protected override object SaveViewState() { throw null; }
        string System.Web.UI.IAttributeAccessor.GetAttribute(string name) { throw null; }
        void System.Web.UI.IAttributeAccessor.SetAttribute(string name, string value) { }
        public virtual bool TryUpdateModel<TModel>(TModel model) where TModel : class { throw null; }
        public virtual bool TryUpdateModel<TModel>(TModel model, System.Web.ModelBinding.IValueProvider valueProvider) where TModel : class { throw null; }
        public virtual void UpdateModel<TModel>(TModel model) where TModel : class { }
        public virtual void UpdateModel<TModel>(TModel model, System.Web.ModelBinding.IValueProvider valueProvider) where TModel : class { }
    }
    public partial class UserControlControlBuilder : System.Web.UI.ControlBuilder
    {
        public UserControlControlBuilder() { }
        public override object BuildObject() { throw null; }
        public override bool NeedsTagInnerText() { throw null; }
        public override void SetTagInnerText(string text) { }
    }
    public enum ValidateRequestMode
    {
        Disabled = 1,
        Enabled = 2,
        Inherit = 0,
    }
    [System.AttributeUsageAttribute(System.AttributeTargets.Class)]
    public sealed partial class ValidationPropertyAttribute : System.Attribute
    {
        public ValidationPropertyAttribute(string name) { }
        public string Name { get { throw null; } }
    }
    public static partial class ValidationSettings
    {
        public static System.Web.UI.UnobtrusiveValidationMode UnobtrusiveValidationMode { get { throw null; } set { } }
    }
    public sealed partial class ValidatorCollection : System.Collections.ICollection, System.Collections.IEnumerable
    {
        public ValidatorCollection() { }
        public int Count { get { throw null; } }
        public bool IsReadOnly { get { throw null; } }
        public bool IsSynchronized { get { throw null; } }
        public System.Web.UI.IValidator this[int index] { get { throw null; } }
        public object SyncRoot { get { throw null; } }
        public void Add(System.Web.UI.IValidator validator) { }
        public bool Contains(System.Web.UI.IValidator validator) { throw null; }
        public void CopyTo(System.Array array, int index) { }
        public System.Collections.IEnumerator GetEnumerator() { throw null; }
        public void Remove(System.Web.UI.IValidator validator) { }
    }
    [System.AttributeUsageAttribute(System.AttributeTargets.Class | System.AttributeTargets.Property, AllowMultiple=true)]
    public sealed partial class VerificationAttribute : System.Attribute
    {
        public VerificationAttribute(string guideline, string checkpoint, System.Web.UI.VerificationReportLevel reportLevel, int priority, string message) { }
        public VerificationAttribute(string guideline, string checkpoint, System.Web.UI.VerificationReportLevel reportLevel, int priority, string message, System.Web.UI.VerificationRule rule, string conditionalProperty) { }
        public VerificationAttribute(string guideline, string checkpoint, System.Web.UI.VerificationReportLevel reportLevel, int priority, string message, System.Web.UI.VerificationRule rule, string conditionalProperty, System.Web.UI.VerificationConditionalOperator conditionalOperator, string conditionalValue, string guidelineUrl) { }
        public string Checkpoint { get { throw null; } }
        public string ConditionalProperty { get { throw null; } }
        public string ConditionalValue { get { throw null; } }
        public string Guideline { get { throw null; } }
        public string GuidelineUrl { get { throw null; } }
        public string Message { get { throw null; } }
        public int Priority { get { throw null; } }
        public System.Web.UI.VerificationConditionalOperator VerificationConditionalOperator { get { throw null; } }
        public System.Web.UI.VerificationReportLevel VerificationReportLevel { get { throw null; } }
        public System.Web.UI.VerificationRule VerificationRule { get { throw null; } }
    }
    public enum VerificationConditionalOperator
    {
        Equals = 0,
        NotEquals = 1,
    }
    public enum VerificationReportLevel
    {
        Error = 0,
        Guideline = 2,
        Warning = 1,
    }
    public enum VerificationRule
    {
        NotEmptyString = 2,
        Prohibited = 1,
        Required = 0,
    }
    public enum ViewStateEncryptionMode
    {
        Always = 1,
        Auto = 0,
        Never = 2,
    }
    [System.SerializableAttribute]
    public sealed partial class ViewStateException : System.Exception, System.Runtime.Serialization.ISerializable
    {
        public ViewStateException() { }
        public bool IsConnected { get { throw null; } }
        public override string Message { get { throw null; } }
        public string Path { get { throw null; } }
        public string PersistedState { get { throw null; } }
        public string Referer { get { throw null; } }
        public string RemoteAddress { get { throw null; } }
        public string RemotePort { get { throw null; } }
        public string UserAgent { get { throw null; } }
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, SerializationFormatter=true)]
        public override void GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) { }
    }
    public enum ViewStateMode
    {
        Disabled = 2,
        Enabled = 1,
        Inherit = 0,
    }
    [System.AttributeUsageAttribute(System.AttributeTargets.Class)]
    public sealed partial class ViewStateModeByIdAttribute : System.Attribute
    {
        public ViewStateModeByIdAttribute() { }
    }
    public enum VirtualReferenceType
    {
        Master = 2,
        Other = 4,
        Page = 0,
        SourceFile = 3,
        UserControl = 1,
    }
    [System.AttributeUsageAttribute(System.AttributeTargets.Assembly, AllowMultiple=true)]
    public sealed partial class WebResourceAttribute : System.Attribute
    {
        public WebResourceAttribute(string webResource, string contentType) { }
        public string CdnPath { get { throw null; } set { } }
        public bool CdnSupportsSecureConnection { get { throw null; } set { } }
        public string ContentType { get { throw null; } }
        public string LoadSuccessExpression { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } [System.Runtime.CompilerServices.CompilerGeneratedAttribute]set { } }
        public bool PerformSubstitution { get { throw null; } set { } }
        public string WebResource { get { throw null; } }
    }
    public partial class WebServiceParser : System.Web.UI.SimpleWebHandlerParser
    {
        internal WebServiceParser() : base (default(System.Web.HttpContext), default(string), default(string)) { }
        protected override string DefaultDirectiveName { get { throw null; } }
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, Unrestricted=true)]
        public static System.Type GetCompiledType(string inputFile, System.Web.HttpContext context) { throw null; }
    }
    public enum XhtmlMobileDocType
    {
        Wml20 = 2,
        XhtmlBasic = 0,
        XhtmlMobileProfile = 1,
    }
    public partial class XhtmlTextWriter : System.Web.UI.HtmlTextWriter
    {
        public XhtmlTextWriter(System.IO.TextWriter writer) : base (default(System.IO.TextWriter)) { }
        public XhtmlTextWriter(System.IO.TextWriter writer, string tabString) : base (default(System.IO.TextWriter)) { }
        protected System.Collections.Hashtable CommonAttributes { get { throw null; } }
        protected System.Collections.Hashtable ElementSpecificAttributes { get { throw null; } }
        protected System.Collections.Hashtable SuppressCommonAttributes { get { throw null; } }
        public virtual void AddRecognizedAttribute(string elementName, string attributeName) { }
        public override bool IsValidFormAttribute(string attributeName) { throw null; }
        protected override bool OnAttributeRender(string name, string value, System.Web.UI.HtmlTextWriterAttribute key) { throw null; }
        protected override bool OnStyleAttributeRender(string name, string value, System.Web.UI.HtmlTextWriterStyle key) { throw null; }
        public virtual void RemoveRecognizedAttribute(string elementName, string attributeName) { }
        public virtual void SetDocType(System.Web.UI.XhtmlMobileDocType docType) { }
        public override void WriteBreak() { }
    }
    public sealed partial class XPathBinder
    {
        internal XPathBinder() { }
        public static object Eval(object container, string xPath) { throw null; }
        public static string Eval(object container, string xPath, string format) { throw null; }
        public static string Eval(object container, string xPath, string format, System.Xml.IXmlNamespaceResolver resolver) { throw null; }
        public static object Eval(object container, string xPath, System.Xml.IXmlNamespaceResolver resolver) { throw null; }
        public static System.Collections.IEnumerable Select(object container, string xPath) { throw null; }
        public static System.Collections.IEnumerable Select(object container, string xPath, System.Xml.IXmlNamespaceResolver resolver) { throw null; }
    }
}
namespace System.Web.UI.Adapters
{
    public abstract partial class ControlAdapter
    {
        protected ControlAdapter() { }
        protected System.Web.HttpBrowserCapabilities Browser { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        protected System.Web.UI.Control Control { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        protected System.Web.UI.Page Page { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        protected System.Web.UI.Adapters.PageAdapter PageAdapter { get { throw null; } }
        protected internal virtual void BeginRender(System.Web.UI.HtmlTextWriter writer) { }
        protected internal virtual void CreateChildControls() { }
        protected internal virtual void EndRender(System.Web.UI.HtmlTextWriter writer) { }
        protected internal virtual void LoadAdapterControlState(object state) { }
        protected internal virtual void LoadAdapterViewState(object state) { }
        protected internal virtual void OnInit(System.EventArgs e) { }
        protected internal virtual void OnLoad(System.EventArgs e) { }
        protected internal virtual void OnPreRender(System.EventArgs e) { }
        protected internal virtual void OnUnload(System.EventArgs e) { }
        protected internal virtual void Render(System.Web.UI.HtmlTextWriter writer) { }
        protected virtual void RenderChildren(System.Web.UI.HtmlTextWriter writer) { }
        protected internal virtual object SaveAdapterControlState() { throw null; }
        protected internal virtual object SaveAdapterViewState() { throw null; }
    }
    public abstract partial class PageAdapter : System.Web.UI.Adapters.ControlAdapter
    {
        protected PageAdapter() { }
        public virtual System.Collections.Specialized.StringCollection CacheVaryByHeaders { get { throw null; } }
        public virtual System.Collections.Specialized.StringCollection CacheVaryByParams { get { throw null; } }
        protected string ClientState { get { throw null; } }
        public virtual System.Collections.Specialized.NameValueCollection DeterminePostBackMode() { throw null; }
        public virtual System.Collections.Specialized.NameValueCollection DeterminePostBackModeUnvalidated() { throw null; }
        protected internal virtual string GetPostBackFormReference(string formId) { throw null; }
        public virtual System.Collections.ICollection GetRadioButtonsByGroup(string groupName) { throw null; }
        public virtual System.Web.UI.PageStatePersister GetStatePersister() { throw null; }
        public virtual void RegisterRadioButton(System.Web.UI.WebControls.RadioButton radioButton) { }
        public virtual void RenderBeginHyperlink(System.Web.UI.HtmlTextWriter writer, string targetUrl, bool encodeUrl, string softkeyLabel) { }
        public virtual void RenderBeginHyperlink(System.Web.UI.HtmlTextWriter writer, string targetUrl, bool encodeUrl, string softkeyLabel, string accessKey) { }
        public virtual void RenderEndHyperlink(System.Web.UI.HtmlTextWriter writer) { }
        public virtual void RenderPostBackEvent(System.Web.UI.HtmlTextWriter writer, string target, string argument, string softkeyLabel, string text) { }
        public virtual void RenderPostBackEvent(System.Web.UI.HtmlTextWriter writer, string target, string argument, string softkeyLabel, string text, string postUrl, string accessKey) { }
        protected void RenderPostBackEvent(System.Web.UI.HtmlTextWriter writer, string target, string argument, string softkeyLabel, string text, string postUrl, string accessKey, bool encode) { }
        public virtual string TransformText(string text) { throw null; }
    }
}
namespace System.Web.UI.HtmlControls
{
    [System.ComponentModel.DefaultEventAttribute("ServerClick")]
    [System.Web.UI.SupportsEventValidationAttribute]
    public partial class HtmlAnchor : System.Web.UI.HtmlControls.HtmlContainerControl, System.Web.UI.IPostBackEventHandler
    {
        public HtmlAnchor() { }
        [System.ComponentModel.DefaultValueAttribute(true)]
        public virtual bool CausesValidation { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Web.UI.UrlPropertyAttribute]
        public string HRef { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public string Name { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public string Target { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.ComponentModel.LocalizableAttribute(true)]
        public string Title { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        public virtual string ValidationGroup { get { throw null; } set { } }
        public event System.EventHandler ServerClick { add { } remove { } }
        protected internal override void OnPreRender(System.EventArgs e) { }
        protected virtual void OnServerClick(System.EventArgs e) { }
        protected virtual void RaisePostBackEvent(string eventArgument) { }
        protected override void RenderAttributes(System.Web.UI.HtmlTextWriter writer) { }
        void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(string eventArgument) { }
    }
    [System.Web.UI.ControlBuilderAttribute(typeof(System.Web.UI.HtmlControls.HtmlEmptyTagControlBuilder))]
    public partial class HtmlArea : System.Web.UI.HtmlControls.HtmlControl
    {
        public HtmlArea() { }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Web.UI.UrlPropertyAttribute]
        public string Href { get { throw null; } set { } }
        protected override void RenderAttributes(System.Web.UI.HtmlTextWriter writer) { }
    }
    public partial class HtmlAudio : System.Web.UI.HtmlControls.HtmlContainerControl
    {
        public HtmlAudio() { }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Web.UI.UrlPropertyAttribute]
        public string Src { get { throw null; } set { } }
        protected override void RenderAttributes(System.Web.UI.HtmlTextWriter writer) { }
    }
    [System.ComponentModel.DefaultEventAttribute("ServerClick")]
    [System.Web.UI.SupportsEventValidationAttribute]
    public partial class HtmlButton : System.Web.UI.HtmlControls.HtmlContainerControl, System.Web.UI.IPostBackEventHandler
    {
        public HtmlButton() { }
        [System.ComponentModel.DefaultValueAttribute(true)]
        public virtual bool CausesValidation { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        public virtual string ValidationGroup { get { throw null; } set { } }
        public event System.EventHandler ServerClick { add { } remove { } }
        protected internal override void OnPreRender(System.EventArgs e) { }
        protected virtual void OnServerClick(System.EventArgs e) { }
        protected virtual void RaisePostBackEvent(string eventArgument) { }
        protected override void RenderAttributes(System.Web.UI.HtmlTextWriter writer) { }
        void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(string eventArgument) { }
    }
    public abstract partial class HtmlContainerControl : System.Web.UI.HtmlControls.HtmlControl
    {
        protected HtmlContainerControl() { }
        public HtmlContainerControl(string tag) { }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public virtual string InnerHtml { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public virtual string InnerText { get { throw null; } set { } }
        protected override System.Web.UI.ControlCollection CreateControlCollection() { throw null; }
        protected override void LoadViewState(object savedState) { }
        protected internal override void Render(System.Web.UI.HtmlTextWriter writer) { }
        protected override void RenderAttributes(System.Web.UI.HtmlTextWriter writer) { }
        protected virtual void RenderEndTag(System.Web.UI.HtmlTextWriter writer) { }
    }
    [System.ComponentModel.DesignerAttribute("System.Web.UI.Design.HtmlIntrinsicControlDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.ToolboxItemAttribute(false)]
    public abstract partial class HtmlControl : System.Web.UI.Control, System.Web.UI.IAttributeAccessor
    {
        protected HtmlControl() { }
        protected HtmlControl(string tag) { }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public System.Web.UI.AttributeCollection Attributes { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.ComponentModel.TypeConverterAttribute("System.Web.UI.MinimizableAttributeTypeConverter")]
        public bool Disabled { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public System.Web.UI.CssStyleCollection Style { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public virtual string TagName { get { throw null; } }
        protected override bool ViewStateIgnoresCase { get { throw null; } }
        protected override System.Web.UI.ControlCollection CreateControlCollection() { throw null; }
        protected virtual string GetAttribute(string name) { throw null; }
        protected internal override void Render(System.Web.UI.HtmlTextWriter writer) { }
        protected virtual void RenderAttributes(System.Web.UI.HtmlTextWriter writer) { }
        protected virtual void RenderBeginTag(System.Web.UI.HtmlTextWriter writer) { }
        protected virtual void SetAttribute(string name, string value) { }
        string System.Web.UI.IAttributeAccessor.GetAttribute(string name) { throw null; }
        void System.Web.UI.IAttributeAccessor.SetAttribute(string name, string value) { }
    }
    public partial class HtmlElement : System.Web.UI.HtmlControls.HtmlContainerControl
    {
        public HtmlElement() { }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Web.UI.UrlPropertyAttribute]
        public string Manifest { get { throw null; } set { } }
        protected override void RenderAttributes(System.Web.UI.HtmlTextWriter writer) { }
    }
    public partial class HtmlEmbed : System.Web.UI.HtmlControls.HtmlContainerControl
    {
        public HtmlEmbed() { }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Web.UI.UrlPropertyAttribute]
        public string Src { get { throw null; } set { } }
        protected override void RenderAttributes(System.Web.UI.HtmlTextWriter writer) { }
    }
    public sealed partial class HtmlEmptyTagControlBuilder : System.Web.UI.ControlBuilder
    {
        public HtmlEmptyTagControlBuilder() { }
        public override bool HasBody() { throw null; }
    }
    public partial class HtmlForm : System.Web.UI.HtmlControls.HtmlContainerControl
    {
        public HtmlForm() { }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public string Action { get { throw null; } set { } }
        public override string ClientID { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute("")]
        public string DefaultButton { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        public string DefaultFocus { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public string Enctype { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public string Method { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public virtual string Name { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(false)]
        public virtual bool SubmitDisabledControls { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public string Target { get { throw null; } set { } }
        public override string UniqueID { get { throw null; } }
        protected override System.Web.UI.ControlCollection CreateControlCollection() { throw null; }
        protected internal override void OnInit(System.EventArgs e) { }
        protected internal override void OnPreRender(System.EventArgs e) { }
        protected internal override void Render(System.Web.UI.HtmlTextWriter output) { }
        protected override void RenderAttributes(System.Web.UI.HtmlTextWriter writer) { }
        protected internal override void RenderChildren(System.Web.UI.HtmlTextWriter writer) { }
        public override void RenderControl(System.Web.UI.HtmlTextWriter writer) { }
    }
    [System.Web.UI.ConstructorNeedsTagAttribute(true)]
    public partial class HtmlGenericControl : System.Web.UI.HtmlControls.HtmlContainerControl
    {
        public HtmlGenericControl() { }
        public HtmlGenericControl(string tag) { }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new string TagName { get { throw null; } set { } }
    }
    [System.Web.UI.ControlBuilderAttribute(typeof(System.Web.UI.HtmlControls.HtmlHeadBuilder))]
    public sealed partial class HtmlHead : System.Web.UI.HtmlControls.HtmlGenericControl
    {
        public HtmlHead() { }
        public HtmlHead(string tag) { }
        public string Description { get { throw null; } set { } }
        public string Keywords { get { throw null; } set { } }
        public System.Web.UI.IStyleSheet StyleSheet { get { throw null; } }
        public string Title { get { throw null; } set { } }
        protected internal override void AddedControl(System.Web.UI.Control control, int index) { }
        protected internal override void OnInit(System.EventArgs e) { }
        protected internal override void RemovedControl(System.Web.UI.Control control) { }
        protected internal override void RenderChildren(System.Web.UI.HtmlTextWriter writer) { }
    }
    public partial class HtmlHeadBuilder : System.Web.UI.ControlBuilder
    {
        public HtmlHeadBuilder() { }
        public override bool AllowWhitespaceLiterals() { throw null; }
        public override System.Type GetChildControlType(string tagName, System.Collections.IDictionary attribs) { throw null; }
    }
    public partial class HtmlIframe : System.Web.UI.HtmlControls.HtmlContainerControl
    {
        public HtmlIframe() { }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Web.UI.UrlPropertyAttribute]
        public string Src { get { throw null; } set { } }
        protected override void RenderAttributes(System.Web.UI.HtmlTextWriter writer) { }
    }
    [System.Web.UI.ControlBuilderAttribute(typeof(System.Web.UI.HtmlControls.HtmlEmptyTagControlBuilder))]
    public partial class HtmlImage : System.Web.UI.HtmlControls.HtmlControl
    {
        public HtmlImage() { }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public string Align { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.ComponentModel.LocalizableAttribute(true)]
        public string Alt { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(0)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public int Border { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(100)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public int Height { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Web.UI.UrlPropertyAttribute]
        public string Src { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(100)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public int Width { get { throw null; } set { } }
        protected override void RenderAttributes(System.Web.UI.HtmlTextWriter writer) { }
    }
    [System.ComponentModel.DefaultEventAttribute("ServerClick")]
    [System.Web.UI.SupportsEventValidationAttribute]
    public partial class HtmlInputButton : System.Web.UI.HtmlControls.HtmlInputControl, System.Web.UI.IPostBackEventHandler
    {
        public HtmlInputButton() : base (default(string)) { }
        public HtmlInputButton(string type) : base (default(string)) { }
        [System.ComponentModel.DefaultValueAttribute(true)]
        public virtual bool CausesValidation { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        public virtual string ValidationGroup { get { throw null; } set { } }
        public event System.EventHandler ServerClick { add { } remove { } }
        protected internal override void OnPreRender(System.EventArgs e) { }
        protected virtual void OnServerClick(System.EventArgs e) { }
        protected virtual void RaisePostBackEvent(string eventArgument) { }
        protected override void RenderAttributes(System.Web.UI.HtmlTextWriter writer) { }
        void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(string eventArgument) { }
    }
    [System.ComponentModel.DefaultEventAttribute("ServerChange")]
    [System.Web.UI.SupportsEventValidationAttribute]
    public partial class HtmlInputCheckBox : System.Web.UI.HtmlControls.HtmlInputControl, System.Web.UI.IPostBackDataHandler
    {
        public HtmlInputCheckBox() : base (default(string)) { }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.ComponentModel.TypeConverterAttribute("System.Web.UI.MinimizableAttributeTypeConverter")]
        public bool Checked { get { throw null; } set { } }
        public event System.EventHandler ServerChange { add { } remove { } }
        protected virtual bool LoadPostData(string postDataKey, System.Collections.Specialized.NameValueCollection postCollection) { throw null; }
        protected internal override void OnPreRender(System.EventArgs e) { }
        protected virtual void OnServerChange(System.EventArgs e) { }
        protected virtual void RaisePostDataChangedEvent() { }
        protected override void RenderAttributes(System.Web.UI.HtmlTextWriter writer) { }
        bool System.Web.UI.IPostBackDataHandler.LoadPostData(string postDataKey, System.Collections.Specialized.NameValueCollection postCollection) { throw null; }
        void System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent() { }
    }
    [System.Web.UI.ControlBuilderAttribute(typeof(System.Web.UI.HtmlControls.HtmlEmptyTagControlBuilder))]
    public abstract partial class HtmlInputControl : System.Web.UI.HtmlControls.HtmlControl
    {
        protected HtmlInputControl(string type) { }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public virtual string Name { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public string Type { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public virtual string Value { get { throw null; } set { } }
        protected override void RenderAttributes(System.Web.UI.HtmlTextWriter writer) { }
    }
    [System.Web.UI.ValidationPropertyAttribute("Value")]
    public partial class HtmlInputFile : System.Web.UI.HtmlControls.HtmlInputControl, System.Web.UI.IPostBackDataHandler
    {
        public HtmlInputFile() : base (default(string)) { }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public string Accept { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public int MaxLength { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public System.Web.HttpPostedFile PostedFile { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(-1)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public int Size { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        public override string Value { get { throw null; } set { } }
        protected virtual bool LoadPostData(string postDataKey, System.Collections.Specialized.NameValueCollection postCollection) { throw null; }
        protected internal override void OnPreRender(System.EventArgs e) { }
        protected virtual void RaisePostDataChangedEvent() { }
        bool System.Web.UI.IPostBackDataHandler.LoadPostData(string postDataKey, System.Collections.Specialized.NameValueCollection postCollection) { throw null; }
        void System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent() { }
    }
    [System.ComponentModel.DefaultEventAttribute("ServerChange")]
    [System.Web.UI.ValidationPropertyAttribute("Value")]
    public partial class HtmlInputGenericControl : System.Web.UI.HtmlControls.HtmlInputControl, System.Web.UI.IPostBackDataHandler
    {
        public HtmlInputGenericControl() : base (default(string)) { }
        public HtmlInputGenericControl(string type) : base (default(string)) { }
        public event System.EventHandler ServerChange { add { } remove { } }
        protected virtual bool LoadPostData(string postDataKey, System.Collections.Specialized.NameValueCollection postCollection) { throw null; }
        protected internal override void OnPreRender(System.EventArgs e) { }
        protected virtual void OnServerChange(System.EventArgs e) { }
        protected virtual void RaisePostDataChangedEvent() { }
        bool System.Web.UI.IPostBackDataHandler.LoadPostData(string postDataKey, System.Collections.Specialized.NameValueCollection postCollection) { throw null; }
        void System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent() { }
    }
    [System.ComponentModel.DefaultEventAttribute("ServerChange")]
    [System.Web.UI.SupportsEventValidationAttribute]
    public partial class HtmlInputHidden : System.Web.UI.HtmlControls.HtmlInputControl, System.Web.UI.IPostBackDataHandler
    {
        public HtmlInputHidden() : base (default(string)) { }
        public event System.EventHandler ServerChange { add { } remove { } }
        protected virtual bool LoadPostData(string postDataKey, System.Collections.Specialized.NameValueCollection postCollection) { throw null; }
        protected internal override void OnPreRender(System.EventArgs e) { }
        protected virtual void OnServerChange(System.EventArgs e) { }
        protected virtual void RaisePostDataChangedEvent() { }
        protected override void RenderAttributes(System.Web.UI.HtmlTextWriter writer) { }
        bool System.Web.UI.IPostBackDataHandler.LoadPostData(string postDataKey, System.Collections.Specialized.NameValueCollection postCollection) { throw null; }
        void System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent() { }
    }
    [System.ComponentModel.DefaultEventAttribute("ServerClick")]
    [System.Web.UI.SupportsEventValidationAttribute]
    public partial class HtmlInputImage : System.Web.UI.HtmlControls.HtmlInputControl, System.Web.UI.IPostBackDataHandler, System.Web.UI.IPostBackEventHandler
    {
        public HtmlInputImage() : base (default(string)) { }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public string Align { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.ComponentModel.LocalizableAttribute(true)]
        public string Alt { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(-1)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public int Border { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(true)]
        public virtual bool CausesValidation { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Web.UI.UrlPropertyAttribute]
        public string Src { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        public virtual string ValidationGroup { get { throw null; } set { } }
        public event System.Web.UI.ImageClickEventHandler ServerClick { add { } remove { } }
        protected virtual bool LoadPostData(string postDataKey, System.Collections.Specialized.NameValueCollection postCollection) { throw null; }
        protected internal override void OnPreRender(System.EventArgs e) { }
        protected virtual void OnServerClick(System.Web.UI.ImageClickEventArgs e) { }
        protected virtual void RaisePostBackEvent(string eventArgument) { }
        protected virtual void RaisePostDataChangedEvent() { }
        protected override void RenderAttributes(System.Web.UI.HtmlTextWriter writer) { }
        bool System.Web.UI.IPostBackDataHandler.LoadPostData(string postDataKey, System.Collections.Specialized.NameValueCollection postCollection) { throw null; }
        void System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent() { }
        void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(string eventArgument) { }
    }
    [System.ComponentModel.DefaultEventAttribute("ServerChange")]
    [System.Web.UI.SupportsEventValidationAttribute]
    [System.Web.UI.ValidationPropertyAttribute("Value")]
    public partial class HtmlInputPassword : System.Web.UI.HtmlControls.HtmlInputText, System.Web.UI.IPostBackDataHandler
    {
        public HtmlInputPassword() { }
        protected override void RenderAttributes(System.Web.UI.HtmlTextWriter writer) { }
    }
    [System.ComponentModel.DefaultEventAttribute("ServerChange")]
    [System.Web.UI.SupportsEventValidationAttribute]
    public partial class HtmlInputRadioButton : System.Web.UI.HtmlControls.HtmlInputControl, System.Web.UI.IPostBackDataHandler
    {
        public HtmlInputRadioButton() : base (default(string)) { }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public bool Checked { get { throw null; } set { } }
        public override string Name { get { throw null; } set { } }
        public override string Value { get { throw null; } set { } }
        public event System.EventHandler ServerChange { add { } remove { } }
        protected virtual bool LoadPostData(string postDataKey, System.Collections.Specialized.NameValueCollection postCollection) { throw null; }
        protected internal override void OnPreRender(System.EventArgs e) { }
        protected virtual void OnServerChange(System.EventArgs e) { }
        protected virtual void RaisePostDataChangedEvent() { }
        protected override void RenderAttributes(System.Web.UI.HtmlTextWriter writer) { }
        bool System.Web.UI.IPostBackDataHandler.LoadPostData(string postDataKey, System.Collections.Specialized.NameValueCollection postCollection) { throw null; }
        void System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent() { }
    }
    [System.ComponentModel.DefaultEventAttribute("")]
    [System.Web.UI.SupportsEventValidationAttribute]
    public partial class HtmlInputReset : System.Web.UI.HtmlControls.HtmlInputButton
    {
        public HtmlInputReset() { }
        public HtmlInputReset(string type) { }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override bool CausesValidation { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override string ValidationGroup { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public new event System.EventHandler ServerClick { add { } remove { } }
    }
    [System.ComponentModel.DefaultEventAttribute("ServerClick")]
    [System.Web.UI.SupportsEventValidationAttribute]
    public partial class HtmlInputSubmit : System.Web.UI.HtmlControls.HtmlInputButton, System.Web.UI.IPostBackEventHandler
    {
        public HtmlInputSubmit() { }
        public HtmlInputSubmit(string type) { }
    }
    [System.ComponentModel.DefaultEventAttribute("ServerChange")]
    [System.Web.UI.SupportsEventValidationAttribute]
    [System.Web.UI.ValidationPropertyAttribute("Value")]
    public partial class HtmlInputText : System.Web.UI.HtmlControls.HtmlInputControl, System.Web.UI.IPostBackDataHandler
    {
        public HtmlInputText() : base (default(string)) { }
        public HtmlInputText(string type) : base (default(string)) { }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public int MaxLength { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(-1)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public int Size { get { throw null; } set { } }
        public override string Value { get { throw null; } set { } }
        public event System.EventHandler ServerChange { add { } remove { } }
        protected virtual bool LoadPostData(string postDataKey, System.Collections.Specialized.NameValueCollection postCollection) { throw null; }
        protected internal override void OnPreRender(System.EventArgs e) { }
        protected virtual void OnServerChange(System.EventArgs e) { }
        protected virtual void RaisePostDataChangedEvent() { }
        protected override void RenderAttributes(System.Web.UI.HtmlTextWriter writer) { }
        bool System.Web.UI.IPostBackDataHandler.LoadPostData(string postDataKey, System.Collections.Specialized.NameValueCollection postCollection) { throw null; }
        void System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent() { }
    }
    [System.Web.UI.ControlBuilderAttribute(typeof(System.Web.UI.HtmlControls.HtmlEmptyTagControlBuilder))]
    public partial class HtmlLink : System.Web.UI.HtmlControls.HtmlControl
    {
        public HtmlLink() { }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Web.UI.UrlPropertyAttribute]
        public virtual string Href { get { throw null; } set { } }
        protected internal override void Render(System.Web.UI.HtmlTextWriter writer) { }
        protected override void RenderAttributes(System.Web.UI.HtmlTextWriter writer) { }
    }
    [System.Web.UI.ControlBuilderAttribute(typeof(System.Web.UI.HtmlControls.HtmlEmptyTagControlBuilder))]
    public partial class HtmlMeta : System.Web.UI.HtmlControls.HtmlControl
    {
        public HtmlMeta() { }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public virtual string Content { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public virtual string HttpEquiv { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public virtual string Name { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public virtual string Scheme { get { throw null; } set { } }
        protected internal override void Render(System.Web.UI.HtmlTextWriter writer) { }
    }
    [System.ComponentModel.DefaultEventAttribute("ServerChange")]
    [System.Web.UI.ControlBuilderAttribute(typeof(System.Web.UI.HtmlControls.HtmlSelectBuilder))]
    [System.Web.UI.SupportsEventValidationAttribute]
    [System.Web.UI.ValidationPropertyAttribute("Value")]
    public partial class HtmlSelect : System.Web.UI.HtmlControls.HtmlContainerControl, System.Web.UI.IParserAccessor, System.Web.UI.IPostBackDataHandler
    {
        public HtmlSelect() { }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public virtual string DataMember { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public virtual object DataSource { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        public virtual string DataSourceID { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        public virtual string DataTextField { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        public virtual string DataValueField { get { throw null; } set { } }
        public override string InnerHtml { get { throw null; } set { } }
        public override string InnerText { get { throw null; } set { } }
        protected bool IsBoundUsingDataSourceID { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public System.Web.UI.WebControls.ListItemCollection Items { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public bool Multiple { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public string Name { get { throw null; } set { } }
        protected bool RequiresDataBinding { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public virtual int SelectedIndex { get { throw null; } set { } }
        protected virtual int[] SelectedIndices { get { throw null; } }
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public int Size { get { throw null; } set { } }
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public string Value { get { throw null; } set { } }
        public event System.EventHandler ServerChange { add { } remove { } }
        protected override void AddParsedSubObject(object obj) { }
        protected virtual void ClearSelection() { }
        protected override System.Web.UI.ControlCollection CreateControlCollection() { throw null; }
        protected void EnsureDataBound() { }
        protected virtual System.Collections.IEnumerable GetData() { throw null; }
        protected virtual bool LoadPostData(string postDataKey, System.Collections.Specialized.NameValueCollection postCollection) { throw null; }
        protected override void LoadViewState(object savedState) { }
        protected override void OnDataBinding(System.EventArgs e) { }
        protected virtual void OnDataPropertyChanged() { }
        protected virtual void OnDataSourceViewChanged(object sender, System.EventArgs e) { }
        protected internal override void OnInit(System.EventArgs e) { }
        protected internal override void OnLoad(System.EventArgs e) { }
        protected internal override void OnPreRender(System.EventArgs e) { }
        protected virtual void OnServerChange(System.EventArgs e) { }
        protected virtual void RaisePostDataChangedEvent() { }
        protected override void RenderAttributes(System.Web.UI.HtmlTextWriter writer) { }
        protected internal override void RenderChildren(System.Web.UI.HtmlTextWriter writer) { }
        protected override object SaveViewState() { throw null; }
        protected virtual void Select(int[] selectedIndices) { }
        bool System.Web.UI.IPostBackDataHandler.LoadPostData(string postDataKey, System.Collections.Specialized.NameValueCollection postCollection) { throw null; }
        void System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent() { }
        protected override void TrackViewState() { }
    }
    public partial class HtmlSelectBuilder : System.Web.UI.ControlBuilder
    {
        public HtmlSelectBuilder() { }
        public override bool AllowWhitespaceLiterals() { throw null; }
        public override System.Type GetChildControlType(string tagName, System.Collections.IDictionary attribs) { throw null; }
    }
    [System.Web.UI.ControlBuilderAttribute(typeof(System.Web.UI.HtmlControls.HtmlEmptyTagControlBuilder))]
    public partial class HtmlSource : System.Web.UI.HtmlControls.HtmlControl
    {
        public HtmlSource() { }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Web.UI.UrlPropertyAttribute]
        public string Src { get { throw null; } set { } }
        protected override void RenderAttributes(System.Web.UI.HtmlTextWriter writer) { }
    }
    [System.Web.UI.ParseChildrenAttribute(true, "Rows")]
    public partial class HtmlTable : System.Web.UI.HtmlControls.HtmlContainerControl
    {
        public HtmlTable() { }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public string Align { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public string BgColor { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(-1)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public int Border { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public string BorderColor { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public int CellPadding { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public int CellSpacing { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public string Height { get { throw null; } set { } }
        public override string InnerHtml { get { throw null; } set { } }
        public override string InnerText { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public virtual System.Web.UI.HtmlControls.HtmlTableRowCollection Rows { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public string Width { get { throw null; } set { } }
        protected override System.Web.UI.ControlCollection CreateControlCollection() { throw null; }
        protected internal override void RenderChildren(System.Web.UI.HtmlTextWriter writer) { }
        protected override void RenderEndTag(System.Web.UI.HtmlTextWriter writer) { }
        protected partial class HtmlTableRowControlCollection : System.Web.UI.ControlCollection
        {
            internal HtmlTableRowControlCollection() : base (default(System.Web.UI.Control)) { }
            public override void Add(System.Web.UI.Control child) { }
            public override void AddAt(int index, System.Web.UI.Control child) { }
        }
    }
    [System.Web.UI.ConstructorNeedsTagAttribute(true)]
    public partial class HtmlTableCell : System.Web.UI.HtmlControls.HtmlContainerControl
    {
        public HtmlTableCell() { }
        public HtmlTableCell(string tagName) { }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public string Align { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public string BgColor { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public string BorderColor { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public int ColSpan { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public string Height { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.ComponentModel.TypeConverterAttribute("System.Web.UI.MinimizableAttributeTypeConverter")]
        public bool NoWrap { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public int RowSpan { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public string VAlign { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public string Width { get { throw null; } set { } }
        protected override void RenderEndTag(System.Web.UI.HtmlTextWriter writer) { }
    }
    public sealed partial class HtmlTableCellCollection : System.Collections.ICollection, System.Collections.IEnumerable
    {
        internal HtmlTableCellCollection() { }
        public int Count { get { throw null; } }
        public bool IsReadOnly { get { throw null; } }
        public bool IsSynchronized { get { throw null; } }
        public System.Web.UI.HtmlControls.HtmlTableCell this[int index] { get { throw null; } }
        public object SyncRoot { get { throw null; } }
        public void Add(System.Web.UI.HtmlControls.HtmlTableCell cell) { }
        public void Clear() { }
        public void CopyTo(System.Array array, int index) { }
        public System.Collections.IEnumerator GetEnumerator() { throw null; }
        public void Insert(int index, System.Web.UI.HtmlControls.HtmlTableCell cell) { }
        public void Remove(System.Web.UI.HtmlControls.HtmlTableCell cell) { }
        public void RemoveAt(int index) { }
    }
    [System.Web.UI.ParseChildrenAttribute(true, "Cells")]
    public partial class HtmlTableRow : System.Web.UI.HtmlControls.HtmlContainerControl
    {
        public HtmlTableRow() { }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public string Align { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public string BgColor { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public string BorderColor { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public virtual System.Web.UI.HtmlControls.HtmlTableCellCollection Cells { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public string Height { get { throw null; } set { } }
        public override string InnerHtml { get { throw null; } set { } }
        public override string InnerText { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public string VAlign { get { throw null; } set { } }
        protected override System.Web.UI.ControlCollection CreateControlCollection() { throw null; }
        protected internal override void RenderChildren(System.Web.UI.HtmlTextWriter writer) { }
        protected override void RenderEndTag(System.Web.UI.HtmlTextWriter writer) { }
        protected partial class HtmlTableCellControlCollection : System.Web.UI.ControlCollection
        {
            internal HtmlTableCellControlCollection() : base (default(System.Web.UI.Control)) { }
            public override void Add(System.Web.UI.Control child) { }
            public override void AddAt(int index, System.Web.UI.Control child) { }
        }
    }
    public sealed partial class HtmlTableRowCollection : System.Collections.ICollection, System.Collections.IEnumerable
    {
        internal HtmlTableRowCollection() { }
        public int Count { get { throw null; } }
        public bool IsReadOnly { get { throw null; } }
        public bool IsSynchronized { get { throw null; } }
        public System.Web.UI.HtmlControls.HtmlTableRow this[int index] { get { throw null; } }
        public object SyncRoot { get { throw null; } }
        public void Add(System.Web.UI.HtmlControls.HtmlTableRow row) { }
        public void Clear() { }
        public void CopyTo(System.Array array, int index) { }
        public System.Collections.IEnumerator GetEnumerator() { throw null; }
        public void Insert(int index, System.Web.UI.HtmlControls.HtmlTableRow row) { }
        public void Remove(System.Web.UI.HtmlControls.HtmlTableRow row) { }
        public void RemoveAt(int index) { }
    }
    [System.ComponentModel.DefaultEventAttribute("ServerChange")]
    [System.Web.UI.SupportsEventValidationAttribute]
    [System.Web.UI.ValidationPropertyAttribute("Value")]
    public partial class HtmlTextArea : System.Web.UI.HtmlControls.HtmlContainerControl, System.Web.UI.IPostBackDataHandler
    {
        public HtmlTextArea() { }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public int Cols { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public virtual string Name { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public int Rows { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public string Value { get { throw null; } set { } }
        public event System.EventHandler ServerChange { add { } remove { } }
        protected override void AddParsedSubObject(object obj) { }
        protected virtual bool LoadPostData(string postDataKey, System.Collections.Specialized.NameValueCollection postCollection) { throw null; }
        protected internal override void OnPreRender(System.EventArgs e) { }
        protected virtual void OnServerChange(System.EventArgs e) { }
        protected virtual void RaisePostDataChangedEvent() { }
        protected override void RenderAttributes(System.Web.UI.HtmlTextWriter writer) { }
        bool System.Web.UI.IPostBackDataHandler.LoadPostData(string postDataKey, System.Collections.Specialized.NameValueCollection postCollection) { throw null; }
        void System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent() { }
    }
    public partial class HtmlTitle : System.Web.UI.HtmlControls.HtmlControl
    {
        public HtmlTitle() { }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.ComponentModel.LocalizableAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerDefaultProperty)]
        public virtual string Text { get { throw null; } set { } }
        protected override void AddParsedSubObject(object obj) { }
        protected override System.Web.UI.ControlCollection CreateControlCollection() { throw null; }
        protected internal override void Render(System.Web.UI.HtmlTextWriter writer) { }
    }
    [System.Web.UI.ControlBuilderAttribute(typeof(System.Web.UI.HtmlControls.HtmlEmptyTagControlBuilder))]
    public partial class HtmlTrack : System.Web.UI.HtmlControls.HtmlControl
    {
        public HtmlTrack() { }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Web.UI.UrlPropertyAttribute]
        public string Src { get { throw null; } set { } }
        protected override void RenderAttributes(System.Web.UI.HtmlTextWriter writer) { }
    }
    public partial class HtmlVideo : System.Web.UI.HtmlControls.HtmlContainerControl
    {
        public HtmlVideo() { }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Web.UI.UrlPropertyAttribute]
        public string Poster { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Web.UI.UrlPropertyAttribute]
        public string Src { get { throw null; } set { } }
        protected override void RenderAttributes(System.Web.UI.HtmlTextWriter writer) { }
    }
}
namespace System.Web.UI.WebControls
{
    [System.ComponentModel.DesignerAttribute("System.Web.UI.Design.WebControls.AccessDataSourceDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.Drawing.ToolboxBitmapAttribute(typeof(System.Web.UI.WebControls.AccessDataSource))]
    public partial class AccessDataSource : System.Web.UI.WebControls.SqlDataSource
    {
        public AccessDataSource() { }
        public AccessDataSource(string dataFile, string selectCommand) { }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public override string ConnectionString { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.MdbDataFileEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.UrlPropertyAttribute]
        public string DataFile { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public override string ProviderName { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public override string SqlCacheDependency { get { throw null; } set { } }
        protected override System.Web.UI.WebControls.SqlDataSourceView CreateDataSourceView(string viewName) { throw null; }
        protected override System.Data.Common.DbProviderFactory GetDbProviderFactory() { throw null; }
    }
    public partial class AccessDataSourceView : System.Web.UI.WebControls.SqlDataSourceView
    {
        public AccessDataSourceView(System.Web.UI.WebControls.AccessDataSource owner, string name, System.Web.HttpContext context) : base (default(System.Web.UI.WebControls.SqlDataSource), default(string), default(System.Web.HttpContext)) { }
        protected internal override System.Collections.IEnumerable ExecuteSelect(System.Web.UI.DataSourceSelectArguments arguments) { throw null; }
    }
    public partial class AdCreatedEventArgs : System.EventArgs
    {
        public AdCreatedEventArgs(System.Collections.IDictionary adProperties) { }
        public System.Collections.IDictionary AdProperties { get { throw null; } }
        public string AlternateText { get { throw null; } set { } }
        public string ImageUrl { get { throw null; } set { } }
        public string NavigateUrl { get { throw null; } set { } }
    }
    public delegate void AdCreatedEventHandler(object sender, System.Web.UI.WebControls.AdCreatedEventArgs e);
    [System.ComponentModel.DefaultEventAttribute("AdCreated")]
    [System.ComponentModel.DefaultPropertyAttribute("AdvertisementFile")]
    [System.ComponentModel.DesignerAttribute("System.Web.UI.Design.WebControls.AdRotatorDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.Web.UI.ToolboxDataAttribute("<{0}:AdRotator runat=\"server\"></{0}:AdRotator>")]
    public partial class AdRotator : System.Web.UI.WebControls.DataBoundControl
    {
        public AdRotator() { }
        [System.ComponentModel.BindableAttribute(true)]
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.XmlUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.UrlPropertyAttribute]
        public string AdvertisementFile { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("AlternateText")]
        public string AlternateTextField { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override System.Web.UI.WebControls.FontInfo Font { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute("ImageUrl")]
        public string ImageUrlField { get { throw null; } set { } }
        [System.ComponentModel.BindableAttribute(true)]
        [System.ComponentModel.DefaultValueAttribute("")]
        public string KeywordFilter { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("NavigateUrl")]
        public string NavigateUrlField { get { throw null; } set { } }
        protected override System.Web.UI.HtmlTextWriterTag TagKey { get { throw null; } }
        [System.ComponentModel.BindableAttribute(true)]
        [System.ComponentModel.DefaultValueAttribute("_top")]
        [System.ComponentModel.TypeConverterAttribute(typeof(System.Web.UI.WebControls.TargetConverter))]
        public string Target { get { throw null; } set { } }
        public override string UniqueID { get { throw null; } }
        public event System.Web.UI.WebControls.AdCreatedEventHandler AdCreated { add { } remove { } }
        protected virtual void OnAdCreated(System.Web.UI.WebControls.AdCreatedEventArgs e) { }
        protected internal override void OnInit(System.EventArgs e) { }
        protected internal override void OnPreRender(System.EventArgs e) { }
        protected internal override void PerformDataBinding(System.Collections.IEnumerable data) { }
        protected override void PerformSelect() { }
        protected internal override void Render(System.Web.UI.HtmlTextWriter writer) { }
    }
    public partial class AssociatedControlConverter : System.Web.UI.WebControls.ControlIDConverter
    {
        public AssociatedControlConverter() { }
        protected override bool FilterControl(System.Web.UI.Control control) { throw null; }
    }
    public partial class AuthenticateEventArgs : System.EventArgs
    {
        public AuthenticateEventArgs() { }
        public AuthenticateEventArgs(bool authenticated) { }
        public bool Authenticated { get { throw null; } set { } }
    }
    public delegate void AuthenticateEventHandler(object sender, System.Web.UI.WebControls.AuthenticateEventArgs e);
    public enum AutoCompleteType
    {
        BusinessCity = 23,
        BusinessCountryRegion = 24,
        BusinessFax = 25,
        BusinessPhone = 26,
        BusinessState = 27,
        BusinessStreetAddress = 28,
        BusinessUrl = 29,
        BusinessZipCode = 30,
        Cellular = 2,
        Company = 3,
        Department = 4,
        Disabled = 1,
        DisplayName = 5,
        Email = 6,
        Enabled = 32,
        FirstName = 7,
        Gender = 8,
        HomeCity = 9,
        HomeCountryRegion = 10,
        HomeFax = 11,
        Homepage = 16,
        HomePhone = 12,
        HomeState = 13,
        HomeStreetAddress = 14,
        HomeZipCode = 15,
        JobTitle = 17,
        LastName = 18,
        MiddleName = 19,
        None = 0,
        Notes = 20,
        Office = 21,
        Pager = 22,
        Search = 31,
    }
    public abstract partial class AutoFieldsGenerator : System.Web.UI.IAutoFieldGenerator, System.Web.UI.IStateManager
    {
        protected AutoFieldsGenerator() { }
        protected internal System.Collections.Generic.List<System.Web.UI.WebControls.AutoGeneratedFieldProperties> AutoGeneratedFieldProperties { get { throw null; } }
        public System.Nullable<bool> AutoGenerateEnumFields { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } [System.Runtime.CompilerServices.CompilerGeneratedAttribute]set { } }
        protected bool IsTrackingViewState { get { throw null; } }
        bool System.Web.UI.IStateManager.IsTrackingViewState { get { throw null; } }
        protected virtual System.Web.UI.WebControls.AutoGeneratedField CreateAutoGeneratedFieldFromFieldProperties(System.Web.UI.WebControls.AutoGeneratedFieldProperties fieldProperties) { throw null; }
        public abstract System.Collections.Generic.List<System.Web.UI.WebControls.AutoGeneratedField> CreateAutoGeneratedFields(object dataItem, System.Web.UI.Control control);
        public virtual System.Collections.ICollection GenerateFields(System.Web.UI.Control control) { throw null; }
        protected virtual void LoadViewState(object savedState) { }
        protected virtual object SaveViewState() { throw null; }
        void System.Web.UI.IStateManager.LoadViewState(object savedState) { }
        object System.Web.UI.IStateManager.SaveViewState() { throw null; }
        void System.Web.UI.IStateManager.TrackViewState() { }
        protected virtual void TrackViewState() { }
    }
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
    public sealed partial class AutoGeneratedField : System.Web.UI.WebControls.BoundField
    {
        public AutoGeneratedField(string dataField) { }
        public override bool ConvertEmptyStringToNull { get { throw null; } set { } }
        public override string DataFormatString { get { throw null; } set { } }
        public System.Type DataType { get { throw null; } set { } }
        public override bool InsertVisible { get { throw null; } set { } }
        protected override void CopyProperties(System.Web.UI.WebControls.DataControlField newField) { }
        protected override System.Web.UI.WebControls.DataControlField CreateField() { throw null; }
        public override void ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary dictionary, System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlRowState rowState, bool includeReadOnly) { }
        protected override object GetDesignTimeValue() { throw null; }
        protected override void InitializeDataCell(System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlRowState rowState) { }
        protected override void OnDataBindField(object sender, System.EventArgs e) { }
        public override void ValidateSupportsCallback() { }
    }
    public sealed partial class AutoGeneratedFieldProperties : System.Web.UI.IStateManager
    {
        public AutoGeneratedFieldProperties() { }
        public string DataField { get { throw null; } set { } }
        public bool IsReadOnly { get { throw null; } set { } }
        public string Name { get { throw null; } set { } }
        bool System.Web.UI.IStateManager.IsTrackingViewState { get { throw null; } }
        public System.Type Type { get { throw null; } set { } }
        void System.Web.UI.IStateManager.LoadViewState(object state) { }
        object System.Web.UI.IStateManager.SaveViewState() { throw null; }
        void System.Web.UI.IStateManager.TrackViewState() { }
    }
    public abstract partial class BaseCompareValidator : System.Web.UI.WebControls.BaseValidator
    {
        protected BaseCompareValidator() { }
        [System.ComponentModel.DefaultValueAttribute(false)]
        [System.Web.UI.ThemeableAttribute(false)]
        public bool CultureInvariantValues { get { throw null; } set { } }
        protected static int CutoffYear { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.ValidationDataType.String)]
        [System.Web.UI.ThemeableAttribute(false)]
        public System.Web.UI.WebControls.ValidationDataType Type { get { throw null; } set { } }
        protected override void AddAttributesToRender(System.Web.UI.HtmlTextWriter writer) { }
        public static bool CanConvert(string text, System.Web.UI.WebControls.ValidationDataType type) { throw null; }
        public static bool CanConvert(string text, System.Web.UI.WebControls.ValidationDataType type, bool cultureInvariant) { throw null; }
        protected static bool Compare(string leftText, bool cultureInvariantLeftText, string rightText, bool cultureInvariantRightText, System.Web.UI.WebControls.ValidationCompareOperator op, System.Web.UI.WebControls.ValidationDataType type) { throw null; }
        protected static bool Compare(string leftText, string rightText, System.Web.UI.WebControls.ValidationCompareOperator op, System.Web.UI.WebControls.ValidationDataType type) { throw null; }
        protected static bool Convert(string text, System.Web.UI.WebControls.ValidationDataType type, bool cultureInvariant, out object value) { throw null; }
        protected static bool Convert(string text, System.Web.UI.WebControls.ValidationDataType type, out object value) { throw null; }
        protected override bool DetermineRenderUplevel() { throw null; }
        protected static string GetDateElementOrder() { throw null; }
        protected static int GetFullYear(int shortYear) { throw null; }
    }
    [System.ComponentModel.DefaultPropertyAttribute("DataSourceID")]
    [System.ComponentModel.DesignerAttribute("System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    public abstract partial class BaseDataBoundControl : System.Web.UI.WebControls.WebControl
    {
        protected BaseDataBoundControl() { }
        [System.ComponentModel.BindableAttribute(true)]
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Web.UI.ThemeableAttribute(false)]
        public virtual object DataSource { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.Web.UI.ThemeableAttribute(false)]
        public virtual string DataSourceID { get { throw null; } set { } }
        protected bool Initialized { get { throw null; } }
        protected bool IsBoundUsingDataSourceID { get { throw null; } }
        protected internal bool IsDataBindingAutomatic { get { throw null; } }
        protected virtual bool IsUsingModelBinders { get { throw null; } }
        protected bool RequiresDataBinding { get { throw null; } set { } }
        public override bool SupportsDisabledAttribute { get { throw null; } }
        public event System.EventHandler DataBound { add { } remove { } }
        protected void ConfirmInitState() { }
        public override void DataBind() { }
        protected virtual void EnsureDataBound() { }
        protected virtual void OnDataBound(System.EventArgs e) { }
        protected virtual void OnDataPropertyChanged() { }
        protected internal override void OnInit(System.EventArgs e) { }
        protected virtual void OnPagePreLoad(object sender, System.EventArgs e) { }
        protected internal override void OnPreRender(System.EventArgs e) { }
        protected abstract void PerformSelect();
        protected abstract void ValidateDataSource(object dataSource);
    }
    [System.ComponentModel.DefaultEventAttribute("SelectedIndexChanged")]
    [System.ComponentModel.DefaultPropertyAttribute("DataSource")]
    [System.ComponentModel.DesignerAttribute("System.Web.UI.Design.WebControls.BaseDataListDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    public abstract partial class BaseDataList : System.Web.UI.WebControls.WebControl
    {
        protected BaseDataList() { }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string Caption { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.TableCaptionAlign.NotSet)]
        public virtual System.Web.UI.WebControls.TableCaptionAlign CaptionAlign { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(-1)]
        public virtual int CellPadding { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(0)]
        public virtual int CellSpacing { get { throw null; } set { } }
        public override System.Web.UI.ControlCollection Controls { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.Web.UI.ThemeableAttribute(false)]
        public virtual string DataKeyField { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public System.Web.UI.WebControls.DataKeyCollection DataKeys { get { throw null; } }
        protected System.Collections.ArrayList DataKeysArray { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.Web.UI.ThemeableAttribute(false)]
        public string DataMember { get { throw null; } set { } }
        [System.ComponentModel.BindableAttribute(true)]
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Web.UI.ThemeableAttribute(false)]
        public virtual object DataSource { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.Web.UI.IDReferencePropertyAttribute(typeof(System.Web.UI.DataSourceControl))]
        [System.Web.UI.ThemeableAttribute(false)]
        public virtual string DataSourceID { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.GridLines.Both)]
        public virtual System.Web.UI.WebControls.GridLines GridLines { get { throw null; } set { } }
        [System.ComponentModel.CategoryAttribute("Layout")]
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.HorizontalAlign.NotSet)]
        public virtual System.Web.UI.WebControls.HorizontalAlign HorizontalAlign { get { throw null; } set { } }
        protected bool Initialized { get { throw null; } }
        protected bool IsBoundUsingDataSourceID { get { throw null; } }
        protected bool RequiresDataBinding { get { throw null; } set { } }
        protected System.Web.UI.DataSourceSelectArguments SelectArguments { get { throw null; } }
        public override bool SupportsDisabledAttribute { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(false)]
        public virtual bool UseAccessibleHeader { get { throw null; } set { } }
        public event System.EventHandler SelectedIndexChanged { add { } remove { } }
        protected override void AddParsedSubObject(object obj) { }
        protected internal override void CreateChildControls() { }
        protected abstract void CreateControlHierarchy(bool useDataSource);
        protected virtual System.Web.UI.DataSourceSelectArguments CreateDataSourceSelectArguments() { throw null; }
        public override void DataBind() { }
        protected void EnsureDataBound() { }
        protected virtual System.Collections.IEnumerable GetData() { throw null; }
        public static bool IsBindableType(System.Type type) { throw null; }
        protected override void OnDataBinding(System.EventArgs e) { }
        protected virtual void OnDataPropertyChanged() { }
        protected virtual void OnDataSourceViewChanged(object sender, System.EventArgs e) { }
        protected internal override void OnInit(System.EventArgs e) { }
        protected internal override void OnLoad(System.EventArgs e) { }
        protected internal override void OnPreRender(System.EventArgs e) { }
        protected virtual void OnSelectedIndexChanged(System.EventArgs e) { }
        protected internal abstract void PrepareControlHierarchy();
        protected internal override void Render(System.Web.UI.HtmlTextWriter writer) { }
    }
    [System.ComponentModel.DefaultPropertyAttribute("ErrorMessage")]
    [System.ComponentModel.DesignerAttribute("System.Web.UI.Design.WebControls.BaseValidatorDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    public abstract partial class BaseValidator : System.Web.UI.WebControls.Label, System.Web.UI.IValidator
    {
        protected BaseValidator() { }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override string AssociatedControlID { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.TypeConverterAttribute(typeof(System.Web.UI.WebControls.ValidatedControlConverter))]
        [System.Web.UI.IDReferencePropertyAttribute]
        [System.Web.UI.ThemeableAttribute(false)]
        public string ControlToValidate { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.ValidatorDisplay.Static)]
        [System.Web.UI.ThemeableAttribute(true)]
        public System.Web.UI.WebControls.ValidatorDisplay Display { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(true)]
        [System.Web.UI.ThemeableAttribute(false)]
        public bool EnableClientScript { get { throw null; } set { } }
        public override bool Enabled { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.LocalizableAttribute(true)]
        public string ErrorMessage { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(typeof(System.Drawing.Color), "Red")]
        public override System.Drawing.Color ForeColor { get { throw null; } set { } }
        protected bool IsUnobtrusive { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DefaultValueAttribute(true)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Web.UI.ThemeableAttribute(false)]
        public bool IsValid { get { throw null; } set { } }
        protected bool PropertiesValid { get { throw null; } }
        protected bool RenderUplevel { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(false)]
        [System.Web.UI.ThemeableAttribute(false)]
        public bool SetFocusOnError { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerDefaultProperty)]
        public override string Text { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.Web.UI.ThemeableAttribute(false)]
        public virtual string ValidationGroup { get { throw null; } set { } }
        protected override void AddAttributesToRender(System.Web.UI.HtmlTextWriter writer) { }
        protected void CheckControlValidationProperty(string name, string propertyName) { }
        protected virtual bool ControlPropertiesValid() { throw null; }
        protected virtual bool DetermineRenderUplevel() { throw null; }
        protected abstract bool EvaluateIsValid();
        protected string GetControlRenderID(string name) { throw null; }
        protected string GetControlValidationValue(string name) { throw null; }
        public static System.ComponentModel.PropertyDescriptor GetValidationProperty(object component) { throw null; }
        protected internal override void OnInit(System.EventArgs e) { }
        protected internal override void OnPreRender(System.EventArgs e) { }
        protected internal override void OnUnload(System.EventArgs e) { }
        protected void RegisterValidatorCommonScript() { }
        protected virtual void RegisterValidatorDeclaration() { }
        protected internal override void Render(System.Web.UI.HtmlTextWriter writer) { }
        public void Validate() { }
    }
    public enum BorderStyle
    {
        Dashed = 3,
        Dotted = 2,
        Double = 5,
        Groove = 6,
        Inset = 8,
        None = 1,
        NotSet = 0,
        Outset = 9,
        Ridge = 7,
        Solid = 4,
    }
    public partial class BoundColumn : System.Web.UI.WebControls.DataGridColumn
    {
        public static readonly string thisExpr;
        public BoundColumn() { }
        [System.ComponentModel.DefaultValueAttribute("")]
        public virtual string DataField { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        public virtual string DataFormatString { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(false)]
        public virtual bool ReadOnly { get { throw null; } set { } }
        protected virtual string FormatDataValue(object dataValue) { throw null; }
        public override void Initialize() { }
        public override void InitializeCell(System.Web.UI.WebControls.TableCell cell, int columnIndex, System.Web.UI.WebControls.ListItemType itemType) { }
    }
    public partial class BoundField : System.Web.UI.WebControls.DataControlField
    {
        public static readonly string ThisExpression;
        public BoundField() { }
        [System.ComponentModel.DefaultValueAttribute(false)]
        public virtual bool ApplyFormatInEditMode { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(true)]
        public virtual bool ConvertEmptyStringToNull { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.TypeConverterAttribute("System.Web.UI.Design.DataSourceViewSchemaConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
        public virtual string DataField { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        public virtual string DataFormatString { get { throw null; } set { } }
        public override string HeaderText { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(true)]
        public virtual bool HtmlEncode { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(true)]
        public virtual bool HtmlEncodeFormatString { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        public virtual string NullDisplayText { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(false)]
        public virtual bool ReadOnly { get { throw null; } set { } }
        protected virtual bool SupportsHtmlEncode { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.ValidateRequestMode.Inherit)]
        public new System.Web.UI.ValidateRequestMode ValidateRequestMode { get { throw null; } set { } }
        protected override void CopyProperties(System.Web.UI.WebControls.DataControlField newField) { }
        protected override System.Web.UI.WebControls.DataControlField CreateField() { throw null; }
        public override void ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary dictionary, System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlRowState rowState, bool includeReadOnly) { }
        protected virtual string FormatDataValue(object dataValue, bool encode) { throw null; }
        protected virtual object GetDesignTimeValue() { throw null; }
        protected virtual object GetValue(System.Web.UI.Control controlContainer) { throw null; }
        public override bool Initialize(bool enableSorting, System.Web.UI.Control control) { throw null; }
        public override void InitializeCell(System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlCellType cellType, System.Web.UI.WebControls.DataControlRowState rowState, int rowIndex) { }
        protected virtual void InitializeDataCell(System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlRowState rowState) { }
        protected override void LoadViewState(object state) { }
        protected virtual void OnDataBindField(object sender, System.EventArgs e) { }
        public override void ValidateSupportsCallback() { }
    }
    [System.ComponentModel.DefaultEventAttribute("Click")]
    [System.ComponentModel.DefaultPropertyAttribute("BulletStyle")]
    [System.ComponentModel.DesignerAttribute("System.Web.UI.Design.WebControls.BulletedListDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.Web.UI.SupportsEventValidationAttribute]
    public partial class BulletedList : System.Web.UI.WebControls.ListControl, System.Web.UI.IPostBackEventHandler
    {
        public BulletedList() { }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override bool AutoPostBack { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.UrlPropertyAttribute]
        public virtual string BulletImageUrl { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.BulletStyle.NotSet)]
        public virtual System.Web.UI.WebControls.BulletStyle BulletStyle { get { throw null; } set { } }
        public override System.Web.UI.ControlCollection Controls { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.BulletedListDisplayMode.Text)]
        public virtual System.Web.UI.WebControls.BulletedListDisplayMode DisplayMode { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(1)]
        public virtual int FirstBulletNumber { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(false)]
        [System.Web.UI.ThemeableAttribute(true)]
        public virtual bool RenderWhenDataEmpty { get { throw null; } set { } }
        [System.ComponentModel.BindableAttribute(false)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override int SelectedIndex { get { throw null; } set { } }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override System.Web.UI.WebControls.ListItem SelectedItem { get { throw null; } }
        [System.ComponentModel.BindableAttribute(false)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override string SelectedValue { get { throw null; } set { } }
        protected override System.Web.UI.HtmlTextWriterTag TagKey { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.TypeConverterAttribute(typeof(System.Web.UI.WebControls.TargetConverter))]
        public virtual string Target { get { throw null; } set { } }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override string Text { get { throw null; } set { } }
        public event System.Web.UI.WebControls.BulletedListEventHandler Click { add { } remove { } }
        protected override void AddAttributesToRender(System.Web.UI.HtmlTextWriter writer) { }
        protected virtual void OnClick(System.Web.UI.WebControls.BulletedListEventArgs e) { }
        protected virtual void RaisePostBackEvent(string eventArgument) { }
        protected internal override void Render(System.Web.UI.HtmlTextWriter writer) { }
        protected virtual void RenderBulletText(System.Web.UI.WebControls.ListItem item, int index, System.Web.UI.HtmlTextWriter writer) { }
        protected internal override void RenderContents(System.Web.UI.HtmlTextWriter writer) { }
        void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(string eventArgument) { }
    }
    public enum BulletedListDisplayMode
    {
        HyperLink = 1,
        LinkButton = 2,
        Text = 0,
    }
    public partial class BulletedListEventArgs : System.EventArgs
    {
        public BulletedListEventArgs(int index) { }
        public int Index { get { throw null; } }
    }
    public delegate void BulletedListEventHandler(object sender, System.Web.UI.WebControls.BulletedListEventArgs e);
    public enum BulletStyle
    {
        Circle = 7,
        CustomImage = 9,
        Disc = 6,
        LowerAlpha = 2,
        LowerRoman = 4,
        NotSet = 0,
        Numbered = 1,
        Square = 8,
        UpperAlpha = 3,
        UpperRoman = 5,
    }
    [System.ComponentModel.DefaultEventAttribute("Click")]
    [System.ComponentModel.DefaultPropertyAttribute("Text")]
    [System.ComponentModel.DesignerAttribute("System.Web.UI.Design.WebControls.ButtonDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.Web.UI.DataBindingHandlerAttribute("System.Web.UI.Design.TextDataBindingHandler, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.Web.UI.SupportsEventValidationAttribute]
    [System.Web.UI.ToolboxDataAttribute("<{0}:Button runat=\"server\" Text=\"Button\"></{0}:Button>")]
    public partial class Button : System.Web.UI.WebControls.WebControl, System.Web.UI.IPostBackEventHandler, System.Web.UI.WebControls.IButtonControl
    {
        public Button() { }
        [System.ComponentModel.DefaultValueAttribute(true)]
        [System.Web.UI.ThemeableAttribute(false)]
        public virtual bool CausesValidation { get { throw null; } set { } }
        [System.ComponentModel.BindableAttribute(true)]
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.Web.UI.ThemeableAttribute(false)]
        public string CommandArgument { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.Web.UI.ThemeableAttribute(false)]
        public string CommandName { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.Web.UI.ThemeableAttribute(false)]
        public virtual string OnClientClick { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.ThemeableAttribute(false)]
        [System.Web.UI.UrlPropertyAttribute("*.aspx")]
        public virtual string PostBackUrl { get { throw null; } set { } }
        [System.ComponentModel.BindableAttribute(true)]
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.LocalizableAttribute(true)]
        public string Text { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(true)]
        [System.Web.UI.ThemeableAttribute(false)]
        public virtual bool UseSubmitBehavior { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.Web.UI.ThemeableAttribute(false)]
        public virtual string ValidationGroup { get { throw null; } set { } }
        public event System.EventHandler Click { add { } remove { } }
        public event System.Web.UI.WebControls.CommandEventHandler Command { add { } remove { } }
        protected override void AddAttributesToRender(System.Web.UI.HtmlTextWriter writer) { }
        protected virtual System.Web.UI.PostBackOptions GetPostBackOptions() { throw null; }
        protected virtual void OnClick(System.EventArgs e) { }
        protected virtual void OnCommand(System.Web.UI.WebControls.CommandEventArgs e) { }
        protected internal override void OnPreRender(System.EventArgs e) { }
        protected virtual void RaisePostBackEvent(string eventArgument) { }
        protected internal override void RenderContents(System.Web.UI.HtmlTextWriter writer) { }
        void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(string eventArgument) { }
    }
    public partial class ButtonColumn : System.Web.UI.WebControls.DataGridColumn
    {
        public ButtonColumn() { }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.ButtonColumnType.LinkButton)]
        public virtual System.Web.UI.WebControls.ButtonColumnType ButtonType { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(false)]
        public virtual bool CausesValidation { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        public virtual string CommandName { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        public virtual string DataTextField { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        public virtual string DataTextFormatString { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string Text { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        public virtual string ValidationGroup { get { throw null; } set { } }
        protected virtual string FormatDataTextValue(object dataTextValue) { throw null; }
        public override void Initialize() { }
        public override void InitializeCell(System.Web.UI.WebControls.TableCell cell, int columnIndex, System.Web.UI.WebControls.ListItemType itemType) { }
    }
    public enum ButtonColumnType
    {
        LinkButton = 0,
        PushButton = 1,
    }
    public partial class ButtonField : System.Web.UI.WebControls.ButtonFieldBase
    {
        public ButtonField() { }
        [System.ComponentModel.DefaultValueAttribute("")]
        public virtual string CommandName { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.TypeConverterAttribute("System.Web.UI.Design.DataSourceViewSchemaConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
        public virtual string DataTextField { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        public virtual string DataTextFormatString { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.UrlPropertyAttribute]
        public virtual string ImageUrl { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string Text { get { throw null; } set { } }
        protected override void CopyProperties(System.Web.UI.WebControls.DataControlField newField) { }
        protected override System.Web.UI.WebControls.DataControlField CreateField() { throw null; }
        protected virtual string FormatDataTextValue(object dataTextValue) { throw null; }
        public override bool Initialize(bool sortingEnabled, System.Web.UI.Control control) { throw null; }
        public override void InitializeCell(System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlCellType cellType, System.Web.UI.WebControls.DataControlRowState rowState, int rowIndex) { }
        public override void ValidateSupportsCallback() { }
    }
    public abstract partial class ButtonFieldBase : System.Web.UI.WebControls.DataControlField
    {
        protected ButtonFieldBase() { }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.ButtonType.Link)]
        public virtual System.Web.UI.WebControls.ButtonType ButtonType { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(false)]
        public virtual bool CausesValidation { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(false)]
        public override bool ShowHeader { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        public virtual string ValidationGroup { get { throw null; } set { } }
        protected override void CopyProperties(System.Web.UI.WebControls.DataControlField newField) { }
    }
    public enum ButtonType
    {
        Button = 0,
        Image = 1,
        Link = 2,
    }
    [System.ComponentModel.DefaultEventAttribute("SelectionChanged")]
    [System.ComponentModel.DefaultPropertyAttribute("SelectedDate")]
    [System.ComponentModel.DesignerAttribute("System.Web.UI.Design.WebControls.CalendarDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.Web.UI.ControlValuePropertyAttribute("SelectedDate", typeof(System.DateTime), "1/1/0001")]
    [System.Web.UI.DataBindingHandlerAttribute("System.Web.UI.Design.WebControls.CalendarDataBindingHandler, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.Web.UI.SupportsEventValidationAttribute]
    public partial class Calendar : System.Web.UI.WebControls.WebControl, System.Web.UI.IPostBackEventHandler
    {
        public Calendar() { }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string Caption { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.TableCaptionAlign.NotSet)]
        public virtual System.Web.UI.WebControls.TableCaptionAlign CaptionAlign { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(2)]
        public int CellPadding { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int CellSpacing { get { throw null; } set { } }
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.TableItemStyle DayHeaderStyle { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.DayNameFormat.Short)]
        public System.Web.UI.WebControls.DayNameFormat DayNameFormat { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.TableItemStyle DayStyle { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.FirstDayOfWeek.Default)]
        public System.Web.UI.WebControls.FirstDayOfWeek FirstDayOfWeek { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("&gt;")]
        [System.ComponentModel.LocalizableAttribute(true)]
        public string NextMonthText { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.NextPrevFormat.CustomText)]
        public System.Web.UI.WebControls.NextPrevFormat NextPrevFormat { get { throw null; } set { } }
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.TableItemStyle NextPrevStyle { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.TableItemStyle OtherMonthDayStyle { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute("&lt;")]
        [System.ComponentModel.LocalizableAttribute(true)]
        public string PrevMonthText { get { throw null; } set { } }
        [System.ComponentModel.BindableAttribute(true, System.ComponentModel.BindingDirection.TwoWay)]
        [System.ComponentModel.DefaultValueAttribute(typeof(System.DateTime), "1/1/0001")]
        public System.DateTime SelectedDate { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public System.Web.UI.WebControls.SelectedDatesCollection SelectedDates { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.TableItemStyle SelectedDayStyle { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.CalendarSelectionMode.Day)]
        public System.Web.UI.WebControls.CalendarSelectionMode SelectionMode { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("&gt;&gt;")]
        [System.ComponentModel.LocalizableAttribute(true)]
        public string SelectMonthText { get { throw null; } set { } }
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.TableItemStyle SelectorStyle { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute("&gt;")]
        [System.ComponentModel.LocalizableAttribute(true)]
        public string SelectWeekText { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool ShowDayHeader { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool ShowGridLines { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool ShowNextPrevMonth { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool ShowTitle { get { throw null; } set { } }
        public override bool SupportsDisabledAttribute { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.TitleFormat.MonthYear)]
        public System.Web.UI.WebControls.TitleFormat TitleFormat { get { throw null; } set { } }
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.TableItemStyle TitleStyle { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.TableItemStyle TodayDayStyle { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public System.DateTime TodaysDate { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(true)]
        public virtual bool UseAccessibleHeader { get { throw null; } set { } }
        [System.ComponentModel.BindableAttribute(true)]
        [System.ComponentModel.DefaultValueAttribute(typeof(System.DateTime), "1/1/0001")]
        public System.DateTime VisibleDate { get { throw null; } set { } }
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.TableItemStyle WeekendDayStyle { get { throw null; } }
        public event System.Web.UI.WebControls.DayRenderEventHandler DayRender { add { } remove { } }
        public event System.EventHandler SelectionChanged { add { } remove { } }
        public event System.Web.UI.WebControls.MonthChangedEventHandler VisibleMonthChanged { add { } remove { } }
        protected override System.Web.UI.ControlCollection CreateControlCollection() { throw null; }
        protected bool HasWeekSelectors(System.Web.UI.WebControls.CalendarSelectionMode selectionMode) { throw null; }
        protected override void LoadViewState(object savedState) { }
        protected virtual void OnDayRender(System.Web.UI.WebControls.TableCell cell, System.Web.UI.WebControls.CalendarDay day) { }
        protected internal override void OnPreRender(System.EventArgs e) { }
        protected virtual void OnSelectionChanged() { }
        protected virtual void OnVisibleMonthChanged(System.DateTime newDate, System.DateTime previousDate) { }
        protected virtual void RaisePostBackEvent(string eventArgument) { }
        protected internal override void Render(System.Web.UI.HtmlTextWriter writer) { }
        protected override object SaveViewState() { throw null; }
        void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(string eventArgument) { }
        protected override void TrackViewState() { }
    }
    public partial class CalendarDay
    {
        public CalendarDay(System.DateTime date, bool isWeekend, bool isToday, bool isSelected, bool isOtherMonth, string dayNumberText) { }
        public System.DateTime Date { get { throw null; } }
        public string DayNumberText { get { throw null; } }
        public bool IsOtherMonth { get { throw null; } }
        public bool IsSelectable { get { throw null; } set { } }
        public bool IsSelected { get { throw null; } }
        public bool IsToday { get { throw null; } }
        public bool IsWeekend { get { throw null; } }
    }
    public enum CalendarSelectionMode
    {
        Day = 1,
        DayWeek = 2,
        DayWeekMonth = 3,
        None = 0,
    }
    public partial class CallingDataMethodsEventArgs : System.EventArgs
    {
        public CallingDataMethodsEventArgs() { }
        public object DataMethodsObject { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } [System.Runtime.CompilerServices.CompilerGeneratedAttribute]set { } }
        public System.Type DataMethodsType { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } [System.Runtime.CompilerServices.CompilerGeneratedAttribute]set { } }
    }
    public delegate void CallingDataMethodsEventHandler(object sender, System.Web.UI.WebControls.CallingDataMethodsEventArgs e);
    [System.ComponentModel.BindableAttribute(false)]
    [System.ComponentModel.DefaultEventAttribute("ChangedPassword")]
    [System.ComponentModel.DesignerAttribute("System.Web.UI.Design.WebControls.ChangePasswordDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    public partial class ChangePassword : System.Web.UI.WebControls.CompositeControl, System.Web.UI.INamingContainer
    {
        public static readonly string CancelButtonCommandName;
        public static readonly string ChangePasswordButtonCommandName;
        public static readonly string ContinueButtonCommandName;
        public ChangePassword() { }
        [System.ComponentModel.DefaultValueAttribute(1)]
        public virtual int BorderPadding { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.UrlPropertyAttribute]
        public virtual string CancelButtonImageUrl { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.Style CancelButtonStyle { get { throw null; } }
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string CancelButtonText { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.ButtonType.Button)]
        public virtual System.Web.UI.WebControls.ButtonType CancelButtonType { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.ThemeableAttribute(false)]
        [System.Web.UI.UrlPropertyAttribute]
        public virtual string CancelDestinationPageUrl { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.UrlPropertyAttribute]
        public virtual string ChangePasswordButtonImageUrl { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.Style ChangePasswordButtonStyle { get { throw null; } }
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string ChangePasswordButtonText { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.ButtonType.Button)]
        public virtual System.Web.UI.WebControls.ButtonType ChangePasswordButtonType { get { throw null; } set { } }
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string ChangePasswordFailureText { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        [System.Web.UI.TemplateContainerAttribute(typeof(System.Web.UI.WebControls.ChangePassword))]
        public virtual System.Web.UI.ITemplate ChangePasswordTemplate { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public System.Web.UI.Control ChangePasswordTemplateContainer { get { throw null; } }
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string ChangePasswordTitleText { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Web.UI.FilterableAttribute(false)]
        [System.Web.UI.ThemeableAttribute(false)]
        public virtual string ConfirmNewPassword { get { throw null; } }
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string ConfirmNewPasswordLabelText { get { throw null; } set { } }
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string ConfirmPasswordCompareErrorMessage { get { throw null; } set { } }
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string ConfirmPasswordRequiredErrorMessage { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.UrlPropertyAttribute]
        public virtual string ContinueButtonImageUrl { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.Style ContinueButtonStyle { get { throw null; } }
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string ContinueButtonText { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.ButtonType.Button)]
        public virtual System.Web.UI.WebControls.ButtonType ContinueButtonType { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.ThemeableAttribute(false)]
        [System.Web.UI.UrlPropertyAttribute]
        public virtual string ContinueDestinationPageUrl { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.UrlPropertyAttribute]
        public virtual string CreateUserIconUrl { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string CreateUserText { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.UrlPropertyAttribute]
        public virtual string CreateUserUrl { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Web.UI.FilterableAttribute(false)]
        [System.Web.UI.ThemeableAttribute(false)]
        public virtual string CurrentPassword { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(false)]
        public virtual bool DisplayUserName { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.UrlPropertyAttribute]
        public virtual string EditProfileIconUrl { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string EditProfileText { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.UrlPropertyAttribute]
        public virtual string EditProfileUrl { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.TableItemStyle FailureTextStyle { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.UrlPropertyAttribute]
        public virtual string HelpPageIconUrl { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string HelpPageText { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.UrlPropertyAttribute]
        public virtual string HelpPageUrl { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.TableItemStyle HyperLinkStyle { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string InstructionText { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.TableItemStyle InstructionTextStyle { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.TableItemStyle LabelStyle { get { throw null; } }
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        [System.Web.UI.ThemeableAttribute(false)]
        public System.Web.UI.WebControls.MailDefinition MailDefinition { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.Web.UI.ThemeableAttribute(false)]
        public virtual string MembershipProvider { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Web.UI.FilterableAttribute(false)]
        [System.Web.UI.ThemeableAttribute(false)]
        public virtual string NewPassword { get { throw null; } }
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string NewPasswordLabelText { get { throw null; } set { } }
        public virtual string NewPasswordRegularExpression { get { throw null; } set { } }
        public virtual string NewPasswordRegularExpressionErrorMessage { get { throw null; } set { } }
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string NewPasswordRequiredErrorMessage { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.TableItemStyle PasswordHintStyle { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string PasswordHintText { get { throw null; } set { } }
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string PasswordLabelText { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.UrlPropertyAttribute]
        public virtual string PasswordRecoveryIconUrl { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string PasswordRecoveryText { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.UrlPropertyAttribute]
        public virtual string PasswordRecoveryUrl { get { throw null; } set { } }
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string PasswordRequiredErrorMessage { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(true)]
        public virtual bool RenderOuterTable { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.ThemeableAttribute(false)]
        [System.Web.UI.UrlPropertyAttribute]
        public virtual string SuccessPageUrl { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        [System.Web.UI.TemplateContainerAttribute(typeof(System.Web.UI.WebControls.ChangePassword))]
        public virtual System.Web.UI.ITemplate SuccessTemplate { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public System.Web.UI.Control SuccessTemplateContainer { get { throw null; } }
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string SuccessText { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.TableItemStyle SuccessTextStyle { get { throw null; } }
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string SuccessTitleText { get { throw null; } set { } }
        protected override System.Web.UI.HtmlTextWriterTag TagKey { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.Style TextBoxStyle { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.TableItemStyle TitleTextStyle { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute("")]
        public virtual string UserName { get { throw null; } set { } }
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string UserNameLabelText { get { throw null; } set { } }
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string UserNameRequiredErrorMessage { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.Style ValidatorTextStyle { get { throw null; } }
        public event System.EventHandler CancelButtonClick { add { } remove { } }
        public event System.EventHandler ChangedPassword { add { } remove { } }
        public event System.EventHandler ChangePasswordError { add { } remove { } }
        public event System.Web.UI.WebControls.LoginCancelEventHandler ChangingPassword { add { } remove { } }
        public event System.EventHandler ContinueButtonClick { add { } remove { } }
        public event System.Web.UI.WebControls.MailMessageEventHandler SendingMail { add { } remove { } }
        public event System.Web.UI.WebControls.SendMailErrorEventHandler SendMailError { add { } remove { } }
        protected internal override void CreateChildControls() { }
        protected internal override void LoadControlState(object savedState) { }
        protected override void LoadViewState(object savedState) { }
        protected override bool OnBubbleEvent(object source, System.EventArgs e) { throw null; }
        protected virtual void OnCancelButtonClick(System.EventArgs e) { }
        protected virtual void OnChangedPassword(System.EventArgs e) { }
        protected virtual void OnChangePasswordError(System.EventArgs e) { }
        protected virtual void OnChangingPassword(System.Web.UI.WebControls.LoginCancelEventArgs e) { }
        protected virtual void OnContinueButtonClick(System.EventArgs e) { }
        protected internal override void OnInit(System.EventArgs e) { }
        protected internal override void OnPreRender(System.EventArgs e) { }
        protected virtual void OnSendingMail(System.Web.UI.WebControls.MailMessageEventArgs e) { }
        protected virtual void OnSendMailError(System.Web.UI.WebControls.SendMailErrorEventArgs e) { }
        protected internal override void Render(System.Web.UI.HtmlTextWriter writer) { }
        protected internal override object SaveControlState() { throw null; }
        protected override object SaveViewState() { throw null; }
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, Unrestricted=true)]
        protected override void SetDesignModeState(System.Collections.IDictionary data) { }
        protected override void TrackViewState() { }
    }
    [System.ComponentModel.DefaultEventAttribute("CheckedChanged")]
    [System.ComponentModel.DefaultPropertyAttribute("Text")]
    [System.ComponentModel.DesignerAttribute("System.Web.UI.Design.WebControls.CheckBoxDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.Web.UI.ControlValuePropertyAttribute("Checked")]
    [System.Web.UI.DataBindingHandlerAttribute("System.Web.UI.Design.TextDataBindingHandler, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.Web.UI.SupportsEventValidationAttribute]
    public partial class CheckBox : System.Web.UI.WebControls.WebControl, System.Web.UI.ICheckBoxControl, System.Web.UI.IPostBackDataHandler
    {
        public CheckBox() { }
        [System.ComponentModel.DefaultValueAttribute(false)]
        [System.Web.UI.ThemeableAttribute(false)]
        public virtual bool AutoPostBack { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(false)]
        [System.Web.UI.ThemeableAttribute(false)]
        public virtual bool CausesValidation { get { throw null; } set { } }
        [System.ComponentModel.BindableAttribute(true, System.ComponentModel.BindingDirection.TwoWay)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        [System.Web.UI.ThemeableAttribute(false)]
        public virtual bool Checked { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public System.Web.UI.AttributeCollection InputAttributes { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public System.Web.UI.AttributeCollection LabelAttributes { get { throw null; } }
        [System.ComponentModel.BindableAttribute(true)]
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string Text { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.TextAlign.Right)]
        public virtual System.Web.UI.WebControls.TextAlign TextAlign { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.Web.UI.ThemeableAttribute(false)]
        public virtual string ValidationGroup { get { throw null; } set { } }
        public event System.EventHandler CheckedChanged { add { } remove { } }
        protected override void AddAttributesToRender(System.Web.UI.HtmlTextWriter writer) { }
        protected virtual bool LoadPostData(string postDataKey, System.Collections.Specialized.NameValueCollection postCollection) { throw null; }
        protected override void LoadViewState(object savedState) { }
        protected virtual void OnCheckedChanged(System.EventArgs e) { }
        protected internal override void OnPreRender(System.EventArgs e) { }
        protected virtual void RaisePostDataChangedEvent() { }
        protected internal override void Render(System.Web.UI.HtmlTextWriter writer) { }
        protected override object SaveViewState() { throw null; }
        bool System.Web.UI.IPostBackDataHandler.LoadPostData(string postDataKey, System.Collections.Specialized.NameValueCollection postCollection) { throw null; }
        void System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent() { }
        protected override void TrackViewState() { }
    }
    public partial class CheckBoxField : System.Web.UI.WebControls.BoundField
    {
        public CheckBoxField() { }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override bool ApplyFormatInEditMode { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override bool ConvertEmptyStringToNull { get { throw null; } set { } }
        [System.ComponentModel.TypeConverterAttribute("System.Web.UI.Design.DataSourceBooleanViewSchemaConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
        public override string DataField { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override string DataFormatString { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override bool HtmlEncode { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override bool HtmlEncodeFormatString { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override string NullDisplayText { get { throw null; } set { } }
        protected override bool SupportsHtmlEncode { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string Text { get { throw null; } set { } }
        protected override void CopyProperties(System.Web.UI.WebControls.DataControlField newField) { }
        protected override System.Web.UI.WebControls.DataControlField CreateField() { throw null; }
        public override void ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary dictionary, System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlRowState rowState, bool includeReadOnly) { }
        protected override object GetDesignTimeValue() { throw null; }
        protected override void InitializeDataCell(System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlRowState rowState) { }
        protected override void OnDataBindField(object sender, System.EventArgs e) { }
        public override void ValidateSupportsCallback() { }
    }
    public partial class CheckBoxList : System.Web.UI.WebControls.ListControl, System.Web.UI.INamingContainer, System.Web.UI.IPostBackDataHandler, System.Web.UI.WebControls.IRepeatInfoUser
    {
        public CheckBoxList() { }
        [System.ComponentModel.DefaultValueAttribute(-1)]
        public virtual int CellPadding { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(-1)]
        public virtual int CellSpacing { get { throw null; } set { } }
        protected virtual bool HasFooter { get { throw null; } }
        protected virtual bool HasHeader { get { throw null; } }
        protected virtual bool HasSeparators { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(false)]
        [System.Web.UI.ThemeableAttribute(true)]
        public virtual bool RenderWhenDataEmpty { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(0)]
        public virtual int RepeatColumns { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.RepeatDirection.Vertical)]
        public virtual System.Web.UI.WebControls.RepeatDirection RepeatDirection { get { throw null; } set { } }
        protected virtual int RepeatedItemCount { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.RepeatLayout.Table)]
        public virtual System.Web.UI.WebControls.RepeatLayout RepeatLayout { get { throw null; } set { } }
        bool System.Web.UI.WebControls.IRepeatInfoUser.HasFooter { get { throw null; } }
        bool System.Web.UI.WebControls.IRepeatInfoUser.HasHeader { get { throw null; } }
        bool System.Web.UI.WebControls.IRepeatInfoUser.HasSeparators { get { throw null; } }
        int System.Web.UI.WebControls.IRepeatInfoUser.RepeatedItemCount { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.TextAlign.Right)]
        public virtual System.Web.UI.WebControls.TextAlign TextAlign { get { throw null; } set { } }
        protected override System.Web.UI.WebControls.Style CreateControlStyle() { throw null; }
        protected override System.Web.UI.Control FindControl(string id, int pathOffset) { throw null; }
        protected virtual System.Web.UI.WebControls.Style GetItemStyle(System.Web.UI.WebControls.ListItemType itemType, int repeatIndex) { throw null; }
        protected virtual bool LoadPostData(string postDataKey, System.Collections.Specialized.NameValueCollection postCollection) { throw null; }
        protected internal override void OnInit(System.EventArgs e) { }
        protected internal override void OnPreRender(System.EventArgs e) { }
        protected virtual void RaisePostDataChangedEvent() { }
        protected internal override void Render(System.Web.UI.HtmlTextWriter writer) { }
        protected virtual void RenderItem(System.Web.UI.WebControls.ListItemType itemType, int repeatIndex, System.Web.UI.WebControls.RepeatInfo repeatInfo, System.Web.UI.HtmlTextWriter writer) { }
        bool System.Web.UI.IPostBackDataHandler.LoadPostData(string postDataKey, System.Collections.Specialized.NameValueCollection postCollection) { throw null; }
        void System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent() { }
        System.Web.UI.WebControls.Style System.Web.UI.WebControls.IRepeatInfoUser.GetItemStyle(System.Web.UI.WebControls.ListItemType itemType, int repeatIndex) { throw null; }
        void System.Web.UI.WebControls.IRepeatInfoUser.RenderItem(System.Web.UI.WebControls.ListItemType itemType, int repeatIndex, System.Web.UI.WebControls.RepeatInfo repeatInfo, System.Web.UI.HtmlTextWriter writer) { }
    }
    public sealed partial class CircleHotSpot : System.Web.UI.WebControls.HotSpot
    {
        public CircleHotSpot() { }
        protected internal override string MarkupName { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int Radius { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int X { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int Y { get { throw null; } set { } }
        public override string GetCoordinates() { throw null; }
    }
    public partial class CommandEventArgs : System.EventArgs
    {
        public CommandEventArgs(string commandName, object argument) { }
        public CommandEventArgs(System.Web.UI.WebControls.CommandEventArgs e) { }
        public object CommandArgument { get { throw null; } }
        public string CommandName { get { throw null; } }
    }
    public delegate void CommandEventHandler(object sender, System.Web.UI.WebControls.CommandEventArgs e);
    public partial class CommandField : System.Web.UI.WebControls.ButtonFieldBase
    {
        public CommandField() { }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.UrlPropertyAttribute]
        public virtual string CancelImageUrl { get { throw null; } set { } }
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string CancelText { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(true)]
        public override bool CausesValidation { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.UrlPropertyAttribute]
        public virtual string DeleteImageUrl { get { throw null; } set { } }
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string DeleteText { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.UrlPropertyAttribute]
        public virtual string EditImageUrl { get { throw null; } set { } }
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string EditText { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.UrlPropertyAttribute]
        public virtual string InsertImageUrl { get { throw null; } set { } }
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string InsertText { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.UrlPropertyAttribute]
        public virtual string NewImageUrl { get { throw null; } set { } }
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string NewText { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.UrlPropertyAttribute]
        public virtual string SelectImageUrl { get { throw null; } set { } }
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string SelectText { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(true)]
        public virtual bool ShowCancelButton { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(false)]
        public virtual bool ShowDeleteButton { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(false)]
        public virtual bool ShowEditButton { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(false)]
        public virtual bool ShowInsertButton { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(false)]
        public virtual bool ShowSelectButton { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.UrlPropertyAttribute]
        public virtual string UpdateImageUrl { get { throw null; } set { } }
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string UpdateText { get { throw null; } set { } }
        protected override void CopyProperties(System.Web.UI.WebControls.DataControlField newField) { }
        protected override System.Web.UI.WebControls.DataControlField CreateField() { throw null; }
        public override void InitializeCell(System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlCellType cellType, System.Web.UI.WebControls.DataControlRowState rowState, int rowIndex) { }
        public override void ValidateSupportsCallback() { }
    }
    [System.Web.UI.ToolboxDataAttribute("<{0}:CompareValidator runat=\"server\" ErrorMessage=\"CompareValidator\"></{0}:CompareValidator>")]
    public partial class CompareValidator : System.Web.UI.WebControls.BaseCompareValidator
    {
        public CompareValidator() { }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.TypeConverterAttribute(typeof(System.Web.UI.WebControls.ValidatedControlConverter))]
        [System.Web.UI.ThemeableAttribute(false)]
        public string ControlToCompare { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.ValidationCompareOperator.Equal)]
        [System.Web.UI.ThemeableAttribute(false)]
        public System.Web.UI.WebControls.ValidationCompareOperator Operator { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.Web.UI.ThemeableAttribute(false)]
        public string ValueToCompare { get { throw null; } set { } }
        protected override void AddAttributesToRender(System.Web.UI.HtmlTextWriter writer) { }
        protected override bool ControlPropertiesValid() { throw null; }
        protected override bool EvaluateIsValid() { throw null; }
    }
    [System.ComponentModel.BrowsableAttribute(false)]
    public sealed partial class CompleteWizardStep : System.Web.UI.WebControls.TemplatedWizardStep
    {
        public CompleteWizardStep() { }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Web.UI.FilterableAttribute(false)]
        [System.Web.UI.ThemeableAttribute(false)]
        public override System.Web.UI.WebControls.WizardStepType StepType { get { throw null; } set { } }
        [System.ComponentModel.LocalizableAttribute(true)]
        public override string Title { get { throw null; } set { } }
    }
    [System.ComponentModel.DesignerAttribute("System.Web.UI.Design.WebControls.CompositeControlDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    public abstract partial class CompositeControl : System.Web.UI.WebControls.WebControl, System.Web.UI.INamingContainer, System.Web.UI.WebControls.ICompositeControlDesignerAccessor
    {
        protected CompositeControl() { }
        public override System.Web.UI.ControlCollection Controls { get { throw null; } }
        public override bool SupportsDisabledAttribute { get { throw null; } }
        public override void DataBind() { }
        protected virtual void RecreateChildControls() { }
        protected internal override void Render(System.Web.UI.HtmlTextWriter writer) { }
        void System.Web.UI.WebControls.ICompositeControlDesignerAccessor.RecreateChildControls() { }
    }
    public abstract partial class CompositeDataBoundControl : System.Web.UI.WebControls.DataBoundControl, System.Web.UI.INamingContainer
    {
        protected CompositeDataBoundControl() { }
        public override System.Web.UI.ControlCollection Controls { get { throw null; } }
        protected internal string DeleteMethod { get { throw null; } set { } }
        protected internal string InsertMethod { get { throw null; } set { } }
        protected override bool IsUsingModelBinders { get { throw null; } }
        protected internal string UpdateMethod { get { throw null; } set { } }
        protected internal override void CreateChildControls() { }
        protected abstract int CreateChildControls(System.Collections.IEnumerable dataSource, bool dataBinding);
        protected internal override void PerformDataBinding(System.Collections.IEnumerable data) { }
    }
    [System.ComponentModel.DesignerAttribute("System.Web.UI.Design.WebControls.ContentDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.ToolboxItemAttribute(false)]
    public partial class Content : System.Web.UI.Control, System.Web.UI.INamingContainer
    {
        public Content() { }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.Web.UI.IDReferencePropertyAttribute(typeof(System.Web.UI.WebControls.ContentPlaceHolder))]
        [System.Web.UI.ThemeableAttribute(false)]
        public string ContentPlaceHolderID { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new event System.EventHandler DataBinding { add { } remove { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new event System.EventHandler Disposed { add { } remove { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new event System.EventHandler Init { add { } remove { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new event System.EventHandler Load { add { } remove { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new event System.EventHandler PreRender { add { } remove { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new event System.EventHandler Unload { add { } remove { } }
    }
    public enum ContentDirection
    {
        LeftToRight = 1,
        NotSet = 0,
        RightToLeft = 2,
    }
    [System.ComponentModel.DesignerAttribute("System.Web.UI.Design.WebControls.ContentPlaceHolderDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.ToolboxItemFilterAttribute("Microsoft.VisualStudio.Web.WebForms.MasterPageWebFormDesigner", System.ComponentModel.ToolboxItemFilterType.Require)]
    [System.ComponentModel.ToolboxItemFilterAttribute("System.Web.UI")]
    [System.Web.UI.ToolboxDataAttribute("<{0}:ContentPlaceHolder runat=\"server\"></{0}:ContentPlaceHolder>")]
    public partial class ContentPlaceHolder : System.Web.UI.Control, System.Web.UI.INamingContainer
    {
        public ContentPlaceHolder() { }
    }
    public partial class ControlIDConverter : System.ComponentModel.StringConverter
    {
        public ControlIDConverter() { }
        protected virtual bool FilterControl(System.Web.UI.Control control) { throw null; }
        public override System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues(System.ComponentModel.ITypeDescriptorContext context) { throw null; }
        public override bool GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext context) { throw null; }
        public override bool GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext context) { throw null; }
    }
    [System.ComponentModel.DefaultPropertyAttribute("ControlID")]
    public partial class ControlParameter : System.Web.UI.WebControls.Parameter
    {
        public ControlParameter() { }
        public ControlParameter(string name, System.Data.DbType dbType, string controlID, string propertyName) { }
        public ControlParameter(string name, string controlID) { }
        public ControlParameter(string name, string controlID, string propertyName) { }
        public ControlParameter(string name, System.TypeCode type, string controlID, string propertyName) { }
        protected ControlParameter(System.Web.UI.WebControls.ControlParameter original) { }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.RefreshPropertiesAttribute(System.ComponentModel.RefreshProperties.All)]
        [System.ComponentModel.TypeConverterAttribute(typeof(System.Web.UI.WebControls.ControlIDConverter))]
        [System.Web.UI.IDReferencePropertyAttribute]
        public string ControlID { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.TypeConverterAttribute(typeof(System.Web.UI.WebControls.ControlPropertyNameConverter))]
        public string PropertyName { get { throw null; } set { } }
        protected override System.Web.UI.WebControls.Parameter Clone() { throw null; }
        protected internal override object Evaluate(System.Web.HttpContext context, System.Web.UI.Control control) { throw null; }
    }
    public partial class ControlPropertyNameConverter : System.ComponentModel.StringConverter
    {
        public ControlPropertyNameConverter() { }
        public override System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues(System.ComponentModel.ITypeDescriptorContext context) { throw null; }
        public override bool GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext context) { throw null; }
        public override bool GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext context) { throw null; }
    }
    [System.ComponentModel.DefaultPropertyAttribute("CookieName")]
    public partial class CookieParameter : System.Web.UI.WebControls.Parameter
    {
        public CookieParameter() { }
        public CookieParameter(string name, System.Data.DbType dbType, string cookieName) { }
        public CookieParameter(string name, string cookieName) { }
        public CookieParameter(string name, System.TypeCode type, string cookieName) { }
        protected CookieParameter(System.Web.UI.WebControls.CookieParameter original) { }
        [System.ComponentModel.DefaultValueAttribute("")]
        public string CookieName { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool ValidateInput { get { throw null; } set { } }
        protected override System.Web.UI.WebControls.Parameter Clone() { throw null; }
        protected internal override object Evaluate(System.Web.HttpContext context, System.Web.UI.Control control) { throw null; }
    }
    public partial class CreateUserErrorEventArgs : System.EventArgs
    {
        public CreateUserErrorEventArgs(System.Web.Security.MembershipCreateStatus s) { }
        public System.Web.Security.MembershipCreateStatus CreateUserError { get { throw null; } set { } }
    }
    public delegate void CreateUserErrorEventHandler(object sender, System.Web.UI.WebControls.CreateUserErrorEventArgs e);
    [System.ComponentModel.BindableAttribute(false)]
    [System.ComponentModel.DefaultEventAttribute("CreatedUser")]
    [System.ComponentModel.DesignerAttribute("System.Web.UI.Design.WebControls.CreateUserWizardDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.Web.UI.ToolboxDataAttribute("<{0}:CreateUserWizard runat=\"server\"> <WizardSteps> <asp:CreateUserWizardStep runat=\"server\"/> <asp:CompleteWizardStep runat=\"server\"/> </WizardSteps> </{0}:CreateUserWizard>")]
    public partial class CreateUserWizard : System.Web.UI.WebControls.Wizard
    {
        public static readonly string ContinueButtonCommandName;
        public CreateUserWizard() { }
        [System.ComponentModel.DefaultValueAttribute(0)]
        public override int ActiveStepIndex { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.LocalizableAttribute(true)]
        [System.Web.UI.ThemeableAttribute(false)]
        public virtual string Answer { get { throw null; } set { } }
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string AnswerLabelText { get { throw null; } set { } }
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string AnswerRequiredErrorMessage { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(false)]
        [System.Web.UI.ThemeableAttribute(false)]
        public virtual bool AutoGeneratePassword { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public System.Web.UI.WebControls.CompleteWizardStep CompleteStep { get { throw null; } }
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string CompleteSuccessText { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.TableItemStyle CompleteSuccessTextStyle { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public virtual string ConfirmPassword { get { throw null; } }
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string ConfirmPasswordCompareErrorMessage { get { throw null; } set { } }
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string ConfirmPasswordLabelText { get { throw null; } set { } }
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string ConfirmPasswordRequiredErrorMessage { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.UrlPropertyAttribute]
        public virtual string ContinueButtonImageUrl { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.Style ContinueButtonStyle { get { throw null; } }
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string ContinueButtonText { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.ButtonType.Button)]
        public virtual System.Web.UI.WebControls.ButtonType ContinueButtonType { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.ThemeableAttribute(false)]
        [System.Web.UI.UrlPropertyAttribute]
        public virtual string ContinueDestinationPageUrl { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.UrlPropertyAttribute]
        public virtual string CreateUserButtonImageUrl { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.Style CreateUserButtonStyle { get { throw null; } }
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string CreateUserButtonText { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.ButtonType.Button)]
        public virtual System.Web.UI.WebControls.ButtonType CreateUserButtonType { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public System.Web.UI.WebControls.CreateUserWizardStep CreateUserStep { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(false)]
        [System.Web.UI.ThemeableAttribute(false)]
        public virtual bool DisableCreatedUser { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(false)]
        public override bool DisplaySideBar { get { throw null; } set { } }
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string DuplicateEmailErrorMessage { get { throw null; } set { } }
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string DuplicateUserNameErrorMessage { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.UrlPropertyAttribute]
        public virtual string EditProfileIconUrl { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string EditProfileText { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.UrlPropertyAttribute]
        public virtual string EditProfileUrl { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        public virtual string Email { get { throw null; } set { } }
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string EmailLabelText { get { throw null; } set { } }
        public virtual string EmailRegularExpression { get { throw null; } set { } }
        public virtual string EmailRegularExpressionErrorMessage { get { throw null; } set { } }
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string EmailRequiredErrorMessage { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.TableItemStyle ErrorMessageStyle { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.UrlPropertyAttribute]
        public virtual string HelpPageIconUrl { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string HelpPageText { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.UrlPropertyAttribute]
        public virtual string HelpPageUrl { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.TableItemStyle HyperLinkStyle { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string InstructionText { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.TableItemStyle InstructionTextStyle { get { throw null; } }
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string InvalidAnswerErrorMessage { get { throw null; } set { } }
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string InvalidEmailErrorMessage { get { throw null; } set { } }
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string InvalidPasswordErrorMessage { get { throw null; } set { } }
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string InvalidQuestionErrorMessage { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.TableItemStyle LabelStyle { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(true)]
        [System.Web.UI.ThemeableAttribute(false)]
        public virtual bool LoginCreatedUser { get { throw null; } set { } }
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        [System.Web.UI.ThemeableAttribute(false)]
        public System.Web.UI.WebControls.MailDefinition MailDefinition { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.Web.UI.ThemeableAttribute(false)]
        public virtual string MembershipProvider { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public virtual string Password { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.TableItemStyle PasswordHintStyle { get { throw null; } }
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string PasswordHintText { get { throw null; } set { } }
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string PasswordLabelText { get { throw null; } set { } }
        public virtual string PasswordRegularExpression { get { throw null; } set { } }
        public virtual string PasswordRegularExpressionErrorMessage { get { throw null; } set { } }
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string PasswordRequiredErrorMessage { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.LocalizableAttribute(true)]
        [System.Web.UI.ThemeableAttribute(false)]
        public virtual string Question { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(true)]
        protected internal bool QuestionAndAnswerRequired { get { throw null; } }
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string QuestionLabelText { get { throw null; } set { } }
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string QuestionRequiredErrorMessage { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(true)]
        [System.Web.UI.ThemeableAttribute(false)]
        public virtual bool RequireEmail { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        public override string SkipLinkText { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.Style TextBoxStyle { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.TableItemStyle TitleTextStyle { get { throw null; } }
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string UnknownErrorMessage { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        public virtual string UserName { get { throw null; } set { } }
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string UserNameLabelText { get { throw null; } set { } }
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string UserNameRequiredErrorMessage { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.Style ValidatorTextStyle { get { throw null; } }
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.WebControls.CreateUserWizardStepCollectionEditor,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        public override System.Web.UI.WebControls.WizardStepCollection WizardSteps { get { throw null; } }
        public event System.EventHandler ContinueButtonClick { add { } remove { } }
        public event System.EventHandler CreatedUser { add { } remove { } }
        public event System.Web.UI.WebControls.CreateUserErrorEventHandler CreateUserError { add { } remove { } }
        public event System.Web.UI.WebControls.LoginCancelEventHandler CreatingUser { add { } remove { } }
        public event System.Web.UI.WebControls.MailMessageEventHandler SendingMail { add { } remove { } }
        public event System.Web.UI.WebControls.SendMailErrorEventHandler SendMailError { add { } remove { } }
        protected internal override void CreateChildControls() { }
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, Unrestricted=true)]
        protected override System.Collections.IDictionary GetDesignModeState() { throw null; }
        protected override void LoadViewState(object savedState) { }
        protected override bool OnBubbleEvent(object source, System.EventArgs e) { throw null; }
        protected virtual void OnContinueButtonClick(System.EventArgs e) { }
        protected virtual void OnCreatedUser(System.EventArgs e) { }
        protected virtual void OnCreateUserError(System.Web.UI.WebControls.CreateUserErrorEventArgs e) { }
        protected virtual void OnCreatingUser(System.Web.UI.WebControls.LoginCancelEventArgs e) { }
        protected override void OnNextButtonClick(System.Web.UI.WebControls.WizardNavigationEventArgs e) { }
        protected internal override void OnPreRender(System.EventArgs e) { }
        protected virtual void OnSendingMail(System.Web.UI.WebControls.MailMessageEventArgs e) { }
        protected virtual void OnSendMailError(System.Web.UI.WebControls.SendMailErrorEventArgs e) { }
        protected override object SaveViewState() { throw null; }
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, Unrestricted=true)]
        protected override void SetDesignModeState(System.Collections.IDictionary data) { }
        protected override void TrackViewState() { }
    }
    [System.ComponentModel.BrowsableAttribute(false)]
    public sealed partial class CreateUserWizardStep : System.Web.UI.WebControls.TemplatedWizardStep
    {
        public CreateUserWizardStep() { }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public override bool AllowReturn { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Web.UI.FilterableAttribute(false)]
        [System.Web.UI.ThemeableAttribute(false)]
        public override System.Web.UI.WebControls.WizardStepType StepType { get { throw null; } set { } }
        [System.ComponentModel.LocalizableAttribute(true)]
        public override string Title { get { throw null; } set { } }
    }
    public partial class CreatingModelDataSourceEventArgs : System.EventArgs
    {
        public CreatingModelDataSourceEventArgs() { }
        public System.Web.UI.WebControls.ModelDataSource ModelDataSource { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } [System.Runtime.CompilerServices.CompilerGeneratedAttribute]set { } }
    }
    public delegate void CreatingModelDataSourceEventHandler(object sender, System.Web.UI.WebControls.CreatingModelDataSourceEventArgs e);
    [System.ComponentModel.DefaultEventAttribute("ServerValidate")]
    [System.Web.UI.ToolboxDataAttribute("<{0}:CustomValidator runat=\"server\" ErrorMessage=\"CustomValidator\"></{0}:CustomValidator>")]
    public partial class CustomValidator : System.Web.UI.WebControls.BaseValidator
    {
        public CustomValidator() { }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.Web.UI.ThemeableAttribute(false)]
        public string ClientValidationFunction { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(false)]
        [System.Web.UI.ThemeableAttribute(false)]
        public bool ValidateEmptyText { get { throw null; } set { } }
        public event System.Web.UI.WebControls.ServerValidateEventHandler ServerValidate { add { } remove { } }
        protected override void AddAttributesToRender(System.Web.UI.HtmlTextWriter writer) { }
        protected override bool ControlPropertiesValid() { throw null; }
        protected override bool EvaluateIsValid() { throw null; }
        protected virtual bool OnServerValidate(string value) { throw null; }
    }
    [System.ComponentModel.DesignerAttribute("System.Web.UI.Design.WebControls.DataBoundControlDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    public abstract partial class DataBoundControl : System.Web.UI.WebControls.BaseDataBoundControl
    {
        protected DataBoundControl() { }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.Web.UI.ThemeableAttribute(false)]
        public virtual string DataMember { get { throw null; } set { } }
        [System.Web.UI.IDReferencePropertyAttribute(typeof(System.Web.UI.DataSourceControl))]
        public override string DataSourceID { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public System.Web.UI.IDataSource DataSourceObject { get { throw null; } }
        protected override bool IsUsingModelBinders { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.Web.UI.ThemeableAttribute(false)]
        public virtual string ItemType { get { throw null; } set { } }
        protected System.Web.UI.DataSourceSelectArguments SelectArguments { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.Web.UI.ThemeableAttribute(false)]
        public virtual string SelectMethod { get { throw null; } set { } }
        public event System.Web.UI.WebControls.CallingDataMethodsEventHandler CallingDataMethods { add { } remove { } }
        public event System.Web.UI.WebControls.CreatingModelDataSourceEventHandler CreatingModelDataSource { add { } remove { } }
        protected virtual System.Web.UI.DataSourceSelectArguments CreateDataSourceSelectArguments() { throw null; }
        protected virtual System.Web.UI.DataSourceView GetData() { throw null; }
        protected virtual System.Web.UI.IDataSource GetDataSource() { throw null; }
        protected override void LoadViewState(object savedState) { }
        protected void MarkAsDataBound() { }
        protected virtual void OnCreatingModelDataSource(System.Web.UI.WebControls.CreatingModelDataSourceEventArgs e) { }
        protected override void OnDataPropertyChanged() { }
        protected virtual void OnDataSourceViewChanged(object sender, System.EventArgs e) { }
        protected internal override void OnLoad(System.EventArgs e) { }
        protected override void OnPagePreLoad(object sender, System.EventArgs e) { }
        protected internal virtual void PerformDataBinding(System.Collections.IEnumerable data) { }
        protected override void PerformSelect() { }
        protected override object SaveViewState() { throw null; }
        protected override void TrackViewState() { }
        protected override void ValidateDataSource(object dataSource) { }
    }
    public enum DataBoundControlMode
    {
        Edit = 1,
        Insert = 2,
        ReadOnly = 0,
    }
    public enum DataControlCellType
    {
        DataCell = 2,
        Footer = 1,
        Header = 0,
    }
    public sealed partial class DataControlCommands
    {
        internal DataControlCommands() { }
        public const string CancelCommandName = "Cancel";
        public const string DeleteCommandName = "Delete";
        public const string EditCommandName = "Edit";
        public const string FirstPageCommandArgument = "First";
        public const string InsertCommandName = "Insert";
        public const string LastPageCommandArgument = "Last";
        public const string NewCommandName = "New";
        public const string NextPageCommandArgument = "Next";
        public const string PageCommandName = "Page";
        public const string PreviousPageCommandArgument = "Prev";
        public const string SelectCommandName = "Select";
        public const string SortCommandName = "Sort";
        public const string UpdateCommandName = "Update";
    }
    [System.ComponentModel.DefaultPropertyAttribute("HeaderText")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public abstract partial class DataControlField : System.Web.UI.IDataSourceViewSchemaAccessor, System.Web.UI.IStateManager
    {
        protected DataControlField() { }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string AccessibleHeaderText { get { throw null; } set { } }
        protected System.Web.UI.Control Control { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.Style ControlStyle { get { throw null; } }
        protected bool DesignMode { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.TableItemStyle FooterStyle { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string FooterText { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.UrlPropertyAttribute]
        public virtual string HeaderImageUrl { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.TableItemStyle HeaderStyle { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string HeaderText { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(true)]
        public virtual bool InsertVisible { get { throw null; } set { } }
        protected bool IsTrackingViewState { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.TableItemStyle ItemStyle { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(true)]
        public virtual bool ShowHeader { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.TypeConverterAttribute("System.Web.UI.Design.DataSourceViewSchemaConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
        public virtual string SortExpression { get { throw null; } set { } }
        object System.Web.UI.IDataSourceViewSchemaAccessor.DataSourceViewSchema { get { throw null; } set { } }
        bool System.Web.UI.IStateManager.IsTrackingViewState { get { throw null; } }
        protected internal virtual System.Web.UI.ValidateRequestMode ValidateRequestMode { get { throw null; } set { } }
        protected System.Web.UI.StateBag ViewState { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool Visible { get { throw null; } set { } }
        protected internal System.Web.UI.WebControls.DataControlField CloneField() { throw null; }
        protected virtual void CopyProperties(System.Web.UI.WebControls.DataControlField newField) { }
        protected abstract System.Web.UI.WebControls.DataControlField CreateField();
        public virtual void ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary dictionary, System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlRowState rowState, bool includeReadOnly) { }
        public virtual bool Initialize(bool sortingEnabled, System.Web.UI.Control control) { throw null; }
        public virtual void InitializeCell(System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlCellType cellType, System.Web.UI.WebControls.DataControlRowState rowState, int rowIndex) { }
        protected virtual void LoadViewState(object savedState) { }
        protected virtual void OnFieldChanged() { }
        protected virtual object SaveViewState() { throw null; }
        void System.Web.UI.IStateManager.LoadViewState(object state) { }
        object System.Web.UI.IStateManager.SaveViewState() { throw null; }
        void System.Web.UI.IStateManager.TrackViewState() { }
        public override string ToString() { throw null; }
        protected virtual void TrackViewState() { }
        public virtual void ValidateSupportsCallback() { }
    }
    public partial class DataControlFieldCell : System.Web.UI.WebControls.TableCell
    {
        protected DataControlFieldCell(System.Web.UI.HtmlTextWriterTag tagKey, System.Web.UI.WebControls.DataControlField containingField) { }
        public DataControlFieldCell(System.Web.UI.WebControls.DataControlField containingField) { }
        public System.Web.UI.WebControls.DataControlField ContainingField { get { throw null; } }
        public override System.Web.UI.ValidateRequestMode ValidateRequestMode { get { throw null; } set { } }
    }
    public sealed partial class DataControlFieldCollection : System.Web.UI.StateManagedCollection
    {
        public DataControlFieldCollection() { }
        [System.ComponentModel.BrowsableAttribute(false)]
        public System.Web.UI.WebControls.DataControlField this[int index] { get { throw null; } }
        public event System.EventHandler FieldsChanged { add { } remove { } }
        public void Add(System.Web.UI.WebControls.DataControlField field) { }
        public System.Web.UI.WebControls.DataControlFieldCollection CloneFields() { throw null; }
        public bool Contains(System.Web.UI.WebControls.DataControlField field) { throw null; }
        public void CopyTo(System.Web.UI.WebControls.DataControlField[] array, int index) { }
        protected override object CreateKnownType(int index) { throw null; }
        protected override System.Type[] GetKnownTypes() { throw null; }
        public int IndexOf(System.Web.UI.WebControls.DataControlField field) { throw null; }
        public void Insert(int index, System.Web.UI.WebControls.DataControlField field) { }
        protected override void OnClearComplete() { }
        protected override void OnInsertComplete(int index, object value) { }
        protected override void OnRemoveComplete(int index, object value) { }
        protected override void OnValidate(object o) { }
        public void Remove(System.Web.UI.WebControls.DataControlField field) { }
        public void RemoveAt(int index) { }
        protected override void SetDirtyObject(object o) { }
    }
    public partial class DataControlFieldHeaderCell : System.Web.UI.WebControls.DataControlFieldCell
    {
        public DataControlFieldHeaderCell(System.Web.UI.WebControls.DataControlField containingField) : base (default(System.Web.UI.WebControls.DataControlField)) { }
        public virtual string AbbreviatedText { get { throw null; } set { } }
        public virtual System.Web.UI.WebControls.TableHeaderScope Scope { get { throw null; } set { } }
        protected override void AddAttributesToRender(System.Web.UI.HtmlTextWriter writer) { }
    }
    [System.FlagsAttribute]
    public enum DataControlRowState
    {
        Alternate = 1,
        Edit = 4,
        Insert = 8,
        Normal = 0,
        Selected = 2,
    }
    public enum DataControlRowType
    {
        DataRow = 2,
        EmptyDataRow = 5,
        Footer = 1,
        Header = 0,
        Pager = 4,
        Separator = 3,
    }
    [System.ComponentModel.DesignerAttribute("System.Web.UI.Design.WebControls.DataGridDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.EditorAttribute("System.Web.UI.Design.WebControls.DataGridComponentEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.ComponentModel.ComponentEditor))]
    public partial class DataGrid : System.Web.UI.WebControls.BaseDataList, System.Web.UI.INamingContainer
    {
        public const string CancelCommandName = "Cancel";
        public const string DeleteCommandName = "Delete";
        public const string EditCommandName = "Edit";
        public const string NextPageCommandArgument = "Next";
        public const string PageCommandName = "Page";
        public const string PrevPageCommandArgument = "Prev";
        public const string SelectCommandName = "Select";
        public const string SortCommandName = "Sort";
        public const string UpdateCommandName = "Update";
        public DataGrid() { }
        [System.ComponentModel.DefaultValueAttribute(false)]
        public virtual bool AllowCustomPaging { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(false)]
        public virtual bool AllowPaging { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(false)]
        public virtual bool AllowSorting { get { throw null; } set { } }
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public virtual System.Web.UI.WebControls.TableItemStyle AlternatingItemStyle { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(true)]
        public virtual bool AutoGenerateColumns { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.UrlPropertyAttribute]
        public virtual string BackImageUrl { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.WebControls.DataGridColumnCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.ComponentModel.MergablePropertyAttribute(false)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public virtual System.Web.UI.WebControls.DataGridColumnCollection Columns { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public int CurrentPageIndex { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(-1)]
        public virtual int EditItemIndex { get { throw null; } set { } }
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public virtual System.Web.UI.WebControls.TableItemStyle EditItemStyle { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public virtual System.Web.UI.WebControls.TableItemStyle FooterStyle { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public virtual System.Web.UI.WebControls.TableItemStyle HeaderStyle { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public virtual System.Web.UI.WebControls.DataGridItemCollection Items { get { throw null; } }
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public virtual System.Web.UI.WebControls.TableItemStyle ItemStyle { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public int PageCount { get { throw null; } }
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public virtual System.Web.UI.WebControls.DataGridPagerStyle PagerStyle { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(10)]
        public virtual int PageSize { get { throw null; } set { } }
        [System.ComponentModel.BindableAttribute(true)]
        [System.ComponentModel.DefaultValueAttribute(-1)]
        public virtual int SelectedIndex { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public virtual System.Web.UI.WebControls.DataGridItem SelectedItem { get { throw null; } }
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public virtual System.Web.UI.WebControls.TableItemStyle SelectedItemStyle { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(false)]
        public virtual bool ShowFooter { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(true)]
        public virtual bool ShowHeader { get { throw null; } set { } }
        protected override System.Web.UI.HtmlTextWriterTag TagKey { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public virtual int VirtualItemCount { get { throw null; } set { } }
        public event System.Web.UI.WebControls.DataGridCommandEventHandler CancelCommand { add { } remove { } }
        public event System.Web.UI.WebControls.DataGridCommandEventHandler DeleteCommand { add { } remove { } }
        public event System.Web.UI.WebControls.DataGridCommandEventHandler EditCommand { add { } remove { } }
        public event System.Web.UI.WebControls.DataGridCommandEventHandler ItemCommand { add { } remove { } }
        public event System.Web.UI.WebControls.DataGridItemEventHandler ItemCreated { add { } remove { } }
        public event System.Web.UI.WebControls.DataGridItemEventHandler ItemDataBound { add { } remove { } }
        public event System.Web.UI.WebControls.DataGridPageChangedEventHandler PageIndexChanged { add { } remove { } }
        public event System.Web.UI.WebControls.DataGridSortCommandEventHandler SortCommand { add { } remove { } }
        public event System.Web.UI.WebControls.DataGridCommandEventHandler UpdateCommand { add { } remove { } }
        protected virtual System.Collections.ArrayList CreateColumnSet(System.Web.UI.WebControls.PagedDataSource dataSource, bool useDataSource) { throw null; }
        protected override void CreateControlHierarchy(bool useDataSource) { }
        protected override System.Web.UI.WebControls.Style CreateControlStyle() { throw null; }
        protected virtual System.Web.UI.WebControls.DataGridItem CreateItem(int itemIndex, int dataSourceIndex, System.Web.UI.WebControls.ListItemType itemType) { throw null; }
        protected virtual void InitializeItem(System.Web.UI.WebControls.DataGridItem item, System.Web.UI.WebControls.DataGridColumn[] columns) { }
        protected virtual void InitializePager(System.Web.UI.WebControls.DataGridItem item, int columnSpan, System.Web.UI.WebControls.PagedDataSource pagedDataSource) { }
        protected override void LoadViewState(object savedState) { }
        protected override bool OnBubbleEvent(object source, System.EventArgs e) { throw null; }
        protected virtual void OnCancelCommand(System.Web.UI.WebControls.DataGridCommandEventArgs e) { }
        protected virtual void OnDeleteCommand(System.Web.UI.WebControls.DataGridCommandEventArgs e) { }
        protected virtual void OnEditCommand(System.Web.UI.WebControls.DataGridCommandEventArgs e) { }
        protected virtual void OnItemCommand(System.Web.UI.WebControls.DataGridCommandEventArgs e) { }
        protected virtual void OnItemCreated(System.Web.UI.WebControls.DataGridItemEventArgs e) { }
        protected virtual void OnItemDataBound(System.Web.UI.WebControls.DataGridItemEventArgs e) { }
        protected virtual void OnPageIndexChanged(System.Web.UI.WebControls.DataGridPageChangedEventArgs e) { }
        protected virtual void OnSortCommand(System.Web.UI.WebControls.DataGridSortCommandEventArgs e) { }
        protected virtual void OnUpdateCommand(System.Web.UI.WebControls.DataGridCommandEventArgs e) { }
        protected internal override void PrepareControlHierarchy() { }
        protected override object SaveViewState() { throw null; }
        protected override void TrackViewState() { }
    }
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public abstract partial class DataGridColumn : System.Web.UI.IStateManager
    {
        protected DataGridColumn() { }
        protected bool DesignMode { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public virtual System.Web.UI.WebControls.TableItemStyle FooterStyle { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute("")]
        public virtual string FooterText { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.Web.UI.UrlPropertyAttribute]
        public virtual string HeaderImageUrl { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public virtual System.Web.UI.WebControls.TableItemStyle HeaderStyle { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute("")]
        public virtual string HeaderText { get { throw null; } set { } }
        protected bool IsTrackingViewState { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public virtual System.Web.UI.WebControls.TableItemStyle ItemStyle { get { throw null; } }
        protected System.Web.UI.WebControls.DataGrid Owner { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute("")]
        public virtual string SortExpression { get { throw null; } set { } }
        bool System.Web.UI.IStateManager.IsTrackingViewState { get { throw null; } }
        protected System.Web.UI.StateBag ViewState { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool Visible { get { throw null; } set { } }
        public virtual void Initialize() { }
        public virtual void InitializeCell(System.Web.UI.WebControls.TableCell cell, int columnIndex, System.Web.UI.WebControls.ListItemType itemType) { }
        protected virtual void LoadViewState(object savedState) { }
        protected virtual void OnColumnChanged() { }
        protected virtual object SaveViewState() { throw null; }
        void System.Web.UI.IStateManager.LoadViewState(object state) { }
        object System.Web.UI.IStateManager.SaveViewState() { throw null; }
        void System.Web.UI.IStateManager.TrackViewState() { }
        public override string ToString() { throw null; }
        protected virtual void TrackViewState() { }
    }
    public sealed partial class DataGridColumnCollection : System.Collections.ICollection, System.Collections.IEnumerable, System.Web.UI.IStateManager
    {
        public DataGridColumnCollection(System.Web.UI.WebControls.DataGrid owner, System.Collections.ArrayList columns) { }
        [System.ComponentModel.BrowsableAttribute(false)]
        public int Count { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        public bool IsReadOnly { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        public bool IsSynchronized { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        public System.Web.UI.WebControls.DataGridColumn this[int index] { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        public object SyncRoot { get { throw null; } }
        bool System.Web.UI.IStateManager.IsTrackingViewState { get { throw null; } }
        public void Add(System.Web.UI.WebControls.DataGridColumn column) { }
        public void AddAt(int index, System.Web.UI.WebControls.DataGridColumn column) { }
        public void Clear() { }
        public void CopyTo(System.Array array, int index) { }
        public System.Collections.IEnumerator GetEnumerator() { throw null; }
        public int IndexOf(System.Web.UI.WebControls.DataGridColumn column) { throw null; }
        public void Remove(System.Web.UI.WebControls.DataGridColumn column) { }
        public void RemoveAt(int index) { }
        void System.Web.UI.IStateManager.LoadViewState(object savedState) { }
        object System.Web.UI.IStateManager.SaveViewState() { throw null; }
        void System.Web.UI.IStateManager.TrackViewState() { }
    }
    public partial class DataGridCommandEventArgs : System.Web.UI.WebControls.CommandEventArgs
    {
        public DataGridCommandEventArgs(System.Web.UI.WebControls.DataGridItem item, object commandSource, System.Web.UI.WebControls.CommandEventArgs originalArgs) : base (default(System.Web.UI.WebControls.CommandEventArgs)) { }
        public object CommandSource { get { throw null; } }
        public System.Web.UI.WebControls.DataGridItem Item { get { throw null; } }
    }
    public delegate void DataGridCommandEventHandler(object source, System.Web.UI.WebControls.DataGridCommandEventArgs e);
    public partial class DataGridItem : System.Web.UI.WebControls.TableRow, System.Web.UI.IDataItemContainer, System.Web.UI.INamingContainer
    {
        public DataGridItem(int itemIndex, int dataSetIndex, System.Web.UI.WebControls.ListItemType itemType) { }
        public virtual object DataItem { get { throw null; } set { } }
        public virtual int DataSetIndex { get { throw null; } }
        public virtual int ItemIndex { get { throw null; } }
        public virtual System.Web.UI.WebControls.ListItemType ItemType { get { throw null; } }
        object System.Web.UI.IDataItemContainer.DataItem { get { throw null; } }
        int System.Web.UI.IDataItemContainer.DataItemIndex { get { throw null; } }
        int System.Web.UI.IDataItemContainer.DisplayIndex { get { throw null; } }
        protected override bool OnBubbleEvent(object source, System.EventArgs e) { throw null; }
        protected internal virtual void SetItemType(System.Web.UI.WebControls.ListItemType itemType) { }
    }
    public partial class DataGridItemCollection : System.Collections.ICollection, System.Collections.IEnumerable
    {
        public DataGridItemCollection(System.Collections.ArrayList items) { }
        public int Count { get { throw null; } }
        public bool IsReadOnly { get { throw null; } }
        public bool IsSynchronized { get { throw null; } }
        public System.Web.UI.WebControls.DataGridItem this[int index] { get { throw null; } }
        public object SyncRoot { get { throw null; } }
        public void CopyTo(System.Array array, int index) { }
        public System.Collections.IEnumerator GetEnumerator() { throw null; }
    }
    public partial class DataGridItemEventArgs : System.EventArgs
    {
        public DataGridItemEventArgs(System.Web.UI.WebControls.DataGridItem item) { }
        public System.Web.UI.WebControls.DataGridItem Item { get { throw null; } }
    }
    public delegate void DataGridItemEventHandler(object sender, System.Web.UI.WebControls.DataGridItemEventArgs e);
    public partial class DataGridPageChangedEventArgs : System.EventArgs
    {
        public DataGridPageChangedEventArgs(object commandSource, int newPageIndex) { }
        public object CommandSource { get { throw null; } }
        public int NewPageIndex { get { throw null; } }
    }
    public delegate void DataGridPageChangedEventHandler(object source, System.Web.UI.WebControls.DataGridPageChangedEventArgs e);
    public sealed partial class DataGridPagerStyle : System.Web.UI.WebControls.TableItemStyle
    {
        internal DataGridPagerStyle() { }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.PagerMode.NextPrev)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        public System.Web.UI.WebControls.PagerMode Mode { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("&gt;")]
        [System.ComponentModel.LocalizableAttribute(true)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        public string NextPageText { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(10)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        public int PageButtonCount { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.PagerPosition.Bottom)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        public System.Web.UI.WebControls.PagerPosition Position { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("&lt;")]
        [System.ComponentModel.LocalizableAttribute(true)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        public string PrevPageText { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(true)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        public bool Visible { get { throw null; } set { } }
        public override void CopyFrom(System.Web.UI.WebControls.Style s) { }
        public override void MergeWith(System.Web.UI.WebControls.Style s) { }
        public override void Reset() { }
    }
    public partial class DataGridSortCommandEventArgs : System.EventArgs
    {
        public DataGridSortCommandEventArgs(object commandSource, System.Web.UI.WebControls.DataGridCommandEventArgs dce) { }
        public object CommandSource { get { throw null; } }
        public string SortExpression { get { throw null; } }
    }
    public delegate void DataGridSortCommandEventHandler(object source, System.Web.UI.WebControls.DataGridSortCommandEventArgs e);
    public partial class DataKey : System.IEquatable<System.Web.UI.WebControls.DataKey>, System.Web.UI.IStateManager
    {
        public DataKey(System.Collections.Specialized.IOrderedDictionary keyTable) { }
        public DataKey(System.Collections.Specialized.IOrderedDictionary keyTable, string[] keyNames) { }
        protected virtual bool IsTrackingViewState { get { throw null; } }
        public virtual object this[int index] { get { throw null; } }
        public virtual object this[string name] { get { throw null; } }
        bool System.Web.UI.IStateManager.IsTrackingViewState { get { throw null; } }
        public virtual object Value { get { throw null; } }
        public virtual System.Collections.Specialized.IOrderedDictionary Values { get { throw null; } }
        public bool Equals(System.Web.UI.WebControls.DataKey other) { throw null; }
        protected virtual void LoadViewState(object state) { }
        protected virtual object SaveViewState() { throw null; }
        void System.Web.UI.IStateManager.LoadViewState(object state) { }
        object System.Web.UI.IStateManager.SaveViewState() { throw null; }
        void System.Web.UI.IStateManager.TrackViewState() { }
        protected virtual void TrackViewState() { }
    }
    public sealed partial class DataKeyArray : System.Collections.ICollection, System.Collections.IEnumerable, System.Web.UI.IStateManager
    {
        public DataKeyArray(System.Collections.ArrayList keys) { }
        public int Count { get { throw null; } }
        public bool IsReadOnly { get { throw null; } }
        public bool IsSynchronized { get { throw null; } }
        public System.Web.UI.WebControls.DataKey this[int index] { get { throw null; } }
        public object SyncRoot { get { throw null; } }
        bool System.Web.UI.IStateManager.IsTrackingViewState { get { throw null; } }
        public void CopyTo(System.Web.UI.WebControls.DataKey[] array, int index) { }
        public System.Collections.IEnumerator GetEnumerator() { throw null; }
        void System.Collections.ICollection.CopyTo(System.Array array, int index) { }
        void System.Web.UI.IStateManager.LoadViewState(object state) { }
        object System.Web.UI.IStateManager.SaveViewState() { throw null; }
        void System.Web.UI.IStateManager.TrackViewState() { }
    }
    public sealed partial class DataKeyCollection : System.Collections.ICollection, System.Collections.IEnumerable
    {
        public DataKeyCollection(System.Collections.ArrayList keys) { }
        public int Count { get { throw null; } }
        public bool IsReadOnly { get { throw null; } }
        public bool IsSynchronized { get { throw null; } }
        public object this[int index] { get { throw null; } }
        public object SyncRoot { get { throw null; } }
        public void CopyTo(System.Array array, int index) { }
        public System.Collections.IEnumerator GetEnumerator() { throw null; }
    }
    [System.ComponentModel.DesignerAttribute("System.Web.UI.Design.WebControls.DataListDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.EditorAttribute("System.Web.UI.Design.WebControls.DataListComponentEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.ComponentModel.ComponentEditor))]
    [System.Web.UI.ControlValuePropertyAttribute("SelectedValue")]
    public partial class DataList : System.Web.UI.WebControls.BaseDataList, System.Web.UI.INamingContainer, System.Web.UI.WebControls.IRepeatInfoUser
    {
        public const string CancelCommandName = "Cancel";
        public const string DeleteCommandName = "Delete";
        public const string EditCommandName = "Edit";
        public const string SelectCommandName = "Select";
        public const string UpdateCommandName = "Update";
        public DataList() { }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public virtual System.Web.UI.WebControls.TableItemStyle AlternatingItemStyle { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        [System.Web.UI.TemplateContainerAttribute(typeof(System.Web.UI.WebControls.DataListItem))]
        public virtual System.Web.UI.ITemplate AlternatingItemTemplate { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(-1)]
        public virtual int EditItemIndex { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public virtual System.Web.UI.WebControls.TableItemStyle EditItemStyle { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        [System.Web.UI.TemplateContainerAttribute(typeof(System.Web.UI.WebControls.DataListItem))]
        public virtual System.Web.UI.ITemplate EditItemTemplate { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(false)]
        public virtual bool ExtractTemplateRows { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public virtual System.Web.UI.WebControls.TableItemStyle FooterStyle { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        [System.Web.UI.TemplateContainerAttribute(typeof(System.Web.UI.WebControls.DataListItem))]
        public virtual System.Web.UI.ITemplate FooterTemplate { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.GridLines.None)]
        public override System.Web.UI.WebControls.GridLines GridLines { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public virtual System.Web.UI.WebControls.TableItemStyle HeaderStyle { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        [System.Web.UI.TemplateContainerAttribute(typeof(System.Web.UI.WebControls.DataListItem))]
        public virtual System.Web.UI.ITemplate HeaderTemplate { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public virtual System.Web.UI.WebControls.DataListItemCollection Items { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public virtual System.Web.UI.WebControls.TableItemStyle ItemStyle { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        [System.Web.UI.TemplateContainerAttribute(typeof(System.Web.UI.WebControls.DataListItem))]
        public virtual System.Web.UI.ITemplate ItemTemplate { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(0)]
        public virtual int RepeatColumns { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.RepeatDirection.Vertical)]
        public virtual System.Web.UI.WebControls.RepeatDirection RepeatDirection { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.RepeatLayout.Table)]
        public virtual System.Web.UI.WebControls.RepeatLayout RepeatLayout { get { throw null; } set { } }
        [System.ComponentModel.BindableAttribute(true)]
        [System.ComponentModel.DefaultValueAttribute(-1)]
        public virtual int SelectedIndex { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public virtual System.Web.UI.WebControls.DataListItem SelectedItem { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public virtual System.Web.UI.WebControls.TableItemStyle SelectedItemStyle { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        [System.Web.UI.TemplateContainerAttribute(typeof(System.Web.UI.WebControls.DataListItem))]
        public virtual System.Web.UI.ITemplate SelectedItemTemplate { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        public object SelectedValue { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public virtual System.Web.UI.WebControls.TableItemStyle SeparatorStyle { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        [System.Web.UI.TemplateContainerAttribute(typeof(System.Web.UI.WebControls.DataListItem))]
        public virtual System.Web.UI.ITemplate SeparatorTemplate { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(true)]
        public virtual bool ShowFooter { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(true)]
        public virtual bool ShowHeader { get { throw null; } set { } }
        bool System.Web.UI.WebControls.IRepeatInfoUser.HasFooter { get { throw null; } }
        bool System.Web.UI.WebControls.IRepeatInfoUser.HasHeader { get { throw null; } }
        bool System.Web.UI.WebControls.IRepeatInfoUser.HasSeparators { get { throw null; } }
        int System.Web.UI.WebControls.IRepeatInfoUser.RepeatedItemCount { get { throw null; } }
        protected override System.Web.UI.HtmlTextWriterTag TagKey { get { throw null; } }
        public event System.Web.UI.WebControls.DataListCommandEventHandler CancelCommand { add { } remove { } }
        public event System.Web.UI.WebControls.DataListCommandEventHandler DeleteCommand { add { } remove { } }
        public event System.Web.UI.WebControls.DataListCommandEventHandler EditCommand { add { } remove { } }
        public event System.Web.UI.WebControls.DataListCommandEventHandler ItemCommand { add { } remove { } }
        public event System.Web.UI.WebControls.DataListItemEventHandler ItemCreated { add { } remove { } }
        public event System.Web.UI.WebControls.DataListItemEventHandler ItemDataBound { add { } remove { } }
        public event System.Web.UI.WebControls.DataListCommandEventHandler UpdateCommand { add { } remove { } }
        protected override void CreateControlHierarchy(bool useDataSource) { }
        protected override System.Web.UI.WebControls.Style CreateControlStyle() { throw null; }
        protected virtual System.Web.UI.WebControls.DataListItem CreateItem(int itemIndex, System.Web.UI.WebControls.ListItemType itemType) { throw null; }
        protected virtual void InitializeItem(System.Web.UI.WebControls.DataListItem item) { }
        protected override void LoadViewState(object savedState) { }
        protected override bool OnBubbleEvent(object source, System.EventArgs e) { throw null; }
        protected virtual void OnCancelCommand(System.Web.UI.WebControls.DataListCommandEventArgs e) { }
        protected virtual void OnDeleteCommand(System.Web.UI.WebControls.DataListCommandEventArgs e) { }
        protected virtual void OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs e) { }
        protected internal override void OnInit(System.EventArgs e) { }
        protected virtual void OnItemCommand(System.Web.UI.WebControls.DataListCommandEventArgs e) { }
        protected virtual void OnItemCreated(System.Web.UI.WebControls.DataListItemEventArgs e) { }
        protected virtual void OnItemDataBound(System.Web.UI.WebControls.DataListItemEventArgs e) { }
        protected virtual void OnUpdateCommand(System.Web.UI.WebControls.DataListCommandEventArgs e) { }
        protected internal override void PrepareControlHierarchy() { }
        protected internal override void RenderContents(System.Web.UI.HtmlTextWriter writer) { }
        protected override object SaveViewState() { throw null; }
        System.Web.UI.WebControls.Style System.Web.UI.WebControls.IRepeatInfoUser.GetItemStyle(System.Web.UI.WebControls.ListItemType itemType, int repeatIndex) { throw null; }
        void System.Web.UI.WebControls.IRepeatInfoUser.RenderItem(System.Web.UI.WebControls.ListItemType itemType, int repeatIndex, System.Web.UI.WebControls.RepeatInfo repeatInfo, System.Web.UI.HtmlTextWriter writer) { }
        protected override void TrackViewState() { }
    }
    public partial class DataListCommandEventArgs : System.Web.UI.WebControls.CommandEventArgs
    {
        public DataListCommandEventArgs(System.Web.UI.WebControls.DataListItem item, object commandSource, System.Web.UI.WebControls.CommandEventArgs originalArgs) : base (default(System.Web.UI.WebControls.CommandEventArgs)) { }
        public object CommandSource { get { throw null; } }
        public System.Web.UI.WebControls.DataListItem Item { get { throw null; } }
    }
    public delegate void DataListCommandEventHandler(object source, System.Web.UI.WebControls.DataListCommandEventArgs e);
    [System.ComponentModel.ToolboxItemAttribute(false)]
    public partial class DataListItem : System.Web.UI.WebControls.WebControl, System.Web.UI.IDataItemContainer, System.Web.UI.INamingContainer
    {
        public DataListItem(int itemIndex, System.Web.UI.WebControls.ListItemType itemType) { }
        public virtual object DataItem { get { throw null; } set { } }
        public virtual int ItemIndex { get { throw null; } }
        public virtual System.Web.UI.WebControls.ListItemType ItemType { get { throw null; } }
        public override bool SupportsDisabledAttribute { get { throw null; } }
        object System.Web.UI.IDataItemContainer.DataItem { get { throw null; } }
        int System.Web.UI.IDataItemContainer.DataItemIndex { get { throw null; } }
        int System.Web.UI.IDataItemContainer.DisplayIndex { get { throw null; } }
        protected override System.Web.UI.WebControls.Style CreateControlStyle() { throw null; }
        protected override bool OnBubbleEvent(object source, System.EventArgs e) { throw null; }
        public virtual void RenderItem(System.Web.UI.HtmlTextWriter writer, bool extractRows, bool tableLayout) { }
        protected internal virtual void SetItemType(System.Web.UI.WebControls.ListItemType itemType) { }
    }
    public sealed partial class DataListItemCollection : System.Collections.ICollection, System.Collections.IEnumerable
    {
        public DataListItemCollection(System.Collections.ArrayList items) { }
        public int Count { get { throw null; } }
        public bool IsReadOnly { get { throw null; } }
        public bool IsSynchronized { get { throw null; } }
        public System.Web.UI.WebControls.DataListItem this[int index] { get { throw null; } }
        public object SyncRoot { get { throw null; } }
        public void CopyTo(System.Array array, int index) { }
        public System.Collections.IEnumerator GetEnumerator() { throw null; }
    }
    public partial class DataListItemEventArgs : System.EventArgs
    {
        public DataListItemEventArgs(System.Web.UI.WebControls.DataListItem item) { }
        public System.Web.UI.WebControls.DataListItem Item { get { throw null; } }
    }
    public delegate void DataListItemEventHandler(object sender, System.Web.UI.WebControls.DataListItemEventArgs e);
    public partial class DataSourceSelectResultProcessingOptions
    {
        public DataSourceSelectResultProcessingOptions() { }
        public bool AutoPage { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } [System.Runtime.CompilerServices.CompilerGeneratedAttribute]set { } }
        public bool AutoSort { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } [System.Runtime.CompilerServices.CompilerGeneratedAttribute]set { } }
        public System.Type ModelType { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } [System.Runtime.CompilerServices.CompilerGeneratedAttribute]set { } }
    }
    public enum DayNameFormat
    {
        FirstLetter = 2,
        FirstTwoLetters = 3,
        Full = 0,
        Short = 1,
        Shortest = 4,
    }
    public sealed partial class DayRenderEventArgs
    {
        public DayRenderEventArgs(System.Web.UI.WebControls.TableCell cell, System.Web.UI.WebControls.CalendarDay day) { }
        public DayRenderEventArgs(System.Web.UI.WebControls.TableCell cell, System.Web.UI.WebControls.CalendarDay day, string selectUrl) { }
        public System.Web.UI.WebControls.TableCell Cell { get { throw null; } }
        public System.Web.UI.WebControls.CalendarDay Day { get { throw null; } }
        public string SelectUrl { get { throw null; } }
    }
    public delegate void DayRenderEventHandler(object sender, System.Web.UI.WebControls.DayRenderEventArgs e);
    [System.ComponentModel.DefaultEventAttribute("PageIndexChanging")]
    [System.ComponentModel.DesignerAttribute("System.Web.UI.Design.WebControls.DetailsViewDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.Web.UI.ControlValuePropertyAttribute("SelectedValue")]
    [System.Web.UI.DataKeyPropertyAttribute("DataKey")]
    [System.Web.UI.SupportsEventValidationAttribute]
    [System.Web.UI.ToolboxDataAttribute("<{0}:DetailsView runat=\"server\" Width=\"125px\" Height=\"50px\"></{0}:DetailsView>")]
    public partial class DetailsView : System.Web.UI.WebControls.CompositeDataBoundControl, System.Web.UI.ICallbackEventHandler, System.Web.UI.IDataItemContainer, System.Web.UI.INamingContainer, System.Web.UI.IPostBackEventHandler, System.Web.UI.WebControls.ICallbackContainer, System.Web.UI.WebControls.IDataBoundControl, System.Web.UI.WebControls.IDataBoundItemControl, System.Web.UI.WebControls.IFieldControl, System.Web.UI.WebControls.IPostBackContainer
    {
        public DetailsView() { }
        [System.ComponentModel.DefaultValueAttribute(false)]
        public virtual bool AllowPaging { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.TableItemStyle AlternatingRowStyle { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(false)]
        public virtual bool AutoGenerateDeleteButton { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(false)]
        public virtual bool AutoGenerateEditButton { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(false)]
        public virtual bool AutoGenerateInsertButton { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(true)]
        public virtual bool AutoGenerateRows { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.UrlPropertyAttribute]
        public virtual string BackImageUrl { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public virtual System.Web.UI.WebControls.DetailsViewRow BottomPagerRow { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string Caption { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.TableCaptionAlign.NotSet)]
        public virtual System.Web.UI.WebControls.TableCaptionAlign CaptionAlign { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(-1)]
        public virtual int CellPadding { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(0)]
        public virtual int CellSpacing { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.TableItemStyle CommandRowStyle { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public System.Web.UI.WebControls.DetailsViewMode CurrentMode { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public virtual object DataItem { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public int DataItemCount { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public virtual int DataItemIndex { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public virtual System.Web.UI.WebControls.DataKey DataKey { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.WebControls.DataFieldEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.ComponentModel.TypeConverterAttribute(typeof(System.Web.UI.WebControls.StringArrayConverter))]
        public virtual string[] DataKeyNames { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.DetailsViewMode.ReadOnly)]
        public virtual System.Web.UI.WebControls.DetailsViewMode DefaultMode { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.Web.UI.ThemeableAttribute(false)]
        public virtual new string DeleteMethod { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.TableItemStyle EditRowStyle { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.TableItemStyle EmptyDataRowStyle { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        [System.Web.UI.TemplateContainerAttribute(typeof(System.Web.UI.WebControls.DetailsView))]
        public virtual System.Web.UI.ITemplate EmptyDataTemplate { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string EmptyDataText { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(true)]
        public virtual bool EnableModelValidation { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(false)]
        public virtual bool EnablePagingCallbacks { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.TableItemStyle FieldHeaderStyle { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.WebControls.DataControlFieldTypeEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.ComponentModel.MergablePropertyAttribute(false)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public virtual System.Web.UI.WebControls.DataControlFieldCollection Fields { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public virtual System.Web.UI.WebControls.DetailsViewRow FooterRow { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.TableItemStyle FooterStyle { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        [System.Web.UI.TemplateContainerAttribute(typeof(System.Web.UI.WebControls.DetailsView))]
        public virtual System.Web.UI.ITemplate FooterTemplate { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string FooterText { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.GridLines.Both)]
        public virtual System.Web.UI.WebControls.GridLines GridLines { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public virtual System.Web.UI.WebControls.DetailsViewRow HeaderRow { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.TableItemStyle HeaderStyle { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        [System.Web.UI.TemplateContainerAttribute(typeof(System.Web.UI.WebControls.DetailsView))]
        public virtual System.Web.UI.ITemplate HeaderTemplate { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string HeaderText { get { throw null; } set { } }
        [System.ComponentModel.CategoryAttribute("Layout")]
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.HorizontalAlign.NotSet)]
        public virtual System.Web.UI.WebControls.HorizontalAlign HorizontalAlign { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.Web.UI.ThemeableAttribute(false)]
        public virtual new string InsertMethod { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.TableItemStyle InsertRowStyle { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public virtual int PageCount { get { throw null; } }
        [System.ComponentModel.BindableAttribute(true)]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public virtual int PageIndex { get { throw null; } set { } }
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public virtual System.Web.UI.WebControls.PagerSettings PagerSettings { get { throw null; } }
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.TableItemStyle PagerStyle { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        [System.Web.UI.TemplateContainerAttribute(typeof(System.Web.UI.WebControls.DetailsView))]
        public virtual System.Web.UI.ITemplate PagerTemplate { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public virtual System.Web.UI.WebControls.DetailsViewRowCollection Rows { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public System.Web.UI.IAutoFieldGenerator RowsGenerator { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.TableItemStyle RowStyle { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public object SelectedValue { get { throw null; } }
        int System.Web.UI.IDataItemContainer.DataItemIndex { get { throw null; } }
        int System.Web.UI.IDataItemContainer.DisplayIndex { get { throw null; } }
        string[] System.Web.UI.WebControls.IDataBoundControl.DataKeyNames { get { throw null; } set { } }
        string System.Web.UI.WebControls.IDataBoundControl.DataMember { get { throw null; } set { } }
        object System.Web.UI.WebControls.IDataBoundControl.DataSource { get { throw null; } set { } }
        string System.Web.UI.WebControls.IDataBoundControl.DataSourceID { get { throw null; } set { } }
        System.Web.UI.IDataSource System.Web.UI.WebControls.IDataBoundControl.DataSourceObject { get { throw null; } }
        System.Web.UI.WebControls.DataKey System.Web.UI.WebControls.IDataBoundItemControl.DataKey { get { throw null; } }
        System.Web.UI.WebControls.DataBoundControlMode System.Web.UI.WebControls.IDataBoundItemControl.Mode { get { throw null; } }
        System.Web.UI.IAutoFieldGenerator System.Web.UI.WebControls.IFieldControl.FieldsGenerator { get { throw null; } set { } }
        protected override System.Web.UI.HtmlTextWriterTag TagKey { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public virtual System.Web.UI.WebControls.DetailsViewRow TopPagerRow { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.Web.UI.ThemeableAttribute(false)]
        public virtual new string UpdateMethod { get { throw null; } set { } }
        public event System.Web.UI.WebControls.DetailsViewCommandEventHandler ItemCommand { add { } remove { } }
        public event System.EventHandler ItemCreated { add { } remove { } }
        public event System.Web.UI.WebControls.DetailsViewDeletedEventHandler ItemDeleted { add { } remove { } }
        public event System.Web.UI.WebControls.DetailsViewDeleteEventHandler ItemDeleting { add { } remove { } }
        public event System.Web.UI.WebControls.DetailsViewInsertedEventHandler ItemInserted { add { } remove { } }
        public event System.Web.UI.WebControls.DetailsViewInsertEventHandler ItemInserting { add { } remove { } }
        public event System.Web.UI.WebControls.DetailsViewUpdatedEventHandler ItemUpdated { add { } remove { } }
        public event System.Web.UI.WebControls.DetailsViewUpdateEventHandler ItemUpdating { add { } remove { } }
        public event System.EventHandler ModeChanged { add { } remove { } }
        public event System.Web.UI.WebControls.DetailsViewModeEventHandler ModeChanging { add { } remove { } }
        public event System.EventHandler PageIndexChanged { add { } remove { } }
        public event System.Web.UI.WebControls.DetailsViewPageEventHandler PageIndexChanging { add { } remove { } }
        public void ChangeMode(System.Web.UI.WebControls.DetailsViewMode newMode) { }
        protected virtual System.Web.UI.WebControls.AutoGeneratedField CreateAutoGeneratedRow(System.Web.UI.WebControls.AutoGeneratedFieldProperties fieldProperties) { throw null; }
        protected virtual System.Collections.ICollection CreateAutoGeneratedRows(object dataItem) { throw null; }
        protected override int CreateChildControls(System.Collections.IEnumerable dataSource, bool dataBinding) { throw null; }
        protected override System.Web.UI.WebControls.Style CreateControlStyle() { throw null; }
        protected override System.Web.UI.DataSourceSelectArguments CreateDataSourceSelectArguments() { throw null; }
        protected virtual System.Collections.ICollection CreateFieldSet(object dataItem, bool useDataSource) { throw null; }
        protected virtual System.Web.UI.WebControls.DetailsViewRow CreateRow(int rowIndex, System.Web.UI.WebControls.DataControlRowType rowType, System.Web.UI.WebControls.DataControlRowState rowState) { throw null; }
        protected virtual System.Web.UI.WebControls.Table CreateTable() { throw null; }
        public sealed override void DataBind() { }
        public virtual void DeleteItem() { }
        protected override void EnsureDataBound() { }
        protected virtual void ExtractRowValues(System.Collections.Specialized.IOrderedDictionary fieldValues, bool includeReadOnlyFields, bool includeKeys) { }
        protected virtual string GetCallbackResult() { throw null; }
        protected virtual string GetCallbackScript(System.Web.UI.WebControls.IButtonControl buttonControl, string argument) { throw null; }
        protected virtual void InitializePager(System.Web.UI.WebControls.DetailsViewRow row, System.Web.UI.WebControls.PagedDataSource pagedDataSource) { }
        protected virtual void InitializeRow(System.Web.UI.WebControls.DetailsViewRow row, System.Web.UI.WebControls.DataControlField field) { }
        public virtual void InsertItem(bool causesValidation) { }
        public virtual bool IsBindableType(System.Type type) { throw null; }
        protected internal override void LoadControlState(object savedState) { }
        protected override void LoadViewState(object savedState) { }
        protected override bool OnBubbleEvent(object source, System.EventArgs e) { throw null; }
        protected override void OnDataSourceViewChanged(object sender, System.EventArgs e) { }
        protected internal override void OnInit(System.EventArgs e) { }
        protected virtual void OnItemCommand(System.Web.UI.WebControls.DetailsViewCommandEventArgs e) { }
        protected virtual void OnItemCreated(System.EventArgs e) { }
        protected virtual void OnItemDeleted(System.Web.UI.WebControls.DetailsViewDeletedEventArgs e) { }
        protected virtual void OnItemDeleting(System.Web.UI.WebControls.DetailsViewDeleteEventArgs e) { }
        protected virtual void OnItemInserted(System.Web.UI.WebControls.DetailsViewInsertedEventArgs e) { }
        protected virtual void OnItemInserting(System.Web.UI.WebControls.DetailsViewInsertEventArgs e) { }
        protected virtual void OnItemUpdated(System.Web.UI.WebControls.DetailsViewUpdatedEventArgs e) { }
        protected virtual void OnItemUpdating(System.Web.UI.WebControls.DetailsViewUpdateEventArgs e) { }
        protected virtual void OnModeChanged(System.EventArgs e) { }
        protected virtual void OnModeChanging(System.Web.UI.WebControls.DetailsViewModeEventArgs e) { }
        protected virtual void OnPageIndexChanged(System.EventArgs e) { }
        protected virtual void OnPageIndexChanging(System.Web.UI.WebControls.DetailsViewPageEventArgs e) { }
        protected override void OnPagePreLoad(object sender, System.EventArgs e) { }
        protected internal override void OnPreRender(System.EventArgs e) { }
        protected internal override void PerformDataBinding(System.Collections.IEnumerable data) { }
        protected internal virtual void PrepareControlHierarchy() { }
        protected virtual void RaiseCallbackEvent(string eventArgument) { }
        protected virtual void RaisePostBackEvent(string eventArgument) { }
        protected internal override void Render(System.Web.UI.HtmlTextWriter writer) { }
        protected internal override object SaveControlState() { throw null; }
        protected override object SaveViewState() { throw null; }
        public void SetPageIndex(int index) { }
        string System.Web.UI.ICallbackEventHandler.GetCallbackResult() { throw null; }
        void System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(string eventArgument) { }
        void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(string eventArgument) { }
        string System.Web.UI.WebControls.ICallbackContainer.GetCallbackScript(System.Web.UI.WebControls.IButtonControl buttonControl, string argument) { throw null; }
        System.Web.UI.PostBackOptions System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(System.Web.UI.WebControls.IButtonControl buttonControl) { throw null; }
        protected override void TrackViewState() { }
        public virtual void UpdateItem(bool causesValidation) { }
    }
    public partial class DetailsViewCommandEventArgs : System.Web.UI.WebControls.CommandEventArgs
    {
        public DetailsViewCommandEventArgs(object commandSource, System.Web.UI.WebControls.CommandEventArgs originalArgs) : base (default(System.Web.UI.WebControls.CommandEventArgs)) { }
        public object CommandSource { get { throw null; } }
        public bool Handled { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } [System.Runtime.CompilerServices.CompilerGeneratedAttribute]set { } }
    }
    public delegate void DetailsViewCommandEventHandler(object sender, System.Web.UI.WebControls.DetailsViewCommandEventArgs e);
    public partial class DetailsViewDeletedEventArgs : System.EventArgs
    {
        public DetailsViewDeletedEventArgs(int affectedRows, System.Exception e) { }
        public int AffectedRows { get { throw null; } }
        public System.Exception Exception { get { throw null; } }
        public bool ExceptionHandled { get { throw null; } set { } }
        public System.Collections.Specialized.IOrderedDictionary Keys { get { throw null; } }
        public System.Collections.Specialized.IOrderedDictionary Values { get { throw null; } }
    }
    public delegate void DetailsViewDeletedEventHandler(object sender, System.Web.UI.WebControls.DetailsViewDeletedEventArgs e);
    public partial class DetailsViewDeleteEventArgs : System.ComponentModel.CancelEventArgs
    {
        public DetailsViewDeleteEventArgs(int rowIndex) { }
        public System.Collections.Specialized.IOrderedDictionary Keys { get { throw null; } }
        public int RowIndex { get { throw null; } }
        public System.Collections.Specialized.IOrderedDictionary Values { get { throw null; } }
    }
    public delegate void DetailsViewDeleteEventHandler(object sender, System.Web.UI.WebControls.DetailsViewDeleteEventArgs e);
    public partial class DetailsViewInsertedEventArgs : System.EventArgs
    {
        public DetailsViewInsertedEventArgs(int affectedRows, System.Exception e) { }
        public int AffectedRows { get { throw null; } }
        public System.Exception Exception { get { throw null; } }
        public bool ExceptionHandled { get { throw null; } set { } }
        public bool KeepInInsertMode { get { throw null; } set { } }
        public System.Collections.Specialized.IOrderedDictionary Values { get { throw null; } }
    }
    public delegate void DetailsViewInsertedEventHandler(object sender, System.Web.UI.WebControls.DetailsViewInsertedEventArgs e);
    public partial class DetailsViewInsertEventArgs : System.ComponentModel.CancelEventArgs
    {
        public DetailsViewInsertEventArgs(object commandArgument) { }
        public object CommandArgument { get { throw null; } }
        public System.Collections.Specialized.IOrderedDictionary Values { get { throw null; } }
    }
    public delegate void DetailsViewInsertEventHandler(object sender, System.Web.UI.WebControls.DetailsViewInsertEventArgs e);
    public enum DetailsViewMode
    {
        Edit = 1,
        Insert = 2,
        ReadOnly = 0,
    }
    public partial class DetailsViewModeEventArgs : System.ComponentModel.CancelEventArgs
    {
        public DetailsViewModeEventArgs(System.Web.UI.WebControls.DetailsViewMode mode, bool cancelingEdit) { }
        public bool CancelingEdit { get { throw null; } }
        public System.Web.UI.WebControls.DetailsViewMode NewMode { get { throw null; } set { } }
    }
    public delegate void DetailsViewModeEventHandler(object sender, System.Web.UI.WebControls.DetailsViewModeEventArgs e);
    public partial class DetailsViewPageEventArgs : System.ComponentModel.CancelEventArgs
    {
        public DetailsViewPageEventArgs(int newPageIndex) { }
        public int NewPageIndex { get { throw null; } set { } }
    }
    public delegate void DetailsViewPageEventHandler(object sender, System.Web.UI.WebControls.DetailsViewPageEventArgs e);
    public partial class DetailsViewPagerRow : System.Web.UI.WebControls.DetailsViewRow, System.Web.UI.INamingContainer
    {
        public DetailsViewPagerRow(int rowIndex, System.Web.UI.WebControls.DataControlRowType rowType, System.Web.UI.WebControls.DataControlRowState rowState) : base (default(int), default(System.Web.UI.WebControls.DataControlRowType), default(System.Web.UI.WebControls.DataControlRowState)) { }
    }
    public partial class DetailsViewRow : System.Web.UI.WebControls.TableRow
    {
        public DetailsViewRow(int rowIndex, System.Web.UI.WebControls.DataControlRowType rowType, System.Web.UI.WebControls.DataControlRowState rowState) { }
        public virtual int RowIndex { get { throw null; } }
        public virtual System.Web.UI.WebControls.DataControlRowState RowState { get { throw null; } }
        public virtual System.Web.UI.WebControls.DataControlRowType RowType { get { throw null; } }
        protected override bool OnBubbleEvent(object source, System.EventArgs e) { throw null; }
    }
    public partial class DetailsViewRowCollection : System.Collections.ICollection, System.Collections.IEnumerable
    {
        public DetailsViewRowCollection(System.Collections.ArrayList rows) { }
        public int Count { get { throw null; } }
        public bool IsReadOnly { get { throw null; } }
        public bool IsSynchronized { get { throw null; } }
        public System.Web.UI.WebControls.DetailsViewRow this[int index] { get { throw null; } }
        public object SyncRoot { get { throw null; } }
        public void CopyTo(System.Web.UI.WebControls.DetailsViewRow[] array, int index) { }
        public System.Collections.IEnumerator GetEnumerator() { throw null; }
        void System.Collections.ICollection.CopyTo(System.Array array, int index) { }
    }
    public partial class DetailsViewRowsGenerator : System.Web.UI.WebControls.AutoFieldsGenerator
    {
        public DetailsViewRowsGenerator() { }
        public override System.Collections.Generic.List<System.Web.UI.WebControls.AutoGeneratedField> CreateAutoGeneratedFields(object dataItem, System.Web.UI.Control control) { throw null; }
    }
    public partial class DetailsViewUpdatedEventArgs : System.EventArgs
    {
        public DetailsViewUpdatedEventArgs(int affectedRows, System.Exception e) { }
        public int AffectedRows { get { throw null; } }
        public System.Exception Exception { get { throw null; } }
        public bool ExceptionHandled { get { throw null; } set { } }
        public bool KeepInEditMode { get { throw null; } set { } }
        public System.Collections.Specialized.IOrderedDictionary Keys { get { throw null; } }
        public System.Collections.Specialized.IOrderedDictionary NewValues { get { throw null; } }
        public System.Collections.Specialized.IOrderedDictionary OldValues { get { throw null; } }
    }
    public delegate void DetailsViewUpdatedEventHandler(object sender, System.Web.UI.WebControls.DetailsViewUpdatedEventArgs e);
    public partial class DetailsViewUpdateEventArgs : System.ComponentModel.CancelEventArgs
    {
        public DetailsViewUpdateEventArgs(object commandArgument) { }
        public object CommandArgument { get { throw null; } }
        public System.Collections.Specialized.IOrderedDictionary Keys { get { throw null; } }
        public System.Collections.Specialized.IOrderedDictionary NewValues { get { throw null; } }
        public System.Collections.Specialized.IOrderedDictionary OldValues { get { throw null; } }
    }
    public delegate void DetailsViewUpdateEventHandler(object sender, System.Web.UI.WebControls.DetailsViewUpdateEventArgs e);
    [System.Web.UI.SupportsEventValidationAttribute]
    [System.Web.UI.ValidationPropertyAttribute("SelectedItem")]
    public partial class DropDownList : System.Web.UI.WebControls.ListControl, System.Web.UI.IPostBackDataHandler
    {
        public DropDownList() { }
        [System.ComponentModel.BrowsableAttribute(false)]
        public override System.Drawing.Color BorderColor { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        public override System.Web.UI.WebControls.BorderStyle BorderStyle { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        public override System.Web.UI.WebControls.Unit BorderWidth { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(0)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public override int SelectedIndex { get { throw null; } set { } }
        public override bool SupportsDisabledAttribute { get { throw null; } }
        protected override void AddAttributesToRender(System.Web.UI.HtmlTextWriter writer) { }
        protected override System.Web.UI.ControlCollection CreateControlCollection() { throw null; }
        protected virtual bool LoadPostData(string postDataKey, System.Collections.Specialized.NameValueCollection postCollection) { throw null; }
        protected virtual void RaisePostDataChangedEvent() { }
        bool System.Web.UI.IPostBackDataHandler.LoadPostData(string postDataKey, System.Collections.Specialized.NameValueCollection postCollection) { throw null; }
        void System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent() { }
        protected internal override void VerifyMultiSelect() { }
    }
    public partial class EditCommandColumn : System.Web.UI.WebControls.DataGridColumn
    {
        public EditCommandColumn() { }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.ButtonColumnType.LinkButton)]
        public virtual System.Web.UI.WebControls.ButtonColumnType ButtonType { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string CancelText { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(true)]
        public virtual bool CausesValidation { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string EditText { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string UpdateText { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        public virtual string ValidationGroup { get { throw null; } set { } }
        public override void InitializeCell(System.Web.UI.WebControls.TableCell cell, int columnIndex, System.Web.UI.WebControls.ListItemType itemType) { }
    }
    [System.ComponentModel.TypeConverterAttribute("System.Web.UI.WebControls.EmbeddedMailObject.EmbeddedMailObjectTypeConverter")]
    public sealed partial class EmbeddedMailObject
    {
        public EmbeddedMailObject() { }
        public EmbeddedMailObject(string name, string path) { }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        public string Name { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.MailFileEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.UrlPropertyAttribute]
        public string Path { get { throw null; } set { } }
    }
    [System.ComponentModel.EditorAttribute("System.Web.UI.Design.WebControls.EmbeddedMailObjectCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
    public sealed partial class EmbeddedMailObjectsCollection : System.Collections.CollectionBase
    {
        public EmbeddedMailObjectsCollection() { }
        public System.Web.UI.WebControls.EmbeddedMailObject this[int index] { get { throw null; } set { } }
        public int Add(System.Web.UI.WebControls.EmbeddedMailObject value) { throw null; }
        public bool Contains(System.Web.UI.WebControls.EmbeddedMailObject value) { throw null; }
        public void CopyTo(System.Web.UI.WebControls.EmbeddedMailObject[] array, int index) { }
        public int IndexOf(System.Web.UI.WebControls.EmbeddedMailObject value) { throw null; }
        public void Insert(int index, System.Web.UI.WebControls.EmbeddedMailObject value) { }
        protected override void OnValidate(object value) { }
        public void Remove(System.Web.UI.WebControls.EmbeddedMailObject value) { }
    }
    [System.ComponentModel.DesignerAttribute("System.Web.UI.Design.WebControls.PreviewControlDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.Web.UI.ControlValuePropertyAttribute("FileBytes")]
    [System.Web.UI.ValidationPropertyAttribute("FileName")]
    public partial class FileUpload : System.Web.UI.WebControls.WebControl
    {
        public FileUpload() { }
        [System.ComponentModel.BrowsableAttribute(true)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public virtual bool AllowMultiple { get { throw null; } set { } }
        [System.ComponentModel.BindableAttribute(true)]
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public byte[] FileBytes { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public System.IO.Stream FileContent { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public string FileName { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public bool HasFile { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public bool HasFiles { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public System.Web.HttpPostedFile PostedFile { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public System.Collections.Generic.IList<System.Web.HttpPostedFile> PostedFiles { get { throw null; } }
        protected override void AddAttributesToRender(System.Web.UI.HtmlTextWriter writer) { }
        protected internal override void OnPreRender(System.EventArgs e) { }
        protected internal override void Render(System.Web.UI.HtmlTextWriter writer) { }
        public void SaveAs(string filename) { }
    }
    public enum FirstDayOfWeek
    {
        Default = 7,
        Friday = 5,
        Monday = 1,
        Saturday = 6,
        Sunday = 0,
        Thursday = 4,
        Tuesday = 2,
        Wednesday = 3,
    }
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public sealed partial class FontInfo
    {
        internal FontInfo() { }
        [System.ComponentModel.DefaultValueAttribute(false)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        public bool Bold { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(false)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        public bool Italic { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.ComponentModel.EditorAttribute("System.Drawing.Design.FontNameEditor, System.Drawing.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.ComponentModel.RefreshPropertiesAttribute(System.ComponentModel.RefreshProperties.Repaint)]
        [System.ComponentModel.TypeConverterAttribute(typeof(System.Drawing.FontConverter.FontNameConverter))]
        public string Name { get { throw null; } set { } }
        [System.ComponentModel.EditorAttribute("System.Windows.Forms.Design.StringArrayEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.ComponentModel.RefreshPropertiesAttribute(System.ComponentModel.RefreshProperties.Repaint)]
        [System.ComponentModel.TypeConverterAttribute(typeof(System.Web.UI.WebControls.FontNamesConverter))]
        public string[] Names { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(false)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        public bool Overline { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(typeof(System.Web.UI.WebControls.FontUnit), "")]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.ComponentModel.RefreshPropertiesAttribute(System.ComponentModel.RefreshProperties.Repaint)]
        public System.Web.UI.WebControls.FontUnit Size { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(false)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        public bool Strikeout { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(false)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        public bool Underline { get { throw null; } set { } }
        public void ClearDefaults() { }
        public void CopyFrom(System.Web.UI.WebControls.FontInfo f) { }
        public void MergeWith(System.Web.UI.WebControls.FontInfo f) { }
        public bool ShouldSerializeNames() { throw null; }
        public override string ToString() { throw null; }
    }
    public partial class FontNamesConverter : System.ComponentModel.TypeConverter
    {
        public FontNamesConverter() { }
        public override bool CanConvertFrom(System.ComponentModel.ITypeDescriptorContext context, System.Type sourceType) { throw null; }
        public override object ConvertFrom(System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value) { throw null; }
        public override object ConvertTo(System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, System.Type destinationType) { throw null; }
    }
    public enum FontSize
    {
        AsUnit = 1,
        Large = 8,
        Larger = 3,
        Medium = 7,
        NotSet = 0,
        Small = 6,
        Smaller = 2,
        XLarge = 9,
        XSmall = 5,
        XXLarge = 10,
        XXSmall = 4,
    }
    [System.ComponentModel.TypeConverterAttribute(typeof(System.Web.UI.WebControls.FontUnitConverter))]
    [System.SerializableAttribute]
    [System.Runtime.InteropServices.StructLayoutAttribute(System.Runtime.InteropServices.LayoutKind.Sequential)]
    public partial struct FontUnit
    {
        private int _dummyPrimitive;
        public static readonly System.Web.UI.WebControls.FontUnit Empty;
        public static readonly System.Web.UI.WebControls.FontUnit Large;
        public static readonly System.Web.UI.WebControls.FontUnit Larger;
        public static readonly System.Web.UI.WebControls.FontUnit Medium;
        public static readonly System.Web.UI.WebControls.FontUnit Small;
        public static readonly System.Web.UI.WebControls.FontUnit Smaller;
        public static readonly System.Web.UI.WebControls.FontUnit XLarge;
        public static readonly System.Web.UI.WebControls.FontUnit XSmall;
        public static readonly System.Web.UI.WebControls.FontUnit XXLarge;
        public static readonly System.Web.UI.WebControls.FontUnit XXSmall;
        public FontUnit(double value) { throw null; }
        public FontUnit(double value, System.Web.UI.WebControls.UnitType type) { throw null; }
        public FontUnit(int value) { throw null; }
        public FontUnit(string value) { throw null; }
        public FontUnit(string value, System.Globalization.CultureInfo culture) { throw null; }
        public FontUnit(System.Web.UI.WebControls.FontSize type) { throw null; }
        public FontUnit(System.Web.UI.WebControls.Unit value) { throw null; }
        public bool IsEmpty { get { throw null; } }
        public System.Web.UI.WebControls.FontSize Type { get { throw null; } }
        public System.Web.UI.WebControls.Unit Unit { get { throw null; } }
        public override bool Equals(object obj) { throw null; }
        public override int GetHashCode() { throw null; }
        public static bool operator ==(System.Web.UI.WebControls.FontUnit left, System.Web.UI.WebControls.FontUnit right) { throw null; }
        public static implicit operator System.Web.UI.WebControls.FontUnit (int n) { throw null; }
        public static bool operator !=(System.Web.UI.WebControls.FontUnit left, System.Web.UI.WebControls.FontUnit right) { throw null; }
        public static System.Web.UI.WebControls.FontUnit Parse(string s) { throw null; }
        public static System.Web.UI.WebControls.FontUnit Parse(string s, System.Globalization.CultureInfo culture) { throw null; }
        public static System.Web.UI.WebControls.FontUnit Point(int n) { throw null; }
        public override string ToString() { throw null; }
        public string ToString(System.Globalization.CultureInfo culture) { throw null; }
        public string ToString(System.IFormatProvider formatProvider) { throw null; }
    }
    public partial class FontUnitConverter : System.ComponentModel.TypeConverter
    {
        public FontUnitConverter() { }
        public override bool CanConvertFrom(System.ComponentModel.ITypeDescriptorContext context, System.Type sourceType) { throw null; }
        public override bool CanConvertTo(System.ComponentModel.ITypeDescriptorContext context, System.Type destinationType) { throw null; }
        public override object ConvertFrom(System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value) { throw null; }
        public override object ConvertTo(System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, System.Type destinationType) { throw null; }
        public override System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues(System.ComponentModel.ITypeDescriptorContext context) { throw null; }
        public override bool GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext context) { throw null; }
        public override bool GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext context) { throw null; }
    }
    [System.ComponentModel.DefaultPropertyAttribute("FormField")]
    public partial class FormParameter : System.Web.UI.WebControls.Parameter
    {
        public FormParameter() { }
        public FormParameter(string name, System.Data.DbType dbType, string formField) { }
        public FormParameter(string name, string formField) { }
        public FormParameter(string name, System.TypeCode type, string formField) { }
        protected FormParameter(System.Web.UI.WebControls.FormParameter original) { }
        [System.ComponentModel.DefaultValueAttribute("")]
        public string FormField { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool ValidateInput { get { throw null; } set { } }
        protected override System.Web.UI.WebControls.Parameter Clone() { throw null; }
        protected internal override object Evaluate(System.Web.HttpContext context, System.Web.UI.Control control) { throw null; }
    }
    [System.ComponentModel.DefaultEventAttribute("PageIndexChanging")]
    [System.ComponentModel.DesignerAttribute("System.Web.UI.Design.WebControls.FormViewDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.Web.UI.ControlValuePropertyAttribute("SelectedValue")]
    [System.Web.UI.DataKeyPropertyAttribute("DataKey")]
    [System.Web.UI.SupportsEventValidationAttribute]
    public partial class FormView : System.Web.UI.WebControls.CompositeDataBoundControl, System.Web.UI.IDataItemContainer, System.Web.UI.INamingContainer, System.Web.UI.IPostBackEventHandler, System.Web.UI.WebControls.IDataBoundControl, System.Web.UI.WebControls.IDataBoundItemControl, System.Web.UI.WebControls.IPostBackContainer
    {
        public FormView() { }
        [System.ComponentModel.DefaultValueAttribute(false)]
        public virtual bool AllowPaging { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.UrlPropertyAttribute]
        public virtual string BackImageUrl { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public virtual System.Web.UI.WebControls.FormViewRow BottomPagerRow { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string Caption { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.TableCaptionAlign.NotSet)]
        public virtual System.Web.UI.WebControls.TableCaptionAlign CaptionAlign { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(-1)]
        public virtual int CellPadding { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(0)]
        public virtual int CellSpacing { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public System.Web.UI.WebControls.FormViewMode CurrentMode { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public virtual object DataItem { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public int DataItemCount { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public virtual int DataItemIndex { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public virtual System.Web.UI.WebControls.DataKey DataKey { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.WebControls.DataFieldEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.ComponentModel.TypeConverterAttribute(typeof(System.Web.UI.WebControls.StringArrayConverter))]
        public virtual string[] DataKeyNames { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.FormViewMode.ReadOnly)]
        public virtual System.Web.UI.WebControls.FormViewMode DefaultMode { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.Web.UI.ThemeableAttribute(false)]
        public virtual new string DeleteMethod { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        [System.Web.UI.TemplateContainerAttribute(typeof(System.Web.UI.WebControls.FormView), System.ComponentModel.BindingDirection.TwoWay)]
        public virtual System.Web.UI.ITemplate EditItemTemplate { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.TableItemStyle EditRowStyle { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.TableItemStyle EmptyDataRowStyle { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        [System.Web.UI.TemplateContainerAttribute(typeof(System.Web.UI.WebControls.FormView))]
        public virtual System.Web.UI.ITemplate EmptyDataTemplate { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string EmptyDataText { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(true)]
        public virtual bool EnableModelValidation { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public virtual System.Web.UI.WebControls.FormViewRow FooterRow { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.TableItemStyle FooterStyle { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        [System.Web.UI.TemplateContainerAttribute(typeof(System.Web.UI.WebControls.FormView))]
        public virtual System.Web.UI.ITemplate FooterTemplate { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string FooterText { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.GridLines.None)]
        public virtual System.Web.UI.WebControls.GridLines GridLines { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public virtual System.Web.UI.WebControls.FormViewRow HeaderRow { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.TableItemStyle HeaderStyle { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        [System.Web.UI.TemplateContainerAttribute(typeof(System.Web.UI.WebControls.FormView))]
        public virtual System.Web.UI.ITemplate HeaderTemplate { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string HeaderText { get { throw null; } set { } }
        [System.ComponentModel.CategoryAttribute("Layout")]
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.HorizontalAlign.NotSet)]
        public virtual System.Web.UI.WebControls.HorizontalAlign HorizontalAlign { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        [System.Web.UI.TemplateContainerAttribute(typeof(System.Web.UI.WebControls.FormView), System.ComponentModel.BindingDirection.TwoWay)]
        public virtual System.Web.UI.ITemplate InsertItemTemplate { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.Web.UI.ThemeableAttribute(false)]
        public virtual new string InsertMethod { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.TableItemStyle InsertRowStyle { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        [System.Web.UI.TemplateContainerAttribute(typeof(System.Web.UI.WebControls.FormView), System.ComponentModel.BindingDirection.TwoWay)]
        public virtual System.Web.UI.ITemplate ItemTemplate { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public virtual int PageCount { get { throw null; } }
        [System.ComponentModel.BindableAttribute(true)]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public virtual int PageIndex { get { throw null; } set { } }
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public virtual System.Web.UI.WebControls.PagerSettings PagerSettings { get { throw null; } }
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.TableItemStyle PagerStyle { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        [System.Web.UI.TemplateContainerAttribute(typeof(System.Web.UI.WebControls.FormView))]
        public virtual System.Web.UI.ITemplate PagerTemplate { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(true)]
        public virtual bool RenderOuterTable { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public virtual System.Web.UI.WebControls.FormViewRow Row { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.TableItemStyle RowStyle { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public object SelectedValue { get { throw null; } }
        int System.Web.UI.IDataItemContainer.DataItemIndex { get { throw null; } }
        int System.Web.UI.IDataItemContainer.DisplayIndex { get { throw null; } }
        string[] System.Web.UI.WebControls.IDataBoundControl.DataKeyNames { get { throw null; } set { } }
        string System.Web.UI.WebControls.IDataBoundControl.DataMember { get { throw null; } set { } }
        object System.Web.UI.WebControls.IDataBoundControl.DataSource { get { throw null; } set { } }
        string System.Web.UI.WebControls.IDataBoundControl.DataSourceID { get { throw null; } set { } }
        System.Web.UI.IDataSource System.Web.UI.WebControls.IDataBoundControl.DataSourceObject { get { throw null; } }
        System.Web.UI.WebControls.DataKey System.Web.UI.WebControls.IDataBoundItemControl.DataKey { get { throw null; } }
        System.Web.UI.WebControls.DataBoundControlMode System.Web.UI.WebControls.IDataBoundItemControl.Mode { get { throw null; } }
        protected override System.Web.UI.HtmlTextWriterTag TagKey { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public virtual System.Web.UI.WebControls.FormViewRow TopPagerRow { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.Web.UI.ThemeableAttribute(false)]
        public virtual new string UpdateMethod { get { throw null; } set { } }
        public event System.Web.UI.WebControls.FormViewCommandEventHandler ItemCommand { add { } remove { } }
        public event System.EventHandler ItemCreated { add { } remove { } }
        public event System.Web.UI.WebControls.FormViewDeletedEventHandler ItemDeleted { add { } remove { } }
        public event System.Web.UI.WebControls.FormViewDeleteEventHandler ItemDeleting { add { } remove { } }
        public event System.Web.UI.WebControls.FormViewInsertedEventHandler ItemInserted { add { } remove { } }
        public event System.Web.UI.WebControls.FormViewInsertEventHandler ItemInserting { add { } remove { } }
        public event System.Web.UI.WebControls.FormViewUpdatedEventHandler ItemUpdated { add { } remove { } }
        public event System.Web.UI.WebControls.FormViewUpdateEventHandler ItemUpdating { add { } remove { } }
        public event System.EventHandler ModeChanged { add { } remove { } }
        public event System.Web.UI.WebControls.FormViewModeEventHandler ModeChanging { add { } remove { } }
        public event System.EventHandler PageIndexChanged { add { } remove { } }
        public event System.Web.UI.WebControls.FormViewPageEventHandler PageIndexChanging { add { } remove { } }
        public void ChangeMode(System.Web.UI.WebControls.FormViewMode newMode) { }
        protected override int CreateChildControls(System.Collections.IEnumerable dataSource, bool dataBinding) { throw null; }
        protected override System.Web.UI.WebControls.Style CreateControlStyle() { throw null; }
        protected override System.Web.UI.DataSourceSelectArguments CreateDataSourceSelectArguments() { throw null; }
        protected virtual System.Web.UI.WebControls.FormViewRow CreateRow(int itemIndex, System.Web.UI.WebControls.DataControlRowType rowType, System.Web.UI.WebControls.DataControlRowState rowState) { throw null; }
        protected virtual System.Web.UI.WebControls.Table CreateTable() { throw null; }
        public sealed override void DataBind() { }
        public virtual void DeleteItem() { }
        protected override void EnsureDataBound() { }
        protected virtual void ExtractRowValues(System.Collections.Specialized.IOrderedDictionary fieldValues, bool includeKeys) { }
        protected virtual void InitializePager(System.Web.UI.WebControls.FormViewRow row, System.Web.UI.WebControls.PagedDataSource pagedDataSource) { }
        protected virtual void InitializeRow(System.Web.UI.WebControls.FormViewRow row) { }
        public virtual void InsertItem(bool causesValidation) { }
        public virtual bool IsBindableType(System.Type type) { throw null; }
        protected internal override void LoadControlState(object savedState) { }
        protected override void LoadViewState(object savedState) { }
        protected internal virtual string ModifiedOuterTableStylePropertyName() { throw null; }
        protected override bool OnBubbleEvent(object source, System.EventArgs e) { throw null; }
        protected internal override void OnInit(System.EventArgs e) { }
        protected virtual void OnItemCommand(System.Web.UI.WebControls.FormViewCommandEventArgs e) { }
        protected virtual void OnItemCreated(System.EventArgs e) { }
        protected virtual void OnItemDeleted(System.Web.UI.WebControls.FormViewDeletedEventArgs e) { }
        protected virtual void OnItemDeleting(System.Web.UI.WebControls.FormViewDeleteEventArgs e) { }
        protected virtual void OnItemInserted(System.Web.UI.WebControls.FormViewInsertedEventArgs e) { }
        protected virtual void OnItemInserting(System.Web.UI.WebControls.FormViewInsertEventArgs e) { }
        protected virtual void OnItemUpdated(System.Web.UI.WebControls.FormViewUpdatedEventArgs e) { }
        protected virtual void OnItemUpdating(System.Web.UI.WebControls.FormViewUpdateEventArgs e) { }
        protected virtual void OnModeChanged(System.EventArgs e) { }
        protected virtual void OnModeChanging(System.Web.UI.WebControls.FormViewModeEventArgs e) { }
        protected virtual void OnPageIndexChanged(System.EventArgs e) { }
        protected virtual void OnPageIndexChanging(System.Web.UI.WebControls.FormViewPageEventArgs e) { }
        protected internal override void PerformDataBinding(System.Collections.IEnumerable data) { }
        protected internal virtual void PrepareControlHierarchy() { }
        protected virtual void RaisePostBackEvent(string eventArgument) { }
        protected internal override void Render(System.Web.UI.HtmlTextWriter writer) { }
        protected internal override object SaveControlState() { throw null; }
        protected override object SaveViewState() { throw null; }
        public void SetPageIndex(int index) { }
        void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(string eventArgument) { }
        System.Web.UI.PostBackOptions System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(System.Web.UI.WebControls.IButtonControl buttonControl) { throw null; }
        protected override void TrackViewState() { }
        public virtual void UpdateItem(bool causesValidation) { }
    }
    public partial class FormViewCommandEventArgs : System.Web.UI.WebControls.CommandEventArgs
    {
        public FormViewCommandEventArgs(object commandSource, System.Web.UI.WebControls.CommandEventArgs originalArgs) : base (default(System.Web.UI.WebControls.CommandEventArgs)) { }
        public object CommandSource { get { throw null; } }
        public bool Handled { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } [System.Runtime.CompilerServices.CompilerGeneratedAttribute]set { } }
    }
    public delegate void FormViewCommandEventHandler(object sender, System.Web.UI.WebControls.FormViewCommandEventArgs e);
    public partial class FormViewDeletedEventArgs : System.EventArgs
    {
        public FormViewDeletedEventArgs(int affectedRows, System.Exception e) { }
        public int AffectedRows { get { throw null; } }
        public System.Exception Exception { get { throw null; } }
        public bool ExceptionHandled { get { throw null; } set { } }
        public System.Collections.Specialized.IOrderedDictionary Keys { get { throw null; } }
        public System.Collections.Specialized.IOrderedDictionary Values { get { throw null; } }
    }
    public delegate void FormViewDeletedEventHandler(object sender, System.Web.UI.WebControls.FormViewDeletedEventArgs e);
    public partial class FormViewDeleteEventArgs : System.ComponentModel.CancelEventArgs
    {
        public FormViewDeleteEventArgs(int rowIndex) { }
        public System.Collections.Specialized.IOrderedDictionary Keys { get { throw null; } }
        public int RowIndex { get { throw null; } }
        public System.Collections.Specialized.IOrderedDictionary Values { get { throw null; } }
    }
    public delegate void FormViewDeleteEventHandler(object sender, System.Web.UI.WebControls.FormViewDeleteEventArgs e);
    public partial class FormViewInsertedEventArgs : System.EventArgs
    {
        public FormViewInsertedEventArgs(int affectedRows, System.Exception e) { }
        public int AffectedRows { get { throw null; } }
        public System.Exception Exception { get { throw null; } }
        public bool ExceptionHandled { get { throw null; } set { } }
        public bool KeepInInsertMode { get { throw null; } set { } }
        public System.Collections.Specialized.IOrderedDictionary Values { get { throw null; } }
    }
    public delegate void FormViewInsertedEventHandler(object sender, System.Web.UI.WebControls.FormViewInsertedEventArgs e);
    public partial class FormViewInsertEventArgs : System.ComponentModel.CancelEventArgs
    {
        public FormViewInsertEventArgs(object commandArgument) { }
        public object CommandArgument { get { throw null; } }
        public System.Collections.Specialized.IOrderedDictionary Values { get { throw null; } }
    }
    public delegate void FormViewInsertEventHandler(object sender, System.Web.UI.WebControls.FormViewInsertEventArgs e);
    public enum FormViewMode
    {
        Edit = 1,
        Insert = 2,
        ReadOnly = 0,
    }
    public partial class FormViewModeEventArgs : System.ComponentModel.CancelEventArgs
    {
        public FormViewModeEventArgs(System.Web.UI.WebControls.FormViewMode mode, bool cancelingEdit) { }
        public bool CancelingEdit { get { throw null; } }
        public System.Web.UI.WebControls.FormViewMode NewMode { get { throw null; } set { } }
    }
    public delegate void FormViewModeEventHandler(object sender, System.Web.UI.WebControls.FormViewModeEventArgs e);
    public partial class FormViewPageEventArgs : System.ComponentModel.CancelEventArgs
    {
        public FormViewPageEventArgs(int newPageIndex) { }
        public int NewPageIndex { get { throw null; } set { } }
    }
    public delegate void FormViewPageEventHandler(object sender, System.Web.UI.WebControls.FormViewPageEventArgs e);
    public partial class FormViewPagerRow : System.Web.UI.WebControls.FormViewRow, System.Web.UI.INamingContainer
    {
        public FormViewPagerRow(int rowIndex, System.Web.UI.WebControls.DataControlRowType rowType, System.Web.UI.WebControls.DataControlRowState rowState) : base (default(int), default(System.Web.UI.WebControls.DataControlRowType), default(System.Web.UI.WebControls.DataControlRowState)) { }
    }
    public partial class FormViewRow : System.Web.UI.WebControls.TableRow
    {
        public FormViewRow(int itemIndex, System.Web.UI.WebControls.DataControlRowType rowType, System.Web.UI.WebControls.DataControlRowState rowState) { }
        public virtual int ItemIndex { get { throw null; } }
        public virtual System.Web.UI.WebControls.DataControlRowState RowState { get { throw null; } }
        public virtual System.Web.UI.WebControls.DataControlRowType RowType { get { throw null; } }
        protected override bool OnBubbleEvent(object source, System.EventArgs e) { throw null; }
        protected internal override void Render(System.Web.UI.HtmlTextWriter writer) { }
    }
    public partial class FormViewUpdatedEventArgs : System.EventArgs
    {
        public FormViewUpdatedEventArgs(int affectedRows, System.Exception e) { }
        public int AffectedRows { get { throw null; } }
        public System.Exception Exception { get { throw null; } }
        public bool ExceptionHandled { get { throw null; } set { } }
        public bool KeepInEditMode { get { throw null; } set { } }
        public System.Collections.Specialized.IOrderedDictionary Keys { get { throw null; } }
        public System.Collections.Specialized.IOrderedDictionary NewValues { get { throw null; } }
        public System.Collections.Specialized.IOrderedDictionary OldValues { get { throw null; } }
    }
    public delegate void FormViewUpdatedEventHandler(object sender, System.Web.UI.WebControls.FormViewUpdatedEventArgs e);
    public partial class FormViewUpdateEventArgs : System.ComponentModel.CancelEventArgs
    {
        public FormViewUpdateEventArgs(object commandArgument) { }
        public object CommandArgument { get { throw null; } }
        public System.Collections.Specialized.IOrderedDictionary Keys { get { throw null; } }
        public System.Collections.Specialized.IOrderedDictionary NewValues { get { throw null; } }
        public System.Collections.Specialized.IOrderedDictionary OldValues { get { throw null; } }
    }
    public delegate void FormViewUpdateEventHandler(object sender, System.Web.UI.WebControls.FormViewUpdateEventArgs e);
    public enum GridLines
    {
        Both = 3,
        Horizontal = 1,
        None = 0,
        Vertical = 2,
    }
    [System.ComponentModel.DefaultEventAttribute("SelectedIndexChanged")]
    [System.ComponentModel.DesignerAttribute("System.Web.UI.Design.WebControls.GridViewDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.Web.UI.ControlValuePropertyAttribute("SelectedValue")]
    [System.Web.UI.DataKeyPropertyAttribute("SelectedPersistedDataKey")]
    [System.Web.UI.SupportsEventValidationAttribute]
    public partial class GridView : System.Web.UI.WebControls.CompositeDataBoundControl, System.Web.UI.ICallbackEventHandler, System.Web.UI.IDataKeysControl, System.Web.UI.IPostBackEventHandler, System.Web.UI.WebControls.ICallbackContainer, System.Web.UI.WebControls.IDataBoundControl, System.Web.UI.WebControls.IDataBoundListControl, System.Web.UI.WebControls.IFieldControl, System.Web.UI.WebControls.IPersistedSelector, System.Web.UI.WebControls.IPostBackContainer
    {
        public GridView() { }
        [System.ComponentModel.DefaultValueAttribute(false)]
        public virtual bool AllowCustomPaging { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(false)]
        public virtual bool AllowPaging { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(false)]
        public virtual bool AllowSorting { get { throw null; } set { } }
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.TableItemStyle AlternatingRowStyle { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(true)]
        public virtual bool AutoGenerateColumns { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(false)]
        public virtual bool AutoGenerateDeleteButton { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(false)]
        public virtual bool AutoGenerateEditButton { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(false)]
        public virtual bool AutoGenerateSelectButton { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.UrlPropertyAttribute]
        public virtual string BackImageUrl { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public virtual System.Web.UI.WebControls.GridViewRow BottomPagerRow { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string Caption { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.TableCaptionAlign.NotSet)]
        public virtual System.Web.UI.WebControls.TableCaptionAlign CaptionAlign { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(-1)]
        public virtual int CellPadding { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(0)]
        public virtual int CellSpacing { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.TypeConverterAttribute(typeof(System.Web.UI.WebControls.StringArrayConverter))]
        public virtual string[] ClientIDRowSuffix { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public System.Web.UI.WebControls.DataKeyArray ClientIDRowSuffixDataKeys { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.WebControls.DataControlFieldTypeEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.ComponentModel.MergablePropertyAttribute(false)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public virtual System.Web.UI.WebControls.DataControlFieldCollection Columns { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public System.Web.UI.IAutoFieldGenerator ColumnsGenerator { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.WebControls.DataFieldEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.ComponentModel.TypeConverterAttribute(typeof(System.Web.UI.WebControls.StringArrayConverter))]
        public virtual string[] DataKeyNames { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public virtual System.Web.UI.WebControls.DataKeyArray DataKeys { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.Web.UI.ThemeableAttribute(false)]
        public virtual new string DeleteMethod { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(-1)]
        public virtual int EditIndex { get { throw null; } set { } }
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.TableItemStyle EditRowStyle { get { throw null; } }
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.TableItemStyle EmptyDataRowStyle { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        [System.Web.UI.TemplateContainerAttribute(typeof(System.Web.UI.WebControls.GridViewRow))]
        public virtual System.Web.UI.ITemplate EmptyDataTemplate { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string EmptyDataText { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(true)]
        public virtual bool EnableModelValidation { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(false)]
        public virtual bool EnablePersistedSelection { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(false)]
        public virtual bool EnableSortingAndPagingCallbacks { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public virtual System.Web.UI.WebControls.GridViewRow FooterRow { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.TableItemStyle FooterStyle { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.GridLines.Both)]
        public virtual System.Web.UI.WebControls.GridLines GridLines { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public virtual System.Web.UI.WebControls.GridViewRow HeaderRow { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.TableItemStyle HeaderStyle { get { throw null; } }
        [System.ComponentModel.CategoryAttribute("Layout")]
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.HorizontalAlign.NotSet)]
        public virtual System.Web.UI.WebControls.HorizontalAlign HorizontalAlign { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public virtual int PageCount { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(true)]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public virtual int PageIndex { get { throw null; } set { } }
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public virtual System.Web.UI.WebControls.PagerSettings PagerSettings { get { throw null; } }
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.TableItemStyle PagerStyle { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        [System.Web.UI.TemplateContainerAttribute(typeof(System.Web.UI.WebControls.GridViewRow))]
        public virtual System.Web.UI.ITemplate PagerTemplate { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(10)]
        public virtual int PageSize { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.TypeConverterAttribute("System.Web.UI.Design.DataColumnSelectionConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
        public virtual string RowHeaderColumn { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public virtual System.Web.UI.WebControls.GridViewRowCollection Rows { get { throw null; } }
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.TableItemStyle RowStyle { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public virtual System.Web.UI.WebControls.DataKey SelectedDataKey { get { throw null; } }
        [System.ComponentModel.BindableAttribute(true)]
        [System.ComponentModel.DefaultValueAttribute(-1)]
        public virtual int SelectedIndex { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public virtual System.Web.UI.WebControls.DataKey SelectedPersistedDataKey { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public virtual System.Web.UI.WebControls.GridViewRow SelectedRow { get { throw null; } }
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.TableItemStyle SelectedRowStyle { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        public object SelectedValue { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(false)]
        public virtual bool ShowFooter { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(true)]
        public virtual bool ShowHeader { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(false)]
        public virtual bool ShowHeaderWhenEmpty { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.SortDirection.Ascending)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public virtual System.Web.UI.WebControls.SortDirection SortDirection { get { throw null; } }
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.TableItemStyle SortedAscendingCellStyle { get { throw null; } }
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.TableItemStyle SortedAscendingHeaderStyle { get { throw null; } }
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.TableItemStyle SortedDescendingCellStyle { get { throw null; } }
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.TableItemStyle SortedDescendingHeaderStyle { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public virtual string SortExpression { get { throw null; } }
        System.Web.UI.WebControls.DataKeyArray System.Web.UI.IDataKeysControl.ClientIDRowSuffixDataKeys { get { throw null; } }
        string[] System.Web.UI.WebControls.IDataBoundControl.DataKeyNames { get { throw null; } set { } }
        string System.Web.UI.WebControls.IDataBoundControl.DataMember { get { throw null; } set { } }
        object System.Web.UI.WebControls.IDataBoundControl.DataSource { get { throw null; } set { } }
        string System.Web.UI.WebControls.IDataBoundControl.DataSourceID { get { throw null; } set { } }
        System.Web.UI.IDataSource System.Web.UI.WebControls.IDataBoundControl.DataSourceObject { get { throw null; } }
        string[] System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix { get { throw null; } set { } }
        System.Web.UI.WebControls.DataKeyArray System.Web.UI.WebControls.IDataBoundListControl.DataKeys { get { throw null; } }
        bool System.Web.UI.WebControls.IDataBoundListControl.EnablePersistedSelection { get { throw null; } set { } }
        System.Web.UI.WebControls.DataKey System.Web.UI.WebControls.IDataBoundListControl.SelectedDataKey { get { throw null; } }
        int System.Web.UI.WebControls.IDataBoundListControl.SelectedIndex { get { throw null; } set { } }
        System.Web.UI.IAutoFieldGenerator System.Web.UI.WebControls.IFieldControl.FieldsGenerator { get { throw null; } set { } }
        System.Web.UI.WebControls.DataKey System.Web.UI.WebControls.IPersistedSelector.DataKey { get { throw null; } set { } }
        protected override System.Web.UI.HtmlTextWriterTag TagKey { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public virtual System.Web.UI.WebControls.GridViewRow TopPagerRow { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.Web.UI.ThemeableAttribute(false)]
        public virtual new string UpdateMethod { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(true)]
        public virtual bool UseAccessibleHeader { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public virtual int VirtualItemCount { get { throw null; } set { } }
        public event System.EventHandler PageIndexChanged { add { } remove { } }
        public event System.Web.UI.WebControls.GridViewPageEventHandler PageIndexChanging { add { } remove { } }
        public event System.Web.UI.WebControls.GridViewCancelEditEventHandler RowCancelingEdit { add { } remove { } }
        public event System.Web.UI.WebControls.GridViewCommandEventHandler RowCommand { add { } remove { } }
        public event System.Web.UI.WebControls.GridViewRowEventHandler RowCreated { add { } remove { } }
        public event System.Web.UI.WebControls.GridViewRowEventHandler RowDataBound { add { } remove { } }
        public event System.Web.UI.WebControls.GridViewDeletedEventHandler RowDeleted { add { } remove { } }
        public event System.Web.UI.WebControls.GridViewDeleteEventHandler RowDeleting { add { } remove { } }
        public event System.Web.UI.WebControls.GridViewEditEventHandler RowEditing { add { } remove { } }
        public event System.Web.UI.WebControls.GridViewUpdatedEventHandler RowUpdated { add { } remove { } }
        public event System.Web.UI.WebControls.GridViewUpdateEventHandler RowUpdating { add { } remove { } }
        public event System.EventHandler SelectedIndexChanged { add { } remove { } }
        public event System.Web.UI.WebControls.GridViewSelectEventHandler SelectedIndexChanging { add { } remove { } }
        public event System.EventHandler Sorted { add { } remove { } }
        public event System.Web.UI.WebControls.GridViewSortEventHandler Sorting { add { } remove { } }
        [System.ObsoleteAttribute("This is kept for backward compatibility - this API is no more used")]
        protected virtual System.Web.UI.WebControls.AutoGeneratedField CreateAutoGeneratedColumn(System.Web.UI.WebControls.AutoGeneratedFieldProperties fieldProperties) { throw null; }
        protected override int CreateChildControls(System.Collections.IEnumerable dataSource, bool dataBinding) { throw null; }
        protected virtual System.Web.UI.WebControls.Table CreateChildTable() { throw null; }
        protected virtual System.Collections.ICollection CreateColumns(System.Web.UI.WebControls.PagedDataSource dataSource, bool useDataSource) { throw null; }
        protected override System.Web.UI.WebControls.Style CreateControlStyle() { throw null; }
        protected override System.Web.UI.DataSourceSelectArguments CreateDataSourceSelectArguments() { throw null; }
        protected virtual System.Web.UI.WebControls.GridViewRow CreateRow(int rowIndex, int dataSourceIndex, System.Web.UI.WebControls.DataControlRowType rowType, System.Web.UI.WebControls.DataControlRowState rowState) { throw null; }
        public sealed override void DataBind() { }
        public virtual void DeleteRow(int rowIndex) { }
        protected virtual void ExtractRowValues(System.Collections.Specialized.IOrderedDictionary fieldValues, System.Web.UI.WebControls.GridViewRow row, bool includeReadOnlyFields, bool includePrimaryKey) { }
        protected virtual string GetCallbackResult() { throw null; }
        protected virtual string GetCallbackScript(System.Web.UI.WebControls.IButtonControl buttonControl, string argument) { throw null; }
        protected virtual void InitializePager(System.Web.UI.WebControls.GridViewRow row, int columnSpan, System.Web.UI.WebControls.PagedDataSource pagedDataSource) { }
        protected virtual void InitializeRow(System.Web.UI.WebControls.GridViewRow row, System.Web.UI.WebControls.DataControlField[] fields) { }
        public virtual bool IsBindableType(System.Type type) { throw null; }
        protected internal override void LoadControlState(object savedState) { }
        protected override void LoadViewState(object savedState) { }
        protected override bool OnBubbleEvent(object source, System.EventArgs e) { throw null; }
        protected override void OnDataPropertyChanged() { }
        protected override void OnDataSourceViewChanged(object sender, System.EventArgs e) { }
        protected internal override void OnInit(System.EventArgs e) { }
        protected virtual void OnPageIndexChanged(System.EventArgs e) { }
        protected virtual void OnPageIndexChanging(System.Web.UI.WebControls.GridViewPageEventArgs e) { }
        protected override void OnPagePreLoad(object sender, System.EventArgs e) { }
        protected internal override void OnPreRender(System.EventArgs e) { }
        protected virtual void OnRowCancelingEdit(System.Web.UI.WebControls.GridViewCancelEditEventArgs e) { }
        protected virtual void OnRowCommand(System.Web.UI.WebControls.GridViewCommandEventArgs e) { }
        protected virtual void OnRowCreated(System.Web.UI.WebControls.GridViewRowEventArgs e) { }
        protected virtual void OnRowDataBound(System.Web.UI.WebControls.GridViewRowEventArgs e) { }
        protected virtual void OnRowDeleted(System.Web.UI.WebControls.GridViewDeletedEventArgs e) { }
        protected virtual void OnRowDeleting(System.Web.UI.WebControls.GridViewDeleteEventArgs e) { }
        protected virtual void OnRowEditing(System.Web.UI.WebControls.GridViewEditEventArgs e) { }
        protected virtual void OnRowUpdated(System.Web.UI.WebControls.GridViewUpdatedEventArgs e) { }
        protected virtual void OnRowUpdating(System.Web.UI.WebControls.GridViewUpdateEventArgs e) { }
        protected virtual void OnSelectedIndexChanged(System.EventArgs e) { }
        protected virtual void OnSelectedIndexChanging(System.Web.UI.WebControls.GridViewSelectEventArgs e) { }
        protected virtual void OnSorted(System.EventArgs e) { }
        protected virtual void OnSorting(System.Web.UI.WebControls.GridViewSortEventArgs e) { }
        protected internal override void PerformDataBinding(System.Collections.IEnumerable data) { }
        protected internal virtual void PrepareControlHierarchy() { }
        protected virtual void RaiseCallbackEvent(string eventArgument) { }
        protected virtual void RaisePostBackEvent(string eventArgument) { }
        protected internal override void Render(System.Web.UI.HtmlTextWriter writer) { }
        protected internal override object SaveControlState() { throw null; }
        protected override object SaveViewState() { throw null; }
        public void SelectRow(int rowIndex) { }
        public void SetEditRow(int rowIndex) { }
        public void SetPageIndex(int rowIndex) { }
        public virtual void Sort(string sortExpression, System.Web.UI.WebControls.SortDirection sortDirection) { }
        string System.Web.UI.ICallbackEventHandler.GetCallbackResult() { throw null; }
        void System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(string eventArgument) { }
        void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(string eventArgument) { }
        string System.Web.UI.WebControls.ICallbackContainer.GetCallbackScript(System.Web.UI.WebControls.IButtonControl buttonControl, string argument) { throw null; }
        System.Web.UI.PostBackOptions System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(System.Web.UI.WebControls.IButtonControl buttonControl) { throw null; }
        protected override void TrackViewState() { }
        public virtual void UpdateRow(int rowIndex, bool causesValidation) { }
    }
    public partial class GridViewCancelEditEventArgs : System.ComponentModel.CancelEventArgs
    {
        public GridViewCancelEditEventArgs(int rowIndex) { }
        public int RowIndex { get { throw null; } }
    }
    public delegate void GridViewCancelEditEventHandler(object sender, System.Web.UI.WebControls.GridViewCancelEditEventArgs e);
    public partial class GridViewColumnsGenerator : System.Web.UI.WebControls.AutoFieldsGenerator
    {
        public GridViewColumnsGenerator() { }
        public override System.Collections.Generic.List<System.Web.UI.WebControls.AutoGeneratedField> CreateAutoGeneratedFields(object dataObject, System.Web.UI.Control control) { throw null; }
    }
    public partial class GridViewCommandEventArgs : System.Web.UI.WebControls.CommandEventArgs
    {
        public GridViewCommandEventArgs(object commandSource, System.Web.UI.WebControls.CommandEventArgs originalArgs) : base (default(System.Web.UI.WebControls.CommandEventArgs)) { }
        public GridViewCommandEventArgs(System.Web.UI.WebControls.GridViewRow row, object commandSource, System.Web.UI.WebControls.CommandEventArgs originalArgs) : base (default(System.Web.UI.WebControls.CommandEventArgs)) { }
        public object CommandSource { get { throw null; } }
        public bool Handled { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } [System.Runtime.CompilerServices.CompilerGeneratedAttribute]set { } }
    }
    public delegate void GridViewCommandEventHandler(object sender, System.Web.UI.WebControls.GridViewCommandEventArgs e);
    public partial class GridViewDeletedEventArgs : System.EventArgs
    {
        public GridViewDeletedEventArgs(int affectedRows, System.Exception e) { }
        public int AffectedRows { get { throw null; } }
        public System.Exception Exception { get { throw null; } }
        public bool ExceptionHandled { get { throw null; } set { } }
        public System.Collections.Specialized.IOrderedDictionary Keys { get { throw null; } }
        public System.Collections.Specialized.IOrderedDictionary Values { get { throw null; } }
    }
    public delegate void GridViewDeletedEventHandler(object sender, System.Web.UI.WebControls.GridViewDeletedEventArgs e);
    public partial class GridViewDeleteEventArgs : System.ComponentModel.CancelEventArgs
    {
        public GridViewDeleteEventArgs(int rowIndex) { }
        public System.Collections.Specialized.IOrderedDictionary Keys { get { throw null; } }
        public int RowIndex { get { throw null; } }
        public System.Collections.Specialized.IOrderedDictionary Values { get { throw null; } }
    }
    public delegate void GridViewDeleteEventHandler(object sender, System.Web.UI.WebControls.GridViewDeleteEventArgs e);
    public partial class GridViewEditEventArgs : System.ComponentModel.CancelEventArgs
    {
        public GridViewEditEventArgs(int newEditIndex) { }
        public int NewEditIndex { get { throw null; } set { } }
    }
    public delegate void GridViewEditEventHandler(object sender, System.Web.UI.WebControls.GridViewEditEventArgs e);
    public partial class GridViewPageEventArgs : System.ComponentModel.CancelEventArgs
    {
        public GridViewPageEventArgs(int newPageIndex) { }
        public int NewPageIndex { get { throw null; } set { } }
    }
    public delegate void GridViewPageEventHandler(object sender, System.Web.UI.WebControls.GridViewPageEventArgs e);
    public partial class GridViewRow : System.Web.UI.WebControls.TableRow, System.Web.UI.IDataItemContainer, System.Web.UI.INamingContainer
    {
        public GridViewRow(int rowIndex, int dataItemIndex, System.Web.UI.WebControls.DataControlRowType rowType, System.Web.UI.WebControls.DataControlRowState rowState) { }
        public virtual object DataItem { get { throw null; } set { } }
        public virtual int DataItemIndex { get { throw null; } }
        public virtual int RowIndex { get { throw null; } }
        public virtual System.Web.UI.WebControls.DataControlRowState RowState { get { throw null; } set { } }
        public virtual System.Web.UI.WebControls.DataControlRowType RowType { get { throw null; } set { } }
        object System.Web.UI.IDataItemContainer.DataItem { get { throw null; } }
        int System.Web.UI.IDataItemContainer.DataItemIndex { get { throw null; } }
        int System.Web.UI.IDataItemContainer.DisplayIndex { get { throw null; } }
        protected override bool OnBubbleEvent(object source, System.EventArgs e) { throw null; }
    }
    public partial class GridViewRowCollection : System.Collections.ICollection, System.Collections.IEnumerable
    {
        public GridViewRowCollection(System.Collections.ArrayList rows) { }
        public int Count { get { throw null; } }
        public bool IsReadOnly { get { throw null; } }
        public bool IsSynchronized { get { throw null; } }
        public System.Web.UI.WebControls.GridViewRow this[int index] { get { throw null; } }
        public object SyncRoot { get { throw null; } }
        public void CopyTo(System.Web.UI.WebControls.GridViewRow[] array, int index) { }
        public System.Collections.IEnumerator GetEnumerator() { throw null; }
        void System.Collections.ICollection.CopyTo(System.Array array, int index) { }
    }
    public partial class GridViewRowEventArgs : System.EventArgs
    {
        public GridViewRowEventArgs(System.Web.UI.WebControls.GridViewRow row) { }
        public System.Web.UI.WebControls.GridViewRow Row { get { throw null; } }
    }
    public delegate void GridViewRowEventHandler(object sender, System.Web.UI.WebControls.GridViewRowEventArgs e);
    public partial class GridViewSelectEventArgs : System.ComponentModel.CancelEventArgs
    {
        public GridViewSelectEventArgs(int newSelectedIndex) { }
        public int NewSelectedIndex { get { throw null; } set { } }
    }
    public delegate void GridViewSelectEventHandler(object sender, System.Web.UI.WebControls.GridViewSelectEventArgs e);
    public partial class GridViewSortEventArgs : System.ComponentModel.CancelEventArgs
    {
        public GridViewSortEventArgs(string sortExpression, System.Web.UI.WebControls.SortDirection sortDirection) { }
        public System.Web.UI.WebControls.SortDirection SortDirection { get { throw null; } set { } }
        public string SortExpression { get { throw null; } set { } }
    }
    public delegate void GridViewSortEventHandler(object sender, System.Web.UI.WebControls.GridViewSortEventArgs e);
    public partial class GridViewUpdatedEventArgs : System.EventArgs
    {
        public GridViewUpdatedEventArgs(int affectedRows, System.Exception e) { }
        public int AffectedRows { get { throw null; } }
        public System.Exception Exception { get { throw null; } }
        public bool ExceptionHandled { get { throw null; } set { } }
        public bool KeepInEditMode { get { throw null; } set { } }
        public System.Collections.Specialized.IOrderedDictionary Keys { get { throw null; } }
        public System.Collections.Specialized.IOrderedDictionary NewValues { get { throw null; } }
        public System.Collections.Specialized.IOrderedDictionary OldValues { get { throw null; } }
    }
    public delegate void GridViewUpdatedEventHandler(object sender, System.Web.UI.WebControls.GridViewUpdatedEventArgs e);
    public partial class GridViewUpdateEventArgs : System.ComponentModel.CancelEventArgs
    {
        public GridViewUpdateEventArgs(int rowIndex) { }
        public System.Collections.Specialized.IOrderedDictionary Keys { get { throw null; } }
        public System.Collections.Specialized.IOrderedDictionary NewValues { get { throw null; } }
        public System.Collections.Specialized.IOrderedDictionary OldValues { get { throw null; } }
        public int RowIndex { get { throw null; } }
    }
    public delegate void GridViewUpdateEventHandler(object sender, System.Web.UI.WebControls.GridViewUpdateEventArgs e);
    [System.ComponentModel.DefaultEventAttribute("ValueChanged")]
    [System.ComponentModel.DefaultPropertyAttribute("Value")]
    [System.ComponentModel.DesignerAttribute("System.Web.UI.Design.WebControls.HiddenFieldDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.Web.UI.ControlValuePropertyAttribute("Value")]
    [System.Web.UI.NonVisualControlAttribute]
    [System.Web.UI.ParseChildrenAttribute(true)]
    [System.Web.UI.PersistChildrenAttribute(false)]
    [System.Web.UI.SupportsEventValidationAttribute]
    public partial class HiddenField : System.Web.UI.Control, System.Web.UI.IPostBackDataHandler
    {
        public HiddenField() { }
        [System.ComponentModel.DefaultValueAttribute(false)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override bool EnableTheming { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override string SkinID { get { throw null; } set { } }
        [System.ComponentModel.BindableAttribute(true)]
        [System.ComponentModel.DefaultValueAttribute("")]
        public virtual string Value { get { throw null; } set { } }
        public event System.EventHandler ValueChanged { add { } remove { } }
        protected override System.Web.UI.ControlCollection CreateControlCollection() { throw null; }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override void Focus() { }
        protected virtual bool LoadPostData(string postDataKey, System.Collections.Specialized.NameValueCollection postCollection) { throw null; }
        protected internal override void OnPreRender(System.EventArgs e) { }
        protected virtual void OnValueChanged(System.EventArgs e) { }
        protected virtual void RaisePostDataChangedEvent() { }
        protected internal override void Render(System.Web.UI.HtmlTextWriter writer) { }
        bool System.Web.UI.IPostBackDataHandler.LoadPostData(string postDataKey, System.Collections.Specialized.NameValueCollection postCollection) { throw null; }
        void System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent() { }
    }
    [System.ComponentModel.DesignerAttribute("System.Web.UI.Design.WebControls.HierarchicalDataBoundControlDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    public abstract partial class HierarchicalDataBoundControl : System.Web.UI.WebControls.BaseDataBoundControl
    {
        protected HierarchicalDataBoundControl() { }
        [System.Web.UI.IDReferencePropertyAttribute(typeof(System.Web.UI.HierarchicalDataSourceControl))]
        public override string DataSourceID { get { throw null; } set { } }
        protected virtual System.Web.UI.HierarchicalDataSourceView GetData(string viewPath) { throw null; }
        protected virtual System.Web.UI.IHierarchicalDataSource GetDataSource() { throw null; }
        protected void MarkAsDataBound() { }
        protected override void OnDataPropertyChanged() { }
        protected virtual void OnDataSourceChanged(object sender, System.EventArgs e) { }
        protected internal override void OnLoad(System.EventArgs e) { }
        protected override void OnPagePreLoad(object sender, System.EventArgs e) { }
        protected internal virtual void PerformDataBinding() { }
        protected override void PerformSelect() { }
        protected override void ValidateDataSource(object dataSource) { }
    }
    [System.ComponentModel.TypeConverterAttribute("System.Web.UI.WebControls.HorizontalAlignConverter")]
    public enum HorizontalAlign
    {
        Center = 2,
        Justify = 4,
        Left = 1,
        NotSet = 0,
        Right = 3,
    }
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public abstract partial class HotSpot : System.Web.UI.IStateManager
    {
        protected HotSpot() { }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string AccessKey { get { throw null; } set { } }
        [System.ComponentModel.BindableAttribute(true)]
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.LocalizableAttribute(true)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        public virtual string AlternateText { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.HotSpotMode.NotSet)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        public virtual System.Web.UI.WebControls.HotSpotMode HotSpotMode { get { throw null; } set { } }
        protected virtual bool IsTrackingViewState { get { throw null; } }
        protected internal abstract string MarkupName { get; }
        [System.ComponentModel.BindableAttribute(true)]
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.UrlPropertyAttribute]
        public string NavigateUrl { get { throw null; } set { } }
        [System.ComponentModel.BindableAttribute(true)]
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        public string PostBackValue { get { throw null; } set { } }
        bool System.Web.UI.IStateManager.IsTrackingViewState { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute((short)0)]
        public virtual short TabIndex { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.ComponentModel.TypeConverterAttribute(typeof(System.Web.UI.WebControls.TargetConverter))]
        public virtual string Target { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        protected System.Web.UI.StateBag ViewState { get { throw null; } }
        public abstract string GetCoordinates();
        protected virtual void LoadViewState(object savedState) { }
        protected virtual object SaveViewState() { throw null; }
        void System.Web.UI.IStateManager.LoadViewState(object savedState) { }
        object System.Web.UI.IStateManager.SaveViewState() { throw null; }
        void System.Web.UI.IStateManager.TrackViewState() { }
        public override string ToString() { throw null; }
        protected virtual void TrackViewState() { }
    }
    [System.ComponentModel.EditorAttribute("System.Web.UI.Design.WebControls.HotSpotCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
    public sealed partial class HotSpotCollection : System.Web.UI.StateManagedCollection
    {
        public HotSpotCollection() { }
        public System.Web.UI.WebControls.HotSpot this[int index] { get { throw null; } }
        public int Add(System.Web.UI.WebControls.HotSpot spot) { throw null; }
        protected override object CreateKnownType(int index) { throw null; }
        protected override System.Type[] GetKnownTypes() { throw null; }
        public void Insert(int index, System.Web.UI.WebControls.HotSpot spot) { }
        protected override void OnValidate(object o) { }
        public void Remove(System.Web.UI.WebControls.HotSpot spot) { }
        public void RemoveAt(int index) { }
        protected override void SetDirtyObject(object o) { }
    }
    public enum HotSpotMode
    {
        Inactive = 3,
        Navigate = 1,
        NotSet = 0,
        PostBack = 2,
    }
    [System.ComponentModel.DefaultPropertyAttribute("Text")]
    [System.ComponentModel.DesignerAttribute("System.Web.UI.Design.WebControls.HyperLinkDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.Web.UI.ControlBuilderAttribute(typeof(System.Web.UI.WebControls.HyperLinkControlBuilder))]
    [System.Web.UI.DataBindingHandlerAttribute("System.Web.UI.Design.HyperLinkDataBindingHandler, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.Web.UI.ParseChildrenAttribute(false)]
    [System.Web.UI.ToolboxDataAttribute("<{0}:HyperLink runat=\"server\">HyperLink</{0}:HyperLink>")]
    public partial class HyperLink : System.Web.UI.WebControls.WebControl
    {
        public HyperLink() { }
        [System.ComponentModel.DefaultValueAttribute(typeof(System.Web.UI.WebControls.Unit), "")]
        public virtual System.Web.UI.WebControls.Unit ImageHeight { get { throw null; } set { } }
        [System.ComponentModel.BindableAttribute(true)]
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.UrlPropertyAttribute]
        public virtual string ImageUrl { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(typeof(System.Web.UI.WebControls.Unit), "")]
        public virtual System.Web.UI.WebControls.Unit ImageWidth { get { throw null; } set { } }
        [System.ComponentModel.BindableAttribute(true)]
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.UrlPropertyAttribute]
        public string NavigateUrl { get { throw null; } set { } }
        public override bool SupportsDisabledAttribute { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.TypeConverterAttribute(typeof(System.Web.UI.WebControls.TargetConverter))]
        public string Target { get { throw null; } set { } }
        [System.ComponentModel.BindableAttribute(true)]
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.LocalizableAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerDefaultProperty)]
        public virtual string Text { get { throw null; } set { } }
        protected override void AddAttributesToRender(System.Web.UI.HtmlTextWriter writer) { }
        protected override void AddParsedSubObject(object obj) { }
        protected override void LoadViewState(object savedState) { }
        protected internal override void RenderContents(System.Web.UI.HtmlTextWriter writer) { }
    }
    public partial class HyperLinkColumn : System.Web.UI.WebControls.DataGridColumn
    {
        public HyperLinkColumn() { }
        [System.ComponentModel.DefaultValueAttribute("")]
        public virtual string DataNavigateUrlField { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.DescriptionAttribute("The formatting applied to the value bound to the NavigateUrl property.")]
        public virtual string DataNavigateUrlFormatString { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        public virtual string DataTextField { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.DescriptionAttribute("The formatting applied to the value bound to the Text property.")]
        public virtual string DataTextFormatString { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.Web.UI.UrlPropertyAttribute]
        public virtual string NavigateUrl { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.TypeConverterAttribute(typeof(System.Web.UI.WebControls.TargetConverter))]
        public virtual string Target { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string Text { get { throw null; } set { } }
        protected virtual string FormatDataNavigateUrlValue(object dataUrlValue) { throw null; }
        protected virtual string FormatDataTextValue(object dataTextValue) { throw null; }
        public override void Initialize() { }
        public override void InitializeCell(System.Web.UI.WebControls.TableCell cell, int columnIndex, System.Web.UI.WebControls.ListItemType itemType) { }
    }
    public partial class HyperLinkControlBuilder : System.Web.UI.ControlBuilder
    {
        public HyperLinkControlBuilder() { }
        public override bool AllowWhitespaceLiterals() { throw null; }
    }
    public partial class HyperLinkField : System.Web.UI.WebControls.DataControlField
    {
        public HyperLinkField() { }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.WebControls.DataFieldEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.ComponentModel.TypeConverterAttribute(typeof(System.Web.UI.WebControls.StringArrayConverter))]
        public virtual string[] DataNavigateUrlFields { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        public virtual string DataNavigateUrlFormatString { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.TypeConverterAttribute("System.Web.UI.Design.DataSourceViewSchemaConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
        public virtual string DataTextField { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        public virtual string DataTextFormatString { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.UrlPropertyAttribute]
        public virtual string NavigateUrl { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.TypeConverterAttribute(typeof(System.Web.UI.WebControls.TargetConverter))]
        public virtual string Target { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string Text { get { throw null; } set { } }
        protected override void CopyProperties(System.Web.UI.WebControls.DataControlField newField) { }
        protected override System.Web.UI.WebControls.DataControlField CreateField() { throw null; }
        protected virtual string FormatDataNavigateUrlValue(object[] dataUrlValues) { throw null; }
        protected virtual string FormatDataTextValue(object dataTextValue) { throw null; }
        public override bool Initialize(bool enableSorting, System.Web.UI.Control control) { throw null; }
        public override void InitializeCell(System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlCellType cellType, System.Web.UI.WebControls.DataControlRowState rowState, int rowIndex) { }
        public override void ValidateSupportsCallback() { }
    }
    public partial interface IButtonControl
    {
        bool CausesValidation { get; set; }
        string CommandArgument { get; set; }
        string CommandName { get; set; }
        string PostBackUrl { get; set; }
        string Text { get; set; }
        string ValidationGroup { get; set; }
        event System.EventHandler Click;
        event System.Web.UI.WebControls.CommandEventHandler Command;
    }
    public partial interface ICallbackContainer
    {
        string GetCallbackScript(System.Web.UI.WebControls.IButtonControl buttonControl, string argument);
    }
    public partial interface ICompositeControlDesignerAccessor
    {
        void RecreateChildControls();
    }
    public partial interface IDataBoundControl
    {
        string[] DataKeyNames { get; set; }
        string DataMember { get; set; }
        object DataSource { get; set; }
        string DataSourceID { get; set; }
        System.Web.UI.IDataSource DataSourceObject { get; }
    }
    public partial interface IDataBoundItemControl : System.Web.UI.WebControls.IDataBoundControl
    {
        System.Web.UI.WebControls.DataKey DataKey { get; }
        System.Web.UI.WebControls.DataBoundControlMode Mode { get; }
    }
    public partial interface IDataBoundListControl : System.Web.UI.WebControls.IDataBoundControl
    {
        string[] ClientIDRowSuffix { get; set; }
        System.Web.UI.WebControls.DataKeyArray DataKeys { get; }
        bool EnablePersistedSelection { get; set; }
        System.Web.UI.WebControls.DataKey SelectedDataKey { get; }
        int SelectedIndex { get; set; }
    }
    public partial interface IFieldControl
    {
        System.Web.UI.IAutoFieldGenerator FieldsGenerator { get; set; }
    }
    [System.ComponentModel.DefaultPropertyAttribute("ImageUrl")]
    [System.ComponentModel.DesignerAttribute("System.Web.UI.Design.WebControls.PreviewControlDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    public partial class Image : System.Web.UI.WebControls.WebControl
    {
        public Image() { }
        [System.ComponentModel.BindableAttribute(true)]
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string AlternateText { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.UrlPropertyAttribute]
        public virtual string DescriptionUrl { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override bool Enabled { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override System.Web.UI.WebControls.FontInfo Font { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(false)]
        public virtual bool GenerateEmptyAlternateText { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.ImageAlign.NotSet)]
        public virtual System.Web.UI.WebControls.ImageAlign ImageAlign { get { throw null; } set { } }
        [System.ComponentModel.BindableAttribute(true)]
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.UrlPropertyAttribute]
        public virtual string ImageUrl { get { throw null; } set { } }
        public override bool SupportsDisabledAttribute { get { throw null; } }
        protected override void AddAttributesToRender(System.Web.UI.HtmlTextWriter writer) { }
        protected internal override void RenderContents(System.Web.UI.HtmlTextWriter writer) { }
    }
    public enum ImageAlign
    {
        AbsBottom = 7,
        AbsMiddle = 8,
        Baseline = 3,
        Bottom = 6,
        Left = 1,
        Middle = 5,
        NotSet = 0,
        Right = 2,
        TextTop = 9,
        Top = 4,
    }
    [System.ComponentModel.DefaultEventAttribute("Click")]
    [System.ComponentModel.DesignerAttribute("System.Web.UI.Design.WebControls.PreviewControlDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.Web.UI.SupportsEventValidationAttribute]
    public partial class ImageButton : System.Web.UI.WebControls.Image, System.Web.UI.IPostBackDataHandler, System.Web.UI.IPostBackEventHandler, System.Web.UI.WebControls.IButtonControl
    {
        public ImageButton() { }
        [System.ComponentModel.DefaultValueAttribute(true)]
        [System.Web.UI.ThemeableAttribute(false)]
        public virtual bool CausesValidation { get { throw null; } set { } }
        [System.ComponentModel.BindableAttribute(true)]
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.Web.UI.ThemeableAttribute(false)]
        public string CommandArgument { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.Web.UI.ThemeableAttribute(false)]
        public string CommandName { get { throw null; } set { } }
        [System.ComponentModel.BindableAttribute(true)]
        [System.ComponentModel.BrowsableAttribute(true)]
        [System.ComponentModel.DefaultValueAttribute(true)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Always)]
        public override bool Enabled { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Web.UI.ThemeableAttribute(false)]
        public override bool GenerateEmptyAlternateText { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.Web.UI.ThemeableAttribute(false)]
        public virtual string OnClientClick { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.ThemeableAttribute(false)]
        [System.Web.UI.UrlPropertyAttribute("*.aspx")]
        public virtual string PostBackUrl { get { throw null; } set { } }
        public override bool SupportsDisabledAttribute { get { throw null; } }
        string System.Web.UI.WebControls.IButtonControl.Text { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        protected override System.Web.UI.HtmlTextWriterTag TagKey { get { throw null; } }
        protected virtual string Text { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.Web.UI.ThemeableAttribute(false)]
        public virtual string ValidationGroup { get { throw null; } set { } }
        public event System.Web.UI.ImageClickEventHandler Click { add { } remove { } }
        public event System.Web.UI.WebControls.CommandEventHandler Command { add { } remove { } }
        event System.EventHandler System.Web.UI.WebControls.IButtonControl.Click { add { } remove { } }
        protected override void AddAttributesToRender(System.Web.UI.HtmlTextWriter writer) { }
        protected virtual System.Web.UI.PostBackOptions GetPostBackOptions() { throw null; }
        protected virtual bool LoadPostData(string postDataKey, System.Collections.Specialized.NameValueCollection postCollection) { throw null; }
        protected virtual void OnClick(System.Web.UI.ImageClickEventArgs e) { }
        protected virtual void OnCommand(System.Web.UI.WebControls.CommandEventArgs e) { }
        protected internal override void OnPreRender(System.EventArgs e) { }
        protected virtual void RaisePostBackEvent(string eventArgument) { }
        protected virtual void RaisePostDataChangedEvent() { }
        bool System.Web.UI.IPostBackDataHandler.LoadPostData(string postDataKey, System.Collections.Specialized.NameValueCollection postCollection) { throw null; }
        void System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent() { }
        void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(string eventArgument) { }
    }
    public partial class ImageField : System.Web.UI.WebControls.DataControlField
    {
        public static readonly string ThisExpression;
        public ImageField() { }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string AlternateText { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(true)]
        public virtual bool ConvertEmptyStringToNull { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.TypeConverterAttribute("System.Web.UI.Design.DataSourceViewSchemaConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
        public virtual string DataAlternateTextField { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        public virtual string DataAlternateTextFormatString { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.TypeConverterAttribute("System.Web.UI.Design.DataSourceViewSchemaConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
        public virtual string DataImageUrlField { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        public virtual string DataImageUrlFormatString { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string NullDisplayText { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.UrlPropertyAttribute]
        public virtual string NullImageUrl { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(false)]
        public virtual bool ReadOnly { get { throw null; } set { } }
        protected override void CopyProperties(System.Web.UI.WebControls.DataControlField newField) { }
        protected override System.Web.UI.WebControls.DataControlField CreateField() { throw null; }
        public override void ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary dictionary, System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlRowState rowState, bool includeReadOnly) { }
        protected virtual string FormatImageUrlValue(object dataValue) { throw null; }
        protected virtual string GetDesignTimeValue() { throw null; }
        protected virtual string GetFormattedAlternateText(System.Web.UI.Control controlContainer) { throw null; }
        protected virtual object GetValue(System.Web.UI.Control controlContainer, string fieldName, ref System.ComponentModel.PropertyDescriptor cachedDescriptor) { throw null; }
        public override bool Initialize(bool enableSorting, System.Web.UI.Control control) { throw null; }
        public override void InitializeCell(System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlCellType cellType, System.Web.UI.WebControls.DataControlRowState rowState, int rowIndex) { }
        protected virtual void InitializeDataCell(System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlRowState rowState) { }
        protected virtual void OnDataBindField(object sender, System.EventArgs e) { }
        public override void ValidateSupportsCallback() { }
    }
    [System.ComponentModel.DefaultEventAttribute("Click")]
    [System.ComponentModel.DefaultPropertyAttribute("HotSpots")]
    [System.Web.UI.ParseChildrenAttribute(true, "HotSpots")]
    [System.Web.UI.SupportsEventValidationAttribute]
    public partial class ImageMap : System.Web.UI.WebControls.Image, System.Web.UI.IPostBackEventHandler
    {
        public ImageMap() { }
        [System.ComponentModel.BrowsableAttribute(true)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Always)]
        public override bool Enabled { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.HotSpotMode.NotSet)]
        public virtual System.Web.UI.WebControls.HotSpotMode HotSpotMode { get { throw null; } set { } }
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerDefaultProperty)]
        public System.Web.UI.WebControls.HotSpotCollection HotSpots { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute("")]
        public virtual string Target { get { throw null; } set { } }
        [System.ComponentModel.CategoryAttribute("Action")]
        public event System.Web.UI.WebControls.ImageMapEventHandler Click { add { } remove { } }
        protected override void AddAttributesToRender(System.Web.UI.HtmlTextWriter writer) { }
        protected override void LoadViewState(object savedState) { }
        protected virtual void OnClick(System.Web.UI.WebControls.ImageMapEventArgs e) { }
        protected virtual void RaisePostBackEvent(string eventArgument) { }
        protected internal override void Render(System.Web.UI.HtmlTextWriter writer) { }
        protected override object SaveViewState() { throw null; }
        void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(string eventArgument) { }
        protected override void TrackViewState() { }
    }
    public partial class ImageMapEventArgs : System.EventArgs
    {
        public ImageMapEventArgs(string value) { }
        public string PostBackValue { get { throw null; } }
    }
    public delegate void ImageMapEventHandler(object sender, System.Web.UI.WebControls.ImageMapEventArgs e);
    public partial interface IPersistedSelector
    {
        System.Web.UI.WebControls.DataKey DataKey { get; set; }
    }
    public partial interface IPostBackContainer
    {
        System.Web.UI.PostBackOptions GetPostBackOptions(System.Web.UI.WebControls.IButtonControl buttonControl);
    }
    public partial interface IRepeatInfoUser
    {
        bool HasFooter { get; }
        bool HasHeader { get; }
        bool HasSeparators { get; }
        int RepeatedItemCount { get; }
        System.Web.UI.WebControls.Style GetItemStyle(System.Web.UI.WebControls.ListItemType itemType, int repeatIndex);
        void RenderItem(System.Web.UI.WebControls.ListItemType itemType, int repeatIndex, System.Web.UI.WebControls.RepeatInfo repeatInfo, System.Web.UI.HtmlTextWriter writer);
    }
    [System.ComponentModel.DefaultPropertyAttribute("Text")]
    [System.ComponentModel.DesignerAttribute("System.Web.UI.Design.WebControls.LabelDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.Web.UI.ControlBuilderAttribute(typeof(System.Web.UI.WebControls.LabelControlBuilder))]
    [System.Web.UI.ControlValuePropertyAttribute("Text")]
    [System.Web.UI.DataBindingHandlerAttribute("System.Web.UI.Design.TextDataBindingHandler, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.Web.UI.ParseChildrenAttribute(false)]
    [System.Web.UI.ToolboxDataAttribute("<{0}:Label runat=\"server\" Text=\"Label\"></{0}:Label>")]
    public partial class Label : System.Web.UI.WebControls.WebControl, System.Web.UI.ITextControl
    {
        public Label() { }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.TypeConverterAttribute(typeof(System.Web.UI.WebControls.AssociatedControlConverter))]
        [System.Web.UI.IDReferencePropertyAttribute]
        [System.Web.UI.ThemeableAttribute(false)]
        public virtual string AssociatedControlID { get { throw null; } set { } }
        public override bool SupportsDisabledAttribute { get { throw null; } }
        protected override System.Web.UI.HtmlTextWriterTag TagKey { get { throw null; } }
        [System.ComponentModel.BindableAttribute(true)]
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.LocalizableAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerDefaultProperty)]
        public virtual string Text { get { throw null; } set { } }
        protected override void AddAttributesToRender(System.Web.UI.HtmlTextWriter writer) { }
        protected override void AddParsedSubObject(object obj) { }
        protected override void LoadViewState(object savedState) { }
        protected internal override void RenderContents(System.Web.UI.HtmlTextWriter writer) { }
    }
    public partial class LabelControlBuilder : System.Web.UI.ControlBuilder
    {
        public LabelControlBuilder() { }
        public override bool AllowWhitespaceLiterals() { throw null; }
    }
    [System.ComponentModel.DefaultEventAttribute("Click")]
    [System.ComponentModel.DefaultPropertyAttribute("Text")]
    [System.ComponentModel.DesignerAttribute("System.Web.UI.Design.WebControls.LinkButtonDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.Web.UI.ControlBuilderAttribute(typeof(System.Web.UI.WebControls.LinkButtonControlBuilder))]
    [System.Web.UI.DataBindingHandlerAttribute("System.Web.UI.Design.TextDataBindingHandler, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.Web.UI.ParseChildrenAttribute(false)]
    [System.Web.UI.SupportsEventValidationAttribute]
    [System.Web.UI.ToolboxDataAttribute("<{0}:LinkButton runat=\"server\">LinkButton</{0}:LinkButton>")]
    public partial class LinkButton : System.Web.UI.WebControls.WebControl, System.Web.UI.IPostBackEventHandler, System.Web.UI.WebControls.IButtonControl
    {
        public LinkButton() { }
        [System.ComponentModel.DefaultValueAttribute(true)]
        [System.Web.UI.ThemeableAttribute(false)]
        public virtual bool CausesValidation { get { throw null; } set { } }
        [System.ComponentModel.BindableAttribute(true)]
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.Web.UI.ThemeableAttribute(false)]
        public string CommandArgument { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.Web.UI.ThemeableAttribute(false)]
        public string CommandName { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.Web.UI.ThemeableAttribute(false)]
        public virtual string OnClientClick { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.ThemeableAttribute(false)]
        [System.Web.UI.UrlPropertyAttribute("*.aspx")]
        public virtual string PostBackUrl { get { throw null; } set { } }
        public override bool SupportsDisabledAttribute { get { throw null; } }
        [System.ComponentModel.BindableAttribute(true)]
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.LocalizableAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerDefaultProperty)]
        public virtual string Text { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.Web.UI.ThemeableAttribute(false)]
        public virtual string ValidationGroup { get { throw null; } set { } }
        public event System.EventHandler Click { add { } remove { } }
        public event System.Web.UI.WebControls.CommandEventHandler Command { add { } remove { } }
        protected override void AddAttributesToRender(System.Web.UI.HtmlTextWriter writer) { }
        protected override void AddParsedSubObject(object obj) { }
        protected virtual System.Web.UI.PostBackOptions GetPostBackOptions() { throw null; }
        protected override void LoadViewState(object savedState) { }
        protected virtual void OnClick(System.EventArgs e) { }
        protected virtual void OnCommand(System.Web.UI.WebControls.CommandEventArgs e) { }
        protected internal override void OnPreRender(System.EventArgs e) { }
        protected virtual void RaisePostBackEvent(string eventArgument) { }
        protected internal override void RenderContents(System.Web.UI.HtmlTextWriter writer) { }
        void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(string eventArgument) { }
    }
    public partial class LinkButtonControlBuilder : System.Web.UI.ControlBuilder
    {
        public LinkButtonControlBuilder() { }
        public override bool AllowWhitespaceLiterals() { throw null; }
    }
    [System.Web.UI.SupportsEventValidationAttribute]
    [System.Web.UI.ValidationPropertyAttribute("SelectedItem")]
    public partial class ListBox : System.Web.UI.WebControls.ListControl, System.Web.UI.IPostBackDataHandler
    {
        public ListBox() { }
        [System.ComponentModel.BrowsableAttribute(false)]
        public override System.Drawing.Color BorderColor { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        public override System.Web.UI.WebControls.BorderStyle BorderStyle { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        public override System.Web.UI.WebControls.Unit BorderWidth { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(4)]
        public virtual int Rows { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.ListSelectionMode.Single)]
        public virtual System.Web.UI.WebControls.ListSelectionMode SelectionMode { get { throw null; } set { } }
        protected override void AddAttributesToRender(System.Web.UI.HtmlTextWriter writer) { }
        public virtual int[] GetSelectedIndices() { throw null; }
        protected virtual bool LoadPostData(string postDataKey, System.Collections.Specialized.NameValueCollection postCollection) { throw null; }
        protected internal override void OnPreRender(System.EventArgs e) { }
        protected virtual void RaisePostDataChangedEvent() { }
        bool System.Web.UI.IPostBackDataHandler.LoadPostData(string postDataKey, System.Collections.Specialized.NameValueCollection postCollection) { throw null; }
        void System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent() { }
    }
    [System.ComponentModel.DefaultEventAttribute("SelectedIndexChanged")]
    [System.ComponentModel.DesignerAttribute("System.Web.UI.Design.WebControls.ListControlDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.Web.UI.ControlValuePropertyAttribute("SelectedValue")]
    [System.Web.UI.DataBindingHandlerAttribute("System.Web.UI.Design.WebControls.ListControlDataBindingHandler, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.Web.UI.ParseChildrenAttribute(true, "Items")]
    public abstract partial class ListControl : System.Web.UI.WebControls.DataBoundControl, System.Web.UI.IEditableTextControl, System.Web.UI.ITextControl
    {
        public ListControl() { }
        [System.ComponentModel.DefaultValueAttribute(false)]
        [System.Web.UI.ThemeableAttribute(false)]
        public virtual bool AppendDataBoundItems { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(false)]
        [System.Web.UI.ThemeableAttribute(false)]
        public virtual bool AutoPostBack { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(false)]
        [System.Web.UI.ThemeableAttribute(false)]
        public virtual bool CausesValidation { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.Web.UI.ThemeableAttribute(false)]
        public virtual string DataTextField { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.Web.UI.ThemeableAttribute(false)]
        public virtual string DataTextFormatString { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.Web.UI.ThemeableAttribute(false)]
        public virtual string DataValueField { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.WebControls.ListItemsCollectionEditor,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.ComponentModel.MergablePropertyAttribute(false)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerDefaultProperty)]
        public virtual System.Web.UI.WebControls.ListItemCollection Items { get { throw null; } }
        [System.ComponentModel.BindableAttribute(true)]
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DefaultValueAttribute(0)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Web.UI.ThemeableAttribute(false)]
        public virtual int SelectedIndex { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public virtual System.Web.UI.WebControls.ListItem SelectedItem { get { throw null; } }
        [System.ComponentModel.BindableAttribute(true, System.ComponentModel.BindingDirection.TwoWay)]
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Web.UI.ThemeableAttribute(false)]
        public virtual string SelectedValue { get { throw null; } set { } }
        protected override System.Web.UI.HtmlTextWriterTag TagKey { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Web.UI.ThemeableAttribute(false)]
        public virtual string Text { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.Web.UI.ThemeableAttribute(false)]
        public virtual string ValidationGroup { get { throw null; } set { } }
        public event System.EventHandler SelectedIndexChanged { add { } remove { } }
        public event System.EventHandler TextChanged { add { } remove { } }
        protected override void AddAttributesToRender(System.Web.UI.HtmlTextWriter writer) { }
        public virtual void ClearSelection() { }
        protected override void LoadViewState(object savedState) { }
        protected override void OnDataBinding(System.EventArgs e) { }
        protected internal override void OnPreRender(System.EventArgs e) { }
        protected virtual void OnSelectedIndexChanged(System.EventArgs e) { }
        protected virtual void OnTextChanged(System.EventArgs e) { }
        protected internal override void PerformDataBinding(System.Collections.IEnumerable dataSource) { }
        protected override void PerformSelect() { }
        protected internal override void RenderContents(System.Web.UI.HtmlTextWriter writer) { }
        protected override object SaveViewState() { throw null; }
        protected void SetPostDataSelection(int selectedIndex) { }
        protected override void TrackViewState() { }
        protected internal virtual void VerifyMultiSelect() { }
    }
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    [System.Web.UI.ControlBuilderAttribute(typeof(System.Web.UI.WebControls.ListItemControlBuilder))]
    [System.Web.UI.ParseChildrenAttribute(true, "Text")]
    public sealed partial class ListItem : System.Web.UI.IAttributeAccessor, System.Web.UI.IParserAccessor, System.Web.UI.IStateManager
    {
        public ListItem() { }
        public ListItem(string text) { }
        public ListItem(string text, string value) { }
        public ListItem(string text, string value, bool enabled) { }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public System.Web.UI.AttributeCollection Attributes { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool Enabled { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(false)]
        [System.ComponentModel.TypeConverterAttribute("System.Web.UI.MinimizableAttributeTypeConverter")]
        public bool Selected { get { throw null; } set { } }
        bool System.Web.UI.IStateManager.IsTrackingViewState { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.LocalizableAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.EncodedInnerDefaultProperty)]
        public string Text { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.LocalizableAttribute(true)]
        public string Value { get { throw null; } set { } }
        public override bool Equals(object o) { throw null; }
        public static System.Web.UI.WebControls.ListItem FromString(string s) { throw null; }
        public override int GetHashCode() { throw null; }
        string System.Web.UI.IAttributeAccessor.GetAttribute(string name) { throw null; }
        void System.Web.UI.IAttributeAccessor.SetAttribute(string name, string value) { }
        void System.Web.UI.IParserAccessor.AddParsedSubObject(object obj) { }
        void System.Web.UI.IStateManager.LoadViewState(object state) { }
        object System.Web.UI.IStateManager.SaveViewState() { throw null; }
        void System.Web.UI.IStateManager.TrackViewState() { }
        public override string ToString() { throw null; }
    }
    [System.ComponentModel.EditorAttribute("System.Web.UI.Design.WebControls.ListItemsCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
    public sealed partial class ListItemCollection : System.Collections.ICollection, System.Collections.IEnumerable, System.Collections.IList, System.Web.UI.IStateManager
    {
        public ListItemCollection() { }
        public int Capacity { get { throw null; } set { } }
        public int Count { get { throw null; } }
        public bool IsReadOnly { get { throw null; } }
        public bool IsSynchronized { get { throw null; } }
        public System.Web.UI.WebControls.ListItem this[int index] { get { throw null; } }
        public object SyncRoot { get { throw null; } }
        bool System.Collections.IList.IsFixedSize { get { throw null; } }
        object System.Collections.IList.this[int index] { get { throw null; } set { } }
        bool System.Web.UI.IStateManager.IsTrackingViewState { get { throw null; } }
        public void Add(string item) { }
        public void Add(System.Web.UI.WebControls.ListItem item) { }
        public void AddRange(System.Web.UI.WebControls.ListItem[] items) { }
        public void Clear() { }
        public bool Contains(System.Web.UI.WebControls.ListItem item) { throw null; }
        public void CopyTo(System.Array array, int index) { }
        public System.Web.UI.WebControls.ListItem FindByText(string text) { throw null; }
        public System.Web.UI.WebControls.ListItem FindByValue(string value) { throw null; }
        public System.Collections.IEnumerator GetEnumerator() { throw null; }
        public int IndexOf(System.Web.UI.WebControls.ListItem item) { throw null; }
        public void Insert(int index, string item) { }
        public void Insert(int index, System.Web.UI.WebControls.ListItem item) { }
        public void Remove(string item) { }
        public void Remove(System.Web.UI.WebControls.ListItem item) { }
        public void RemoveAt(int index) { }
        int System.Collections.IList.Add(object item) { throw null; }
        bool System.Collections.IList.Contains(object item) { throw null; }
        int System.Collections.IList.IndexOf(object item) { throw null; }
        void System.Collections.IList.Insert(int index, object item) { }
        void System.Collections.IList.Remove(object item) { }
        void System.Web.UI.IStateManager.LoadViewState(object state) { }
        object System.Web.UI.IStateManager.SaveViewState() { throw null; }
        void System.Web.UI.IStateManager.TrackViewState() { }
    }
    public partial class ListItemControlBuilder : System.Web.UI.ControlBuilder
    {
        public ListItemControlBuilder() { }
        public override bool AllowWhitespaceLiterals() { throw null; }
        public override bool HtmlDecodeLiterals() { throw null; }
    }
    public enum ListItemType
    {
        AlternatingItem = 3,
        EditItem = 5,
        Footer = 1,
        Header = 0,
        Item = 2,
        Pager = 7,
        SelectedItem = 4,
        Separator = 6,
    }
    public enum ListSelectionMode
    {
        Multiple = 1,
        Single = 0,
    }
    [System.ComponentModel.DefaultPropertyAttribute("Text")]
    [System.ComponentModel.DesignerAttribute("System.Web.UI.Design.WebControls.LiteralDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.Web.UI.ControlBuilderAttribute(typeof(System.Web.UI.WebControls.LiteralControlBuilder))]
    [System.Web.UI.DataBindingHandlerAttribute("System.Web.UI.Design.TextDataBindingHandler, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    public partial class Literal : System.Web.UI.Control, System.Web.UI.ITextControl
    {
        public Literal() { }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.LiteralMode.Transform)]
        public System.Web.UI.WebControls.LiteralMode Mode { get { throw null; } set { } }
        [System.ComponentModel.BindableAttribute(true)]
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.LocalizableAttribute(true)]
        public string Text { get { throw null; } set { } }
        protected override void AddParsedSubObject(object obj) { }
        protected override System.Web.UI.ControlCollection CreateControlCollection() { throw null; }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override void Focus() { }
        protected internal override void Render(System.Web.UI.HtmlTextWriter writer) { }
    }
    public partial class LiteralControlBuilder : System.Web.UI.ControlBuilder
    {
        public LiteralControlBuilder() { }
        public override bool AllowWhitespaceLiterals() { throw null; }
        public override void AppendLiteralString(string s) { }
        public override void AppendSubBuilder(System.Web.UI.ControlBuilder subBuilder) { }
    }
    public enum LiteralMode
    {
        Encode = 2,
        PassThrough = 1,
        Transform = 0,
    }
    [System.ComponentModel.DesignerAttribute("System.Web.UI.Design.WebControls.LocalizeDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.Drawing.ToolboxBitmapAttribute(typeof(System.Web.UI.WebControls.Localize))]
    public partial class Localize : System.Web.UI.WebControls.Literal
    {
        public Localize() { }
    }
    [System.ComponentModel.BindableAttribute(false)]
    [System.ComponentModel.DefaultEventAttribute("Authenticate")]
    [System.ComponentModel.DesignerAttribute("System.Web.UI.Design.WebControls.LoginDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    public partial class Login : System.Web.UI.WebControls.CompositeControl
    {
        public static readonly string LoginButtonCommandName;
        public Login() { }
        [System.ComponentModel.DefaultValueAttribute(1)]
        public virtual int BorderPadding { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.TableItemStyle CheckBoxStyle { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.UrlPropertyAttribute]
        public virtual string CreateUserIconUrl { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string CreateUserText { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.UrlPropertyAttribute]
        public virtual string CreateUserUrl { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.ThemeableAttribute(false)]
        [System.Web.UI.UrlPropertyAttribute]
        public virtual string DestinationPageUrl { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(true)]
        [System.Web.UI.ThemeableAttribute(false)]
        public virtual bool DisplayRememberMe { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.LoginFailureAction.Refresh)]
        [System.Web.UI.ThemeableAttribute(false)]
        public virtual System.Web.UI.WebControls.LoginFailureAction FailureAction { get { throw null; } set { } }
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string FailureText { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.TableItemStyle FailureTextStyle { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.UrlPropertyAttribute]
        public virtual string HelpPageIconUrl { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string HelpPageText { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.UrlPropertyAttribute]
        public virtual string HelpPageUrl { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.TableItemStyle HyperLinkStyle { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string InstructionText { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.TableItemStyle InstructionTextStyle { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.TableItemStyle LabelStyle { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        [System.Web.UI.TemplateContainerAttribute(typeof(System.Web.UI.WebControls.Login))]
        public virtual System.Web.UI.ITemplate LayoutTemplate { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.UrlPropertyAttribute]
        public virtual string LoginButtonImageUrl { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.Style LoginButtonStyle { get { throw null; } }
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string LoginButtonText { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.ButtonType.Button)]
        public virtual System.Web.UI.WebControls.ButtonType LoginButtonType { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.Web.UI.ThemeableAttribute(false)]
        public virtual string MembershipProvider { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.Orientation.Vertical)]
        public virtual System.Web.UI.WebControls.Orientation Orientation { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public virtual string Password { get { throw null; } }
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string PasswordLabelText { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.UrlPropertyAttribute]
        public virtual string PasswordRecoveryIconUrl { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string PasswordRecoveryText { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.UrlPropertyAttribute]
        public virtual string PasswordRecoveryUrl { get { throw null; } set { } }
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string PasswordRequiredErrorMessage { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(false)]
        [System.Web.UI.ThemeableAttribute(false)]
        public virtual bool RememberMeSet { get { throw null; } set { } }
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string RememberMeText { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(true)]
        public virtual bool RenderOuterTable { get { throw null; } set { } }
        protected override System.Web.UI.HtmlTextWriterTag TagKey { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.Style TextBoxStyle { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.LoginTextLayout.TextOnLeft)]
        public virtual System.Web.UI.WebControls.LoginTextLayout TextLayout { get { throw null; } set { } }
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string TitleText { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.TableItemStyle TitleTextStyle { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute("")]
        public virtual string UserName { get { throw null; } set { } }
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string UserNameLabelText { get { throw null; } set { } }
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string UserNameRequiredErrorMessage { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.Style ValidatorTextStyle { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(true)]
        [System.Web.UI.ThemeableAttribute(false)]
        public virtual bool VisibleWhenLoggedIn { get { throw null; } set { } }
        public event System.Web.UI.WebControls.AuthenticateEventHandler Authenticate { add { } remove { } }
        public event System.EventHandler LoggedIn { add { } remove { } }
        public event System.Web.UI.WebControls.LoginCancelEventHandler LoggingIn { add { } remove { } }
        public event System.EventHandler LoginError { add { } remove { } }
        protected internal override void CreateChildControls() { }
        protected override void LoadViewState(object savedState) { }
        protected virtual void OnAuthenticate(System.Web.UI.WebControls.AuthenticateEventArgs e) { }
        protected override bool OnBubbleEvent(object source, System.EventArgs e) { throw null; }
        protected virtual void OnLoggedIn(System.EventArgs e) { }
        protected virtual void OnLoggingIn(System.Web.UI.WebControls.LoginCancelEventArgs e) { }
        protected virtual void OnLoginError(System.EventArgs e) { }
        protected internal override void OnPreRender(System.EventArgs e) { }
        protected internal override void Render(System.Web.UI.HtmlTextWriter writer) { }
        protected override object SaveViewState() { throw null; }
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, Unrestricted=true)]
        protected override void SetDesignModeState(System.Collections.IDictionary data) { }
        protected override void TrackViewState() { }
    }
    public partial class LoginCancelEventArgs : System.EventArgs
    {
        public LoginCancelEventArgs() { }
        public LoginCancelEventArgs(bool cancel) { }
        public bool Cancel { get { throw null; } set { } }
    }
    public delegate void LoginCancelEventHandler(object sender, System.Web.UI.WebControls.LoginCancelEventArgs e);
    public enum LoginFailureAction
    {
        RedirectToLoginPage = 1,
        Refresh = 0,
    }
    [System.ComponentModel.BindableAttribute(false)]
    [System.ComponentModel.DefaultPropertyAttribute("FormatString")]
    [System.ComponentModel.DesignerAttribute("System.Web.UI.Design.WebControls.LoginNameDesigner,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    public partial class LoginName : System.Web.UI.WebControls.WebControl
    {
        public LoginName() { }
        [System.ComponentModel.DefaultValueAttribute("{0}")]
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string FormatString { get { throw null; } set { } }
        public override bool SupportsDisabledAttribute { get { throw null; } }
        protected internal override void Render(System.Web.UI.HtmlTextWriter writer) { }
        public override void RenderBeginTag(System.Web.UI.HtmlTextWriter writer) { }
        protected internal override void RenderContents(System.Web.UI.HtmlTextWriter writer) { }
        public override void RenderEndTag(System.Web.UI.HtmlTextWriter writer) { }
    }
    [System.ComponentModel.BindableAttribute(false)]
    [System.ComponentModel.DefaultEventAttribute("LoggingOut")]
    [System.ComponentModel.DesignerAttribute("System.Web.UI.Design.WebControls.LoginStatusDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    public partial class LoginStatus : System.Web.UI.WebControls.CompositeControl
    {
        public LoginStatus() { }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.UrlPropertyAttribute]
        public virtual string LoginImageUrl { get { throw null; } set { } }
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string LoginText { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.LogoutAction.Refresh)]
        [System.Web.UI.ThemeableAttribute(false)]
        public virtual System.Web.UI.WebControls.LogoutAction LogoutAction { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.UrlPropertyAttribute]
        public virtual string LogoutImageUrl { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.ThemeableAttribute(false)]
        [System.Web.UI.UrlPropertyAttribute]
        public virtual string LogoutPageUrl { get { throw null; } set { } }
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string LogoutText { get { throw null; } set { } }
        protected override System.Web.UI.HtmlTextWriterTag TagKey { get { throw null; } }
        public event System.EventHandler LoggedOut { add { } remove { } }
        public event System.Web.UI.WebControls.LoginCancelEventHandler LoggingOut { add { } remove { } }
        protected internal override void CreateChildControls() { }
        protected virtual void OnLoggedOut(System.EventArgs e) { }
        protected virtual void OnLoggingOut(System.Web.UI.WebControls.LoginCancelEventArgs e) { }
        protected internal override void OnPreRender(System.EventArgs e) { }
        protected internal override void Render(System.Web.UI.HtmlTextWriter writer) { }
        protected internal override void RenderContents(System.Web.UI.HtmlTextWriter writer) { }
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, Unrestricted=true)]
        protected override void SetDesignModeState(System.Collections.IDictionary data) { }
    }
    public enum LoginTextLayout
    {
        TextOnLeft = 0,
        TextOnTop = 1,
    }
    [System.ComponentModel.BindableAttribute(false)]
    [System.ComponentModel.DefaultEventAttribute("ViewChanged")]
    [System.ComponentModel.DefaultPropertyAttribute("CurrentView")]
    [System.ComponentModel.DesignerAttribute("System.Web.UI.Design.WebControls.LoginViewDesigner,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.Web.UI.ParseChildrenAttribute(true)]
    [System.Web.UI.PersistChildrenAttribute(false)]
    [System.Web.UI.ThemeableAttribute(true)]
    public partial class LoginView : System.Web.UI.Control, System.Web.UI.INamingContainer
    {
        public LoginView() { }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        [System.Web.UI.TemplateContainerAttribute(typeof(System.Web.UI.WebControls.LoginView))]
        public virtual System.Web.UI.ITemplate AnonymousTemplate { get { throw null; } set { } }
        public override System.Web.UI.ControlCollection Controls { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(true)]
        public override bool EnableTheming { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        [System.Web.UI.TemplateContainerAttribute(typeof(System.Web.UI.WebControls.LoginView))]
        public virtual System.Web.UI.ITemplate LoggedInTemplate { get { throw null; } set { } }
        [System.ComponentModel.MergablePropertyAttribute(false)]
        [System.Web.UI.FilterableAttribute(false)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        [System.Web.UI.ThemeableAttribute(false)]
        public virtual System.Web.UI.WebControls.RoleGroupCollection RoleGroups { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(true)]
        public override string SkinID { get { throw null; } set { } }
        public event System.EventHandler ViewChanged { add { } remove { } }
        public event System.EventHandler ViewChanging { add { } remove { } }
        protected internal override void CreateChildControls() { }
        public override void DataBind() { }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override void Focus() { }
        protected internal override void LoadControlState(object savedState) { }
        protected internal override void OnInit(System.EventArgs e) { }
        protected internal override void OnPreRender(System.EventArgs e) { }
        protected virtual void OnViewChanged(System.EventArgs e) { }
        protected virtual void OnViewChanging(System.EventArgs e) { }
        protected internal override void Render(System.Web.UI.HtmlTextWriter writer) { }
        protected internal override object SaveControlState() { throw null; }
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, Unrestricted=true)]
        protected override void SetDesignModeState(System.Collections.IDictionary data) { }
    }
    public enum LogoutAction
    {
        Redirect = 1,
        RedirectToLoginPage = 2,
        Refresh = 0,
    }
    [System.ComponentModel.BindableAttribute(false)]
    [System.ComponentModel.TypeConverterAttribute("System.Web.UI.WebControls.EmptyStringExpandableObjectConverter")]
    [System.Web.UI.ParseChildrenAttribute(true, "")]
    public sealed partial class MailDefinition : System.Web.UI.IStateManager
    {
        public MailDefinition() { }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.WebControls.MailDefinitionBodyFileNameEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.UrlPropertyAttribute("*.*")]
        public string BodyFileName { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        public string CC { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.EmbeddedMailObjectsCollection EmbeddedObjects { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        public string From { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(false)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        public bool IsBodyHtml { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(System.Net.Mail.MailPriority.Normal)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        public System.Net.Mail.MailPriority Priority { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        public string Subject { get { throw null; } set { } }
        bool System.Web.UI.IStateManager.IsTrackingViewState { get { throw null; } }
        public System.Net.Mail.MailMessage CreateMailMessage(string recipients, System.Collections.IDictionary replacements, string body, System.Web.UI.Control owner) { throw null; }
        public System.Net.Mail.MailMessage CreateMailMessage(string recipients, System.Collections.IDictionary replacements, System.Web.UI.Control owner) { throw null; }
        void System.Web.UI.IStateManager.LoadViewState(object savedState) { }
        object System.Web.UI.IStateManager.SaveViewState() { throw null; }
        void System.Web.UI.IStateManager.TrackViewState() { }
    }
    public partial class MailMessageEventArgs : System.Web.UI.WebControls.LoginCancelEventArgs
    {
        public MailMessageEventArgs(System.Net.Mail.MailMessage message) { }
        public System.Net.Mail.MailMessage Message { get { throw null; } }
    }
    public delegate void MailMessageEventHandler(object sender, System.Web.UI.WebControls.MailMessageEventArgs e);
    [System.ComponentModel.DefaultEventAttribute("MenuItemClick")]
    [System.ComponentModel.DesignerAttribute("System.Web.UI.Design.WebControls.MenuDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.Web.UI.ControlValuePropertyAttribute("SelectedValue")]
    [System.Web.UI.SupportsEventValidationAttribute]
    public partial class Menu : System.Web.UI.WebControls.HierarchicalDataBoundControl, System.Web.UI.INamingContainer, System.Web.UI.IPostBackEventHandler
    {
        public static readonly string MenuItemClickCommandName;
        public Menu() { }
        public override System.Web.UI.ControlCollection Controls { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.WebControls.MenuBindingsEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.ComponentModel.MergablePropertyAttribute(false)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.MenuItemBindingCollection DataBindings { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(500)]
        [System.Web.UI.ThemeableAttribute(false)]
        public int DisappearAfter { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.ThemeableAttribute(true)]
        [System.Web.UI.UrlPropertyAttribute]
        public string DynamicBottomSeparatorImageUrl { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool DynamicEnableDefaultPopOutImage { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int DynamicHorizontalOffset { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.Style DynamicHoverStyle { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute("")]
        public string DynamicItemFormatString { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        [System.Web.UI.TemplateContainerAttribute(typeof(System.Web.UI.WebControls.MenuItemTemplateContainer))]
        public System.Web.UI.ITemplate DynamicItemTemplate { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.MenuItemStyle DynamicMenuItemStyle { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.SubMenuStyle DynamicMenuStyle { get { throw null; } }
        public string DynamicPopOutImageTextFormatString { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.UrlPropertyAttribute]
        public string DynamicPopOutImageUrl { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.MenuItemStyle DynamicSelectedStyle { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.UrlPropertyAttribute]
        public string DynamicTopSeparatorImageUrl { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int DynamicVerticalOffset { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool IncludeStyleBlock { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } [System.Runtime.CompilerServices.CompilerGeneratedAttribute]set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.WebControls.MenuItemCollectionEditor,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.ComponentModel.MergablePropertyAttribute(false)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.MenuItemCollection Items { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool ItemWrap { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.WebControls.MenuItemStyleCollectionEditor,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.MenuItemStyleCollection LevelMenuItemStyles { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.WebControls.MenuItemStyleCollectionEditor,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.MenuItemStyleCollection LevelSelectedStyles { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.WebControls.SubMenuStyleCollectionEditor,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.SubMenuStyleCollection LevelSubMenuStyles { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(3)]
        [System.Web.UI.ThemeableAttribute(true)]
        public int MaximumDynamicDisplayLevels { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.Orientation.Vertical)]
        public System.Web.UI.WebControls.Orientation Orientation { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute('/')]
        public char PathSeparator { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.MenuRenderingMode.Default)]
        public System.Web.UI.WebControls.MenuRenderingMode RenderingMode { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.UrlPropertyAttribute]
        public string ScrollDownImageUrl { get { throw null; } set { } }
        [System.ComponentModel.LocalizableAttribute(true)]
        public string ScrollDownText { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.UrlPropertyAttribute]
        public string ScrollUpImageUrl { get { throw null; } set { } }
        [System.ComponentModel.LocalizableAttribute(true)]
        public string ScrollUpText { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public System.Web.UI.WebControls.MenuItem SelectedItem { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public string SelectedValue { get { throw null; } }
        [System.ComponentModel.LocalizableAttribute(true)]
        public string SkipLinkText { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.UrlPropertyAttribute]
        public string StaticBottomSeparatorImageUrl { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(1)]
        [System.Web.UI.ThemeableAttribute(true)]
        public int StaticDisplayLevels { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool StaticEnableDefaultPopOutImage { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.Style StaticHoverStyle { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute("")]
        public string StaticItemFormatString { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        [System.Web.UI.TemplateContainerAttribute(typeof(System.Web.UI.WebControls.MenuItemTemplateContainer))]
        public System.Web.UI.ITemplate StaticItemTemplate { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.MenuItemStyle StaticMenuItemStyle { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.SubMenuStyle StaticMenuStyle { get { throw null; } }
        public string StaticPopOutImageTextFormatString { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.UrlPropertyAttribute]
        public string StaticPopOutImageUrl { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.MenuItemStyle StaticSelectedStyle { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(typeof(System.Web.UI.WebControls.Unit), "")]
        [System.Web.UI.ThemeableAttribute(true)]
        public System.Web.UI.WebControls.Unit StaticSubMenuIndent { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.UrlPropertyAttribute]
        public string StaticTopSeparatorImageUrl { get { throw null; } set { } }
        protected override System.Web.UI.HtmlTextWriterTag TagKey { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute("")]
        public string Target { get { throw null; } set { } }
        public event System.Web.UI.WebControls.MenuEventHandler MenuItemClick { add { } remove { } }
        public event System.Web.UI.WebControls.MenuEventHandler MenuItemDataBound { add { } remove { } }
        protected override void AddAttributesToRender(System.Web.UI.HtmlTextWriter writer) { }
        protected internal override void CreateChildControls() { }
        public sealed override void DataBind() { }
        protected override void EnsureDataBound() { }
        public System.Web.UI.WebControls.MenuItem FindItem(string valuePath) { throw null; }
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, Unrestricted=true)]
        protected override System.Collections.IDictionary GetDesignModeState() { throw null; }
        protected internal override void LoadControlState(object savedState) { }
        protected override void LoadViewState(object state) { }
        protected override bool OnBubbleEvent(object source, System.EventArgs e) { throw null; }
        protected override void OnDataBinding(System.EventArgs e) { }
        protected internal override void OnInit(System.EventArgs e) { }
        protected virtual void OnMenuItemClick(System.Web.UI.WebControls.MenuEventArgs e) { }
        protected virtual void OnMenuItemDataBound(System.Web.UI.WebControls.MenuEventArgs e) { }
        protected internal override void OnPreRender(System.EventArgs e) { }
        protected internal override void PerformDataBinding() { }
        protected internal virtual void RaisePostBackEvent(string eventArgument) { }
        protected internal override void Render(System.Web.UI.HtmlTextWriter writer) { }
        public override void RenderBeginTag(System.Web.UI.HtmlTextWriter writer) { }
        protected internal override void RenderContents(System.Web.UI.HtmlTextWriter writer) { }
        public override void RenderEndTag(System.Web.UI.HtmlTextWriter writer) { }
        protected internal override object SaveControlState() { throw null; }
        protected override object SaveViewState() { throw null; }
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, Unrestricted=true)]
        protected override void SetDesignModeState(System.Collections.IDictionary data) { }
        protected void SetItemDataBound(System.Web.UI.WebControls.MenuItem node, bool dataBound) { }
        protected void SetItemDataItem(System.Web.UI.WebControls.MenuItem node, object dataItem) { }
        protected void SetItemDataPath(System.Web.UI.WebControls.MenuItem node, string dataPath) { }
        void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(string eventArgument) { }
        protected override void TrackViewState() { }
    }
    public sealed partial class MenuEventArgs : System.Web.UI.WebControls.CommandEventArgs
    {
        public MenuEventArgs(System.Web.UI.WebControls.MenuItem item) : base (default(System.Web.UI.WebControls.CommandEventArgs)) { }
        public MenuEventArgs(System.Web.UI.WebControls.MenuItem item, object commandSource, System.Web.UI.WebControls.CommandEventArgs originalArgs) : base (default(System.Web.UI.WebControls.CommandEventArgs)) { }
        public object CommandSource { get { throw null; } }
        public System.Web.UI.WebControls.MenuItem Item { get { throw null; } }
    }
    public delegate void MenuEventHandler(object sender, System.Web.UI.WebControls.MenuEventArgs e);
    [System.Web.UI.ParseChildrenAttribute(true, "ChildItems")]
    public sealed partial class MenuItem : System.ICloneable, System.Web.UI.IStateManager
    {
        public MenuItem() { }
        public MenuItem(string text) { }
        public MenuItem(string text, string value) { }
        public MenuItem(string text, string value, string imageUrl) { }
        public MenuItem(string text, string value, string imageUrl, string navigateUrl) { }
        public MenuItem(string text, string value, string imageUrl, string navigateUrl, string target) { }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.MergablePropertyAttribute(false)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerDefaultProperty)]
        public System.Web.UI.WebControls.MenuItemCollection ChildItems { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public bool DataBound { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DefaultValueAttribute(null)]
        public object DataItem { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public string DataPath { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public int Depth { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(true)]
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool Enabled { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.UrlPropertyAttribute]
        public string ImageUrl { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.UrlPropertyAttribute]
        public string NavigateUrl { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public System.Web.UI.WebControls.MenuItem Parent { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.UrlPropertyAttribute]
        public string PopOutImageUrl { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(true)]
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool Selectable { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(true)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool Selected { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.UrlPropertyAttribute]
        public string SeparatorImageUrl { get { throw null; } set { } }
        bool System.Web.UI.IStateManager.IsTrackingViewState { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute("")]
        public string Target { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.LocalizableAttribute(true)]
        public string Text { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.LocalizableAttribute(true)]
        public string ToolTip { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.LocalizableAttribute(true)]
        public string Value { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public string ValuePath { get { throw null; } }
        object System.ICloneable.Clone() { throw null; }
        void System.Web.UI.IStateManager.LoadViewState(object state) { }
        object System.Web.UI.IStateManager.SaveViewState() { throw null; }
        void System.Web.UI.IStateManager.TrackViewState() { }
    }
    [System.ComponentModel.DefaultPropertyAttribute("TextField")]
    public sealed partial class MenuItemBinding : System.ICloneable, System.Web.UI.IDataSourceViewSchemaAccessor, System.Web.UI.IStateManager
    {
        public MenuItemBinding() { }
        [System.ComponentModel.DefaultValueAttribute("")]
        public string DataMember { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(-1)]
        [System.ComponentModel.TypeConverterAttribute("System.Web.UI.Design.WebControls.TreeNodeBindingDepthConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
        public int Depth { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool Enabled { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.TypeConverterAttribute("System.Web.UI.Design.DataSourceViewSchemaConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
        public string EnabledField { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.LocalizableAttribute(true)]
        public string FormatString { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.UrlPropertyAttribute]
        public string ImageUrl { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.TypeConverterAttribute("System.Web.UI.Design.DataSourceViewSchemaConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
        public string ImageUrlField { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.UrlPropertyAttribute]
        public string NavigateUrl { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.TypeConverterAttribute("System.Web.UI.Design.DataSourceViewSchemaConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
        public string NavigateUrlField { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.UrlPropertyAttribute]
        public string PopOutImageUrl { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.TypeConverterAttribute("System.Web.UI.Design.DataSourceViewSchemaConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
        public string PopOutImageUrlField { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool Selectable { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.TypeConverterAttribute("System.Web.UI.Design.DataSourceViewSchemaConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
        public string SelectableField { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.UrlPropertyAttribute]
        public string SeparatorImageUrl { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.TypeConverterAttribute("System.Web.UI.Design.DataSourceViewSchemaConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
        public string SeparatorImageUrlField { get { throw null; } set { } }
        object System.Web.UI.IDataSourceViewSchemaAccessor.DataSourceViewSchema { get { throw null; } set { } }
        bool System.Web.UI.IStateManager.IsTrackingViewState { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute("")]
        public string Target { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.TypeConverterAttribute("System.Web.UI.Design.DataSourceViewSchemaConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
        public string TargetField { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.LocalizableAttribute(true)]
        public string Text { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.TypeConverterAttribute("System.Web.UI.Design.DataSourceViewSchemaConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
        public string TextField { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.LocalizableAttribute(true)]
        public string ToolTip { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.TypeConverterAttribute("System.Web.UI.Design.DataSourceViewSchemaConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
        public string ToolTipField { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.LocalizableAttribute(true)]
        public string Value { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.TypeConverterAttribute("System.Web.UI.Design.DataSourceViewSchemaConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
        public string ValueField { get { throw null; } set { } }
        object System.ICloneable.Clone() { throw null; }
        void System.Web.UI.IStateManager.LoadViewState(object state) { }
        object System.Web.UI.IStateManager.SaveViewState() { throw null; }
        void System.Web.UI.IStateManager.TrackViewState() { }
        public override string ToString() { throw null; }
    }
    public sealed partial class MenuItemBindingCollection : System.Web.UI.StateManagedCollection
    {
        internal MenuItemBindingCollection() { }
        public System.Web.UI.WebControls.MenuItemBinding this[int i] { get { throw null; } set { } }
        public int Add(System.Web.UI.WebControls.MenuItemBinding binding) { throw null; }
        public bool Contains(System.Web.UI.WebControls.MenuItemBinding binding) { throw null; }
        public void CopyTo(System.Web.UI.WebControls.MenuItemBinding[] array, int index) { }
        protected override object CreateKnownType(int index) { throw null; }
        protected override System.Type[] GetKnownTypes() { throw null; }
        public int IndexOf(System.Web.UI.WebControls.MenuItemBinding value) { throw null; }
        public void Insert(int index, System.Web.UI.WebControls.MenuItemBinding binding) { }
        protected override void OnClear() { }
        protected override void OnRemoveComplete(int index, object value) { }
        protected override void OnValidate(object value) { }
        public void Remove(System.Web.UI.WebControls.MenuItemBinding binding) { }
        public void RemoveAt(int index) { }
        protected override void SetDirtyObject(object o) { }
    }
    public sealed partial class MenuItemCollection : System.Collections.ICollection, System.Collections.IEnumerable, System.Web.UI.IStateManager
    {
        public MenuItemCollection() { }
        public MenuItemCollection(System.Web.UI.WebControls.MenuItem owner) { }
        public int Count { get { throw null; } }
        public bool IsSynchronized { get { throw null; } }
        public System.Web.UI.WebControls.MenuItem this[int index] { get { throw null; } }
        public object SyncRoot { get { throw null; } }
        bool System.Web.UI.IStateManager.IsTrackingViewState { get { throw null; } }
        public void Add(System.Web.UI.WebControls.MenuItem child) { }
        public void AddAt(int index, System.Web.UI.WebControls.MenuItem child) { }
        public void Clear() { }
        public bool Contains(System.Web.UI.WebControls.MenuItem c) { throw null; }
        public void CopyTo(System.Array array, int index) { }
        public void CopyTo(System.Web.UI.WebControls.MenuItem[] array, int index) { }
        public System.Collections.IEnumerator GetEnumerator() { throw null; }
        public int IndexOf(System.Web.UI.WebControls.MenuItem value) { throw null; }
        public void Remove(System.Web.UI.WebControls.MenuItem value) { }
        public void RemoveAt(int index) { }
        void System.Web.UI.IStateManager.LoadViewState(object state) { }
        object System.Web.UI.IStateManager.SaveViewState() { throw null; }
        void System.Web.UI.IStateManager.TrackViewState() { }
    }
    public sealed partial class MenuItemStyle : System.Web.UI.WebControls.Style
    {
        public MenuItemStyle() { }
        public MenuItemStyle(System.Web.UI.StateBag bag) { }
        [System.ComponentModel.DefaultValueAttribute(typeof(System.Web.UI.WebControls.Unit), "")]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        public System.Web.UI.WebControls.Unit HorizontalPadding { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(typeof(System.Web.UI.WebControls.Unit), "")]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        public System.Web.UI.WebControls.Unit ItemSpacing { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(typeof(System.Web.UI.WebControls.Unit), "")]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        public System.Web.UI.WebControls.Unit VerticalPadding { get { throw null; } set { } }
        public override void CopyFrom(System.Web.UI.WebControls.Style s) { }
        protected override void FillStyleAttributes(System.Web.UI.CssStyleCollection attributes, System.Web.UI.IUrlResolutionService urlResolver) { }
        public override void MergeWith(System.Web.UI.WebControls.Style s) { }
        public override void Reset() { }
    }
    public sealed partial class MenuItemStyleCollection : System.Web.UI.StateManagedCollection
    {
        internal MenuItemStyleCollection() { }
        public System.Web.UI.WebControls.MenuItemStyle this[int i] { get { throw null; } set { } }
        public int Add(System.Web.UI.WebControls.MenuItemStyle style) { throw null; }
        public bool Contains(System.Web.UI.WebControls.MenuItemStyle style) { throw null; }
        public void CopyTo(System.Web.UI.WebControls.MenuItemStyle[] styleArray, int index) { }
        protected override object CreateKnownType(int index) { throw null; }
        protected override System.Type[] GetKnownTypes() { throw null; }
        public int IndexOf(System.Web.UI.WebControls.MenuItemStyle style) { throw null; }
        public void Insert(int index, System.Web.UI.WebControls.MenuItemStyle style) { }
        protected override void OnInsert(int index, object value) { }
        public void Remove(System.Web.UI.WebControls.MenuItemStyle style) { }
        public void RemoveAt(int index) { }
        protected override void SetDirtyObject(object o) { }
    }
    public sealed partial class MenuItemTemplateContainer : System.Web.UI.Control, System.Web.UI.IDataItemContainer, System.Web.UI.INamingContainer
    {
        public MenuItemTemplateContainer(int itemIndex, System.Web.UI.WebControls.MenuItem dataItem) { }
        public object DataItem { get { throw null; } set { } }
        public int ItemIndex { get { throw null; } }
        object System.Web.UI.IDataItemContainer.DataItem { get { throw null; } }
        int System.Web.UI.IDataItemContainer.DataItemIndex { get { throw null; } }
        int System.Web.UI.IDataItemContainer.DisplayIndex { get { throw null; } }
        protected override bool OnBubbleEvent(object source, System.EventArgs e) { throw null; }
    }
    public enum MenuRenderingMode
    {
        Default = 0,
        List = 2,
        Table = 1,
    }
    public partial class ModelDataMethodResult
    {
        public ModelDataMethodResult(object returnValue, System.Collections.Specialized.OrderedDictionary outputParameters) { }
        public System.Collections.Specialized.OrderedDictionary OutputParameters { get { throw null; } }
        public object ReturnValue { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } }
    }
    public partial class ModelDataSource : System.Web.UI.IDataSource, System.Web.UI.IStateManager
    {
        public ModelDataSource(System.Web.UI.Control dataControl) { }
        public System.Web.UI.Control DataControl { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } }
        bool System.Web.UI.IStateManager.IsTrackingViewState { get { throw null; } }
        public virtual System.Web.UI.WebControls.ModelDataSourceView View { get { throw null; } }
        public event System.Web.UI.WebControls.CallingDataMethodsEventHandler CallingDataMethods { add { } remove { } }
        event System.EventHandler System.Web.UI.IDataSource.DataSourceChanged { add { } remove { } }
        protected virtual bool IsTrackingViewState() { throw null; }
        protected virtual void LoadViewState(object savedState) { }
        protected virtual object SaveViewState() { throw null; }
        System.Web.UI.DataSourceView System.Web.UI.IDataSource.GetView(string viewName) { throw null; }
        System.Collections.ICollection System.Web.UI.IDataSource.GetViewNames() { throw null; }
        void System.Web.UI.IStateManager.LoadViewState(object savedState) { }
        object System.Web.UI.IStateManager.SaveViewState() { throw null; }
        void System.Web.UI.IStateManager.TrackViewState() { }
        protected virtual void TrackViewState() { }
        public void UpdateProperties(string modelTypeName, string selectMethod) { }
        public void UpdateProperties(string modelTypeName, string selectMethod, string updateMethod, string insertMethod, string deleteMethod, string dataKeyName) { }
    }
    public partial class ModelDataSourceMethod
    {
        public ModelDataSourceMethod(object instance, System.Reflection.MethodInfo methodInfo) { }
        public object Instance { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } }
        public System.Reflection.MethodInfo MethodInfo { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } }
        public System.Collections.Specialized.OrderedDictionary Parameters { get { throw null; } }
    }
    public partial class ModelDataSourceView : System.Web.UI.DataSourceView, System.Web.UI.IStateManager
    {
        public ModelDataSourceView(System.Web.UI.WebControls.ModelDataSource owner) : base (default(System.Web.UI.IDataSource), default(string)) { }
        public override bool CanDelete { get { throw null; } }
        public override bool CanInsert { get { throw null; } }
        public override bool CanPage { get { throw null; } }
        public override bool CanRetrieveTotalRowCount { get { throw null; } }
        public override bool CanSort { get { throw null; } }
        public override bool CanUpdate { get { throw null; } }
        public string DataKeyName { get { throw null; } }
        public string DeleteMethod { get { throw null; } }
        public string InsertMethod { get { throw null; } }
        public string ModelTypeName { get { throw null; } }
        public string SelectMethod { get { throw null; } }
        bool System.Web.UI.IStateManager.IsTrackingViewState { get { throw null; } }
        public string UpdateMethod { get { throw null; } }
        public event System.Web.UI.WebControls.CallingDataMethodsEventHandler CallingDataMethods { add { } remove { } }
        protected virtual System.Collections.IEnumerable CreateSelectResult(object result) { throw null; }
        public override void Delete(System.Collections.IDictionary keys, System.Collections.IDictionary oldValues, System.Web.UI.DataSourceViewOperationCallback callback) { }
        protected virtual System.Web.UI.WebControls.ModelDataSourceMethod EvaluateDeleteMethodParameters(System.Collections.IDictionary keys, System.Collections.IDictionary oldValues) { throw null; }
        protected virtual System.Web.UI.WebControls.ModelDataSourceMethod EvaluateInsertMethodParameters(System.Collections.IDictionary values) { throw null; }
        protected virtual void EvaluateMethodParameters(System.Web.UI.DataSourceOperation dataSourceOperation, System.Web.UI.WebControls.ModelDataSourceMethod modelDataSourceMethod, System.Collections.IDictionary controlValues) { }
        protected virtual void EvaluateMethodParameters(System.Web.UI.DataSourceOperation dataSourceOperation, System.Web.UI.WebControls.ModelDataSourceMethod modelDataSourceMethod, System.Collections.IDictionary controlValues, bool isPageLoadComplete) { }
        protected virtual System.Web.UI.WebControls.ModelDataSourceMethod EvaluateSelectMethodParameters(System.Web.UI.DataSourceSelectArguments arguments, out System.Web.UI.WebControls.DataSourceSelectResultProcessingOptions selectResultProcessingOptions) { throw null; }
        protected virtual System.Web.UI.WebControls.ModelDataSourceMethod EvaluateUpdateMethodParameters(System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues) { throw null; }
        protected override int ExecuteDelete(System.Collections.IDictionary keys, System.Collections.IDictionary oldValues) { throw null; }
        protected override int ExecuteInsert(System.Collections.IDictionary values) { throw null; }
        protected internal override System.Collections.IEnumerable ExecuteSelect(System.Web.UI.DataSourceSelectArguments arguments) { throw null; }
        protected override int ExecuteUpdate(System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues) { throw null; }
        protected virtual System.Web.UI.WebControls.ModelDataSourceMethod FindMethod(string methodName) { throw null; }
        protected virtual object GetDeleteMethodResult(System.Collections.IDictionary keys, System.Collections.IDictionary oldValues) { throw null; }
        protected virtual object GetInsertMethodResult(System.Collections.IDictionary values) { throw null; }
        protected virtual object GetSelectMethodResult(System.Web.UI.DataSourceSelectArguments arguments) { throw null; }
        protected virtual object GetUpdateMethodResult(System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues) { throw null; }
        public override void Insert(System.Collections.IDictionary values, System.Web.UI.DataSourceViewOperationCallback callback) { }
        protected virtual System.Web.UI.WebControls.ModelDataMethodResult InvokeMethod(System.Web.UI.WebControls.ModelDataSourceMethod method) { throw null; }
        protected virtual bool IsTrackingViewState() { throw null; }
        protected virtual void LoadViewState(object savedState) { }
        protected virtual void OnCallingDataMethods(System.Web.UI.WebControls.CallingDataMethodsEventArgs e) { }
        protected virtual object ProcessSelectMethodResult(System.Web.UI.DataSourceSelectArguments arguments, System.Web.UI.WebControls.DataSourceSelectResultProcessingOptions selectResultProcessingOptions, System.Web.UI.WebControls.ModelDataMethodResult result) { throw null; }
        protected virtual object SaveViewState() { throw null; }
        public override void Select(System.Web.UI.DataSourceSelectArguments arguments, System.Web.UI.DataSourceViewSelectCallback callback) { }
        void System.Web.UI.IStateManager.LoadViewState(object savedState) { }
        object System.Web.UI.IStateManager.SaveViewState() { throw null; }
        void System.Web.UI.IStateManager.TrackViewState() { }
        protected virtual void TrackViewState() { }
        public override void Update(System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues, System.Web.UI.DataSourceViewOperationCallback callback) { }
        public void UpdateProperties(string modelTypeName, string selectMethod, string updateMethod, string insertMethod, string deleteMethod, string dataKeyName) { }
    }
    [System.ComponentModel.DefaultPropertyAttribute("Key")]
    [System.Web.UI.ParseChildrenAttribute(true)]
    [System.Web.UI.PersistChildrenAttribute(false)]
    [System.Web.UI.ToolboxDataAttribute("<{0}:ModelErrorMessage runat=\"server\" Key=\"ModelStateKey\"></{0}:ModelErrorMessage>")]
    public partial class ModelErrorMessage : System.Web.UI.WebControls.Label
    {
        public ModelErrorMessage() { }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.Web.UI.IDReferencePropertyAttribute]
        [System.Web.UI.ThemeableAttribute(false)]
        public override string AssociatedControlID { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.Web.UI.ThemeableAttribute(false)]
        public string ModelStateKey { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(false)]
        [System.Web.UI.ThemeableAttribute(false)]
        public bool SetFocusOnError { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.Attribute)]
        public override string Text { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } [System.Runtime.CompilerServices.CompilerGeneratedAttribute]set { } }
        protected internal override void OnPreRender(System.EventArgs e) { }
    }
    public partial class ModelMethodContext
    {
        public ModelMethodContext(System.Web.UI.Page page) { }
        public static System.Web.UI.WebControls.ModelMethodContext Current { get { throw null; } }
        public System.Web.ModelBinding.ModelStateDictionary ModelState { get { throw null; } }
        public virtual bool TryUpdateModel<TModel>(TModel model) where TModel : class { throw null; }
        public virtual bool TryUpdateModel<TModel>(TModel model, System.Web.ModelBinding.IValueProvider valueProvider) where TModel : class { throw null; }
        public virtual void UpdateModel<TModel>(TModel model) where TModel : class { }
        public virtual void UpdateModel<TModel>(TModel model, System.Web.ModelBinding.IValueProvider valueProvider) where TModel : class { }
    }
    public partial class MonthChangedEventArgs
    {
        public MonthChangedEventArgs(System.DateTime newDate, System.DateTime previousDate) { }
        public System.DateTime NewDate { get { throw null; } }
        public System.DateTime PreviousDate { get { throw null; } }
    }
    public delegate void MonthChangedEventHandler(object sender, System.Web.UI.WebControls.MonthChangedEventArgs e);
    [System.ComponentModel.DefaultEventAttribute("ActiveViewChanged")]
    [System.ComponentModel.DesignerAttribute("System.Web.UI.Design.WebControls.MultiViewDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.Web.UI.ControlBuilderAttribute(typeof(System.Web.UI.WebControls.MultiViewControlBuilder))]
    [System.Web.UI.ParseChildrenAttribute(typeof(System.Web.UI.WebControls.View))]
    [System.Web.UI.ToolboxDataAttribute("<{0}:MultiView runat=\"server\"></{0}:MultiView>")]
    public partial class MultiView : System.Web.UI.Control
    {
        public static readonly string NextViewCommandName;
        public static readonly string PreviousViewCommandName;
        public static readonly string SwitchViewByIDCommandName;
        public static readonly string SwitchViewByIndexCommandName;
        public MultiView() { }
        [System.ComponentModel.DefaultValueAttribute(-1)]
        public virtual int ActiveViewIndex { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(true)]
        public override bool EnableTheming { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerDefaultProperty)]
        public virtual System.Web.UI.WebControls.ViewCollection Views { get { throw null; } }
        public event System.EventHandler ActiveViewChanged { add { } remove { } }
        protected override void AddParsedSubObject(object obj) { }
        protected override System.Web.UI.ControlCollection CreateControlCollection() { throw null; }
        public System.Web.UI.WebControls.View GetActiveView() { throw null; }
        protected internal override void LoadControlState(object state) { }
        protected virtual void OnActiveViewChanged(System.EventArgs e) { }
        protected override bool OnBubbleEvent(object source, System.EventArgs e) { throw null; }
        protected internal override void OnInit(System.EventArgs e) { }
        protected internal override void RemovedControl(System.Web.UI.Control ctl) { }
        protected internal override void Render(System.Web.UI.HtmlTextWriter writer) { }
        protected internal override object SaveControlState() { throw null; }
        public void SetActiveView(System.Web.UI.WebControls.View view) { }
    }
    public partial class MultiViewControlBuilder : System.Web.UI.ControlBuilder
    {
        public MultiViewControlBuilder() { }
        public override void AppendSubBuilder(System.Web.UI.ControlBuilder subBuilder) { }
    }
    public enum NextPrevFormat
    {
        CustomText = 0,
        FullMonth = 2,
        ShortMonth = 1,
    }
    [System.ComponentModel.DefaultEventAttribute("Selecting")]
    [System.ComponentModel.DefaultPropertyAttribute("TypeName")]
    [System.ComponentModel.DesignerAttribute("System.Web.UI.Design.WebControls.ObjectDataSourceDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.Drawing.ToolboxBitmapAttribute(typeof(System.Web.UI.WebControls.ObjectDataSource))]
    [System.Web.UI.ParseChildrenAttribute(true)]
    [System.Web.UI.PersistChildrenAttribute(false)]
    public partial class ObjectDataSource : System.Web.UI.DataSourceControl
    {
        public ObjectDataSource() { }
        public ObjectDataSource(string typeName, string selectMethod) { }
        [System.ComponentModel.DefaultValueAttribute(0)]
        [System.ComponentModel.TypeConverterAttribute(typeof(System.Web.UI.DataSourceCacheDurationConverter))]
        public virtual int CacheDuration { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.DataSourceCacheExpiry.Absolute)]
        public virtual System.Web.UI.DataSourceCacheExpiry CacheExpirationPolicy { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        public virtual string CacheKeyDependency { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.ConflictOptions.OverwriteChanges)]
        public System.Web.UI.ConflictOptions ConflictDetection { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool ConvertNullToDBNull { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        public string DataObjectTypeName { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        public string DeleteMethod { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.ComponentModel.MergablePropertyAttribute(false)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.ParameterCollection DeleteParameters { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(false)]
        public virtual bool EnableCaching { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool EnablePaging { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        public string FilterExpression { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.ComponentModel.MergablePropertyAttribute(false)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.ParameterCollection FilterParameters { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute("")]
        public string InsertMethod { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.ComponentModel.MergablePropertyAttribute(false)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.ParameterCollection InsertParameters { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute("maximumRows")]
        public string MaximumRowsParameterName { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("{0}")]
        public string OldValuesParameterFormatString { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.ParsingCulture.Invariant)]
        public System.Web.UI.WebControls.ParsingCulture ParsingCulture { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        public string SelectCountMethod { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        public string SelectMethod { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.ComponentModel.MergablePropertyAttribute(false)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.ParameterCollection SelectParameters { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute("")]
        public string SortParameterName { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        public virtual string SqlCacheDependency { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("startRowIndex")]
        public string StartRowIndexParameterName { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        public string TypeName { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        public string UpdateMethod { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.ComponentModel.MergablePropertyAttribute(false)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.ParameterCollection UpdateParameters { get { throw null; } }
        public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Deleted { add { } remove { } }
        public event System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Deleting { add { } remove { } }
        public event System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler Filtering { add { } remove { } }
        public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Inserted { add { } remove { } }
        public event System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Inserting { add { } remove { } }
        public event System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler ObjectCreated { add { } remove { } }
        public event System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler ObjectCreating { add { } remove { } }
        public event System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler ObjectDisposing { add { } remove { } }
        public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Selected { add { } remove { } }
        public event System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler Selecting { add { } remove { } }
        public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Updated { add { } remove { } }
        public event System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Updating { add { } remove { } }
        public int Delete() { throw null; }
        protected override System.Web.UI.DataSourceView GetView(string viewName) { throw null; }
        protected override System.Collections.ICollection GetViewNames() { throw null; }
        public int Insert() { throw null; }
        protected override void LoadViewState(object savedState) { }
        protected internal override void OnInit(System.EventArgs e) { }
        protected override object SaveViewState() { throw null; }
        public System.Collections.IEnumerable Select() { throw null; }
        protected override void TrackViewState() { }
        public int Update() { throw null; }
    }
    public partial class ObjectDataSourceDisposingEventArgs : System.ComponentModel.CancelEventArgs
    {
        public ObjectDataSourceDisposingEventArgs(object objectInstance) { }
        public object ObjectInstance { get { throw null; } }
    }
    public delegate void ObjectDataSourceDisposingEventHandler(object sender, System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs e);
    public partial class ObjectDataSourceEventArgs : System.EventArgs
    {
        public ObjectDataSourceEventArgs(object objectInstance) { }
        public object ObjectInstance { get { throw null; } set { } }
    }
    public partial class ObjectDataSourceFilteringEventArgs : System.ComponentModel.CancelEventArgs
    {
        public ObjectDataSourceFilteringEventArgs(System.Collections.Specialized.IOrderedDictionary parameterValues) { }
        public System.Collections.Specialized.IOrderedDictionary ParameterValues { get { throw null; } }
    }
    public delegate void ObjectDataSourceFilteringEventHandler(object sender, System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs e);
    public partial class ObjectDataSourceMethodEventArgs : System.ComponentModel.CancelEventArgs
    {
        public ObjectDataSourceMethodEventArgs(System.Collections.Specialized.IOrderedDictionary inputParameters) { }
        public System.Collections.Specialized.IOrderedDictionary InputParameters { get { throw null; } }
    }
    public delegate void ObjectDataSourceMethodEventHandler(object sender, System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs e);
    public delegate void ObjectDataSourceObjectEventHandler(object sender, System.Web.UI.WebControls.ObjectDataSourceEventArgs e);
    public partial class ObjectDataSourceSelectingEventArgs : System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs
    {
        public ObjectDataSourceSelectingEventArgs(System.Collections.Specialized.IOrderedDictionary inputParameters, System.Web.UI.DataSourceSelectArguments arguments, bool executingSelectCount) : base (default(System.Collections.Specialized.IOrderedDictionary)) { }
        public System.Web.UI.DataSourceSelectArguments Arguments { get { throw null; } }
        public bool ExecutingSelectCount { get { throw null; } }
    }
    public delegate void ObjectDataSourceSelectingEventHandler(object sender, System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs e);
    public partial class ObjectDataSourceStatusEventArgs : System.EventArgs
    {
        public ObjectDataSourceStatusEventArgs(object returnValue, System.Collections.IDictionary outputParameters) { }
        public ObjectDataSourceStatusEventArgs(object returnValue, System.Collections.IDictionary outputParameters, System.Exception exception) { }
        public int AffectedRows { get { throw null; } set { } }
        public System.Exception Exception { get { throw null; } }
        public bool ExceptionHandled { get { throw null; } set { } }
        public System.Collections.IDictionary OutputParameters { get { throw null; } }
        public object ReturnValue { get { throw null; } }
    }
    public delegate void ObjectDataSourceStatusEventHandler(object sender, System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs e);
    public partial class ObjectDataSourceView : System.Web.UI.DataSourceView, System.Web.UI.IStateManager
    {
        public ObjectDataSourceView(System.Web.UI.WebControls.ObjectDataSource owner, string name, System.Web.HttpContext context) : base (default(System.Web.UI.IDataSource), default(string)) { }
        public override bool CanDelete { get { throw null; } }
        public override bool CanInsert { get { throw null; } }
        public override bool CanPage { get { throw null; } }
        public override bool CanRetrieveTotalRowCount { get { throw null; } }
        public override bool CanSort { get { throw null; } }
        public override bool CanUpdate { get { throw null; } }
        public System.Web.UI.ConflictOptions ConflictDetection { get { throw null; } set { } }
        public bool ConvertNullToDBNull { get { throw null; } set { } }
        public string DataObjectTypeName { get { throw null; } set { } }
        public string DeleteMethod { get { throw null; } set { } }
        public System.Web.UI.WebControls.ParameterCollection DeleteParameters { get { throw null; } }
        public bool EnablePaging { get { throw null; } set { } }
        public string FilterExpression { get { throw null; } set { } }
        public System.Web.UI.WebControls.ParameterCollection FilterParameters { get { throw null; } }
        public string InsertMethod { get { throw null; } set { } }
        public System.Web.UI.WebControls.ParameterCollection InsertParameters { get { throw null; } }
        protected bool IsTrackingViewState { get { throw null; } }
        public string MaximumRowsParameterName { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("{0}")]
        public string OldValuesParameterFormatString { get { throw null; } set { } }
        public System.Web.UI.WebControls.ParsingCulture ParsingCulture { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } [System.Runtime.CompilerServices.CompilerGeneratedAttribute]set { } }
        public string SelectCountMethod { get { throw null; } set { } }
        public string SelectMethod { get { throw null; } set { } }
        public System.Web.UI.WebControls.ParameterCollection SelectParameters { get { throw null; } }
        public string SortParameterName { get { throw null; } set { } }
        public string StartRowIndexParameterName { get { throw null; } set { } }
        bool System.Web.UI.IStateManager.IsTrackingViewState { get { throw null; } }
        public string TypeName { get { throw null; } set { } }
        public string UpdateMethod { get { throw null; } set { } }
        public System.Web.UI.WebControls.ParameterCollection UpdateParameters { get { throw null; } }
        public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Deleted { add { } remove { } }
        public event System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Deleting { add { } remove { } }
        public event System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler Filtering { add { } remove { } }
        public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Inserted { add { } remove { } }
        public event System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Inserting { add { } remove { } }
        public event System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler ObjectCreated { add { } remove { } }
        public event System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler ObjectCreating { add { } remove { } }
        public event System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler ObjectDisposing { add { } remove { } }
        public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Selected { add { } remove { } }
        public event System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler Selecting { add { } remove { } }
        public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Updated { add { } remove { } }
        public event System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Updating { add { } remove { } }
        public int Delete(System.Collections.IDictionary keys, System.Collections.IDictionary oldValues) { throw null; }
        protected override int ExecuteDelete(System.Collections.IDictionary keys, System.Collections.IDictionary oldValues) { throw null; }
        protected override int ExecuteInsert(System.Collections.IDictionary values) { throw null; }
        protected internal override System.Collections.IEnumerable ExecuteSelect(System.Web.UI.DataSourceSelectArguments arguments) { throw null; }
        protected override int ExecuteUpdate(System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues) { throw null; }
        public int Insert(System.Collections.IDictionary values) { throw null; }
        protected virtual void LoadViewState(object savedState) { }
        protected virtual void OnDeleted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs e) { }
        protected virtual void OnDeleting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs e) { }
        protected virtual void OnFiltering(System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs e) { }
        protected virtual void OnInserted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs e) { }
        protected virtual void OnInserting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs e) { }
        protected virtual void OnObjectCreated(System.Web.UI.WebControls.ObjectDataSourceEventArgs e) { }
        protected virtual void OnObjectCreating(System.Web.UI.WebControls.ObjectDataSourceEventArgs e) { }
        protected virtual void OnObjectDisposing(System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs e) { }
        protected virtual void OnSelected(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs e) { }
        protected virtual void OnSelecting(System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs e) { }
        protected virtual void OnUpdated(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs e) { }
        protected virtual void OnUpdating(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs e) { }
        protected virtual object SaveViewState() { throw null; }
        public System.Collections.IEnumerable Select(System.Web.UI.DataSourceSelectArguments arguments) { throw null; }
        void System.Web.UI.IStateManager.LoadViewState(object savedState) { }
        object System.Web.UI.IStateManager.SaveViewState() { throw null; }
        void System.Web.UI.IStateManager.TrackViewState() { }
        protected virtual void TrackViewState() { }
        public int Update(System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues) { throw null; }
    }
    public enum Orientation
    {
        Horizontal = 0,
        Vertical = 1,
    }
    public sealed partial class PagedDataSource : System.Collections.ICollection, System.Collections.IEnumerable, System.ComponentModel.ITypedList
    {
        public PagedDataSource() { }
        public bool AllowCustomPaging { get { throw null; } set { } }
        public bool AllowPaging { get { throw null; } set { } }
        public bool AllowServerPaging { get { throw null; } set { } }
        public int Count { get { throw null; } }
        public int CurrentPageIndex { get { throw null; } set { } }
        public System.Collections.IEnumerable DataSource { get { throw null; } set { } }
        public int DataSourceCount { get { throw null; } }
        public int FirstIndexInPage { get { throw null; } }
        public bool IsCustomPagingEnabled { get { throw null; } }
        public bool IsFirstPage { get { throw null; } }
        public bool IsLastPage { get { throw null; } }
        public bool IsPagingEnabled { get { throw null; } }
        public bool IsReadOnly { get { throw null; } }
        public bool IsServerPagingEnabled { get { throw null; } }
        public bool IsSynchronized { get { throw null; } }
        public int PageCount { get { throw null; } }
        public int PageSize { get { throw null; } set { } }
        public object SyncRoot { get { throw null; } }
        public int VirtualCount { get { throw null; } set { } }
        public void CopyTo(System.Array array, int index) { }
        public System.Collections.IEnumerator GetEnumerator() { throw null; }
        public System.ComponentModel.PropertyDescriptorCollection GetItemProperties(System.ComponentModel.PropertyDescriptor[] listAccessors) { throw null; }
        public string GetListName(System.ComponentModel.PropertyDescriptor[] listAccessors) { throw null; }
    }
    public enum PagerButtons
    {
        NextPrevious = 0,
        NextPreviousFirstLast = 2,
        Numeric = 1,
        NumericFirstLast = 3,
    }
    public enum PagerMode
    {
        NextPrev = 0,
        NumericPages = 1,
    }
    public enum PagerPosition
    {
        Bottom = 0,
        Top = 1,
        TopAndBottom = 2,
    }
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public sealed partial class PagerSettings : System.Web.UI.IStateManager
    {
        public PagerSettings() { }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.UrlPropertyAttribute]
        public string FirstPageImageUrl { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("&lt;&lt;")]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        public string FirstPageText { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.UrlPropertyAttribute]
        public string LastPageImageUrl { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("&gt;&gt;")]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        public string LastPageText { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.PagerButtons.Numeric)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        public System.Web.UI.WebControls.PagerButtons Mode { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.UrlPropertyAttribute]
        public string NextPageImageUrl { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("&gt;")]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        public string NextPageText { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(10)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        public int PageButtonCount { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.PagerPosition.Bottom)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        public System.Web.UI.WebControls.PagerPosition Position { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.UrlPropertyAttribute]
        public string PreviousPageImageUrl { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("&lt;")]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        public string PreviousPageText { get { throw null; } set { } }
        bool System.Web.UI.IStateManager.IsTrackingViewState { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(true)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        public bool Visible { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        public event System.EventHandler PropertyChanged { add { } remove { } }
        void System.Web.UI.IStateManager.LoadViewState(object state) { }
        object System.Web.UI.IStateManager.SaveViewState() { throw null; }
        void System.Web.UI.IStateManager.TrackViewState() { }
        public override string ToString() { throw null; }
    }
    [System.ComponentModel.DesignerAttribute("System.Web.UI.Design.WebControls.PanelContainerDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.Web.UI.ParseChildrenAttribute(false)]
    [System.Web.UI.PersistChildrenAttribute(true)]
    public partial class Panel : System.Web.UI.WebControls.WebControl
    {
        public Panel() { }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.UrlPropertyAttribute]
        public virtual string BackImageUrl { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.Web.UI.ThemeableAttribute(false)]
        public virtual string DefaultButton { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.ContentDirection.NotSet)]
        public virtual System.Web.UI.WebControls.ContentDirection Direction { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string GroupingText { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.HorizontalAlign.NotSet)]
        public virtual System.Web.UI.WebControls.HorizontalAlign HorizontalAlign { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.ScrollBars.None)]
        public virtual System.Web.UI.WebControls.ScrollBars ScrollBars { get { throw null; } set { } }
        public override bool SupportsDisabledAttribute { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(true)]
        public virtual bool Wrap { get { throw null; } set { } }
        protected override void AddAttributesToRender(System.Web.UI.HtmlTextWriter writer) { }
        protected override System.Web.UI.WebControls.Style CreateControlStyle() { throw null; }
        public override void RenderBeginTag(System.Web.UI.HtmlTextWriter writer) { }
        public override void RenderEndTag(System.Web.UI.HtmlTextWriter writer) { }
    }
    public partial class PanelStyle : System.Web.UI.WebControls.Style
    {
        public PanelStyle(System.Web.UI.StateBag bag) { }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.Web.UI.UrlPropertyAttribute]
        public virtual string BackImageUrl { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        public virtual System.Web.UI.WebControls.ContentDirection Direction { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        public virtual System.Web.UI.WebControls.HorizontalAlign HorizontalAlign { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        public virtual System.Web.UI.WebControls.ScrollBars ScrollBars { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        public virtual bool Wrap { get { throw null; } set { } }
        public override void CopyFrom(System.Web.UI.WebControls.Style s) { }
        public override void MergeWith(System.Web.UI.WebControls.Style s) { }
        public override void Reset() { }
    }
    [System.ComponentModel.DefaultPropertyAttribute("DefaultValue")]
    public partial class Parameter : System.ICloneable, System.Web.UI.IStateManager
    {
        public Parameter() { }
        public Parameter(string name) { }
        public Parameter(string name, System.Data.DbType dbType) { }
        public Parameter(string name, System.Data.DbType dbType, string defaultValue) { }
        public Parameter(string name, System.TypeCode type) { }
        public Parameter(string name, System.TypeCode type, string defaultValue) { }
        protected Parameter(System.Web.UI.WebControls.Parameter original) { }
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool ConvertEmptyStringToNull { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(System.Data.DbType.Object)]
        public System.Data.DbType DbType { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        public string DefaultValue { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(System.Data.ParameterDirection.Input)]
        public System.Data.ParameterDirection Direction { get { throw null; } set { } }
        protected bool IsTrackingViewState { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute("")]
        public string Name { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int Size { get { throw null; } set { } }
        bool System.Web.UI.IStateManager.IsTrackingViewState { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(System.TypeCode.Empty)]
        public System.TypeCode Type { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        protected System.Web.UI.StateBag ViewState { get { throw null; } }
        protected virtual System.Web.UI.WebControls.Parameter Clone() { throw null; }
        public static System.TypeCode ConvertDbTypeToTypeCode(System.Data.DbType dbType) { throw null; }
        public static System.Data.DbType ConvertTypeCodeToDbType(System.TypeCode typeCode) { throw null; }
        protected internal virtual object Evaluate(System.Web.HttpContext context, System.Web.UI.Control control) { throw null; }
        public System.Data.DbType GetDatabaseType() { throw null; }
        protected virtual void LoadViewState(object savedState) { }
        protected void OnParameterChanged() { }
        protected virtual object SaveViewState() { throw null; }
        protected internal virtual void SetDirty() { }
        object System.ICloneable.Clone() { throw null; }
        void System.Web.UI.IStateManager.LoadViewState(object savedState) { }
        object System.Web.UI.IStateManager.SaveViewState() { throw null; }
        void System.Web.UI.IStateManager.TrackViewState() { }
        public override string ToString() { throw null; }
        protected virtual void TrackViewState() { }
    }
    [System.ComponentModel.EditorAttribute("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
    public partial class ParameterCollection : System.Web.UI.StateManagedCollection
    {
        public ParameterCollection() { }
        public System.Web.UI.WebControls.Parameter this[int index] { get { throw null; } set { } }
        public System.Web.UI.WebControls.Parameter this[string name] { get { throw null; } set { } }
        public event System.EventHandler ParametersChanged { add { } remove { } }
        public int Add(string name, System.Data.DbType dbType, string value) { throw null; }
        public int Add(string name, string value) { throw null; }
        public int Add(string name, System.TypeCode type, string value) { throw null; }
        public int Add(System.Web.UI.WebControls.Parameter parameter) { throw null; }
        public bool Contains(System.Web.UI.WebControls.Parameter parameter) { throw null; }
        public void CopyTo(System.Web.UI.WebControls.Parameter[] parameterArray, int index) { }
        protected override object CreateKnownType(int index) { throw null; }
        protected override System.Type[] GetKnownTypes() { throw null; }
        public System.Collections.Specialized.IOrderedDictionary GetValues(System.Web.HttpContext context, System.Web.UI.Control control) { throw null; }
        public int IndexOf(System.Web.UI.WebControls.Parameter parameter) { throw null; }
        public void Insert(int index, System.Web.UI.WebControls.Parameter parameter) { }
        protected override void OnClearComplete() { }
        protected override void OnInsert(int index, object value) { }
        protected override void OnInsertComplete(int index, object value) { }
        protected virtual void OnParametersChanged(System.EventArgs e) { }
        protected override void OnRemoveComplete(int index, object value) { }
        protected override void OnValidate(object o) { }
        public void Remove(System.Web.UI.WebControls.Parameter parameter) { }
        public void RemoveAt(int index) { }
        protected override void SetDirtyObject(object o) { }
        public void UpdateValues(System.Web.HttpContext context, System.Web.UI.Control control) { }
    }
    public enum ParsingCulture
    {
        Current = 1,
        Invariant = 0,
    }
    [System.ComponentModel.BindableAttribute(false)]
    [System.ComponentModel.DefaultEventAttribute("SendingMail")]
    [System.ComponentModel.DesignerAttribute("System.Web.UI.Design.WebControls.PasswordRecoveryDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    public partial class PasswordRecovery : System.Web.UI.WebControls.CompositeControl
    {
        public static readonly string SubmitButtonCommandName;
        public PasswordRecovery() { }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Web.UI.FilterableAttribute(false)]
        [System.Web.UI.ThemeableAttribute(false)]
        public virtual string Answer { get { throw null; } }
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string AnswerLabelText { get { throw null; } set { } }
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string AnswerRequiredErrorMessage { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(1)]
        public virtual int BorderPadding { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.TableItemStyle FailureTextStyle { get { throw null; } }
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string GeneralFailureText { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.UrlPropertyAttribute]
        public virtual string HelpPageIconUrl { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string HelpPageText { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.UrlPropertyAttribute]
        public virtual string HelpPageUrl { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.TableItemStyle HyperLinkStyle { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.TableItemStyle InstructionTextStyle { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.TableItemStyle LabelStyle { get { throw null; } }
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        [System.Web.UI.ThemeableAttribute(false)]
        public System.Web.UI.WebControls.MailDefinition MailDefinition { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.Web.UI.ThemeableAttribute(false)]
        public virtual string MembershipProvider { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Web.UI.FilterableAttribute(false)]
        [System.Web.UI.ThemeableAttribute(false)]
        public virtual string Question { get { throw null; } }
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string QuestionFailureText { get { throw null; } set { } }
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string QuestionInstructionText { get { throw null; } set { } }
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string QuestionLabelText { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        [System.Web.UI.TemplateContainerAttribute(typeof(System.Web.UI.WebControls.PasswordRecovery))]
        public virtual System.Web.UI.ITemplate QuestionTemplate { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public System.Web.UI.Control QuestionTemplateContainer { get { throw null; } }
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string QuestionTitleText { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(true)]
        public virtual bool RenderOuterTable { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.UrlPropertyAttribute]
        public virtual string SubmitButtonImageUrl { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.Style SubmitButtonStyle { get { throw null; } }
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string SubmitButtonText { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.ButtonType.Button)]
        public virtual System.Web.UI.WebControls.ButtonType SubmitButtonType { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.ThemeableAttribute(false)]
        [System.Web.UI.UrlPropertyAttribute]
        public virtual string SuccessPageUrl { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        [System.Web.UI.TemplateContainerAttribute(typeof(System.Web.UI.WebControls.PasswordRecovery))]
        public virtual System.Web.UI.ITemplate SuccessTemplate { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public System.Web.UI.Control SuccessTemplateContainer { get { throw null; } }
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string SuccessText { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.TableItemStyle SuccessTextStyle { get { throw null; } }
        protected override System.Web.UI.HtmlTextWriterTag TagKey { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.Style TextBoxStyle { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.LoginTextLayout.TextOnLeft)]
        public virtual System.Web.UI.WebControls.LoginTextLayout TextLayout { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.TableItemStyle TitleTextStyle { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string UserName { get { throw null; } set { } }
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string UserNameFailureText { get { throw null; } set { } }
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string UserNameInstructionText { get { throw null; } set { } }
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string UserNameLabelText { get { throw null; } set { } }
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string UserNameRequiredErrorMessage { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        [System.Web.UI.TemplateContainerAttribute(typeof(System.Web.UI.WebControls.PasswordRecovery))]
        public virtual System.Web.UI.ITemplate UserNameTemplate { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public System.Web.UI.Control UserNameTemplateContainer { get { throw null; } }
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string UserNameTitleText { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.Style ValidatorTextStyle { get { throw null; } }
        public event System.EventHandler AnswerLookupError { add { } remove { } }
        public event System.Web.UI.WebControls.MailMessageEventHandler SendingMail { add { } remove { } }
        public event System.Web.UI.WebControls.SendMailErrorEventHandler SendMailError { add { } remove { } }
        public event System.EventHandler UserLookupError { add { } remove { } }
        public event System.Web.UI.WebControls.LoginCancelEventHandler VerifyingAnswer { add { } remove { } }
        public event System.Web.UI.WebControls.LoginCancelEventHandler VerifyingUser { add { } remove { } }
        protected internal override void CreateChildControls() { }
        protected internal override void LoadControlState(object savedState) { }
        protected override void LoadViewState(object savedState) { }
        protected virtual void OnAnswerLookupError(System.EventArgs e) { }
        protected override bool OnBubbleEvent(object source, System.EventArgs e) { throw null; }
        protected internal override void OnInit(System.EventArgs e) { }
        protected internal override void OnPreRender(System.EventArgs e) { }
        protected virtual void OnSendingMail(System.Web.UI.WebControls.MailMessageEventArgs e) { }
        protected virtual void OnSendMailError(System.Web.UI.WebControls.SendMailErrorEventArgs e) { }
        protected virtual void OnUserLookupError(System.EventArgs e) { }
        protected virtual void OnVerifyingAnswer(System.Web.UI.WebControls.LoginCancelEventArgs e) { }
        protected virtual void OnVerifyingUser(System.Web.UI.WebControls.LoginCancelEventArgs e) { }
        protected internal override void Render(System.Web.UI.HtmlTextWriter writer) { }
        protected internal override object SaveControlState() { throw null; }
        protected override object SaveViewState() { throw null; }
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, Unrestricted=true)]
        protected override void SetDesignModeState(System.Collections.IDictionary data) { }
        protected override void TrackViewState() { }
    }
    public enum PathDirection
    {
        CurrentToRoot = 1,
        RootToCurrent = 0,
    }
    [System.Web.UI.ControlBuilderAttribute(typeof(System.Web.UI.WebControls.PlaceHolderControlBuilder))]
    public partial class PlaceHolder : System.Web.UI.Control
    {
        public PlaceHolder() { }
        [System.ComponentModel.BrowsableAttribute(true)]
        public override bool EnableTheming { get { throw null; } set { } }
    }
    public partial class PlaceHolderControlBuilder : System.Web.UI.ControlBuilder
    {
        public PlaceHolderControlBuilder() { }
        public override bool AllowWhitespaceLiterals() { throw null; }
    }
    public sealed partial class PolygonHotSpot : System.Web.UI.WebControls.HotSpot
    {
        public PolygonHotSpot() { }
        [System.ComponentModel.DefaultValueAttribute("")]
        public string Coordinates { get { throw null; } set { } }
        protected internal override string MarkupName { get { throw null; } }
        public override string GetCoordinates() { throw null; }
    }
    [System.ComponentModel.DefaultPropertyAttribute("PropertyName")]
    public partial class ProfileParameter : System.Web.UI.WebControls.Parameter
    {
        public ProfileParameter() { }
        public ProfileParameter(string name, System.Data.DbType dbType, string propertyName) { }
        public ProfileParameter(string name, string propertyName) { }
        public ProfileParameter(string name, System.TypeCode type, string propertyName) { }
        protected ProfileParameter(System.Web.UI.WebControls.ProfileParameter original) { }
        [System.ComponentModel.DefaultValueAttribute("")]
        public string PropertyName { get { throw null; } set { } }
        protected override System.Web.UI.WebControls.Parameter Clone() { throw null; }
        protected internal override object Evaluate(System.Web.HttpContext context, System.Web.UI.Control control) { throw null; }
    }
    public static partial class QueryExtensions
    {
        public static System.Linq.IQueryable<T> SortBy<T>(this System.Linq.IQueryable<T> source, string sortExpression) where T : class { throw null; }
    }
    [System.ComponentModel.DefaultPropertyAttribute("QueryStringField")]
    public partial class QueryStringParameter : System.Web.UI.WebControls.Parameter
    {
        public QueryStringParameter() { }
        public QueryStringParameter(string name, System.Data.DbType dbType, string queryStringField) { }
        public QueryStringParameter(string name, string queryStringField) { }
        public QueryStringParameter(string name, System.TypeCode type, string queryStringField) { }
        protected QueryStringParameter(System.Web.UI.WebControls.QueryStringParameter original) { }
        [System.ComponentModel.DefaultValueAttribute("")]
        public string QueryStringField { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool ValidateInput { get { throw null; } set { } }
        protected override System.Web.UI.WebControls.Parameter Clone() { throw null; }
        protected internal override object Evaluate(System.Web.HttpContext context, System.Web.UI.Control control) { throw null; }
    }
    [System.ComponentModel.DesignerAttribute("System.Web.UI.Design.WebControls.CheckBoxDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.Web.UI.SupportsEventValidationAttribute]
    public partial class RadioButton : System.Web.UI.WebControls.CheckBox, System.Web.UI.IPostBackDataHandler
    {
        public RadioButton() { }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.Web.UI.ThemeableAttribute(false)]
        public virtual string GroupName { get { throw null; } set { } }
        protected override bool LoadPostData(string postDataKey, System.Collections.Specialized.NameValueCollection postCollection) { throw null; }
        protected internal override void OnPreRender(System.EventArgs e) { }
        protected override void RaisePostDataChangedEvent() { }
        bool System.Web.UI.IPostBackDataHandler.LoadPostData(string postDataKey, System.Collections.Specialized.NameValueCollection postCollection) { throw null; }
        void System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent() { }
    }
    [System.Web.UI.SupportsEventValidationAttribute]
    [System.Web.UI.ValidationPropertyAttribute("SelectedItem")]
    public partial class RadioButtonList : System.Web.UI.WebControls.ListControl, System.Web.UI.INamingContainer, System.Web.UI.IPostBackDataHandler, System.Web.UI.WebControls.IRepeatInfoUser
    {
        public RadioButtonList() { }
        [System.ComponentModel.DefaultValueAttribute(-1)]
        public virtual int CellPadding { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(-1)]
        public virtual int CellSpacing { get { throw null; } set { } }
        protected virtual bool HasFooter { get { throw null; } }
        protected virtual bool HasHeader { get { throw null; } }
        protected virtual bool HasSeparators { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(false)]
        [System.Web.UI.ThemeableAttribute(true)]
        public virtual bool RenderWhenDataEmpty { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(0)]
        public virtual int RepeatColumns { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.RepeatDirection.Vertical)]
        public virtual System.Web.UI.WebControls.RepeatDirection RepeatDirection { get { throw null; } set { } }
        protected virtual int RepeatedItemCount { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.RepeatLayout.Table)]
        public virtual System.Web.UI.WebControls.RepeatLayout RepeatLayout { get { throw null; } set { } }
        bool System.Web.UI.WebControls.IRepeatInfoUser.HasFooter { get { throw null; } }
        bool System.Web.UI.WebControls.IRepeatInfoUser.HasHeader { get { throw null; } }
        bool System.Web.UI.WebControls.IRepeatInfoUser.HasSeparators { get { throw null; } }
        int System.Web.UI.WebControls.IRepeatInfoUser.RepeatedItemCount { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.TextAlign.Right)]
        public virtual System.Web.UI.WebControls.TextAlign TextAlign { get { throw null; } set { } }
        protected override System.Web.UI.WebControls.Style CreateControlStyle() { throw null; }
        protected override System.Web.UI.Control FindControl(string id, int pathOffset) { throw null; }
        protected virtual System.Web.UI.WebControls.Style GetItemStyle(System.Web.UI.WebControls.ListItemType itemType, int repeatIndex) { throw null; }
        protected virtual bool LoadPostData(string postDataKey, System.Collections.Specialized.NameValueCollection postCollection) { throw null; }
        protected internal override void OnInit(System.EventArgs e) { }
        protected virtual void RaisePostDataChangedEvent() { }
        protected internal override void Render(System.Web.UI.HtmlTextWriter writer) { }
        protected virtual void RenderItem(System.Web.UI.WebControls.ListItemType itemType, int repeatIndex, System.Web.UI.WebControls.RepeatInfo repeatInfo, System.Web.UI.HtmlTextWriter writer) { }
        bool System.Web.UI.IPostBackDataHandler.LoadPostData(string postDataKey, System.Collections.Specialized.NameValueCollection postCollection) { throw null; }
        void System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent() { }
        System.Web.UI.WebControls.Style System.Web.UI.WebControls.IRepeatInfoUser.GetItemStyle(System.Web.UI.WebControls.ListItemType itemType, int repeatIndex) { throw null; }
        void System.Web.UI.WebControls.IRepeatInfoUser.RenderItem(System.Web.UI.WebControls.ListItemType itemType, int repeatIndex, System.Web.UI.WebControls.RepeatInfo repeatInfo, System.Web.UI.HtmlTextWriter writer) { }
    }
    [System.Web.UI.ToolboxDataAttribute("<{0}:RangeValidator runat=\"server\" ErrorMessage=\"RangeValidator\"></{0}:RangeValidator>")]
    public partial class RangeValidator : System.Web.UI.WebControls.BaseCompareValidator
    {
        public RangeValidator() { }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.Web.UI.ThemeableAttribute(false)]
        public string MaximumValue { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.Web.UI.ThemeableAttribute(false)]
        public string MinimumValue { get { throw null; } set { } }
        protected override void AddAttributesToRender(System.Web.UI.HtmlTextWriter writer) { }
        protected override bool ControlPropertiesValid() { throw null; }
        protected override bool EvaluateIsValid() { throw null; }
    }
    public sealed partial class RectangleHotSpot : System.Web.UI.WebControls.HotSpot
    {
        public RectangleHotSpot() { }
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int Bottom { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int Left { get { throw null; } set { } }
        protected internal override string MarkupName { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int Right { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int Top { get { throw null; } set { } }
        public override string GetCoordinates() { throw null; }
    }
    [System.Web.UI.ToolboxDataAttribute("<{0}:RegularExpressionValidator runat=\"server\" ErrorMessage=\"RegularExpressionValidator\"></{0}:RegularExpressionValidator>")]
    public partial class RegularExpressionValidator : System.Web.UI.WebControls.BaseValidator
    {
        public RegularExpressionValidator() { }
        public System.Nullable<int> MatchTimeout { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } [System.Runtime.CompilerServices.CompilerGeneratedAttribute]set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.WebControls.RegexTypeEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.ThemeableAttribute(false)]
        public string ValidationExpression { get { throw null; } set { } }
        protected override void AddAttributesToRender(System.Web.UI.HtmlTextWriter writer) { }
        protected override bool EvaluateIsValid() { throw null; }
    }
    public enum RepeatDirection
    {
        Horizontal = 0,
        Vertical = 1,
    }
    [System.ComponentModel.DefaultEventAttribute("ItemCommand")]
    [System.ComponentModel.DefaultPropertyAttribute("DataSource")]
    [System.ComponentModel.DesignerAttribute("System.Web.UI.Design.WebControls.RepeaterDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.Web.UI.ParseChildrenAttribute(true)]
    [System.Web.UI.PersistChildrenAttribute(false)]
    public partial class Repeater : System.Web.UI.Control, System.Web.UI.INamingContainer
    {
        public Repeater() { }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        [System.Web.UI.TemplateContainerAttribute(typeof(System.Web.UI.WebControls.RepeaterItem))]
        public virtual System.Web.UI.ITemplate AlternatingItemTemplate { get { throw null; } set { } }
        public override System.Web.UI.ControlCollection Controls { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute("")]
        public virtual string DataMember { get { throw null; } set { } }
        [System.ComponentModel.BindableAttribute(true)]
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public virtual object DataSource { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.Web.UI.IDReferencePropertyAttribute(typeof(System.Web.UI.DataSourceControl))]
        public virtual string DataSourceID { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(true)]
        public override bool EnableTheming { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        [System.Web.UI.TemplateContainerAttribute(typeof(System.Web.UI.WebControls.RepeaterItem))]
        public virtual System.Web.UI.ITemplate FooterTemplate { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        [System.Web.UI.TemplateContainerAttribute(typeof(System.Web.UI.WebControls.RepeaterItem))]
        public virtual System.Web.UI.ITemplate HeaderTemplate { get { throw null; } set { } }
        protected bool Initialized { get { throw null; } }
        protected bool IsBoundUsingDataSourceID { get { throw null; } }
        protected bool IsDataBindingAutomatic { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public virtual System.Web.UI.WebControls.RepeaterItemCollection Items { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        [System.Web.UI.TemplateContainerAttribute(typeof(System.Web.UI.WebControls.RepeaterItem))]
        public virtual System.Web.UI.ITemplate ItemTemplate { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.Web.UI.ThemeableAttribute(false)]
        public virtual string ItemType { get { throw null; } set { } }
        protected bool RequiresDataBinding { get { throw null; } set { } }
        protected System.Web.UI.DataSourceSelectArguments SelectArguments { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.Web.UI.ThemeableAttribute(false)]
        public virtual string SelectMethod { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        [System.Web.UI.TemplateContainerAttribute(typeof(System.Web.UI.WebControls.RepeaterItem))]
        public virtual System.Web.UI.ITemplate SeparatorTemplate { get { throw null; } set { } }
        public event System.Web.UI.WebControls.CallingDataMethodsEventHandler CallingDataMethods { add { } remove { } }
        public event System.Web.UI.WebControls.CreatingModelDataSourceEventHandler CreatingModelDataSource { add { } remove { } }
        public event System.Web.UI.WebControls.RepeaterCommandEventHandler ItemCommand { add { } remove { } }
        public event System.Web.UI.WebControls.RepeaterItemEventHandler ItemCreated { add { } remove { } }
        public event System.Web.UI.WebControls.RepeaterItemEventHandler ItemDataBound { add { } remove { } }
        protected internal override void CreateChildControls() { }
        protected virtual void CreateControlHierarchy(bool useDataSource) { }
        protected virtual System.Web.UI.DataSourceSelectArguments CreateDataSourceSelectArguments() { throw null; }
        protected virtual System.Web.UI.WebControls.RepeaterItem CreateItem(int itemIndex, System.Web.UI.WebControls.ListItemType itemType) { throw null; }
        public override void DataBind() { }
        protected void EnsureDataBound() { }
        protected virtual System.Collections.IEnumerable GetData() { throw null; }
        protected virtual void InitializeItem(System.Web.UI.WebControls.RepeaterItem item) { }
        protected override void LoadViewState(object savedState) { }
        protected override bool OnBubbleEvent(object sender, System.EventArgs e) { throw null; }
        protected virtual void OnCreatingModelDataSource(System.Web.UI.WebControls.CreatingModelDataSourceEventArgs e) { }
        protected override void OnDataBinding(System.EventArgs e) { }
        protected virtual void OnDataPropertyChanged() { }
        protected virtual void OnDataSourceViewChanged(object sender, System.EventArgs e) { }
        protected internal override void OnInit(System.EventArgs e) { }
        protected virtual void OnItemCommand(System.Web.UI.WebControls.RepeaterCommandEventArgs e) { }
        protected virtual void OnItemCreated(System.Web.UI.WebControls.RepeaterItemEventArgs e) { }
        protected virtual void OnItemDataBound(System.Web.UI.WebControls.RepeaterItemEventArgs e) { }
        protected internal override void OnLoad(System.EventArgs e) { }
        protected internal override void OnPreRender(System.EventArgs e) { }
        protected override object SaveViewState() { throw null; }
        protected override void TrackViewState() { }
    }
    public partial class RepeaterCommandEventArgs : System.Web.UI.WebControls.CommandEventArgs
    {
        public RepeaterCommandEventArgs(System.Web.UI.WebControls.RepeaterItem item, object commandSource, System.Web.UI.WebControls.CommandEventArgs originalArgs) : base (default(System.Web.UI.WebControls.CommandEventArgs)) { }
        public object CommandSource { get { throw null; } }
        public System.Web.UI.WebControls.RepeaterItem Item { get { throw null; } }
    }
    public delegate void RepeaterCommandEventHandler(object source, System.Web.UI.WebControls.RepeaterCommandEventArgs e);
    [System.ComponentModel.ToolboxItemAttribute(false)]
    public partial class RepeaterItem : System.Web.UI.Control, System.Web.UI.IDataItemContainer, System.Web.UI.INamingContainer
    {
        public RepeaterItem(int itemIndex, System.Web.UI.WebControls.ListItemType itemType) { }
        public virtual object DataItem { get { throw null; } set { } }
        public virtual int ItemIndex { get { throw null; } }
        public virtual System.Web.UI.WebControls.ListItemType ItemType { get { throw null; } }
        int System.Web.UI.IDataItemContainer.DataItemIndex { get { throw null; } }
        int System.Web.UI.IDataItemContainer.DisplayIndex { get { throw null; } }
        protected override bool OnBubbleEvent(object source, System.EventArgs e) { throw null; }
    }
    public sealed partial class RepeaterItemCollection : System.Collections.ICollection, System.Collections.IEnumerable
    {
        public RepeaterItemCollection(System.Collections.ArrayList items) { }
        public int Count { get { throw null; } }
        public bool IsReadOnly { get { throw null; } }
        public bool IsSynchronized { get { throw null; } }
        public System.Web.UI.WebControls.RepeaterItem this[int index] { get { throw null; } }
        public object SyncRoot { get { throw null; } }
        public void CopyTo(System.Array array, int index) { }
        public System.Collections.IEnumerator GetEnumerator() { throw null; }
    }
    public partial class RepeaterItemEventArgs : System.EventArgs
    {
        public RepeaterItemEventArgs(System.Web.UI.WebControls.RepeaterItem item) { }
        public System.Web.UI.WebControls.RepeaterItem Item { get { throw null; } }
    }
    public delegate void RepeaterItemEventHandler(object sender, System.Web.UI.WebControls.RepeaterItemEventArgs e);
    public sealed partial class RepeatInfo
    {
        public RepeatInfo() { }
        public string Caption { get { throw null; } set { } }
        public System.Web.UI.WebControls.TableCaptionAlign CaptionAlign { get { throw null; } set { } }
        public bool OuterTableImplied { get { throw null; } set { } }
        public int RepeatColumns { get { throw null; } set { } }
        public System.Web.UI.WebControls.RepeatDirection RepeatDirection { get { throw null; } set { } }
        public System.Web.UI.WebControls.RepeatLayout RepeatLayout { get { throw null; } set { } }
        public bool UseAccessibleHeader { get { throw null; } set { } }
        public void RenderRepeater(System.Web.UI.HtmlTextWriter writer, System.Web.UI.WebControls.IRepeatInfoUser user, System.Web.UI.WebControls.Style controlStyle, System.Web.UI.WebControls.WebControl baseControl) { }
    }
    public enum RepeatLayout
    {
        Flow = 1,
        OrderedList = 3,
        Table = 0,
        UnorderedList = 2,
    }
    [System.Web.UI.ToolboxDataAttribute("<{0}:RequiredFieldValidator runat=\"server\" ErrorMessage=\"RequiredFieldValidator\"></{0}:RequiredFieldValidator>")]
    public partial class RequiredFieldValidator : System.Web.UI.WebControls.BaseValidator
    {
        public RequiredFieldValidator() { }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.Web.UI.ThemeableAttribute(false)]
        public string InitialValue { get { throw null; } set { } }
        protected override void AddAttributesToRender(System.Web.UI.HtmlTextWriter writer) { }
        protected override bool EvaluateIsValid() { throw null; }
    }
    public sealed partial class RoleGroup
    {
        public RoleGroup() { }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        [System.Web.UI.TemplateContainerAttribute(typeof(System.Web.UI.WebControls.LoginView))]
        public System.Web.UI.ITemplate ContentTemplate { get { throw null; } set { } }
        [System.ComponentModel.TypeConverterAttribute(typeof(System.Web.UI.WebControls.StringArrayConverter))]
        public string[] Roles { get { throw null; } set { } }
        public bool ContainsUser(System.Security.Principal.IPrincipal user) { throw null; }
        public override string ToString() { throw null; }
    }
    [System.ComponentModel.EditorAttribute("System.Web.UI.Design.WebControls.RoleGroupCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
    public sealed partial class RoleGroupCollection : System.Collections.CollectionBase
    {
        public RoleGroupCollection() { }
        public System.Web.UI.WebControls.RoleGroup this[int index] { get { throw null; } }
        public void Add(System.Web.UI.WebControls.RoleGroup group) { }
        public bool Contains(System.Web.UI.WebControls.RoleGroup group) { throw null; }
        public void CopyTo(System.Web.UI.WebControls.RoleGroup[] array, int index) { }
        public System.Web.UI.WebControls.RoleGroup GetMatchingRoleGroup(System.Security.Principal.IPrincipal user) { throw null; }
        public int IndexOf(System.Web.UI.WebControls.RoleGroup group) { throw null; }
        public void Insert(int index, System.Web.UI.WebControls.RoleGroup group) { }
        protected override void OnValidate(object value) { }
        public void Remove(System.Web.UI.WebControls.RoleGroup group) { }
    }
    [System.ComponentModel.DefaultPropertyAttribute("RouteKey")]
    public partial class RouteParameter : System.Web.UI.WebControls.Parameter
    {
        public RouteParameter() { }
        public RouteParameter(string name, System.Data.DbType dbType, string routeKey) { }
        public RouteParameter(string name, string routeKey) { }
        public RouteParameter(string name, System.TypeCode type, string routeKey) { }
        protected RouteParameter(System.Web.UI.WebControls.RouteParameter original) { }
        [System.ComponentModel.DefaultValueAttribute("")]
        public string RouteKey { get { throw null; } set { } }
        protected override System.Web.UI.WebControls.Parameter Clone() { throw null; }
        protected internal override object Evaluate(System.Web.HttpContext context, System.Web.UI.Control control) { throw null; }
    }
    [System.FlagsAttribute]
    public enum ScrollBars
    {
        Auto = 4,
        Both = 3,
        Horizontal = 1,
        None = 0,
        Vertical = 2,
    }
    public sealed partial class SelectedDatesCollection : System.Collections.ICollection, System.Collections.IEnumerable
    {
        public SelectedDatesCollection(System.Collections.ArrayList dateList) { }
        public int Count { get { throw null; } }
        public bool IsReadOnly { get { throw null; } }
        public bool IsSynchronized { get { throw null; } }
        public System.DateTime this[int index] { get { throw null; } }
        public object SyncRoot { get { throw null; } }
        public void Add(System.DateTime date) { }
        public void Clear() { }
        public bool Contains(System.DateTime date) { throw null; }
        public void CopyTo(System.Array array, int index) { }
        public System.Collections.IEnumerator GetEnumerator() { throw null; }
        public void Remove(System.DateTime date) { }
        public void SelectRange(System.DateTime fromDate, System.DateTime toDate) { }
    }
    public sealed partial class SelectResult
    {
        public SelectResult(int totalRowCount, System.Collections.IEnumerable results) { }
        public System.Collections.IEnumerable Results { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } }
        public int TotalRowCount { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } }
    }
    public partial class SendMailErrorEventArgs : System.EventArgs
    {
        public SendMailErrorEventArgs(System.Exception e) { }
        public System.Exception Exception { get { throw null; } set { } }
        public bool Handled { get { throw null; } set { } }
    }
    public delegate void SendMailErrorEventHandler(object sender, System.Web.UI.WebControls.SendMailErrorEventArgs e);
    public partial class ServerValidateEventArgs : System.EventArgs
    {
        public ServerValidateEventArgs(string value, bool isValid) { }
        public bool IsValid { get { throw null; } set { } }
        public string Value { get { throw null; } }
    }
    public delegate void ServerValidateEventHandler(object source, System.Web.UI.WebControls.ServerValidateEventArgs args);
    [System.ComponentModel.DefaultPropertyAttribute("SessionField")]
    public partial class SessionParameter : System.Web.UI.WebControls.Parameter
    {
        public SessionParameter() { }
        public SessionParameter(string name, System.Data.DbType dbType, string sessionField) { }
        public SessionParameter(string name, string sessionField) { }
        public SessionParameter(string name, System.TypeCode type, string sessionField) { }
        protected SessionParameter(System.Web.UI.WebControls.SessionParameter original) { }
        [System.ComponentModel.DefaultValueAttribute("")]
        public string SessionField { get { throw null; } set { } }
        protected override System.Web.UI.WebControls.Parameter Clone() { throw null; }
        protected internal override object Evaluate(System.Web.HttpContext context, System.Web.UI.Control control) { throw null; }
    }
    [System.ComponentModel.DesignerAttribute("System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.Drawing.ToolboxBitmapAttribute(typeof(System.Web.UI.WebControls.SiteMapDataSource))]
    [System.Web.UI.ParseChildrenAttribute(true)]
    [System.Web.UI.PersistChildrenAttribute(false)]
    public partial class SiteMapDataSource : System.Web.UI.HierarchicalDataSourceControl, System.ComponentModel.IListSource, System.Web.UI.IDataSource
    {
        public SiteMapDataSource() { }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public virtual bool ContainsListCollection { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public System.Web.SiteMapProvider Provider { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(true)]
        public virtual bool ShowStartingNode { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        public virtual string SiteMapProvider { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(false)]
        public virtual bool StartFromCurrentNode { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(0)]
        public virtual int StartingNodeOffset { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.UrlPropertyAttribute]
        public virtual string StartingNodeUrl { get { throw null; } set { } }
        bool System.ComponentModel.IListSource.ContainsListCollection { get { throw null; } }
        event System.EventHandler System.Web.UI.IDataSource.DataSourceChanged { add { } remove { } }
        protected override System.Web.UI.HierarchicalDataSourceView GetHierarchicalView(string viewPath) { throw null; }
        public virtual System.Collections.IList GetList() { throw null; }
        public virtual System.Web.UI.DataSourceView GetView(string viewName) { throw null; }
        public virtual System.Collections.ICollection GetViewNames() { throw null; }
        System.Collections.IList System.ComponentModel.IListSource.GetList() { throw null; }
        System.Web.UI.DataSourceView System.Web.UI.IDataSource.GetView(string viewName) { throw null; }
        System.Collections.ICollection System.Web.UI.IDataSource.GetViewNames() { throw null; }
    }
    public partial class SiteMapDataSourceView : System.Web.UI.DataSourceView
    {
        public SiteMapDataSourceView(System.Web.UI.WebControls.SiteMapDataSource owner, string name, System.Web.SiteMapNode node) : base (default(System.Web.UI.IDataSource), default(string)) { }
        public SiteMapDataSourceView(System.Web.UI.WebControls.SiteMapDataSource owner, string name, System.Web.SiteMapNodeCollection collection) : base (default(System.Web.UI.IDataSource), default(string)) { }
        protected internal override System.Collections.IEnumerable ExecuteSelect(System.Web.UI.DataSourceSelectArguments arguments) { throw null; }
        protected override void OnDataSourceViewChanged(System.EventArgs e) { }
        public System.Collections.IEnumerable Select(System.Web.UI.DataSourceSelectArguments arguments) { throw null; }
    }
    public partial class SiteMapHierarchicalDataSourceView : System.Web.UI.HierarchicalDataSourceView
    {
        public SiteMapHierarchicalDataSourceView(System.Web.SiteMapNode node) { }
        public SiteMapHierarchicalDataSourceView(System.Web.SiteMapNodeCollection collection) { }
        public override System.Web.UI.IHierarchicalEnumerable Select() { throw null; }
    }
    [System.ComponentModel.ToolboxItemAttribute(false)]
    public partial class SiteMapNodeItem : System.Web.UI.WebControls.WebControl, System.Web.UI.IDataItemContainer, System.Web.UI.INamingContainer
    {
        public SiteMapNodeItem(int itemIndex, System.Web.UI.WebControls.SiteMapNodeItemType itemType) { }
        public virtual int ItemIndex { get { throw null; } }
        public virtual System.Web.UI.WebControls.SiteMapNodeItemType ItemType { get { throw null; } }
        public virtual System.Web.SiteMapNode SiteMapNode { get { throw null; } set { } }
        object System.Web.UI.IDataItemContainer.DataItem { get { throw null; } }
        int System.Web.UI.IDataItemContainer.DataItemIndex { get { throw null; } }
        int System.Web.UI.IDataItemContainer.DisplayIndex { get { throw null; } }
        protected internal virtual void SetItemType(System.Web.UI.WebControls.SiteMapNodeItemType itemType) { }
    }
    public partial class SiteMapNodeItemEventArgs : System.EventArgs
    {
        public SiteMapNodeItemEventArgs(System.Web.UI.WebControls.SiteMapNodeItem item) { }
        public System.Web.UI.WebControls.SiteMapNodeItem Item { get { throw null; } }
    }
    public delegate void SiteMapNodeItemEventHandler(object sender, System.Web.UI.WebControls.SiteMapNodeItemEventArgs e);
    public enum SiteMapNodeItemType
    {
        Current = 2,
        Parent = 1,
        PathSeparator = 3,
        Root = 0,
    }
    [System.ComponentModel.DesignerAttribute("System.Web.UI.Design.WebControls.SiteMapPathDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    public partial class SiteMapPath : System.Web.UI.WebControls.CompositeControl
    {
        public SiteMapPath() { }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.Style CurrentNodeStyle { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        [System.Web.UI.TemplateContainerAttribute(typeof(System.Web.UI.WebControls.SiteMapNodeItem))]
        public virtual System.Web.UI.ITemplate CurrentNodeTemplate { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.Style NodeStyle { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        [System.Web.UI.TemplateContainerAttribute(typeof(System.Web.UI.WebControls.SiteMapNodeItem))]
        public virtual System.Web.UI.ITemplate NodeTemplate { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(-1)]
        [System.Web.UI.ThemeableAttribute(false)]
        public virtual int ParentLevelsDisplayed { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.PathDirection.RootToCurrent)]
        public virtual System.Web.UI.WebControls.PathDirection PathDirection { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(" > ")]
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string PathSeparator { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.Style PathSeparatorStyle { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        [System.Web.UI.TemplateContainerAttribute(typeof(System.Web.UI.WebControls.SiteMapNodeItem))]
        public virtual System.Web.UI.ITemplate PathSeparatorTemplate { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public System.Web.SiteMapProvider Provider { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(false)]
        public virtual bool RenderCurrentNodeAsLink { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.Style RootNodeStyle { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        [System.Web.UI.TemplateContainerAttribute(typeof(System.Web.UI.WebControls.SiteMapNodeItem))]
        public virtual System.Web.UI.ITemplate RootNodeTemplate { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(true)]
        [System.Web.UI.ThemeableAttribute(false)]
        public virtual bool ShowToolTips { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.Web.UI.ThemeableAttribute(false)]
        public virtual string SiteMapProvider { get { throw null; } set { } }
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string SkipLinkText { get { throw null; } set { } }
        public event System.Web.UI.WebControls.SiteMapNodeItemEventHandler ItemCreated { add { } remove { } }
        public event System.Web.UI.WebControls.SiteMapNodeItemEventHandler ItemDataBound { add { } remove { } }
        protected internal override void CreateChildControls() { }
        protected virtual void CreateControlHierarchy() { }
        public override void DataBind() { }
        protected virtual void InitializeItem(System.Web.UI.WebControls.SiteMapNodeItem item) { }
        protected override void LoadViewState(object savedState) { }
        protected override void OnDataBinding(System.EventArgs e) { }
        protected virtual void OnItemCreated(System.Web.UI.WebControls.SiteMapNodeItemEventArgs e) { }
        protected virtual void OnItemDataBound(System.Web.UI.WebControls.SiteMapNodeItemEventArgs e) { }
        protected internal override void Render(System.Web.UI.HtmlTextWriter writer) { }
        protected internal override void RenderContents(System.Web.UI.HtmlTextWriter writer) { }
        protected override object SaveViewState() { throw null; }
        protected override void TrackViewState() { }
    }
    public enum SortDirection
    {
        Ascending = 0,
        Descending = 1,
    }
    [System.ComponentModel.DefaultEventAttribute("Selecting")]
    [System.ComponentModel.DefaultPropertyAttribute("SelectQuery")]
    [System.ComponentModel.DesignerAttribute("System.Web.UI.Design.WebControls.SqlDataSourceDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.Drawing.ToolboxBitmapAttribute(typeof(System.Web.UI.WebControls.SqlDataSource))]
    [System.Web.UI.ParseChildrenAttribute(true)]
    [System.Web.UI.PersistChildrenAttribute(false)]
    public partial class SqlDataSource : System.Web.UI.DataSourceControl
    {
        public SqlDataSource() { }
        public SqlDataSource(string connectionString, string selectCommand) { }
        public SqlDataSource(string providerName, string connectionString, string selectCommand) { }
        [System.ComponentModel.DefaultValueAttribute(0)]
        [System.ComponentModel.TypeConverterAttribute(typeof(System.Web.UI.DataSourceCacheDurationConverter))]
        public virtual int CacheDuration { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.DataSourceCacheExpiry.Absolute)]
        public virtual System.Web.UI.DataSourceCacheExpiry CacheExpirationPolicy { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        public virtual string CacheKeyDependency { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(true)]
        public virtual bool CancelSelectOnNullParameter { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.ConflictOptions.OverwriteChanges)]
        public System.Web.UI.ConflictOptions ConflictDetection { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.WebControls.SqlDataSourceConnectionStringEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.ComponentModel.MergablePropertyAttribute(false)]
        public virtual string ConnectionString { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.SqlDataSourceMode.DataSet)]
        public System.Web.UI.WebControls.SqlDataSourceMode DataSourceMode { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        public string DeleteCommand { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.SqlDataSourceCommandType.Text)]
        public System.Web.UI.WebControls.SqlDataSourceCommandType DeleteCommandType { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.ComponentModel.MergablePropertyAttribute(false)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.ParameterCollection DeleteParameters { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(false)]
        public virtual bool EnableCaching { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        public string FilterExpression { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.ComponentModel.MergablePropertyAttribute(false)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.ParameterCollection FilterParameters { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute("")]
        public string InsertCommand { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.SqlDataSourceCommandType.Text)]
        public System.Web.UI.WebControls.SqlDataSourceCommandType InsertCommandType { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.ComponentModel.MergablePropertyAttribute(false)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.ParameterCollection InsertParameters { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute("{0}")]
        public string OldValuesParameterFormatString { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.TypeConverterAttribute("System.Web.UI.Design.WebControls.DataProviderNameConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
        public virtual string ProviderName { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        public string SelectCommand { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.SqlDataSourceCommandType.Text)]
        public System.Web.UI.WebControls.SqlDataSourceCommandType SelectCommandType { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.ComponentModel.MergablePropertyAttribute(false)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.ParameterCollection SelectParameters { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute("")]
        public string SortParameterName { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        public virtual string SqlCacheDependency { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        public string UpdateCommand { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.SqlDataSourceCommandType.Text)]
        public System.Web.UI.WebControls.SqlDataSourceCommandType UpdateCommandType { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.ComponentModel.MergablePropertyAttribute(false)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.ParameterCollection UpdateParameters { get { throw null; } }
        public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Deleted { add { } remove { } }
        public event System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Deleting { add { } remove { } }
        public event System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler Filtering { add { } remove { } }
        public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Inserted { add { } remove { } }
        public event System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Inserting { add { } remove { } }
        public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Selected { add { } remove { } }
        public event System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler Selecting { add { } remove { } }
        public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Updated { add { } remove { } }
        public event System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Updating { add { } remove { } }
        protected virtual System.Web.UI.WebControls.SqlDataSourceView CreateDataSourceView(string viewName) { throw null; }
        public int Delete() { throw null; }
        protected virtual System.Data.Common.DbProviderFactory GetDbProviderFactory() { throw null; }
        protected override System.Web.UI.DataSourceView GetView(string viewName) { throw null; }
        protected override System.Collections.ICollection GetViewNames() { throw null; }
        public int Insert() { throw null; }
        protected override void LoadViewState(object savedState) { }
        protected internal override void OnInit(System.EventArgs e) { }
        protected override object SaveViewState() { throw null; }
        public System.Collections.IEnumerable Select(System.Web.UI.DataSourceSelectArguments arguments) { throw null; }
        protected override void TrackViewState() { }
        public int Update() { throw null; }
    }
    public partial class SqlDataSourceCommandEventArgs : System.ComponentModel.CancelEventArgs
    {
        public SqlDataSourceCommandEventArgs(System.Data.Common.DbCommand command) { }
        public System.Data.Common.DbCommand Command { get { throw null; } }
    }
    public delegate void SqlDataSourceCommandEventHandler(object sender, System.Web.UI.WebControls.SqlDataSourceCommandEventArgs e);
    public enum SqlDataSourceCommandType
    {
        StoredProcedure = 1,
        Text = 0,
    }
    public partial class SqlDataSourceFilteringEventArgs : System.ComponentModel.CancelEventArgs
    {
        public SqlDataSourceFilteringEventArgs(System.Collections.Specialized.IOrderedDictionary parameterValues) { }
        public System.Collections.Specialized.IOrderedDictionary ParameterValues { get { throw null; } }
    }
    public delegate void SqlDataSourceFilteringEventHandler(object sender, System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs e);
    public enum SqlDataSourceMode
    {
        DataReader = 0,
        DataSet = 1,
    }
    public partial class SqlDataSourceSelectingEventArgs : System.Web.UI.WebControls.SqlDataSourceCommandEventArgs
    {
        public SqlDataSourceSelectingEventArgs(System.Data.Common.DbCommand command, System.Web.UI.DataSourceSelectArguments arguments) : base (default(System.Data.Common.DbCommand)) { }
        public System.Web.UI.DataSourceSelectArguments Arguments { get { throw null; } }
    }
    public delegate void SqlDataSourceSelectingEventHandler(object sender, System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs e);
    public partial class SqlDataSourceStatusEventArgs : System.EventArgs
    {
        public SqlDataSourceStatusEventArgs(System.Data.Common.DbCommand command, int affectedRows, System.Exception exception) { }
        public int AffectedRows { get { throw null; } }
        public System.Data.Common.DbCommand Command { get { throw null; } }
        public System.Exception Exception { get { throw null; } }
        public bool ExceptionHandled { get { throw null; } set { } }
    }
    public delegate void SqlDataSourceStatusEventHandler(object sender, System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e);
    public partial class SqlDataSourceView : System.Web.UI.DataSourceView, System.Web.UI.IStateManager
    {
        public SqlDataSourceView(System.Web.UI.WebControls.SqlDataSource owner, string name, System.Web.HttpContext context) : base (default(System.Web.UI.IDataSource), default(string)) { }
        public bool CancelSelectOnNullParameter { get { throw null; } set { } }
        public override bool CanDelete { get { throw null; } }
        public override bool CanInsert { get { throw null; } }
        public override bool CanPage { get { throw null; } }
        public override bool CanRetrieveTotalRowCount { get { throw null; } }
        public override bool CanSort { get { throw null; } }
        public override bool CanUpdate { get { throw null; } }
        public System.Web.UI.ConflictOptions ConflictDetection { get { throw null; } set { } }
        public string DeleteCommand { get { throw null; } set { } }
        public System.Web.UI.WebControls.SqlDataSourceCommandType DeleteCommandType { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.ParameterCollection DeleteParameters { get { throw null; } }
        public string FilterExpression { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.ParameterCollection FilterParameters { get { throw null; } }
        public string InsertCommand { get { throw null; } set { } }
        public System.Web.UI.WebControls.SqlDataSourceCommandType InsertCommandType { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.ParameterCollection InsertParameters { get { throw null; } }
        protected bool IsTrackingViewState { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute("{0}")]
        public string OldValuesParameterFormatString { get { throw null; } set { } }
        protected virtual string ParameterPrefix { get { throw null; } }
        public string SelectCommand { get { throw null; } set { } }
        public System.Web.UI.WebControls.SqlDataSourceCommandType SelectCommandType { get { throw null; } set { } }
        public System.Web.UI.WebControls.ParameterCollection SelectParameters { get { throw null; } }
        public string SortParameterName { get { throw null; } set { } }
        bool System.Web.UI.IStateManager.IsTrackingViewState { get { throw null; } }
        public string UpdateCommand { get { throw null; } set { } }
        public System.Web.UI.WebControls.SqlDataSourceCommandType UpdateCommandType { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.ParameterCollection UpdateParameters { get { throw null; } }
        public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Deleted { add { } remove { } }
        public event System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Deleting { add { } remove { } }
        public event System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler Filtering { add { } remove { } }
        public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Inserted { add { } remove { } }
        public event System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Inserting { add { } remove { } }
        public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Selected { add { } remove { } }
        public event System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler Selecting { add { } remove { } }
        public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Updated { add { } remove { } }
        public event System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Updating { add { } remove { } }
        public int Delete(System.Collections.IDictionary keys, System.Collections.IDictionary oldValues) { throw null; }
        protected override int ExecuteDelete(System.Collections.IDictionary keys, System.Collections.IDictionary oldValues) { throw null; }
        protected override int ExecuteInsert(System.Collections.IDictionary values) { throw null; }
        protected internal override System.Collections.IEnumerable ExecuteSelect(System.Web.UI.DataSourceSelectArguments arguments) { throw null; }
        protected override int ExecuteUpdate(System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues) { throw null; }
        public int Insert(System.Collections.IDictionary values) { throw null; }
        protected virtual void LoadViewState(object savedState) { }
        protected virtual void OnDeleted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e) { }
        protected virtual void OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs e) { }
        protected virtual void OnFiltering(System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs e) { }
        protected virtual void OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e) { }
        protected virtual void OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs e) { }
        protected virtual void OnSelected(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e) { }
        protected virtual void OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs e) { }
        protected virtual void OnUpdated(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e) { }
        protected virtual void OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs e) { }
        protected internal override void RaiseUnsupportedCapabilityError(System.Web.UI.DataSourceCapabilities capability) { }
        protected virtual object SaveViewState() { throw null; }
        public System.Collections.IEnumerable Select(System.Web.UI.DataSourceSelectArguments arguments) { throw null; }
        void System.Web.UI.IStateManager.LoadViewState(object savedState) { }
        object System.Web.UI.IStateManager.SaveViewState() { throw null; }
        void System.Web.UI.IStateManager.TrackViewState() { }
        protected virtual void TrackViewState() { }
        public int Update(System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues) { throw null; }
    }
    public partial class StringArrayConverter : System.ComponentModel.TypeConverter
    {
        public StringArrayConverter() { }
        public override bool CanConvertFrom(System.ComponentModel.ITypeDescriptorContext context, System.Type sourceType) { throw null; }
        public override object ConvertFrom(System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value) { throw null; }
        public override object ConvertTo(System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, System.Type destinationType) { throw null; }
    }
    [System.ComponentModel.ToolboxItemAttribute(false)]
    [System.ComponentModel.TypeConverterAttribute("System.Web.UI.WebControls.EmptyStringExpandableObjectConverter")]
    public partial class Style : System.ComponentModel.Component, System.Web.UI.IStateManager
    {
        public Style() { }
        public Style(System.Web.UI.StateBag bag) { }
        [System.ComponentModel.DefaultValueAttribute(typeof(System.Drawing.Color), "")]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.ComponentModel.TypeConverterAttribute(typeof(System.Web.UI.WebControls.WebColorConverter))]
        public System.Drawing.Color BackColor { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(typeof(System.Drawing.Color), "")]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.ComponentModel.TypeConverterAttribute(typeof(System.Web.UI.WebControls.WebColorConverter))]
        public System.Drawing.Color BorderColor { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.BorderStyle.NotSet)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        public System.Web.UI.WebControls.BorderStyle BorderStyle { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(typeof(System.Web.UI.WebControls.Unit), "")]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        public System.Web.UI.WebControls.Unit BorderWidth { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.CssClassPropertyAttribute]
        public string CssClass { get { throw null; } set { } }
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        public System.Web.UI.WebControls.FontInfo Font { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(typeof(System.Drawing.Color), "")]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.ComponentModel.TypeConverterAttribute(typeof(System.Web.UI.WebControls.WebColorConverter))]
        public System.Drawing.Color ForeColor { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(typeof(System.Web.UI.WebControls.Unit), "")]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        public System.Web.UI.WebControls.Unit Height { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public virtual bool IsEmpty { get { throw null; } }
        protected bool IsTrackingViewState { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string RegisteredCssClass { get { throw null; } }
        bool System.Web.UI.IStateManager.IsTrackingViewState { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        protected internal System.Web.UI.StateBag ViewState { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(typeof(System.Web.UI.WebControls.Unit), "")]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        public System.Web.UI.WebControls.Unit Width { get { throw null; } set { } }
        public void AddAttributesToRender(System.Web.UI.HtmlTextWriter writer) { }
        public virtual void AddAttributesToRender(System.Web.UI.HtmlTextWriter writer, System.Web.UI.WebControls.WebControl owner) { }
        public virtual void CopyFrom(System.Web.UI.WebControls.Style s) { }
        protected virtual void FillStyleAttributes(System.Web.UI.CssStyleCollection attributes, System.Web.UI.IUrlResolutionService urlResolver) { }
        public System.Web.UI.CssStyleCollection GetStyleAttributes(System.Web.UI.IUrlResolutionService urlResolver) { throw null; }
        protected internal void LoadViewState(object state) { }
        public virtual void MergeWith(System.Web.UI.WebControls.Style s) { }
        public virtual void Reset() { }
        protected internal virtual object SaveViewState() { throw null; }
        protected internal virtual void SetBit(int bit) { }
        public void SetDirty() { }
        void System.Web.UI.IStateManager.LoadViewState(object state) { }
        object System.Web.UI.IStateManager.SaveViewState() { throw null; }
        void System.Web.UI.IStateManager.TrackViewState() { }
        protected internal virtual void TrackViewState() { }
    }
    public partial class StyleCollection : System.Web.UI.StateManagedCollection
    {
        internal StyleCollection() { }
        public System.Web.UI.WebControls.Style this[int i] { get { throw null; } set { } }
        public int Add(System.Web.UI.WebControls.Style style) { throw null; }
        public bool Contains(System.Web.UI.WebControls.Style style) { throw null; }
        public void CopyTo(System.Web.UI.WebControls.Style[] styleArray, int index) { }
        protected override object CreateKnownType(int index) { throw null; }
        protected override System.Type[] GetKnownTypes() { throw null; }
        public int IndexOf(System.Web.UI.WebControls.Style style) { throw null; }
        public void Insert(int index, System.Web.UI.WebControls.Style style) { }
        public void Remove(System.Web.UI.WebControls.Style style) { }
        public void RemoveAt(int index) { }
        protected override void SetDirtyObject(object o) { }
    }
    public partial class SubMenuStyle : System.Web.UI.WebControls.Style, System.ComponentModel.ICustomTypeDescriptor
    {
        public SubMenuStyle() { }
        public SubMenuStyle(System.Web.UI.StateBag bag) { }
        [System.ComponentModel.DefaultValueAttribute(typeof(System.Web.UI.WebControls.Unit), "")]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        public System.Web.UI.WebControls.Unit HorizontalPadding { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(typeof(System.Web.UI.WebControls.Unit), "")]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        public System.Web.UI.WebControls.Unit VerticalPadding { get { throw null; } set { } }
        public override void CopyFrom(System.Web.UI.WebControls.Style s) { }
        protected override void FillStyleAttributes(System.Web.UI.CssStyleCollection attributes, System.Web.UI.IUrlResolutionService urlResolver) { }
        public override void MergeWith(System.Web.UI.WebControls.Style s) { }
        public override void Reset() { }
        System.ComponentModel.AttributeCollection System.ComponentModel.ICustomTypeDescriptor.GetAttributes() { throw null; }
        string System.ComponentModel.ICustomTypeDescriptor.GetClassName() { throw null; }
        string System.ComponentModel.ICustomTypeDescriptor.GetComponentName() { throw null; }
        System.ComponentModel.TypeConverter System.ComponentModel.ICustomTypeDescriptor.GetConverter() { throw null; }
        System.ComponentModel.EventDescriptor System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent() { throw null; }
        System.ComponentModel.PropertyDescriptor System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty() { throw null; }
        object System.ComponentModel.ICustomTypeDescriptor.GetEditor(System.Type editorBaseType) { throw null; }
        System.ComponentModel.EventDescriptorCollection System.ComponentModel.ICustomTypeDescriptor.GetEvents() { throw null; }
        System.ComponentModel.EventDescriptorCollection System.ComponentModel.ICustomTypeDescriptor.GetEvents(System.Attribute[] attributes) { throw null; }
        System.ComponentModel.PropertyDescriptorCollection System.ComponentModel.ICustomTypeDescriptor.GetProperties() { throw null; }
        System.ComponentModel.PropertyDescriptorCollection System.ComponentModel.ICustomTypeDescriptor.GetProperties(System.Attribute[] attributes) { throw null; }
        object System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner(System.ComponentModel.PropertyDescriptor pd) { throw null; }
    }
    public partial class SubMenuStyleCollection : System.Web.UI.StateManagedCollection
    {
        internal SubMenuStyleCollection() { }
        public System.Web.UI.WebControls.SubMenuStyle this[int i] { get { throw null; } set { } }
        public int Add(System.Web.UI.WebControls.SubMenuStyle style) { throw null; }
        public bool Contains(System.Web.UI.WebControls.SubMenuStyle style) { throw null; }
        public void CopyTo(System.Web.UI.WebControls.SubMenuStyle[] styleArray, int index) { }
        protected override object CreateKnownType(int index) { throw null; }
        protected override System.Type[] GetKnownTypes() { throw null; }
        public int IndexOf(System.Web.UI.WebControls.SubMenuStyle style) { throw null; }
        public void Insert(int index, System.Web.UI.WebControls.SubMenuStyle style) { }
        protected override void OnInsert(int index, object value) { }
        public void Remove(System.Web.UI.WebControls.SubMenuStyle style) { }
        public void RemoveAt(int index) { }
        protected override void SetDirtyObject(object o) { }
    }
    [System.ComponentModel.DefaultPropertyAttribute("MethodName")]
    [System.ComponentModel.DesignerAttribute("System.Web.UI.Design.WebControls.SubstitutionDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.Web.UI.ParseChildrenAttribute(true)]
    [System.Web.UI.PersistChildrenAttribute(false)]
    public partial class Substitution : System.Web.UI.Control
    {
        public Substitution() { }
        [System.ComponentModel.DefaultValueAttribute("")]
        public virtual string MethodName { get { throw null; } set { } }
        protected override System.Web.UI.ControlCollection CreateControlCollection() { throw null; }
        protected internal override void OnPreRender(System.EventArgs e) { }
        protected internal override void Render(System.Web.UI.HtmlTextWriter writer) { }
    }
    [System.ComponentModel.DefaultPropertyAttribute("Rows")]
    [System.ComponentModel.DesignerAttribute("System.Web.UI.Design.WebControls.TableDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.Web.UI.ParseChildrenAttribute(true, "Rows")]
    [System.Web.UI.SupportsEventValidationAttribute]
    public partial class Table : System.Web.UI.WebControls.WebControl, System.Web.UI.IPostBackEventHandler
    {
        public Table() { }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.UrlPropertyAttribute]
        public virtual string BackImageUrl { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string Caption { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.TableCaptionAlign.NotSet)]
        public virtual System.Web.UI.WebControls.TableCaptionAlign CaptionAlign { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(-1)]
        public virtual int CellPadding { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(-1)]
        public virtual int CellSpacing { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.GridLines.None)]
        public virtual System.Web.UI.WebControls.GridLines GridLines { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.HorizontalAlign.NotSet)]
        public virtual System.Web.UI.WebControls.HorizontalAlign HorizontalAlign { get { throw null; } set { } }
        [System.ComponentModel.MergablePropertyAttribute(false)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerDefaultProperty)]
        public virtual System.Web.UI.WebControls.TableRowCollection Rows { get { throw null; } }
        public override bool SupportsDisabledAttribute { get { throw null; } }
        protected override void AddAttributesToRender(System.Web.UI.HtmlTextWriter writer) { }
        protected override System.Web.UI.ControlCollection CreateControlCollection() { throw null; }
        protected override System.Web.UI.WebControls.Style CreateControlStyle() { throw null; }
        protected virtual void RaisePostBackEvent(string argument) { }
        public override void RenderBeginTag(System.Web.UI.HtmlTextWriter writer) { }
        protected internal override void RenderContents(System.Web.UI.HtmlTextWriter writer) { }
        void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(string eventArgument) { }
        protected partial class RowControlCollection : System.Web.UI.ControlCollection
        {
            internal RowControlCollection() : base (default(System.Web.UI.Control)) { }
            public override void Add(System.Web.UI.Control child) { }
            public override void AddAt(int index, System.Web.UI.Control child) { }
        }
    }
    public enum TableCaptionAlign
    {
        Bottom = 2,
        Left = 3,
        NotSet = 0,
        Right = 4,
        Top = 1,
    }
    [System.ComponentModel.BindableAttribute(false)]
    [System.ComponentModel.DefaultPropertyAttribute("Text")]
    [System.ComponentModel.DesignerAttribute("System.Web.UI.Design.WebControls.PreviewControlDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.ToolboxItemAttribute(false)]
    [System.Web.UI.ControlBuilderAttribute(typeof(System.Web.UI.WebControls.TableCellControlBuilder))]
    [System.Web.UI.ParseChildrenAttribute(false)]
    public partial class TableCell : System.Web.UI.WebControls.WebControl
    {
        public TableCell() { }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.TypeConverterAttribute(typeof(System.Web.UI.WebControls.StringArrayConverter))]
        public virtual string[] AssociatedHeaderCellID { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(0)]
        public virtual int ColumnSpan { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.HorizontalAlign.NotSet)]
        public virtual System.Web.UI.WebControls.HorizontalAlign HorizontalAlign { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(0)]
        public virtual int RowSpan { get { throw null; } set { } }
        public override bool SupportsDisabledAttribute { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.LocalizableAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerDefaultProperty)]
        public virtual string Text { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.VerticalAlign.NotSet)]
        public virtual System.Web.UI.WebControls.VerticalAlign VerticalAlign { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(true)]
        public virtual bool Wrap { get { throw null; } set { } }
        protected override void AddAttributesToRender(System.Web.UI.HtmlTextWriter writer) { }
        protected override void AddParsedSubObject(object obj) { }
        protected override System.Web.UI.WebControls.Style CreateControlStyle() { throw null; }
        protected internal override void RenderContents(System.Web.UI.HtmlTextWriter writer) { }
    }
    [System.ComponentModel.EditorAttribute("System.Web.UI.Design.WebControls.TableCellsCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
    public sealed partial class TableCellCollection : System.Collections.ICollection, System.Collections.IEnumerable, System.Collections.IList
    {
        internal TableCellCollection() { }
        public int Count { get { throw null; } }
        public bool IsReadOnly { get { throw null; } }
        public bool IsSynchronized { get { throw null; } }
        public System.Web.UI.WebControls.TableCell this[int index] { get { throw null; } }
        public object SyncRoot { get { throw null; } }
        bool System.Collections.IList.IsFixedSize { get { throw null; } }
        object System.Collections.IList.this[int index] { get { throw null; } set { } }
        public int Add(System.Web.UI.WebControls.TableCell cell) { throw null; }
        public void AddAt(int index, System.Web.UI.WebControls.TableCell cell) { }
        public void AddRange(System.Web.UI.WebControls.TableCell[] cells) { }
        public void Clear() { }
        public void CopyTo(System.Array array, int index) { }
        public int GetCellIndex(System.Web.UI.WebControls.TableCell cell) { throw null; }
        public System.Collections.IEnumerator GetEnumerator() { throw null; }
        public void Remove(System.Web.UI.WebControls.TableCell cell) { }
        public void RemoveAt(int index) { }
        int System.Collections.IList.Add(object o) { throw null; }
        bool System.Collections.IList.Contains(object o) { throw null; }
        int System.Collections.IList.IndexOf(object o) { throw null; }
        void System.Collections.IList.Insert(int index, object o) { }
        void System.Collections.IList.Remove(object o) { }
    }
    public partial class TableCellControlBuilder : System.Web.UI.ControlBuilder
    {
        public TableCellControlBuilder() { }
        public override bool AllowWhitespaceLiterals() { throw null; }
    }
    public partial class TableFooterRow : System.Web.UI.WebControls.TableRow
    {
        public TableFooterRow() { }
    }
    public partial class TableHeaderCell : System.Web.UI.WebControls.TableCell
    {
        public TableHeaderCell() { }
        [System.ComponentModel.DefaultValueAttribute("")]
        public virtual string AbbreviatedText { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.TypeConverterAttribute(typeof(System.Web.UI.WebControls.StringArrayConverter))]
        public virtual string[] CategoryText { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.TableHeaderScope.NotSet)]
        public virtual System.Web.UI.WebControls.TableHeaderScope Scope { get { throw null; } set { } }
        protected override void AddAttributesToRender(System.Web.UI.HtmlTextWriter writer) { }
    }
    public partial class TableHeaderRow : System.Web.UI.WebControls.TableRow
    {
        public TableHeaderRow() { }
    }
    public enum TableHeaderScope
    {
        Column = 2,
        NotSet = 0,
        Row = 1,
    }
    public partial class TableItemStyle : System.Web.UI.WebControls.Style
    {
        public TableItemStyle() { }
        public TableItemStyle(System.Web.UI.StateBag bag) { }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.HorizontalAlign.NotSet)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        public virtual System.Web.UI.WebControls.HorizontalAlign HorizontalAlign { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.VerticalAlign.NotSet)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        public virtual System.Web.UI.WebControls.VerticalAlign VerticalAlign { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(true)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        public virtual bool Wrap { get { throw null; } set { } }
        public override void AddAttributesToRender(System.Web.UI.HtmlTextWriter writer, System.Web.UI.WebControls.WebControl owner) { }
        public override void CopyFrom(System.Web.UI.WebControls.Style s) { }
        public override void MergeWith(System.Web.UI.WebControls.Style s) { }
        public override void Reset() { }
    }
    [System.ComponentModel.BindableAttribute(false)]
    [System.ComponentModel.DefaultPropertyAttribute("Cells")]
    [System.ComponentModel.DesignerAttribute("System.Web.UI.Design.WebControls.PreviewControlDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.ToolboxItemAttribute(false)]
    [System.Web.UI.ParseChildrenAttribute(true, "Cells")]
    public partial class TableRow : System.Web.UI.WebControls.WebControl
    {
        public TableRow() { }
        [System.ComponentModel.MergablePropertyAttribute(false)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerDefaultProperty)]
        public virtual System.Web.UI.WebControls.TableCellCollection Cells { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.HorizontalAlign.NotSet)]
        public virtual System.Web.UI.WebControls.HorizontalAlign HorizontalAlign { get { throw null; } set { } }
        public override bool SupportsDisabledAttribute { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.TableRowSection.TableBody)]
        public virtual System.Web.UI.WebControls.TableRowSection TableSection { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.VerticalAlign.NotSet)]
        public virtual System.Web.UI.WebControls.VerticalAlign VerticalAlign { get { throw null; } set { } }
        protected override System.Web.UI.ControlCollection CreateControlCollection() { throw null; }
        protected override System.Web.UI.WebControls.Style CreateControlStyle() { throw null; }
        protected partial class CellControlCollection : System.Web.UI.ControlCollection
        {
            internal CellControlCollection() : base (default(System.Web.UI.Control)) { }
            public override void Add(System.Web.UI.Control child) { }
            public override void AddAt(int index, System.Web.UI.Control child) { }
        }
    }
    [System.ComponentModel.EditorAttribute("System.Web.UI.Design.WebControls.TableRowsCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
    public sealed partial class TableRowCollection : System.Collections.ICollection, System.Collections.IEnumerable, System.Collections.IList
    {
        internal TableRowCollection() { }
        public int Count { get { throw null; } }
        public bool IsReadOnly { get { throw null; } }
        public bool IsSynchronized { get { throw null; } }
        public System.Web.UI.WebControls.TableRow this[int index] { get { throw null; } }
        public object SyncRoot { get { throw null; } }
        bool System.Collections.IList.IsFixedSize { get { throw null; } }
        object System.Collections.IList.this[int index] { get { throw null; } set { } }
        public int Add(System.Web.UI.WebControls.TableRow row) { throw null; }
        public void AddAt(int index, System.Web.UI.WebControls.TableRow row) { }
        public void AddRange(System.Web.UI.WebControls.TableRow[] rows) { }
        public void Clear() { }
        public void CopyTo(System.Array array, int index) { }
        public System.Collections.IEnumerator GetEnumerator() { throw null; }
        public int GetRowIndex(System.Web.UI.WebControls.TableRow row) { throw null; }
        public void Remove(System.Web.UI.WebControls.TableRow row) { }
        public void RemoveAt(int index) { }
        int System.Collections.IList.Add(object o) { throw null; }
        bool System.Collections.IList.Contains(object o) { throw null; }
        int System.Collections.IList.IndexOf(object o) { throw null; }
        void System.Collections.IList.Insert(int index, object o) { }
        void System.Collections.IList.Remove(object o) { }
    }
    public enum TableRowSection
    {
        TableBody = 1,
        TableFooter = 2,
        TableHeader = 0,
    }
    public partial class TableSectionStyle : System.Web.UI.WebControls.Style
    {
        public TableSectionStyle() { }
        [System.ComponentModel.DefaultValueAttribute(true)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        public bool Visible { get { throw null; } set { } }
    }
    public partial class TableStyle : System.Web.UI.WebControls.Style
    {
        public TableStyle() { }
        public TableStyle(System.Web.UI.StateBag bag) { }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.UrlPropertyAttribute]
        public virtual string BackImageUrl { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(-1)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        public virtual int CellPadding { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(-1)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        public virtual int CellSpacing { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.GridLines.None)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        public virtual System.Web.UI.WebControls.GridLines GridLines { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.HorizontalAlign.NotSet)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        public virtual System.Web.UI.WebControls.HorizontalAlign HorizontalAlign { get { throw null; } set { } }
        public override void AddAttributesToRender(System.Web.UI.HtmlTextWriter writer, System.Web.UI.WebControls.WebControl owner) { }
        public override void CopyFrom(System.Web.UI.WebControls.Style s) { }
        protected override void FillStyleAttributes(System.Web.UI.CssStyleCollection attributes, System.Web.UI.IUrlResolutionService urlResolver) { }
        public override void MergeWith(System.Web.UI.WebControls.Style s) { }
        public override void Reset() { }
    }
    public partial class TargetConverter : System.ComponentModel.StringConverter
    {
        public TargetConverter() { }
        public override System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues(System.ComponentModel.ITypeDescriptorContext context) { throw null; }
        public override bool GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext context) { throw null; }
        public override bool GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext context) { throw null; }
    }
    public partial class TemplateColumn : System.Web.UI.WebControls.DataGridColumn
    {
        public TemplateColumn() { }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        [System.Web.UI.TemplateContainerAttribute(typeof(System.Web.UI.WebControls.DataGridItem))]
        public virtual System.Web.UI.ITemplate EditItemTemplate { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        [System.Web.UI.TemplateContainerAttribute(typeof(System.Web.UI.WebControls.DataGridItem))]
        public virtual System.Web.UI.ITemplate FooterTemplate { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        [System.Web.UI.TemplateContainerAttribute(typeof(System.Web.UI.WebControls.DataGridItem))]
        public virtual System.Web.UI.ITemplate HeaderTemplate { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        [System.Web.UI.TemplateContainerAttribute(typeof(System.Web.UI.WebControls.DataGridItem))]
        public virtual System.Web.UI.ITemplate ItemTemplate { get { throw null; } set { } }
        public override void InitializeCell(System.Web.UI.WebControls.TableCell cell, int columnIndex, System.Web.UI.WebControls.ListItemType itemType) { }
    }
    [System.ComponentModel.BindableAttribute(false)]
    [System.ComponentModel.ToolboxItemAttribute(false)]
    [System.Web.UI.ControlBuilderAttribute(typeof(System.Web.UI.WebControls.WizardStepControlBuilder))]
    [System.Web.UI.ParseChildrenAttribute(true)]
    [System.Web.UI.PersistChildrenAttribute(false)]
    [System.Web.UI.ThemeableAttribute(true)]
    public partial class TemplatedWizardStep : System.Web.UI.WebControls.WizardStepBase
    {
        public TemplatedWizardStep() { }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        [System.Web.UI.TemplateContainerAttribute(typeof(System.Web.UI.WebControls.Wizard))]
        public virtual System.Web.UI.ITemplate ContentTemplate { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public System.Web.UI.Control ContentTemplateContainer { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        [System.Web.UI.TemplateContainerAttribute(typeof(System.Web.UI.WebControls.Wizard))]
        public virtual System.Web.UI.ITemplate CustomNavigationTemplate { get { throw null; } set { } }
        [System.ComponentModel.BindableAttribute(false)]
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public System.Web.UI.Control CustomNavigationTemplateContainer { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(true)]
        public override string SkinID { get { throw null; } set { } }
    }
    public partial class TemplateField : System.Web.UI.WebControls.DataControlField
    {
        public TemplateField() { }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        [System.Web.UI.TemplateContainerAttribute(typeof(System.Web.UI.IDataItemContainer), System.ComponentModel.BindingDirection.TwoWay)]
        public virtual System.Web.UI.ITemplate AlternatingItemTemplate { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(true)]
        public virtual bool ConvertEmptyStringToNull { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        [System.Web.UI.TemplateContainerAttribute(typeof(System.Web.UI.IDataItemContainer), System.ComponentModel.BindingDirection.TwoWay)]
        public virtual System.Web.UI.ITemplate EditItemTemplate { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        [System.Web.UI.TemplateContainerAttribute(typeof(System.Web.UI.IDataItemContainer))]
        public virtual System.Web.UI.ITemplate FooterTemplate { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        [System.Web.UI.TemplateContainerAttribute(typeof(System.Web.UI.IDataItemContainer))]
        public virtual System.Web.UI.ITemplate HeaderTemplate { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        [System.Web.UI.TemplateContainerAttribute(typeof(System.Web.UI.IDataItemContainer), System.ComponentModel.BindingDirection.TwoWay)]
        public virtual System.Web.UI.ITemplate InsertItemTemplate { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        [System.Web.UI.TemplateContainerAttribute(typeof(System.Web.UI.IDataItemContainer), System.ComponentModel.BindingDirection.TwoWay)]
        public virtual System.Web.UI.ITemplate ItemTemplate { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.ValidateRequestMode.Inherit)]
        public new System.Web.UI.ValidateRequestMode ValidateRequestMode { get { throw null; } set { } }
        protected override void CopyProperties(System.Web.UI.WebControls.DataControlField newField) { }
        protected override System.Web.UI.WebControls.DataControlField CreateField() { throw null; }
        public override void ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary dictionary, System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlRowState rowState, bool includeReadOnly) { }
        public override void InitializeCell(System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlCellType cellType, System.Web.UI.WebControls.DataControlRowState rowState, int rowIndex) { }
        public override void ValidateSupportsCallback() { }
    }
    public enum TextAlign
    {
        Left = 1,
        Right = 2,
    }
    [System.ComponentModel.DefaultEventAttribute("TextChanged")]
    [System.ComponentModel.DefaultPropertyAttribute("Text")]
    [System.ComponentModel.DesignerAttribute("System.Web.UI.Design.WebControls.PreviewControlDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.Web.UI.ControlBuilderAttribute(typeof(System.Web.UI.WebControls.TextBoxControlBuilder))]
    [System.Web.UI.ControlValuePropertyAttribute("Text")]
    [System.Web.UI.DataBindingHandlerAttribute("System.Web.UI.Design.TextDataBindingHandler, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.Web.UI.ParseChildrenAttribute(true, "Text")]
    [System.Web.UI.SupportsEventValidationAttribute]
    [System.Web.UI.ValidationPropertyAttribute("Text")]
    public partial class TextBox : System.Web.UI.WebControls.WebControl, System.Web.UI.IEditableTextControl, System.Web.UI.IPostBackDataHandler, System.Web.UI.ITextControl
    {
        public TextBox() { }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.AutoCompleteType.None)]
        [System.Web.UI.ThemeableAttribute(false)]
        public virtual System.Web.UI.WebControls.AutoCompleteType AutoCompleteType { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(false)]
        [System.Web.UI.ThemeableAttribute(false)]
        public virtual bool AutoPostBack { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(false)]
        [System.Web.UI.ThemeableAttribute(false)]
        public virtual bool CausesValidation { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(0)]
        public virtual int Columns { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(0)]
        [System.Web.UI.ThemeableAttribute(false)]
        public virtual int MaxLength { get { throw null; } set { } }
        [System.ComponentModel.BindableAttribute(true)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        [System.Web.UI.ThemeableAttribute(false)]
        public virtual bool ReadOnly { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(0)]
        [System.Web.UI.ThemeableAttribute(false)]
        public virtual int Rows { get { throw null; } set { } }
        protected override System.Web.UI.HtmlTextWriterTag TagKey { get { throw null; } }
        [System.ComponentModel.BindableAttribute(true, System.ComponentModel.BindingDirection.TwoWay)]
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.ComponentModel.Design.MultilineStringEditor,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.ComponentModel.LocalizableAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.EncodedInnerDefaultProperty)]
        public virtual string Text { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.TextBoxMode.SingleLine)]
        [System.Web.UI.ThemeableAttribute(false)]
        public virtual System.Web.UI.WebControls.TextBoxMode TextMode { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.Web.UI.ThemeableAttribute(false)]
        public virtual string ValidationGroup { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(true)]
        public virtual bool Wrap { get { throw null; } set { } }
        public event System.EventHandler TextChanged { add { } remove { } }
        protected override void AddAttributesToRender(System.Web.UI.HtmlTextWriter writer) { }
        protected override void AddParsedSubObject(object obj) { }
        protected virtual bool LoadPostData(string postDataKey, System.Collections.Specialized.NameValueCollection postCollection) { throw null; }
        protected internal override void OnPreRender(System.EventArgs e) { }
        protected virtual void OnTextChanged(System.EventArgs e) { }
        protected virtual void RaisePostDataChangedEvent() { }
        protected internal override void Render(System.Web.UI.HtmlTextWriter writer) { }
        protected override object SaveViewState() { throw null; }
        bool System.Web.UI.IPostBackDataHandler.LoadPostData(string postDataKey, System.Collections.Specialized.NameValueCollection postCollection) { throw null; }
        void System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent() { }
    }
    public partial class TextBoxControlBuilder : System.Web.UI.ControlBuilder
    {
        public TextBoxControlBuilder() { }
        public override bool AllowWhitespaceLiterals() { throw null; }
        public override bool HtmlDecodeLiterals() { throw null; }
    }
    public enum TextBoxMode
    {
        Color = 3,
        Date = 4,
        DateTime = 5,
        DateTimeLocal = 6,
        Email = 7,
        Month = 8,
        MultiLine = 1,
        Number = 9,
        Password = 2,
        Phone = 12,
        Range = 10,
        Search = 11,
        SingleLine = 0,
        Time = 13,
        Url = 14,
        Week = 15,
    }
    public enum TitleFormat
    {
        Month = 0,
        MonthYear = 1,
    }
    [System.Web.UI.ParseChildrenAttribute(true, "ChildNodes")]
    public partial class TreeNode : System.ICloneable, System.Web.UI.IStateManager
    {
        public TreeNode() { }
        public TreeNode(string text) { }
        public TreeNode(string text, string value) { }
        public TreeNode(string text, string value, string imageUrl) { }
        public TreeNode(string text, string value, string imageUrl, string navigateUrl, string target) { }
        protected internal TreeNode(System.Web.UI.WebControls.TreeView owner, bool isRoot) { }
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool Checked { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.MergablePropertyAttribute(false)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerDefaultProperty)]
        public System.Web.UI.WebControls.TreeNodeCollection ChildNodes { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public bool DataBound { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DefaultValueAttribute(null)]
        public object DataItem { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public string DataPath { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public int Depth { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(typeof(System.Nullable<bool>), "")]
        public System.Nullable<bool> Expanded { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.LocalizableAttribute(true)]
        public string ImageToolTip { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.UrlPropertyAttribute]
        public string ImageUrl { get { throw null; } set { } }
        protected bool IsTrackingViewState { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.UrlPropertyAttribute]
        public string NavigateUrl { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public System.Web.UI.WebControls.TreeNode Parent { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool PopulateOnDemand { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.TreeNodeSelectAction.Select)]
        public System.Web.UI.WebControls.TreeNodeSelectAction SelectAction { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool Selected { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(typeof(System.Nullable<bool>), "")]
        public System.Nullable<bool> ShowCheckBox { get { throw null; } set { } }
        bool System.Web.UI.IStateManager.IsTrackingViewState { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute("")]
        public string Target { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.LocalizableAttribute(true)]
        public string Text { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.LocalizableAttribute(true)]
        public string ToolTip { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.LocalizableAttribute(true)]
        public string Value { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public string ValuePath { get { throw null; } }
        protected virtual object Clone() { throw null; }
        public void Collapse() { }
        public void CollapseAll() { }
        public void Expand() { }
        public void ExpandAll() { }
        protected virtual void LoadViewState(object state) { }
        protected virtual void RenderPostText(System.Web.UI.HtmlTextWriter writer) { }
        protected virtual void RenderPreText(System.Web.UI.HtmlTextWriter writer) { }
        protected virtual object SaveViewState() { throw null; }
        public void Select() { }
        object System.ICloneable.Clone() { throw null; }
        void System.Web.UI.IStateManager.LoadViewState(object state) { }
        object System.Web.UI.IStateManager.SaveViewState() { throw null; }
        void System.Web.UI.IStateManager.TrackViewState() { }
        public void ToggleExpandState() { }
        protected void TrackViewState() { }
    }
    [System.ComponentModel.DefaultPropertyAttribute("TextField")]
    public sealed partial class TreeNodeBinding : System.ICloneable, System.Web.UI.IDataSourceViewSchemaAccessor, System.Web.UI.IStateManager
    {
        public TreeNodeBinding() { }
        [System.ComponentModel.DefaultValueAttribute("")]
        public string DataMember { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(-1)]
        [System.ComponentModel.TypeConverterAttribute("System.Web.UI.Design.WebControls.TreeNodeBindingDepthConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
        public int Depth { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.LocalizableAttribute(true)]
        public string FormatString { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.LocalizableAttribute(true)]
        public string ImageToolTip { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.TypeConverterAttribute("System.Web.UI.Design.DataSourceViewSchemaConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
        public string ImageToolTipField { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.UrlPropertyAttribute]
        public string ImageUrl { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.TypeConverterAttribute("System.Web.UI.Design.DataSourceViewSchemaConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
        public string ImageUrlField { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.UrlPropertyAttribute]
        public string NavigateUrl { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.TypeConverterAttribute("System.Web.UI.Design.DataSourceViewSchemaConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
        public string NavigateUrlField { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool PopulateOnDemand { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.TreeNodeSelectAction.Select)]
        public System.Web.UI.WebControls.TreeNodeSelectAction SelectAction { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(typeof(System.Nullable<bool>), "")]
        public System.Nullable<bool> ShowCheckBox { get { throw null; } set { } }
        object System.Web.UI.IDataSourceViewSchemaAccessor.DataSourceViewSchema { get { throw null; } set { } }
        bool System.Web.UI.IStateManager.IsTrackingViewState { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute("")]
        public string Target { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.TypeConverterAttribute("System.Web.UI.Design.DataSourceViewSchemaConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
        public string TargetField { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.LocalizableAttribute(true)]
        public string Text { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.TypeConverterAttribute("System.Web.UI.Design.DataSourceViewSchemaConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
        public string TextField { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.LocalizableAttribute(true)]
        public string ToolTip { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.TypeConverterAttribute("System.Web.UI.Design.DataSourceViewSchemaConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
        public string ToolTipField { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.LocalizableAttribute(true)]
        public string Value { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.TypeConverterAttribute("System.Web.UI.Design.DataSourceViewSchemaConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
        public string ValueField { get { throw null; } set { } }
        object System.ICloneable.Clone() { throw null; }
        void System.Web.UI.IStateManager.LoadViewState(object state) { }
        object System.Web.UI.IStateManager.SaveViewState() { throw null; }
        void System.Web.UI.IStateManager.TrackViewState() { }
        public override string ToString() { throw null; }
    }
    public sealed partial class TreeNodeBindingCollection : System.Web.UI.StateManagedCollection
    {
        internal TreeNodeBindingCollection() { }
        public System.Web.UI.WebControls.TreeNodeBinding this[int i] { get { throw null; } set { } }
        public int Add(System.Web.UI.WebControls.TreeNodeBinding binding) { throw null; }
        public bool Contains(System.Web.UI.WebControls.TreeNodeBinding binding) { throw null; }
        public void CopyTo(System.Web.UI.WebControls.TreeNodeBinding[] bindingArray, int index) { }
        protected override object CreateKnownType(int index) { throw null; }
        protected override System.Type[] GetKnownTypes() { throw null; }
        public int IndexOf(System.Web.UI.WebControls.TreeNodeBinding binding) { throw null; }
        public void Insert(int index, System.Web.UI.WebControls.TreeNodeBinding binding) { }
        protected override void OnClear() { }
        protected override void OnRemoveComplete(int index, object value) { }
        protected override void OnValidate(object value) { }
        public void Remove(System.Web.UI.WebControls.TreeNodeBinding binding) { }
        public void RemoveAt(int index) { }
        protected override void SetDirtyObject(object o) { }
    }
    public sealed partial class TreeNodeCollection : System.Collections.ICollection, System.Collections.IEnumerable, System.Web.UI.IStateManager
    {
        public TreeNodeCollection() { }
        public TreeNodeCollection(System.Web.UI.WebControls.TreeNode owner) { }
        public int Count { get { throw null; } }
        public bool IsSynchronized { get { throw null; } }
        public System.Web.UI.WebControls.TreeNode this[int index] { get { throw null; } }
        public object SyncRoot { get { throw null; } }
        bool System.Web.UI.IStateManager.IsTrackingViewState { get { throw null; } }
        public void Add(System.Web.UI.WebControls.TreeNode child) { }
        public void AddAt(int index, System.Web.UI.WebControls.TreeNode child) { }
        public void Clear() { }
        public bool Contains(System.Web.UI.WebControls.TreeNode c) { throw null; }
        public void CopyTo(System.Web.UI.WebControls.TreeNode[] nodeArray, int index) { }
        public System.Collections.IEnumerator GetEnumerator() { throw null; }
        public int IndexOf(System.Web.UI.WebControls.TreeNode value) { throw null; }
        public void Remove(System.Web.UI.WebControls.TreeNode value) { }
        public void RemoveAt(int index) { }
        void System.Collections.ICollection.CopyTo(System.Array array, int index) { }
        void System.Web.UI.IStateManager.LoadViewState(object state) { }
        object System.Web.UI.IStateManager.SaveViewState() { throw null; }
        void System.Web.UI.IStateManager.TrackViewState() { }
    }
    public sealed partial class TreeNodeEventArgs : System.EventArgs
    {
        public TreeNodeEventArgs(System.Web.UI.WebControls.TreeNode node) { }
        public System.Web.UI.WebControls.TreeNode Node { get { throw null; } }
    }
    public delegate void TreeNodeEventHandler(object sender, System.Web.UI.WebControls.TreeNodeEventArgs e);
    public enum TreeNodeSelectAction
    {
        Expand = 1,
        None = 3,
        Select = 0,
        SelectExpand = 2,
    }
    public sealed partial class TreeNodeStyle : System.Web.UI.WebControls.Style
    {
        public TreeNodeStyle() { }
        public TreeNodeStyle(System.Web.UI.StateBag bag) { }
        [System.ComponentModel.DefaultValueAttribute(typeof(System.Web.UI.WebControls.Unit), "")]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        public System.Web.UI.WebControls.Unit ChildNodesPadding { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(typeof(System.Web.UI.WebControls.Unit), "")]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        public System.Web.UI.WebControls.Unit HorizontalPadding { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.UrlPropertyAttribute]
        public string ImageUrl { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(typeof(System.Web.UI.WebControls.Unit), "")]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        public System.Web.UI.WebControls.Unit NodeSpacing { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(typeof(System.Web.UI.WebControls.Unit), "")]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        public System.Web.UI.WebControls.Unit VerticalPadding { get { throw null; } set { } }
        public override void CopyFrom(System.Web.UI.WebControls.Style s) { }
        protected override void FillStyleAttributes(System.Web.UI.CssStyleCollection attributes, System.Web.UI.IUrlResolutionService urlResolver) { }
        public override void MergeWith(System.Web.UI.WebControls.Style s) { }
        public override void Reset() { }
    }
    public sealed partial class TreeNodeStyleCollection : System.Web.UI.StateManagedCollection
    {
        internal TreeNodeStyleCollection() { }
        public System.Web.UI.WebControls.TreeNodeStyle this[int i] { get { throw null; } set { } }
        public int Add(System.Web.UI.WebControls.TreeNodeStyle style) { throw null; }
        public bool Contains(System.Web.UI.WebControls.TreeNodeStyle style) { throw null; }
        public void CopyTo(System.Web.UI.WebControls.TreeNodeStyle[] styleArray, int index) { }
        protected override object CreateKnownType(int index) { throw null; }
        protected override System.Type[] GetKnownTypes() { throw null; }
        public int IndexOf(System.Web.UI.WebControls.TreeNodeStyle style) { throw null; }
        public void Insert(int index, System.Web.UI.WebControls.TreeNodeStyle style) { }
        protected override void OnInsert(int index, object value) { }
        public void Remove(System.Web.UI.WebControls.TreeNodeStyle style) { }
        public void RemoveAt(int index) { }
        protected override void SetDirtyObject(object o) { }
    }
    [System.FlagsAttribute]
    public enum TreeNodeTypes
    {
        All = 7,
        Leaf = 4,
        None = 0,
        Parent = 2,
        Root = 1,
    }
    [System.ComponentModel.DefaultEventAttribute("SelectedNodeChanged")]
    [System.ComponentModel.DesignerAttribute("System.Web.UI.Design.WebControls.TreeViewDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.Web.UI.ControlValuePropertyAttribute("SelectedValue")]
    [System.Web.UI.SupportsEventValidationAttribute]
    public partial class TreeView : System.Web.UI.WebControls.HierarchicalDataBoundControl, System.Web.UI.ICallbackEventHandler, System.Web.UI.IPostBackDataHandler, System.Web.UI.IPostBackEventHandler
    {
        public TreeView() { }
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool AutoGenerateDataBindings { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public System.Web.UI.WebControls.TreeNodeCollection CheckedNodes { get { throw null; } }
        [System.ComponentModel.LocalizableAttribute(true)]
        public string CollapseImageToolTip { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.UrlPropertyAttribute]
        public string CollapseImageUrl { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.WebControls.TreeViewBindingsEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.ComponentModel.MergablePropertyAttribute(false)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.TreeNodeBindingCollection DataBindings { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(true)]
        [System.Web.UI.ThemeableAttribute(false)]
        public bool EnableClientScript { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(-1)]
        [System.ComponentModel.TypeConverterAttribute("System.Web.UI.WebControls.TreeView.TreeViewExpandDepthConverter")]
        public int ExpandDepth { get { throw null; } set { } }
        [System.ComponentModel.LocalizableAttribute(true)]
        public string ExpandImageToolTip { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.UrlPropertyAttribute]
        public string ExpandImageUrl { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.Style HoverNodeStyle { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.TreeViewImageSet.Custom)]
        public System.Web.UI.WebControls.TreeViewImageSet ImageSet { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.TreeNodeStyle LeafNodeStyle { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.WebControls.TreeNodeStyleCollectionEditor,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.TreeNodeStyleCollection LevelStyles { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute("")]
        public string LineImagesFolder { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(-1)]
        public int MaxDataBindDepth { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(20)]
        public int NodeIndent { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.WebControls.TreeNodeCollectionEditor,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.ComponentModel.MergablePropertyAttribute(false)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.TreeNodeCollection Nodes { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.TreeNodeStyle NodeStyle { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool NodeWrap { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.UrlPropertyAttribute]
        public string NoExpandImageUrl { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.TreeNodeStyle ParentNodeStyle { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute('/')]
        public char PathSeparator { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool PopulateNodesFromClient { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.TreeNodeStyle RootNodeStyle { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public System.Web.UI.WebControls.TreeNode SelectedNode { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.TreeNodeStyle SelectedNodeStyle { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public string SelectedValue { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.TreeNodeTypes.None)]
        public System.Web.UI.WebControls.TreeNodeTypes ShowCheckBoxes { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool ShowExpandCollapse { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool ShowLines { get { throw null; } set { } }
        [System.ComponentModel.LocalizableAttribute(true)]
        public string SkipLinkText { get { throw null; } set { } }
        protected override System.Web.UI.HtmlTextWriterTag TagKey { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute("")]
        public string Target { get { throw null; } set { } }
        public override bool Visible { get { throw null; } set { } }
        public event System.EventHandler SelectedNodeChanged { add { } remove { } }
        public event System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeCheckChanged { add { } remove { } }
        public event System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeCollapsed { add { } remove { } }
        public event System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeDataBound { add { } remove { } }
        public event System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeExpanded { add { } remove { } }
        public event System.Web.UI.WebControls.TreeNodeEventHandler TreeNodePopulate { add { } remove { } }
        protected override void AddAttributesToRender(System.Web.UI.HtmlTextWriter writer) { }
        public void CollapseAll() { }
        protected override System.Web.UI.ControlCollection CreateControlCollection() { throw null; }
        protected internal virtual System.Web.UI.WebControls.TreeNode CreateNode() { throw null; }
        public sealed override void DataBind() { }
        public void ExpandAll() { }
        public System.Web.UI.WebControls.TreeNode FindNode(string valuePath) { throw null; }
        protected virtual string GetCallbackResult() { throw null; }
        protected virtual bool LoadPostData(string postDataKey, System.Collections.Specialized.NameValueCollection postCollection) { throw null; }
        protected override void LoadViewState(object state) { }
        protected internal override void OnInit(System.EventArgs e) { }
        protected internal override void OnPreRender(System.EventArgs e) { }
        protected virtual void OnSelectedNodeChanged(System.EventArgs e) { }
        protected virtual void OnTreeNodeCheckChanged(System.Web.UI.WebControls.TreeNodeEventArgs e) { }
        protected virtual void OnTreeNodeCollapsed(System.Web.UI.WebControls.TreeNodeEventArgs e) { }
        protected virtual void OnTreeNodeDataBound(System.Web.UI.WebControls.TreeNodeEventArgs e) { }
        protected virtual void OnTreeNodeExpanded(System.Web.UI.WebControls.TreeNodeEventArgs e) { }
        protected virtual void OnTreeNodePopulate(System.Web.UI.WebControls.TreeNodeEventArgs e) { }
        protected internal override void PerformDataBinding() { }
        protected virtual void RaiseCallbackEvent(string eventArgument) { }
        protected virtual void RaisePostBackEvent(string eventArgument) { }
        protected virtual void RaisePostDataChangedEvent() { }
        public override void RenderBeginTag(System.Web.UI.HtmlTextWriter writer) { }
        protected internal override void RenderContents(System.Web.UI.HtmlTextWriter writer) { }
        public override void RenderEndTag(System.Web.UI.HtmlTextWriter writer) { }
        protected override object SaveViewState() { throw null; }
        protected void SetNodeDataBound(System.Web.UI.WebControls.TreeNode node, bool dataBound) { }
        protected void SetNodeDataItem(System.Web.UI.WebControls.TreeNode node, object dataItem) { }
        protected void SetNodeDataPath(System.Web.UI.WebControls.TreeNode node, string dataPath) { }
        string System.Web.UI.ICallbackEventHandler.GetCallbackResult() { throw null; }
        void System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(string eventArgument) { }
        bool System.Web.UI.IPostBackDataHandler.LoadPostData(string postDataKey, System.Collections.Specialized.NameValueCollection postCollection) { throw null; }
        void System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent() { }
        void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(string eventArgument) { }
        protected override void TrackViewState() { }
    }
    public enum TreeViewImageSet
    {
        Arrows = 10,
        BulletedList = 6,
        BulletedList2 = 7,
        BulletedList3 = 8,
        BulletedList4 = 9,
        Contacts = 12,
        Custom = 0,
        Events = 14,
        Faq = 15,
        Inbox = 13,
        Msdn = 2,
        News = 11,
        Simple = 4,
        Simple2 = 5,
        WindowsHelp = 3,
        XPFileExplorer = 1,
    }
    [System.ComponentModel.TypeConverterAttribute(typeof(System.Web.UI.WebControls.UnitConverter))]
    [System.SerializableAttribute]
    [System.Runtime.InteropServices.StructLayoutAttribute(System.Runtime.InteropServices.LayoutKind.Sequential)]
    public partial struct Unit
    {
        private int _dummyPrimitive;
        public static readonly System.Web.UI.WebControls.Unit Empty;
        public Unit(double value) { throw null; }
        public Unit(double value, System.Web.UI.WebControls.UnitType type) { throw null; }
        public Unit(int value) { throw null; }
        public Unit(string value) { throw null; }
        public Unit(string value, System.Globalization.CultureInfo culture) { throw null; }
        public bool IsEmpty { get { throw null; } }
        public System.Web.UI.WebControls.UnitType Type { get { throw null; } }
        public double Value { get { throw null; } }
        public override bool Equals(object obj) { throw null; }
        public override int GetHashCode() { throw null; }
        public static bool operator ==(System.Web.UI.WebControls.Unit left, System.Web.UI.WebControls.Unit right) { throw null; }
        public static implicit operator System.Web.UI.WebControls.Unit (int n) { throw null; }
        public static bool operator !=(System.Web.UI.WebControls.Unit left, System.Web.UI.WebControls.Unit right) { throw null; }
        public static System.Web.UI.WebControls.Unit Parse(string s) { throw null; }
        public static System.Web.UI.WebControls.Unit Parse(string s, System.Globalization.CultureInfo culture) { throw null; }
        public static System.Web.UI.WebControls.Unit Percentage(double n) { throw null; }
        public static System.Web.UI.WebControls.Unit Pixel(int n) { throw null; }
        public static System.Web.UI.WebControls.Unit Point(int n) { throw null; }
        public override string ToString() { throw null; }
        public string ToString(System.Globalization.CultureInfo culture) { throw null; }
        public string ToString(System.IFormatProvider formatProvider) { throw null; }
    }
    public partial class UnitConverter : System.ComponentModel.TypeConverter
    {
        public UnitConverter() { }
        public override bool CanConvertFrom(System.ComponentModel.ITypeDescriptorContext context, System.Type sourceType) { throw null; }
        public override bool CanConvertTo(System.ComponentModel.ITypeDescriptorContext context, System.Type destinationType) { throw null; }
        public override object ConvertFrom(System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value) { throw null; }
        public override object ConvertTo(System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, System.Type destinationType) { throw null; }
    }
    public enum UnitType
    {
        Cm = 6,
        Em = 8,
        Ex = 9,
        Inch = 4,
        Mm = 5,
        Percentage = 7,
        Pica = 3,
        Pixel = 1,
        Point = 2,
    }
    public partial class ValidatedControlConverter : System.Web.UI.WebControls.ControlIDConverter
    {
        public ValidatedControlConverter() { }
        protected override bool FilterControl(System.Web.UI.Control control) { throw null; }
    }
    public enum ValidationCompareOperator
    {
        DataTypeCheck = 6,
        Equal = 0,
        GreaterThan = 2,
        GreaterThanEqual = 3,
        LessThan = 4,
        LessThanEqual = 5,
        NotEqual = 1,
    }
    public enum ValidationDataType
    {
        Currency = 4,
        Date = 3,
        Double = 2,
        Integer = 1,
        String = 0,
    }
    [System.ComponentModel.DesignerAttribute("System.Web.UI.Design.WebControls.ValidationSummaryDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    public partial class ValidationSummary : System.Web.UI.WebControls.WebControl
    {
        public ValidationSummary() { }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.ValidationSummaryDisplayMode.BulletList)]
        public System.Web.UI.WebControls.ValidationSummaryDisplayMode DisplayMode { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(true)]
        [System.Web.UI.ThemeableAttribute(false)]
        public bool EnableClientScript { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(typeof(System.Drawing.Color), "Red")]
        public override System.Drawing.Color ForeColor { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.LocalizableAttribute(true)]
        public string HeaderText { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool ShowMessageBox { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(true)]
        [System.Web.UI.ThemeableAttribute(false)]
        public bool ShowModelStateErrors { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool ShowSummary { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(true)]
        [System.Web.UI.ThemeableAttribute(false)]
        public bool ShowValidationErrors { get { throw null; } set { } }
        public override bool SupportsDisabledAttribute { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.Web.UI.ThemeableAttribute(false)]
        public virtual string ValidationGroup { get { throw null; } set { } }
        protected override void AddAttributesToRender(System.Web.UI.HtmlTextWriter writer) { }
        protected internal override void OnInit(System.EventArgs e) { }
        protected internal override void OnPreRender(System.EventArgs e) { }
        protected internal override void Render(System.Web.UI.HtmlTextWriter writer) { }
    }
    public enum ValidationSummaryDisplayMode
    {
        BulletList = 1,
        List = 0,
        SingleParagraph = 2,
    }
    public enum ValidatorDisplay
    {
        Dynamic = 2,
        None = 0,
        Static = 1,
    }
    [System.ComponentModel.TypeConverterAttribute("System.Web.UI.WebControls.VerticalAlignConverter")]
    public enum VerticalAlign
    {
        Bottom = 3,
        Middle = 2,
        NotSet = 0,
        Top = 1,
    }
    [System.ComponentModel.DesignerAttribute("System.Web.UI.Design.WebControls.ViewDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.Web.UI.ParseChildrenAttribute(false)]
    [System.Web.UI.ToolboxDataAttribute("<{0}:View runat=\"server\"></{0}:View>")]
    public partial class View : System.Web.UI.Control
    {
        public View() { }
        [System.ComponentModel.BrowsableAttribute(true)]
        public override bool EnableTheming { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public override bool Visible { get { throw null; } set { } }
        public event System.EventHandler Activate { add { } remove { } }
        public event System.EventHandler Deactivate { add { } remove { } }
        protected internal virtual void OnActivate(System.EventArgs e) { }
        protected internal virtual void OnDeactivate(System.EventArgs e) { }
    }
    public partial class ViewCollection : System.Web.UI.ControlCollection
    {
        public ViewCollection(System.Web.UI.Control owner) : base (default(System.Web.UI.Control)) { }
        public new System.Web.UI.WebControls.View this[int i] { get { throw null; } }
        public override void Add(System.Web.UI.Control v) { }
        public override void AddAt(int index, System.Web.UI.Control v) { }
    }
    public partial class WebColorConverter : System.Drawing.ColorConverter
    {
        public WebColorConverter() { }
        public override object ConvertFrom(System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value) { throw null; }
        public override object ConvertTo(System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, System.Type destinationType) { throw null; }
    }
    [System.Web.UI.ParseChildrenAttribute(true)]
    [System.Web.UI.PersistChildrenAttribute(false)]
    [System.Web.UI.ThemeableAttribute(true)]
    public partial class WebControl : System.Web.UI.Control, System.Web.UI.IAttributeAccessor
    {
        protected WebControl() { }
        protected WebControl(string tag) { }
        public WebControl(System.Web.UI.HtmlTextWriterTag tag) { }
        [System.ComponentModel.DefaultValueAttribute("")]
        public virtual string AccessKey { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public System.Web.UI.AttributeCollection Attributes { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(typeof(System.Drawing.Color), "")]
        [System.ComponentModel.TypeConverterAttribute(typeof(System.Web.UI.WebControls.WebColorConverter))]
        public virtual System.Drawing.Color BackColor { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(typeof(System.Drawing.Color), "")]
        [System.ComponentModel.TypeConverterAttribute(typeof(System.Web.UI.WebControls.WebColorConverter))]
        public virtual System.Drawing.Color BorderColor { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.BorderStyle.NotSet)]
        public virtual System.Web.UI.WebControls.BorderStyle BorderStyle { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(typeof(System.Web.UI.WebControls.Unit), "")]
        public virtual System.Web.UI.WebControls.Unit BorderWidth { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public System.Web.UI.WebControls.Style ControlStyle { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool ControlStyleCreated { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.Web.UI.CssClassPropertyAttribute]
        public virtual string CssClass { get { throw null; } set { } }
        public static string DisabledCssClass { get { throw null; } set { } }
        [System.ComponentModel.BindableAttribute(true)]
        [System.ComponentModel.DefaultValueAttribute(true)]
        [System.Web.UI.ThemeableAttribute(false)]
        public virtual bool Enabled { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(true)]
        public override bool EnableTheming { get { throw null; } set { } }
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        public virtual System.Web.UI.WebControls.FontInfo Font { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(typeof(System.Drawing.Color), "")]
        [System.ComponentModel.TypeConverterAttribute(typeof(System.Web.UI.WebControls.WebColorConverter))]
        public virtual System.Drawing.Color ForeColor { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public bool HasAttributes { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(typeof(System.Web.UI.WebControls.Unit), "")]
        public virtual System.Web.UI.WebControls.Unit Height { get { throw null; } set { } }
        protected internal bool IsEnabled { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(true)]
        public override string SkinID { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public System.Web.UI.CssStyleCollection Style { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        public virtual bool SupportsDisabledAttribute { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute((short)0)]
        public virtual short TabIndex { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        protected virtual System.Web.UI.HtmlTextWriterTag TagKey { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        protected virtual string TagName { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string ToolTip { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(typeof(System.Web.UI.WebControls.Unit), "")]
        public virtual System.Web.UI.WebControls.Unit Width { get { throw null; } set { } }
        protected virtual void AddAttributesToRender(System.Web.UI.HtmlTextWriter writer) { }
        public void ApplyStyle(System.Web.UI.WebControls.Style s) { }
        public void CopyBaseAttributes(System.Web.UI.WebControls.WebControl controlSrc) { }
        protected virtual System.Web.UI.WebControls.Style CreateControlStyle() { throw null; }
        protected override void LoadViewState(object savedState) { }
        public void MergeStyle(System.Web.UI.WebControls.Style s) { }
        protected internal override void Render(System.Web.UI.HtmlTextWriter writer) { }
        public virtual void RenderBeginTag(System.Web.UI.HtmlTextWriter writer) { }
        protected internal virtual void RenderContents(System.Web.UI.HtmlTextWriter writer) { }
        public virtual void RenderEndTag(System.Web.UI.HtmlTextWriter writer) { }
        protected override object SaveViewState() { throw null; }
        string System.Web.UI.IAttributeAccessor.GetAttribute(string name) { throw null; }
        void System.Web.UI.IAttributeAccessor.SetAttribute(string name, string value) { }
        protected override void TrackViewState() { }
    }
    [System.ComponentModel.BindableAttribute(false)]
    [System.ComponentModel.DefaultEventAttribute("FinishButtonClick")]
    [System.ComponentModel.DesignerAttribute("System.Web.UI.Design.WebControls.WizardDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.Web.UI.ToolboxDataAttribute("<{0}:Wizard runat=\"server\"> <WizardSteps> <asp:WizardStep title=\"Step 1\" runat=\"server\"></asp:WizardStep> <asp:WizardStep title=\"Step 2\" runat=\"server\"></asp:WizardStep> </WizardSteps> </{0}:Wizard>")]
    public partial class Wizard : System.Web.UI.WebControls.CompositeControl
    {
        protected static readonly string CancelButtonID;
        public static readonly string CancelCommandName;
        protected static readonly string CustomFinishButtonID;
        protected static readonly string CustomNextButtonID;
        protected static readonly string CustomPreviousButtonID;
        protected static readonly string DataListID;
        protected static readonly string FinishButtonID;
        protected static readonly string FinishPreviousButtonID;
        public static readonly string HeaderPlaceholderId;
        public static readonly string MoveCompleteCommandName;
        public static readonly string MoveNextCommandName;
        public static readonly string MovePreviousCommandName;
        public static readonly string MoveToCommandName;
        public static readonly string NavigationPlaceholderId;
        protected static readonly string SideBarButtonID;
        public static readonly string SideBarPlaceholderId;
        protected static readonly string StartNextButtonID;
        protected static readonly string StepNextButtonID;
        protected static readonly string StepPreviousButtonID;
        public static readonly string WizardStepPlaceholderId;
        public Wizard() { }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public System.Web.UI.WebControls.WizardStepBase ActiveStep { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(-1)]
        [System.Web.UI.ThemeableAttribute(false)]
        public virtual int ActiveStepIndex { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.UrlPropertyAttribute]
        public virtual string CancelButtonImageUrl { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.Style CancelButtonStyle { get { throw null; } }
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string CancelButtonText { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.ButtonType.Button)]
        public virtual System.Web.UI.WebControls.ButtonType CancelButtonType { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.ThemeableAttribute(false)]
        [System.Web.UI.UrlPropertyAttribute]
        public virtual string CancelDestinationPageUrl { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(0)]
        public virtual int CellPadding { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(0)]
        public virtual int CellSpacing { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(false)]
        [System.Web.UI.ThemeableAttribute(false)]
        public virtual bool DisplayCancelButton { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(true)]
        [System.Web.UI.ThemeableAttribute(false)]
        public virtual bool DisplaySideBar { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.UrlPropertyAttribute]
        public virtual string FinishCompleteButtonImageUrl { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.Style FinishCompleteButtonStyle { get { throw null; } }
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string FinishCompleteButtonText { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.ButtonType.Button)]
        public virtual System.Web.UI.WebControls.ButtonType FinishCompleteButtonType { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.ThemeableAttribute(false)]
        [System.Web.UI.UrlPropertyAttribute]
        public virtual string FinishDestinationPageUrl { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        [System.Web.UI.TemplateContainerAttribute(typeof(System.Web.UI.WebControls.Wizard))]
        public virtual System.Web.UI.ITemplate FinishNavigationTemplate { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.UrlPropertyAttribute]
        public virtual string FinishPreviousButtonImageUrl { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.Style FinishPreviousButtonStyle { get { throw null; } }
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string FinishPreviousButtonText { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.ButtonType.Button)]
        public virtual System.Web.UI.WebControls.ButtonType FinishPreviousButtonType { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.TableItemStyle HeaderStyle { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        [System.Web.UI.TemplateContainerAttribute(typeof(System.Web.UI.WebControls.Wizard))]
        public virtual System.Web.UI.ITemplate HeaderTemplate { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string HeaderText { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        [System.Web.UI.TemplateContainerAttribute(typeof(System.Web.UI.WebControls.Wizard))]
        public virtual System.Web.UI.ITemplate LayoutTemplate { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.Style NavigationButtonStyle { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.TableItemStyle NavigationStyle { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.Style SideBarButtonStyle { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.TableItemStyle SideBarStyle { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        [System.Web.UI.TemplateContainerAttribute(typeof(System.Web.UI.WebControls.Wizard))]
        public virtual System.Web.UI.ITemplate SideBarTemplate { get { throw null; } set { } }
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string SkipLinkText { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        [System.Web.UI.TemplateContainerAttribute(typeof(System.Web.UI.WebControls.Wizard))]
        public virtual System.Web.UI.ITemplate StartNavigationTemplate { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.UrlPropertyAttribute]
        public virtual string StartNextButtonImageUrl { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.Style StartNextButtonStyle { get { throw null; } }
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string StartNextButtonText { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.ButtonType.Button)]
        public virtual System.Web.UI.WebControls.ButtonType StartNextButtonType { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        [System.Web.UI.TemplateContainerAttribute(typeof(System.Web.UI.WebControls.Wizard))]
        public virtual System.Web.UI.ITemplate StepNavigationTemplate { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.UrlPropertyAttribute]
        public virtual string StepNextButtonImageUrl { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.Style StepNextButtonStyle { get { throw null; } }
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string StepNextButtonText { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.ButtonType.Button)]
        public virtual System.Web.UI.WebControls.ButtonType StepNextButtonType { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.UrlPropertyAttribute]
        public virtual string StepPreviousButtonImageUrl { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.Style StepPreviousButtonStyle { get { throw null; } }
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string StepPreviousButtonText { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.ButtonType.Button)]
        public virtual System.Web.UI.WebControls.ButtonType StepPreviousButtonType { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.TableItemStyle StepStyle { get { throw null; } }
        protected override System.Web.UI.HtmlTextWriterTag TagKey { get { throw null; } }
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.WebControls.WizardStepCollectionEditor,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        [System.Web.UI.ThemeableAttribute(false)]
        public virtual System.Web.UI.WebControls.WizardStepCollection WizardSteps { get { throw null; } }
        public event System.EventHandler ActiveStepChanged { add { } remove { } }
        public event System.EventHandler CancelButtonClick { add { } remove { } }
        public event System.Web.UI.WebControls.WizardNavigationEventHandler FinishButtonClick { add { } remove { } }
        public event System.Web.UI.WebControls.WizardNavigationEventHandler NextButtonClick { add { } remove { } }
        public event System.Web.UI.WebControls.WizardNavigationEventHandler PreviousButtonClick { add { } remove { } }
        public virtual event System.Web.UI.WebControls.WizardNavigationEventHandler SideBarButtonClick { add { } remove { } }
        protected virtual bool AllowNavigationToStep(int index) { throw null; }
        protected internal override void CreateChildControls() { }
        protected override System.Web.UI.ControlCollection CreateControlCollection() { throw null; }
        protected virtual void CreateControlHierarchy() { }
        protected override System.Web.UI.WebControls.Style CreateControlStyle() { throw null; }
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, Unrestricted=true)]
        protected override System.Collections.IDictionary GetDesignModeState() { throw null; }
        public System.Collections.ICollection GetHistory() { throw null; }
        public System.Web.UI.WebControls.WizardStepType GetStepType(System.Web.UI.WebControls.WizardStepBase wizardStep, int index) { throw null; }
        protected internal override void LoadControlState(object state) { }
        protected override void LoadViewState(object savedState) { }
        public void MoveTo(System.Web.UI.WebControls.WizardStepBase wizardStep) { }
        protected virtual void OnActiveStepChanged(object source, System.EventArgs e) { }
        protected override bool OnBubbleEvent(object source, System.EventArgs e) { throw null; }
        protected virtual void OnCancelButtonClick(System.EventArgs e) { }
        protected virtual void OnFinishButtonClick(System.Web.UI.WebControls.WizardNavigationEventArgs e) { }
        protected internal override void OnInit(System.EventArgs e) { }
        protected virtual void OnNextButtonClick(System.Web.UI.WebControls.WizardNavigationEventArgs e) { }
        protected virtual void OnPreviousButtonClick(System.Web.UI.WebControls.WizardNavigationEventArgs e) { }
        protected virtual void OnSideBarButtonClick(System.Web.UI.WebControls.WizardNavigationEventArgs e) { }
        protected internal void RegisterCommandEvents(System.Web.UI.WebControls.IButtonControl button) { }
        protected internal override void Render(System.Web.UI.HtmlTextWriter writer) { }
        protected internal override object SaveControlState() { throw null; }
        protected override object SaveViewState() { throw null; }
        protected override void TrackViewState() { }
    }
    public partial class WizardNavigationEventArgs : System.EventArgs
    {
        public WizardNavigationEventArgs(int currentStepIndex, int nextStepIndex) { }
        public bool Cancel { get { throw null; } set { } }
        public int CurrentStepIndex { get { throw null; } }
        public int NextStepIndex { get { throw null; } }
    }
    public delegate void WizardNavigationEventHandler(object sender, System.Web.UI.WebControls.WizardNavigationEventArgs e);
    [System.ComponentModel.BindableAttribute(false)]
    [System.ComponentModel.ToolboxItemAttribute(false)]
    [System.Web.UI.ControlBuilderAttribute(typeof(System.Web.UI.WebControls.WizardStepControlBuilder))]
    public sealed partial class WizardStep : System.Web.UI.WebControls.WizardStepBase
    {
        public WizardStep() { }
    }
    [System.ComponentModel.BindableAttribute(false)]
    [System.ComponentModel.ToolboxItemAttribute(false)]
    [System.Web.UI.ControlBuilderAttribute(typeof(System.Web.UI.WebControls.WizardStepControlBuilder))]
    public abstract partial class WizardStepBase : System.Web.UI.WebControls.View
    {
        protected WizardStepBase() { }
        [System.ComponentModel.DefaultValueAttribute(true)]
        [System.Web.UI.FilterableAttribute(false)]
        [System.Web.UI.ThemeableAttribute(false)]
        public virtual bool AllowReturn { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(true)]
        public override bool EnableTheming { get { throw null; } set { } }
        public override string ID { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public virtual string Name { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.WizardStepType.Auto)]
        public virtual System.Web.UI.WebControls.WizardStepType StepType { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string Title { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Web.UI.WebControls.Wizard Wizard { get { throw null; } }
        protected override void LoadViewState(object savedState) { }
        protected internal override void OnLoad(System.EventArgs e) { }
        protected internal override void RenderChildren(System.Web.UI.HtmlTextWriter writer) { }
    }
    public sealed partial class WizardStepCollection : System.Collections.ICollection, System.Collections.IEnumerable, System.Collections.IList
    {
        internal WizardStepCollection() { }
        public int Count { get { throw null; } }
        public bool IsReadOnly { get { throw null; } }
        public bool IsSynchronized { get { throw null; } }
        public System.Web.UI.WebControls.WizardStepBase this[int index] { get { throw null; } }
        public object SyncRoot { get { throw null; } }
        bool System.Collections.IList.IsFixedSize { get { throw null; } }
        object System.Collections.IList.this[int index] { get { throw null; } set { } }
        public void Add(System.Web.UI.WebControls.WizardStepBase wizardStep) { }
        public void AddAt(int index, System.Web.UI.WebControls.WizardStepBase wizardStep) { }
        public void Clear() { }
        public bool Contains(System.Web.UI.WebControls.WizardStepBase wizardStep) { throw null; }
        public void CopyTo(System.Web.UI.WebControls.WizardStepBase[] array, int index) { }
        public System.Collections.IEnumerator GetEnumerator() { throw null; }
        public int IndexOf(System.Web.UI.WebControls.WizardStepBase wizardStep) { throw null; }
        public void Insert(int index, System.Web.UI.WebControls.WizardStepBase wizardStep) { }
        public void Remove(System.Web.UI.WebControls.WizardStepBase wizardStep) { }
        public void RemoveAt(int index) { }
        void System.Collections.ICollection.CopyTo(System.Array array, int index) { }
        int System.Collections.IList.Add(object value) { throw null; }
        bool System.Collections.IList.Contains(object value) { throw null; }
        int System.Collections.IList.IndexOf(object value) { throw null; }
        void System.Collections.IList.Insert(int index, object value) { }
        void System.Collections.IList.Remove(object value) { }
    }
    public sealed partial class WizardStepControlBuilder : System.Web.UI.ControlBuilder
    {
        public WizardStepControlBuilder() { }
    }
    public enum WizardStepType
    {
        Auto = 0,
        Complete = 1,
        Finish = 2,
        Start = 3,
        Step = 4,
    }
    [System.ComponentModel.DefaultPropertyAttribute("DocumentSource")]
    [System.ComponentModel.DesignerAttribute("System.Web.UI.Design.WebControls.XmlDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.Web.UI.ControlBuilderAttribute(typeof(System.Web.UI.WebControls.XmlBuilder))]
    [System.Web.UI.PersistChildrenAttribute(false, true)]
    public partial class Xml : System.Web.UI.Control
    {
        public Xml() { }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override string ClientID { get { throw null; } }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override System.Web.UI.ControlCollection Controls { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.ObsoleteAttribute("The recommended alternative is the XPathNavigator property. Create a System.Xml.XPath.XPathDocument and call CreateNavigator() to create an XPathNavigator. http://go.microsoft.com/fwlink/?linkid=14202")]
        public System.Xml.XmlDocument Document { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public string DocumentContent { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.XmlUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.UrlPropertyAttribute]
        public string DocumentSource { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override bool EnableTheming { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override string SkinID { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public System.Xml.Xsl.XslTransform Transform { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public System.Xml.Xsl.XsltArgumentList TransformArgumentList { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.XslUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        public string TransformSource { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public System.Xml.XPath.XPathNavigator XPathNavigator { get { throw null; } set { } }
        protected override void AddParsedSubObject(object obj) { }
        protected override System.Web.UI.ControlCollection CreateControlCollection() { throw null; }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override System.Web.UI.Control FindControl(string id) { throw null; }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override void Focus() { }
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, Unrestricted=true)]
        protected override System.Collections.IDictionary GetDesignModeState() { throw null; }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override bool HasControls() { throw null; }
        protected internal override void Render(System.Web.UI.HtmlTextWriter output) { }
    }
    public partial class XmlBuilder : System.Web.UI.ControlBuilder
    {
        public XmlBuilder() { }
        public override void AppendLiteralString(string s) { }
        public override System.Type GetChildControlType(string tagName, System.Collections.IDictionary attribs) { throw null; }
        public override bool NeedsTagInnerText() { throw null; }
        public override void SetTagInnerText(string text) { }
    }
    [System.ComponentModel.DefaultEventAttribute("Transforming")]
    [System.ComponentModel.DefaultPropertyAttribute("DataFile")]
    [System.ComponentModel.DesignerAttribute("System.Web.UI.Design.WebControls.XmlDataSourceDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.Drawing.ToolboxBitmapAttribute(typeof(System.Web.UI.WebControls.XmlDataSource))]
    [System.Web.UI.ParseChildrenAttribute(true)]
    [System.Web.UI.PersistChildrenAttribute(false)]
    public partial class XmlDataSource : System.Web.UI.HierarchicalDataSourceControl, System.ComponentModel.IListSource, System.Web.UI.IDataSource
    {
        public XmlDataSource() { }
        [System.ComponentModel.DefaultValueAttribute(0)]
        [System.ComponentModel.TypeConverterAttribute(typeof(System.Web.UI.DataSourceCacheDurationConverter))]
        public virtual int CacheDuration { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.DataSourceCacheExpiry.Absolute)]
        public virtual System.Web.UI.DataSourceCacheExpiry CacheExpirationPolicy { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        public virtual string CacheKeyContext { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        public virtual string CacheKeyDependency { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.ComponentModel.Design.MultilineStringEditor,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.ComponentModel.TypeConverterAttribute("System.ComponentModel.MultilineStringConverter,System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089")]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public virtual string Data { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.XmlDataFileEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        public virtual string DataFile { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(true)]
        public virtual bool EnableCaching { get { throw null; } set { } }
        bool System.ComponentModel.IListSource.ContainsListCollection { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.ComponentModel.Design.MultilineStringEditor,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.ComponentModel.TypeConverterAttribute("System.ComponentModel.MultilineStringConverter,System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089")]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public virtual string Transform { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        public virtual System.Xml.Xsl.XsltArgumentList TransformArgumentList { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.XslTransformFileEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        public virtual string TransformFile { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        public virtual string XPath { get { throw null; } set { } }
        event System.EventHandler System.Web.UI.IDataSource.DataSourceChanged { add { } remove { } }
        public event System.EventHandler Transforming { add { } remove { } }
        protected override System.Web.UI.HierarchicalDataSourceView GetHierarchicalView(string viewPath) { throw null; }
        public System.Xml.XmlDocument GetXmlDocument() { throw null; }
        protected virtual void OnTransforming(System.EventArgs e) { }
        public void Save() { }
        System.Collections.IList System.ComponentModel.IListSource.GetList() { throw null; }
        System.Web.UI.DataSourceView System.Web.UI.IDataSource.GetView(string viewName) { throw null; }
        System.Collections.ICollection System.Web.UI.IDataSource.GetViewNames() { throw null; }
    }
    public sealed partial class XmlDataSourceView : System.Web.UI.DataSourceView
    {
        public XmlDataSourceView(System.Web.UI.WebControls.XmlDataSource owner, string name) : base (default(System.Web.UI.IDataSource), default(string)) { }
        protected internal override System.Collections.IEnumerable ExecuteSelect(System.Web.UI.DataSourceSelectArguments arguments) { throw null; }
        public System.Collections.IEnumerable Select(System.Web.UI.DataSourceSelectArguments arguments) { throw null; }
    }
    public partial class XmlHierarchicalDataSourceView : System.Web.UI.HierarchicalDataSourceView
    {
        internal XmlHierarchicalDataSourceView() { }
        public override System.Web.UI.IHierarchicalEnumerable Select() { throw null; }
    }
}
namespace System.Web.UI.WebControls.Adapters
{
    public partial class DataBoundControlAdapter : System.Web.UI.WebControls.Adapters.WebControlAdapter
    {
        public DataBoundControlAdapter() { }
        protected new System.Web.UI.WebControls.DataBoundControl Control { get { throw null; } }
        protected internal virtual void PerformDataBinding(System.Collections.IEnumerable data) { }
    }
    public partial class HideDisabledControlAdapter : System.Web.UI.WebControls.Adapters.WebControlAdapter
    {
        public HideDisabledControlAdapter() { }
        protected internal override void Render(System.Web.UI.HtmlTextWriter writer) { }
    }
    public partial class HierarchicalDataBoundControlAdapter : System.Web.UI.WebControls.Adapters.WebControlAdapter
    {
        public HierarchicalDataBoundControlAdapter() { }
        protected new System.Web.UI.WebControls.HierarchicalDataBoundControl Control { get { throw null; } }
        protected internal virtual void PerformDataBinding() { }
    }
    public partial class MenuAdapter : System.Web.UI.WebControls.Adapters.WebControlAdapter, System.Web.UI.IPostBackEventHandler
    {
        public MenuAdapter() { }
        protected new System.Web.UI.WebControls.Menu Control { get { throw null; } }
        protected internal override void LoadAdapterControlState(object state) { }
        protected internal override void OnInit(System.EventArgs e) { }
        protected internal override void OnPreRender(System.EventArgs e) { }
        protected virtual void RaisePostBackEvent(string eventArgument) { }
        protected override void RenderBeginTag(System.Web.UI.HtmlTextWriter writer) { }
        protected override void RenderContents(System.Web.UI.HtmlTextWriter writer) { }
        protected override void RenderEndTag(System.Web.UI.HtmlTextWriter writer) { }
        protected internal virtual void RenderItem(System.Web.UI.HtmlTextWriter writer, System.Web.UI.WebControls.MenuItem item, int position) { }
        protected internal override object SaveAdapterControlState() { throw null; }
        void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(string eventArgument) { }
    }
    public partial class WebControlAdapter : System.Web.UI.Adapters.ControlAdapter
    {
        public WebControlAdapter() { }
        protected new System.Web.UI.WebControls.WebControl Control { get { throw null; } }
        protected bool IsEnabled { get { throw null; } }
        protected internal override void Render(System.Web.UI.HtmlTextWriter writer) { }
        protected virtual void RenderBeginTag(System.Web.UI.HtmlTextWriter writer) { }
        protected virtual void RenderContents(System.Web.UI.HtmlTextWriter writer) { }
        protected virtual void RenderEndTag(System.Web.UI.HtmlTextWriter writer) { }
    }
}
namespace System.Web.UI.WebControls.WebParts
{
    public sealed partial class AppearanceEditorPart : System.Web.UI.WebControls.WebParts.EditorPart
    {
        public AppearanceEditorPart() { }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Web.UI.ThemeableAttribute(false)]
        public override string DefaultButton { get { throw null; } set { } }
        public override string Title { get { throw null; } set { } }
        public override bool ApplyChanges() { throw null; }
        protected internal override void CreateChildControls() { }
        protected internal override void OnPreRender(System.EventArgs e) { }
        protected internal override void RenderContents(System.Web.UI.HtmlTextWriter writer) { }
        public override void SyncChanges() { }
    }
    public sealed partial class BehaviorEditorPart : System.Web.UI.WebControls.WebParts.EditorPart
    {
        public BehaviorEditorPart() { }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Web.UI.ThemeableAttribute(false)]
        public override string DefaultButton { get { throw null; } set { } }
        public override bool Display { get { throw null; } }
        public override string Title { get { throw null; } set { } }
        public override bool ApplyChanges() { throw null; }
        protected internal override void CreateChildControls() { }
        protected internal override void OnPreRender(System.EventArgs e) { }
        protected internal override void RenderContents(System.Web.UI.HtmlTextWriter writer) { }
        public override void SyncChanges() { }
    }
    [System.ComponentModel.BindableAttribute(false)]
    [System.ComponentModel.DesignerAttribute("System.Web.UI.Design.WebControls.WebParts.CatalogPartDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    public abstract partial class CatalogPart : System.Web.UI.WebControls.WebParts.Part
    {
        protected CatalogPart() { }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public string DisplayTitle { get { throw null; } }
        protected System.Web.UI.WebControls.WebParts.WebPartManager WebPartManager { get { throw null; } }
        protected System.Web.UI.WebControls.WebParts.CatalogZoneBase Zone { get { throw null; } }
        public abstract System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection GetAvailableWebPartDescriptions();
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, Unrestricted=true)]
        protected override System.Collections.IDictionary GetDesignModeState() { throw null; }
        public abstract System.Web.UI.WebControls.WebParts.WebPart GetWebPart(System.Web.UI.WebControls.WebParts.WebPartDescription description);
        protected internal override void OnPreRender(System.EventArgs e) { }
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, Unrestricted=true)]
        protected override void SetDesignModeState(System.Collections.IDictionary data) { }
    }
    public partial class CatalogPartChrome
    {
        public CatalogPartChrome(System.Web.UI.WebControls.WebParts.CatalogZoneBase zone) { }
        protected System.Web.UI.WebControls.WebParts.CatalogZoneBase Zone { get { throw null; } }
        protected virtual System.Web.UI.WebControls.Style CreateCatalogPartChromeStyle(System.Web.UI.WebControls.WebParts.CatalogPart catalogPart, System.Web.UI.WebControls.WebParts.PartChromeType chromeType) { throw null; }
        public virtual void PerformPreRender() { }
        public virtual void RenderCatalogPart(System.Web.UI.HtmlTextWriter writer, System.Web.UI.WebControls.WebParts.CatalogPart catalogPart) { }
        protected virtual void RenderPartContents(System.Web.UI.HtmlTextWriter writer, System.Web.UI.WebControls.WebParts.CatalogPart catalogPart) { }
    }
    public sealed partial class CatalogPartCollection : System.Collections.ReadOnlyCollectionBase
    {
        public static readonly System.Web.UI.WebControls.WebParts.CatalogPartCollection Empty;
        public CatalogPartCollection() { }
        public CatalogPartCollection(System.Collections.ICollection catalogParts) { }
        public CatalogPartCollection(System.Web.UI.WebControls.WebParts.CatalogPartCollection existingCatalogParts, System.Collections.ICollection catalogParts) { }
        public System.Web.UI.WebControls.WebParts.CatalogPart this[int index] { get { throw null; } }
        public System.Web.UI.WebControls.WebParts.CatalogPart this[string id] { get { throw null; } }
        public bool Contains(System.Web.UI.WebControls.WebParts.CatalogPart catalogPart) { throw null; }
        public void CopyTo(System.Web.UI.WebControls.WebParts.CatalogPart[] array, int index) { }
        public int IndexOf(System.Web.UI.WebControls.WebParts.CatalogPart catalogPart) { throw null; }
    }
    [System.ComponentModel.DesignerAttribute("System.Web.UI.Design.WebControls.WebParts.CatalogZoneDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.Web.UI.SupportsEventValidationAttribute]
    public partial class CatalogZone : System.Web.UI.WebControls.WebParts.CatalogZoneBase
    {
        public CatalogZone() { }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        [System.Web.UI.TemplateContainerAttribute(typeof(System.Web.UI.WebControls.WebParts.CatalogZone))]
        [System.Web.UI.TemplateInstanceAttribute(System.Web.UI.TemplateInstance.Single)]
        public virtual System.Web.UI.ITemplate ZoneTemplate { get { throw null; } set { } }
        protected override System.Web.UI.WebControls.WebParts.CatalogPartCollection CreateCatalogParts() { throw null; }
    }
    public abstract partial class CatalogZoneBase : System.Web.UI.WebControls.WebParts.ToolZone, System.Web.UI.IPostBackDataHandler
    {
        protected CatalogZoneBase() : base (default(System.Collections.ICollection)) { }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public virtual System.Web.UI.WebControls.WebParts.WebPartVerb AddVerb { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public System.Web.UI.WebControls.WebParts.CatalogPartChrome CatalogPartChrome { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public System.Web.UI.WebControls.WebParts.CatalogPartCollection CatalogParts { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public virtual System.Web.UI.WebControls.WebParts.WebPartVerb CloseVerb { get { throw null; } }
        public override string EmptyZoneText { get { throw null; } set { } }
        public override string HeaderText { get { throw null; } set { } }
        public override string InstructionText { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.Style PartLinkStyle { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.Web.UI.ThemeableAttribute(false)]
        public string SelectedCatalogPartID { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.Style SelectedPartLinkStyle { get { throw null; } }
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string SelectTargetZoneText { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(true)]
        public virtual bool ShowCatalogIcons { get { throw null; } set { } }
        protected override void Close() { }
        protected virtual System.Web.UI.WebControls.WebParts.CatalogPartChrome CreateCatalogPartChrome() { throw null; }
        protected abstract System.Web.UI.WebControls.WebParts.CatalogPartCollection CreateCatalogParts();
        protected internal override void CreateChildControls() { }
        protected void InvalidateCatalogParts() { }
        protected internal override void LoadControlState(object savedState) { }
        protected virtual bool LoadPostData(string postDataKey, System.Collections.Specialized.NameValueCollection postCollection) { throw null; }
        protected override void LoadViewState(object savedState) { }
        protected internal override void OnInit(System.EventArgs e) { }
        protected internal override void OnPreRender(System.EventArgs e) { }
        protected override void RaisePostBackEvent(string eventArgument) { }
        protected internal override void Render(System.Web.UI.HtmlTextWriter writer) { }
        protected override void RenderBody(System.Web.UI.HtmlTextWriter writer) { }
        protected virtual void RenderCatalogPartLinks(System.Web.UI.HtmlTextWriter writer) { }
        protected override void RenderFooter(System.Web.UI.HtmlTextWriter writer) { }
        protected override void RenderVerbs(System.Web.UI.HtmlTextWriter writer) { }
        protected internal override object SaveControlState() { throw null; }
        protected override object SaveViewState() { throw null; }
        bool System.Web.UI.IPostBackDataHandler.LoadPostData(string postDataKey, System.Collections.Specialized.NameValueCollection postCollection) { throw null; }
        void System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent() { }
        protected override void TrackViewState() { }
    }
    [System.AttributeUsageAttribute(System.AttributeTargets.Method)]
    public partial class ConnectionConsumerAttribute : System.Attribute
    {
        public ConnectionConsumerAttribute(string displayName) { }
        public ConnectionConsumerAttribute(string displayName, string id) { }
        public ConnectionConsumerAttribute(string displayName, string id, System.Type connectionPointType) { }
        public ConnectionConsumerAttribute(string displayName, System.Type connectionPointType) { }
        public bool AllowsMultipleConnections { get { throw null; } set { } }
        public System.Type ConnectionPointType { get { throw null; } }
        public virtual string DisplayName { get { throw null; } }
        protected string DisplayNameValue { get { throw null; } set { } }
        public string ID { get { throw null; } }
    }
    public sealed partial class ConnectionInterfaceCollection : System.Collections.ReadOnlyCollectionBase
    {
        public static readonly System.Web.UI.WebControls.WebParts.ConnectionInterfaceCollection Empty;
        public ConnectionInterfaceCollection() { }
        public ConnectionInterfaceCollection(System.Collections.ICollection connectionInterfaces) { }
        public ConnectionInterfaceCollection(System.Web.UI.WebControls.WebParts.ConnectionInterfaceCollection existingConnectionInterfaces, System.Collections.ICollection connectionInterfaces) { }
        public System.Type this[int index] { get { throw null; } }
        public bool Contains(System.Type value) { throw null; }
        public void CopyTo(System.Type[] array, int index) { }
        public int IndexOf(System.Type value) { throw null; }
    }
    public abstract partial class ConnectionPoint
    {
        internal ConnectionPoint() { }
        public static readonly string DefaultID;
        public bool AllowsMultipleConnections { get { throw null; } }
        public System.Type ControlType { get { throw null; } }
        public string DisplayName { get { throw null; } }
        public string ID { get { throw null; } }
        public System.Type InterfaceType { get { throw null; } }
        public virtual bool GetEnabled(System.Web.UI.Control control) { throw null; }
    }
    [System.AttributeUsageAttribute(System.AttributeTargets.Method)]
    public partial class ConnectionProviderAttribute : System.Attribute
    {
        public ConnectionProviderAttribute(string displayName) { }
        public ConnectionProviderAttribute(string displayName, string id) { }
        public ConnectionProviderAttribute(string displayName, string id, System.Type connectionPointType) { }
        public ConnectionProviderAttribute(string displayName, System.Type connectionPointType) { }
        public bool AllowsMultipleConnections { get { throw null; } set { } }
        public System.Type ConnectionPointType { get { throw null; } }
        public virtual string DisplayName { get { throw null; } }
        protected string DisplayNameValue { get { throw null; } set { } }
        public string ID { get { throw null; } }
    }
    [System.ComponentModel.DesignerAttribute("System.Web.UI.Design.WebControls.WebParts.ConnectionsZoneDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.Web.UI.SupportsEventValidationAttribute]
    public partial class ConnectionsZone : System.Web.UI.WebControls.WebParts.ToolZone
    {
        public ConnectionsZone() : base (default(System.Collections.ICollection)) { }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public virtual System.Web.UI.WebControls.WebParts.WebPartVerb CancelVerb { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public virtual System.Web.UI.WebControls.WebParts.WebPartVerb CloseVerb { get { throw null; } }
        public virtual string ConfigureConnectionTitle { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public virtual System.Web.UI.WebControls.WebParts.WebPartVerb ConfigureVerb { get { throw null; } }
        public virtual string ConnectToConsumerInstructionText { get { throw null; } set { } }
        public virtual string ConnectToConsumerText { get { throw null; } set { } }
        public virtual string ConnectToConsumerTitle { get { throw null; } set { } }
        public virtual string ConnectToProviderInstructionText { get { throw null; } set { } }
        public virtual string ConnectToProviderText { get { throw null; } set { } }
        public virtual string ConnectToProviderTitle { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public virtual System.Web.UI.WebControls.WebParts.WebPartVerb ConnectVerb { get { throw null; } }
        public virtual string ConsumersInstructionText { get { throw null; } set { } }
        public virtual string ConsumersTitle { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public virtual System.Web.UI.WebControls.WebParts.WebPartVerb DisconnectVerb { get { throw null; } }
        protected override bool Display { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Web.UI.ThemeableAttribute(false)]
        public override string EmptyZoneText { get { throw null; } set { } }
        public virtual string ExistingConnectionErrorMessage { get { throw null; } set { } }
        public virtual string GetFromText { get { throw null; } set { } }
        public virtual string GetText { get { throw null; } set { } }
        public override string HeaderText { get { throw null; } set { } }
        public override string InstructionText { get { throw null; } set { } }
        public virtual string InstructionTitle { get { throw null; } set { } }
        public virtual string NewConnectionErrorMessage { get { throw null; } set { } }
        public virtual string NoExistingConnectionInstructionText { get { throw null; } set { } }
        public virtual string NoExistingConnectionTitle { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Web.UI.ThemeableAttribute(false)]
        public override System.Web.UI.WebControls.WebParts.PartChromeType PartChromeType { get { throw null; } set { } }
        public virtual string ProvidersInstructionText { get { throw null; } set { } }
        public virtual string ProvidersTitle { get { throw null; } set { } }
        public virtual string SendText { get { throw null; } set { } }
        public virtual string SendToText { get { throw null; } set { } }
        protected System.Web.UI.WebControls.WebParts.WebPart WebPartToConnect { get { throw null; } }
        protected override void Close() { }
        protected internal override void CreateChildControls() { }
        protected internal override void LoadControlState(object savedState) { }
        protected override void LoadViewState(object savedState) { }
        protected override void OnDisplayModeChanged(object sender, System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs e) { }
        protected internal override void OnInit(System.EventArgs e) { }
        protected override void OnSelectedWebPartChanged(object sender, System.Web.UI.WebControls.WebParts.WebPartEventArgs e) { }
        protected override void RaisePostBackEvent(string eventArgument) { }
        protected internal override void Render(System.Web.UI.HtmlTextWriter writer) { }
        protected override void RenderBody(System.Web.UI.HtmlTextWriter writer) { }
        protected override void RenderVerbs(System.Web.UI.HtmlTextWriter writer) { }
        protected internal override object SaveControlState() { throw null; }
        protected override object SaveViewState() { throw null; }
        protected override void TrackViewState() { }
    }
    public partial class ConsumerConnectionPoint : System.Web.UI.WebControls.WebParts.ConnectionPoint
    {
        public ConsumerConnectionPoint(System.Reflection.MethodInfo callbackMethod, System.Type interfaceType, System.Type controlType, string displayName, string id, bool allowsMultipleConnections) { }
        public virtual void SetObject(System.Web.UI.Control control, object data) { }
        public virtual bool SupportsConnection(System.Web.UI.Control control, System.Web.UI.WebControls.WebParts.ConnectionInterfaceCollection secondaryInterfaces) { throw null; }
    }
    public sealed partial class ConsumerConnectionPointCollection : System.Collections.ReadOnlyCollectionBase
    {
        public ConsumerConnectionPointCollection() { }
        public ConsumerConnectionPointCollection(System.Collections.ICollection connectionPoints) { }
        public System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint Default { get { throw null; } }
        public System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint this[int index] { get { throw null; } }
        public System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint this[string id] { get { throw null; } }
        public bool Contains(System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint connectionPoint) { throw null; }
        public void CopyTo(System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint[] array, int index) { }
        public int IndexOf(System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint connectionPoint) { throw null; }
    }
    [System.ComponentModel.DesignerAttribute("System.Web.UI.Design.WebControls.WebParts.DeclarativeCatalogPartDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    public sealed partial class DeclarativeCatalogPart : System.Web.UI.WebControls.WebParts.CatalogPart
    {
        public DeclarativeCatalogPart() { }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Web.UI.ThemeableAttribute(false)]
        public override string AccessKey { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Web.UI.ThemeableAttribute(false)]
        public override System.Drawing.Color BackColor { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Web.UI.ThemeableAttribute(false)]
        public override string BackImageUrl { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Web.UI.ThemeableAttribute(false)]
        public override System.Drawing.Color BorderColor { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Web.UI.ThemeableAttribute(false)]
        public override System.Web.UI.WebControls.BorderStyle BorderStyle { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Web.UI.ThemeableAttribute(false)]
        public override System.Web.UI.WebControls.Unit BorderWidth { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Web.UI.CssClassPropertyAttribute]
        [System.Web.UI.ThemeableAttribute(false)]
        public override string CssClass { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Web.UI.ThemeableAttribute(false)]
        public override string DefaultButton { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Web.UI.ThemeableAttribute(false)]
        public override System.Web.UI.WebControls.ContentDirection Direction { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Web.UI.ThemeableAttribute(false)]
        public override bool Enabled { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Web.UI.ThemeableAttribute(false)]
        public override bool EnableTheming { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Web.UI.ThemeableAttribute(false)]
        public override System.Web.UI.WebControls.FontInfo Font { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Web.UI.ThemeableAttribute(false)]
        public override System.Drawing.Color ForeColor { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Web.UI.ThemeableAttribute(false)]
        public override string GroupingText { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Web.UI.ThemeableAttribute(false)]
        public override System.Web.UI.WebControls.Unit Height { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Web.UI.ThemeableAttribute(false)]
        public override System.Web.UI.WebControls.HorizontalAlign HorizontalAlign { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Web.UI.ThemeableAttribute(false)]
        public override System.Web.UI.WebControls.ScrollBars ScrollBars { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Web.UI.ThemeableAttribute(false)]
        public override string SkinID { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Web.UI.ThemeableAttribute(false)]
        public override short TabIndex { get { throw null; } set { } }
        public override string Title { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Web.UI.ThemeableAttribute(false)]
        public override string ToolTip { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Web.UI.ThemeableAttribute(false)]
        public override bool Visible { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.UserControlFileEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.ThemeableAttribute(false)]
        [System.Web.UI.UrlPropertyAttribute]
        public string WebPartsListUserControlPath { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        [System.Web.UI.TemplateContainerAttribute(typeof(System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart))]
        public System.Web.UI.ITemplate WebPartsTemplate { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Web.UI.ThemeableAttribute(false)]
        public override System.Web.UI.WebControls.Unit Width { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Web.UI.ThemeableAttribute(false)]
        public override bool Wrap { get { throw null; } set { } }
        public override System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection GetAvailableWebPartDescriptions() { throw null; }
        public override System.Web.UI.WebControls.WebParts.WebPart GetWebPart(System.Web.UI.WebControls.WebParts.WebPartDescription description) { throw null; }
        protected internal override void Render(System.Web.UI.HtmlTextWriter writer) { }
    }
    [System.ComponentModel.BindableAttribute(false)]
    [System.ComponentModel.DesignerAttribute("System.Web.UI.Design.WebControls.WebParts.EditorPartDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    public abstract partial class EditorPart : System.Web.UI.WebControls.WebParts.Part
    {
        protected EditorPart() { }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public virtual bool Display { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public string DisplayTitle { get { throw null; } }
        protected System.Web.UI.WebControls.WebParts.WebPartManager WebPartManager { get { throw null; } }
        protected System.Web.UI.WebControls.WebParts.WebPart WebPartToEdit { get { throw null; } }
        protected System.Web.UI.WebControls.WebParts.EditorZoneBase Zone { get { throw null; } }
        public abstract bool ApplyChanges();
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, Unrestricted=true)]
        protected override System.Collections.IDictionary GetDesignModeState() { throw null; }
        protected internal override void OnPreRender(System.EventArgs e) { }
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, Unrestricted=true)]
        protected override void SetDesignModeState(System.Collections.IDictionary data) { }
        public abstract void SyncChanges();
    }
    public partial class EditorPartChrome
    {
        public EditorPartChrome(System.Web.UI.WebControls.WebParts.EditorZoneBase zone) { }
        protected System.Web.UI.WebControls.WebParts.EditorZoneBase Zone { get { throw null; } }
        protected virtual System.Web.UI.WebControls.Style CreateEditorPartChromeStyle(System.Web.UI.WebControls.WebParts.EditorPart editorPart, System.Web.UI.WebControls.WebParts.PartChromeType chromeType) { throw null; }
        public virtual void PerformPreRender() { }
        public virtual void RenderEditorPart(System.Web.UI.HtmlTextWriter writer, System.Web.UI.WebControls.WebParts.EditorPart editorPart) { }
        protected virtual void RenderPartContents(System.Web.UI.HtmlTextWriter writer, System.Web.UI.WebControls.WebParts.EditorPart editorPart) { }
    }
    public sealed partial class EditorPartCollection : System.Collections.ReadOnlyCollectionBase
    {
        public static readonly System.Web.UI.WebControls.WebParts.EditorPartCollection Empty;
        public EditorPartCollection() { }
        public EditorPartCollection(System.Collections.ICollection editorParts) { }
        public EditorPartCollection(System.Web.UI.WebControls.WebParts.EditorPartCollection existingEditorParts, System.Collections.ICollection editorParts) { }
        public System.Web.UI.WebControls.WebParts.EditorPart this[int index] { get { throw null; } }
        public bool Contains(System.Web.UI.WebControls.WebParts.EditorPart editorPart) { throw null; }
        public void CopyTo(System.Web.UI.WebControls.WebParts.EditorPart[] array, int index) { }
        public int IndexOf(System.Web.UI.WebControls.WebParts.EditorPart editorPart) { throw null; }
    }
    [System.ComponentModel.DesignerAttribute("System.Web.UI.Design.WebControls.WebParts.EditorZoneDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.Web.UI.SupportsEventValidationAttribute]
    public partial class EditorZone : System.Web.UI.WebControls.WebParts.EditorZoneBase
    {
        public EditorZone() { }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        [System.Web.UI.TemplateContainerAttribute(typeof(System.Web.UI.WebControls.WebParts.EditorZone))]
        [System.Web.UI.TemplateInstanceAttribute(System.Web.UI.TemplateInstance.Single)]
        public virtual System.Web.UI.ITemplate ZoneTemplate { get { throw null; } set { } }
        protected override System.Web.UI.WebControls.WebParts.EditorPartCollection CreateEditorParts() { throw null; }
    }
    public abstract partial class EditorZoneBase : System.Web.UI.WebControls.WebParts.ToolZone
    {
        protected EditorZoneBase() : base (default(System.Collections.ICollection)) { }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public virtual System.Web.UI.WebControls.WebParts.WebPartVerb ApplyVerb { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public virtual System.Web.UI.WebControls.WebParts.WebPartVerb CancelVerb { get { throw null; } }
        protected override bool Display { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public System.Web.UI.WebControls.WebParts.EditorPartChrome EditorPartChrome { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public System.Web.UI.WebControls.WebParts.EditorPartCollection EditorParts { get { throw null; } }
        public override string EmptyZoneText { get { throw null; } set { } }
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string ErrorText { get { throw null; } set { } }
        public override string HeaderText { get { throw null; } set { } }
        public override string InstructionText { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public virtual System.Web.UI.WebControls.WebParts.WebPartVerb OKVerb { get { throw null; } }
        protected System.Web.UI.WebControls.WebParts.WebPart WebPartToEdit { get { throw null; } }
        protected override void Close() { }
        protected internal override void CreateChildControls() { }
        protected virtual System.Web.UI.WebControls.WebParts.EditorPartChrome CreateEditorPartChrome() { throw null; }
        protected abstract System.Web.UI.WebControls.WebParts.EditorPartCollection CreateEditorParts();
        protected void InvalidateEditorParts() { }
        protected override void LoadViewState(object savedState) { }
        protected override void OnDisplayModeChanged(object sender, System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs e) { }
        protected internal override void OnPreRender(System.EventArgs e) { }
        protected override void OnSelectedWebPartChanged(object sender, System.Web.UI.WebControls.WebParts.WebPartEventArgs e) { }
        protected override void RaisePostBackEvent(string eventArgument) { }
        protected internal override void Render(System.Web.UI.HtmlTextWriter writer) { }
        protected override void RenderBody(System.Web.UI.HtmlTextWriter writer) { }
        protected override void RenderVerbs(System.Web.UI.HtmlTextWriter writer) { }
        protected override object SaveViewState() { throw null; }
        protected override void TrackViewState() { }
    }
    [System.ComponentModel.ToolboxItemAttribute(false)]
    public partial class ErrorWebPart : System.Web.UI.WebControls.WebParts.ProxyWebPart, System.Web.UI.WebControls.WebParts.ITrackingPersonalizable
    {
        public ErrorWebPart(string originalID, string originalTypeName, string originalPath, string genericWebPartID) : base (default(System.Web.UI.WebControls.WebParts.WebPart)) { }
        public string ErrorMessage { get { throw null; } set { } }
        bool System.Web.UI.WebControls.WebParts.ITrackingPersonalizable.TracksChanges { get { throw null; } }
        protected override void AddAttributesToRender(System.Web.UI.HtmlTextWriter writer) { }
        protected virtual void EndLoadPersonalization() { }
        protected internal override void RenderContents(System.Web.UI.HtmlTextWriter writer) { }
        void System.Web.UI.WebControls.WebParts.ITrackingPersonalizable.BeginLoad() { }
        void System.Web.UI.WebControls.WebParts.ITrackingPersonalizable.BeginSave() { }
        void System.Web.UI.WebControls.WebParts.ITrackingPersonalizable.EndLoad() { }
        void System.Web.UI.WebControls.WebParts.ITrackingPersonalizable.EndSave() { }
    }
    public delegate void FieldCallback(object fieldValue);
    [System.ComponentModel.ToolboxItemAttribute(false)]
    public partial class GenericWebPart : System.Web.UI.WebControls.WebParts.WebPart
    {
        protected internal GenericWebPart(System.Web.UI.Control control) { }
        public override string CatalogIconImageUrl { get { throw null; } set { } }
        public System.Web.UI.Control ChildControl { get { throw null; } }
        public override string Description { get { throw null; } set { } }
        public override System.Web.UI.WebControls.Unit Height { get { throw null; } set { } }
        public sealed override string ID { get { throw null; } set { } }
        public override string Subtitle { get { throw null; } }
        public override string Title { get { throw null; } set { } }
        public override string TitleIconImageUrl { get { throw null; } set { } }
        public override string TitleUrl { get { throw null; } set { } }
        public override System.Web.UI.WebControls.WebParts.WebPartVerbCollection Verbs { get { throw null; } }
        public override object WebBrowsableObject { get { throw null; } }
        public override System.Web.UI.WebControls.Unit Width { get { throw null; } set { } }
        protected internal override void CreateChildControls() { }
        protected override System.Web.UI.ControlCollection CreateControlCollection() { throw null; }
        public override System.Web.UI.WebControls.WebParts.EditorPartCollection CreateEditorParts() { throw null; }
        protected internal override void Render(System.Web.UI.HtmlTextWriter writer) { }
    }
    public sealed partial class ImportCatalogPart : System.Web.UI.WebControls.WebParts.CatalogPart
    {
        public ImportCatalogPart() { }
        public string BrowseHelpText { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Web.UI.ThemeableAttribute(false)]
        public override string DefaultButton { get { throw null; } set { } }
        public string ImportedPartLabelText { get { throw null; } set { } }
        public string PartImportErrorLabelText { get { throw null; } set { } }
        public override string Title { get { throw null; } set { } }
        public string UploadButtonText { get { throw null; } set { } }
        public string UploadHelpText { get { throw null; } set { } }
        protected internal override void CreateChildControls() { }
        public override System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection GetAvailableWebPartDescriptions() { throw null; }
        public override System.Web.UI.WebControls.WebParts.WebPart GetWebPart(System.Web.UI.WebControls.WebParts.WebPartDescription description) { throw null; }
        protected internal override void LoadControlState(object savedState) { }
        protected internal override void OnInit(System.EventArgs e) { }
        protected internal override void Render(System.Web.UI.HtmlTextWriter writer) { }
        protected internal override void RenderContents(System.Web.UI.HtmlTextWriter writer) { }
        protected internal override object SaveControlState() { throw null; }
    }
    public partial interface IPersonalizable
    {
        bool IsDirty { get; }
        void Load(System.Web.UI.WebControls.WebParts.PersonalizationDictionary state);
        void Save(System.Web.UI.WebControls.WebParts.PersonalizationDictionary state);
    }
    public partial interface ITrackingPersonalizable
    {
        bool TracksChanges { get; }
        void BeginLoad();
        void BeginSave();
        void EndLoad();
        void EndSave();
    }
    public partial interface ITransformerConfigurationControl
    {
        event System.EventHandler Cancelled;
        event System.EventHandler Succeeded;
    }
    public partial interface IVersioningPersonalizable
    {
        void Load(System.Collections.IDictionary unknownProperties);
    }
    public partial interface IWebActionable
    {
        System.Web.UI.WebControls.WebParts.WebPartVerbCollection Verbs { get; }
    }
    public partial interface IWebEditable
    {
        object WebBrowsableObject { get; }
        System.Web.UI.WebControls.WebParts.EditorPartCollection CreateEditorParts();
    }
    public partial interface IWebPart
    {
        string CatalogIconImageUrl { get; set; }
        string Description { get; set; }
        string Subtitle { get; }
        string Title { get; set; }
        string TitleIconImageUrl { get; set; }
        string TitleUrl { get; set; }
    }
    public partial interface IWebPartField
    {
        System.ComponentModel.PropertyDescriptor Schema { get; }
        void GetFieldValue(System.Web.UI.WebControls.WebParts.FieldCallback callback);
    }
    public partial interface IWebPartParameters
    {
        System.ComponentModel.PropertyDescriptorCollection Schema { get; }
        void GetParametersData(System.Web.UI.WebControls.WebParts.ParametersCallback callback);
        void SetConsumerSchema(System.ComponentModel.PropertyDescriptorCollection schema);
    }
    public partial interface IWebPartRow
    {
        System.ComponentModel.PropertyDescriptorCollection Schema { get; }
        void GetRowData(System.Web.UI.WebControls.WebParts.RowCallback callback);
    }
    public partial interface IWebPartTable
    {
        System.ComponentModel.PropertyDescriptorCollection Schema { get; }
        void GetTableData(System.Web.UI.WebControls.WebParts.TableCallback callback);
    }
    public sealed partial class LayoutEditorPart : System.Web.UI.WebControls.WebParts.EditorPart
    {
        public LayoutEditorPart() { }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Web.UI.ThemeableAttribute(false)]
        public override string DefaultButton { get { throw null; } set { } }
        public override bool Display { get { throw null; } }
        public override string Title { get { throw null; } set { } }
        public override bool ApplyChanges() { throw null; }
        protected internal override void CreateChildControls() { }
        protected internal override void OnPreRender(System.EventArgs e) { }
        protected internal override void RenderContents(System.Web.UI.HtmlTextWriter writer) { }
        public override void SyncChanges() { }
    }
    [System.ComponentModel.DesignerAttribute("System.Web.UI.Design.WebControls.WebParts.PageCatalogPartDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    public sealed partial class PageCatalogPart : System.Web.UI.WebControls.WebParts.CatalogPart
    {
        public PageCatalogPart() { }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Web.UI.ThemeableAttribute(false)]
        public override string AccessKey { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Web.UI.ThemeableAttribute(false)]
        public override System.Drawing.Color BackColor { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Web.UI.ThemeableAttribute(false)]
        public override string BackImageUrl { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Web.UI.ThemeableAttribute(false)]
        public override System.Drawing.Color BorderColor { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Web.UI.ThemeableAttribute(false)]
        public override System.Web.UI.WebControls.BorderStyle BorderStyle { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Web.UI.ThemeableAttribute(false)]
        public override System.Web.UI.WebControls.Unit BorderWidth { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Web.UI.CssClassPropertyAttribute]
        [System.Web.UI.ThemeableAttribute(false)]
        public override string CssClass { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Web.UI.ThemeableAttribute(false)]
        public override string DefaultButton { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Web.UI.ThemeableAttribute(false)]
        public override System.Web.UI.WebControls.ContentDirection Direction { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Web.UI.ThemeableAttribute(false)]
        public override bool Enabled { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Web.UI.ThemeableAttribute(false)]
        public override bool EnableTheming { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Web.UI.ThemeableAttribute(false)]
        public override System.Web.UI.WebControls.FontInfo Font { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Web.UI.ThemeableAttribute(false)]
        public override System.Drawing.Color ForeColor { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Web.UI.ThemeableAttribute(false)]
        public override string GroupingText { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Web.UI.ThemeableAttribute(false)]
        public override System.Web.UI.WebControls.Unit Height { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Web.UI.ThemeableAttribute(false)]
        public override System.Web.UI.WebControls.HorizontalAlign HorizontalAlign { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Web.UI.ThemeableAttribute(false)]
        public override System.Web.UI.WebControls.ScrollBars ScrollBars { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Web.UI.ThemeableAttribute(false)]
        public override string SkinID { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Web.UI.ThemeableAttribute(false)]
        public override short TabIndex { get { throw null; } set { } }
        public override string Title { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Web.UI.ThemeableAttribute(false)]
        public override string ToolTip { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Web.UI.ThemeableAttribute(false)]
        public override bool Visible { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Web.UI.ThemeableAttribute(false)]
        public override System.Web.UI.WebControls.Unit Width { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Web.UI.ThemeableAttribute(false)]
        public override bool Wrap { get { throw null; } set { } }
        public override System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection GetAvailableWebPartDescriptions() { throw null; }
        public override System.Web.UI.WebControls.WebParts.WebPart GetWebPart(System.Web.UI.WebControls.WebParts.WebPartDescription description) { throw null; }
        protected internal override void OnInit(System.EventArgs e) { }
        protected internal override void OnPreRender(System.EventArgs e) { }
        protected internal override void Render(System.Web.UI.HtmlTextWriter writer) { }
    }
    public delegate void ParametersCallback(System.Collections.IDictionary parametersData);
    [System.ComponentModel.DesignerAttribute("System.Web.UI.Design.WebControls.WebParts.PartDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.Web.UI.ParseChildrenAttribute(true)]
    [System.Web.UI.PersistChildrenAttribute(false)]
    public abstract partial class Part : System.Web.UI.WebControls.Panel, System.Web.UI.INamingContainer, System.Web.UI.WebControls.ICompositeControlDesignerAccessor
    {
        internal Part() { }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.WebParts.PartChromeState.Normal)]
        public virtual System.Web.UI.WebControls.WebParts.PartChromeState ChromeState { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.WebParts.PartChromeType.Default)]
        public virtual System.Web.UI.WebControls.WebParts.PartChromeType ChromeType { get { throw null; } set { } }
        public override System.Web.UI.ControlCollection Controls { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string Description { get { throw null; } set { } }
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string Title { get { throw null; } set { } }
        public override void DataBind() { }
        void System.Web.UI.WebControls.ICompositeControlDesignerAccessor.RecreateChildControls() { }
    }
    public enum PartChromeState
    {
        Minimized = 1,
        Normal = 0,
    }
    public enum PartChromeType
    {
        BorderOnly = 4,
        Default = 0,
        None = 2,
        TitleAndBorder = 1,
        TitleOnly = 3,
    }
    [System.AttributeUsageAttribute(System.AttributeTargets.Property)]
    public sealed partial class PersonalizableAttribute : System.Attribute
    {
        public static readonly System.Web.UI.WebControls.WebParts.PersonalizableAttribute Default;
        public static readonly System.Web.UI.WebControls.WebParts.PersonalizableAttribute NotPersonalizable;
        public static readonly System.Web.UI.WebControls.WebParts.PersonalizableAttribute Personalizable;
        public static readonly System.Web.UI.WebControls.WebParts.PersonalizableAttribute SharedPersonalizable;
        public static readonly System.Web.UI.WebControls.WebParts.PersonalizableAttribute UserPersonalizable;
        public PersonalizableAttribute() { }
        public PersonalizableAttribute(bool isPersonalizable) { }
        public PersonalizableAttribute(System.Web.UI.WebControls.WebParts.PersonalizationScope scope) { }
        public PersonalizableAttribute(System.Web.UI.WebControls.WebParts.PersonalizationScope scope, bool isSensitive) { }
        public bool IsPersonalizable { get { throw null; } }
        public bool IsSensitive { get { throw null; } }
        public System.Web.UI.WebControls.WebParts.PersonalizationScope Scope { get { throw null; } }
        public override bool Equals(object obj) { throw null; }
        public override int GetHashCode() { throw null; }
        public static System.Collections.ICollection GetPersonalizableProperties(System.Type type) { throw null; }
        public override bool IsDefaultAttribute() { throw null; }
        public override bool Match(object obj) { throw null; }
    }
    public static partial class PersonalizationAdministration
    {
        public static string ApplicationName { get { throw null; } set { } }
        public static System.Web.UI.WebControls.WebParts.PersonalizationProvider Provider { get { throw null; } }
        public static System.Web.UI.WebControls.WebParts.PersonalizationProviderCollection Providers { get { throw null; } }
        public static System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection FindInactiveUserState(string pathToMatch, string usernameToMatch, System.DateTime userInactiveSinceDate) { throw null; }
        public static System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection FindInactiveUserState(string pathToMatch, string usernameToMatch, System.DateTime userInactiveSinceDate, int pageIndex, int pageSize, out int totalRecords) { throw null; }
        public static System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection FindSharedState(string pathToMatch) { throw null; }
        public static System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection FindSharedState(string pathToMatch, int pageIndex, int pageSize, out int totalRecords) { throw null; }
        public static System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection FindUserState(string pathToMatch, string usernameToMatch) { throw null; }
        public static System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection FindUserState(string pathToMatch, string usernameToMatch, int pageIndex, int pageSize, out int totalRecords) { throw null; }
        public static System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection GetAllInactiveUserState(System.DateTime userInactiveSinceDate) { throw null; }
        public static System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection GetAllInactiveUserState(System.DateTime userInactiveSinceDate, int pageIndex, int pageSize, out int totalRecords) { throw null; }
        public static System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection GetAllState(System.Web.UI.WebControls.WebParts.PersonalizationScope scope) { throw null; }
        public static System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection GetAllState(System.Web.UI.WebControls.WebParts.PersonalizationScope scope, int pageIndex, int pageSize, out int totalRecords) { throw null; }
        public static int GetCountOfInactiveUserState(System.DateTime userInactiveSinceDate) { throw null; }
        public static int GetCountOfInactiveUserState(string pathToMatch, System.DateTime userInactiveSinceDate) { throw null; }
        public static int GetCountOfState(System.Web.UI.WebControls.WebParts.PersonalizationScope scope) { throw null; }
        public static int GetCountOfState(System.Web.UI.WebControls.WebParts.PersonalizationScope scope, string pathToMatch) { throw null; }
        public static int GetCountOfUserState(string usernameToMatch) { throw null; }
        public static int ResetAllState(System.Web.UI.WebControls.WebParts.PersonalizationScope scope) { throw null; }
        public static int ResetInactiveUserState(System.DateTime userInactiveSinceDate) { throw null; }
        public static int ResetInactiveUserState(string path, System.DateTime userInactiveSinceDate) { throw null; }
        public static bool ResetSharedState(string path) { throw null; }
        public static int ResetSharedState(string[] paths) { throw null; }
        public static int ResetState(System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection data) { throw null; }
        public static int ResetUserState(string path) { throw null; }
        public static bool ResetUserState(string path, string username) { throw null; }
        public static int ResetUserState(string path, string[] usernames) { throw null; }
        public static int ResetUserState(string[] usernames) { throw null; }
    }
    public partial class PersonalizationDictionary : System.Collections.ICollection, System.Collections.IDictionary, System.Collections.IEnumerable
    {
        public PersonalizationDictionary() { }
        public PersonalizationDictionary(int initialSize) { }
        public virtual int Count { get { throw null; } }
        public virtual bool IsFixedSize { get { throw null; } }
        public virtual bool IsReadOnly { get { throw null; } }
        public virtual bool IsSynchronized { get { throw null; } }
        public virtual System.Web.UI.WebControls.WebParts.PersonalizationEntry this[string key] { get { throw null; } set { } }
        public virtual System.Collections.ICollection Keys { get { throw null; } }
        public virtual object SyncRoot { get { throw null; } }
        object System.Collections.IDictionary.this[object key] { get { throw null; } set { } }
        public virtual System.Collections.ICollection Values { get { throw null; } }
        public virtual void Add(string key, System.Web.UI.WebControls.WebParts.PersonalizationEntry value) { }
        public virtual void Clear() { }
        public virtual bool Contains(string key) { throw null; }
        public virtual void CopyTo(System.Collections.DictionaryEntry[] array, int index) { }
        public virtual System.Collections.IDictionaryEnumerator GetEnumerator() { throw null; }
        public virtual void Remove(string key) { }
        void System.Collections.ICollection.CopyTo(System.Array array, int index) { }
        void System.Collections.IDictionary.Add(object key, object value) { }
        bool System.Collections.IDictionary.Contains(object key) { throw null; }
        void System.Collections.IDictionary.Remove(object key) { }
        System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() { throw null; }
    }
    public sealed partial class PersonalizationEntry
    {
        public PersonalizationEntry(object value, System.Web.UI.WebControls.WebParts.PersonalizationScope scope) { }
        public PersonalizationEntry(object value, System.Web.UI.WebControls.WebParts.PersonalizationScope scope, bool isSensitive) { }
        public bool IsSensitive { get { throw null; } set { } }
        public System.Web.UI.WebControls.WebParts.PersonalizationScope Scope { get { throw null; } set { } }
        public object Value { get { throw null; } set { } }
    }
    public abstract partial class PersonalizationProvider : System.Configuration.Provider.ProviderBase
    {
        protected PersonalizationProvider() { }
        public abstract string ApplicationName { get; set; }
        protected virtual System.Collections.IList CreateSupportedUserCapabilities() { throw null; }
        public virtual System.Web.UI.WebControls.WebParts.PersonalizationScope DetermineInitialScope(System.Web.UI.WebControls.WebParts.WebPartManager webPartManager, System.Web.UI.WebControls.WebParts.PersonalizationState loadedState) { throw null; }
        public virtual System.Collections.IDictionary DetermineUserCapabilities(System.Web.UI.WebControls.WebParts.WebPartManager webPartManager) { throw null; }
        public abstract System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection FindState(System.Web.UI.WebControls.WebParts.PersonalizationScope scope, System.Web.UI.WebControls.WebParts.PersonalizationStateQuery query, int pageIndex, int pageSize, out int totalRecords);
        public abstract int GetCountOfState(System.Web.UI.WebControls.WebParts.PersonalizationScope scope, System.Web.UI.WebControls.WebParts.PersonalizationStateQuery query);
        protected abstract void LoadPersonalizationBlobs(System.Web.UI.WebControls.WebParts.WebPartManager webPartManager, string path, string userName, ref byte[] sharedDataBlob, ref byte[] userDataBlob);
        public virtual System.Web.UI.WebControls.WebParts.PersonalizationState LoadPersonalizationState(System.Web.UI.WebControls.WebParts.WebPartManager webPartManager, bool ignoreCurrentUser) { throw null; }
        protected abstract void ResetPersonalizationBlob(System.Web.UI.WebControls.WebParts.WebPartManager webPartManager, string path, string userName);
        public virtual void ResetPersonalizationState(System.Web.UI.WebControls.WebParts.WebPartManager webPartManager) { }
        public abstract int ResetState(System.Web.UI.WebControls.WebParts.PersonalizationScope scope, string[] paths, string[] usernames);
        public abstract int ResetUserState(string path, System.DateTime userInactiveSinceDate);
        protected abstract void SavePersonalizationBlob(System.Web.UI.WebControls.WebParts.WebPartManager webPartManager, string path, string userName, byte[] dataBlob);
        public virtual void SavePersonalizationState(System.Web.UI.WebControls.WebParts.PersonalizationState state) { }
    }
    public sealed partial class PersonalizationProviderCollection : System.Configuration.Provider.ProviderCollection
    {
        public PersonalizationProviderCollection() { }
        public new System.Web.UI.WebControls.WebParts.PersonalizationProvider this[string name] { get { throw null; } }
        public override void Add(System.Configuration.Provider.ProviderBase provider) { }
        public void CopyTo(System.Web.UI.WebControls.WebParts.PersonalizationProvider[] array, int index) { }
    }
    public enum PersonalizationScope
    {
        Shared = 1,
        User = 0,
    }
    public abstract partial class PersonalizationState
    {
        protected PersonalizationState(System.Web.UI.WebControls.WebParts.WebPartManager webPartManager) { }
        public bool IsDirty { get { throw null; } }
        public abstract bool IsEmpty { get; }
        public System.Web.UI.WebControls.WebParts.WebPartManager WebPartManager { get { throw null; } }
        public abstract void ApplyWebPartManagerPersonalization();
        public abstract void ApplyWebPartPersonalization(System.Web.UI.WebControls.WebParts.WebPart webPart);
        public abstract void ExtractWebPartManagerPersonalization();
        public abstract void ExtractWebPartPersonalization(System.Web.UI.WebControls.WebParts.WebPart webPart);
        public abstract string GetAuthorizationFilter(string webPartID);
        protected void SetDirty() { }
        public abstract void SetWebPartDirty(System.Web.UI.WebControls.WebParts.WebPart webPart);
        public abstract void SetWebPartManagerDirty();
        protected void ValidateWebPart(System.Web.UI.WebControls.WebParts.WebPart webPart) { }
    }
    [System.SerializableAttribute]
    public abstract partial class PersonalizationStateInfo
    {
        internal PersonalizationStateInfo() { }
        public System.DateTime LastUpdatedDate { get { throw null; } }
        public string Path { get { throw null; } }
        public int Size { get { throw null; } }
    }
    [System.SerializableAttribute]
    public sealed partial class PersonalizationStateInfoCollection : System.Collections.ICollection, System.Collections.IEnumerable
    {
        public PersonalizationStateInfoCollection() { }
        public int Count { get { throw null; } }
        public bool IsSynchronized { get { throw null; } }
        public System.Web.UI.WebControls.WebParts.PersonalizationStateInfo this[int index] { get { throw null; } }
        public System.Web.UI.WebControls.WebParts.PersonalizationStateInfo this[string path, string username] { get { throw null; } }
        public object SyncRoot { get { throw null; } }
        public void Add(System.Web.UI.WebControls.WebParts.PersonalizationStateInfo data) { }
        public void Clear() { }
        public void CopyTo(System.Web.UI.WebControls.WebParts.PersonalizationStateInfo[] array, int index) { }
        public System.Collections.IEnumerator GetEnumerator() { throw null; }
        public void Remove(string path, string username) { }
        public void SetReadOnly() { }
        void System.Collections.ICollection.CopyTo(System.Array array, int index) { }
    }
    [System.SerializableAttribute]
    public sealed partial class PersonalizationStateQuery
    {
        public PersonalizationStateQuery() { }
        public object this[string queryKey] { get { throw null; } set { } }
        public string PathToMatch { get { throw null; } set { } }
        public System.DateTime UserInactiveSinceDate { get { throw null; } set { } }
        public string UsernameToMatch { get { throw null; } set { } }
    }
    public sealed partial class PropertyGridEditorPart : System.Web.UI.WebControls.WebParts.EditorPart
    {
        public PropertyGridEditorPart() { }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Web.UI.ThemeableAttribute(false)]
        public override string DefaultButton { get { throw null; } set { } }
        public override bool Display { get { throw null; } }
        public override string Title { get { throw null; } set { } }
        public override bool ApplyChanges() { throw null; }
        protected internal override void CreateChildControls() { }
        protected internal override void OnPreRender(System.EventArgs e) { }
        protected internal override void RenderContents(System.Web.UI.HtmlTextWriter writer) { }
        public override void SyncChanges() { }
    }
    public partial class ProviderConnectionPoint : System.Web.UI.WebControls.WebParts.ConnectionPoint
    {
        public ProviderConnectionPoint(System.Reflection.MethodInfo callbackMethod, System.Type interfaceType, System.Type controlType, string displayName, string id, bool allowsMultipleConnections) { }
        public virtual object GetObject(System.Web.UI.Control control) { throw null; }
        public virtual System.Web.UI.WebControls.WebParts.ConnectionInterfaceCollection GetSecondaryInterfaces(System.Web.UI.Control control) { throw null; }
    }
    public sealed partial class ProviderConnectionPointCollection : System.Collections.ReadOnlyCollectionBase
    {
        public ProviderConnectionPointCollection() { }
        public ProviderConnectionPointCollection(System.Collections.ICollection connectionPoints) { }
        public System.Web.UI.WebControls.WebParts.ProviderConnectionPoint Default { get { throw null; } }
        public System.Web.UI.WebControls.WebParts.ProviderConnectionPoint this[int index] { get { throw null; } }
        public System.Web.UI.WebControls.WebParts.ProviderConnectionPoint this[string id] { get { throw null; } }
        public bool Contains(System.Web.UI.WebControls.WebParts.ProviderConnectionPoint connectionPoint) { throw null; }
        public void CopyTo(System.Web.UI.WebControls.WebParts.ProviderConnectionPoint[] array, int index) { }
        public int IndexOf(System.Web.UI.WebControls.WebParts.ProviderConnectionPoint connectionPoint) { throw null; }
    }
    [System.ComponentModel.ToolboxItemAttribute(false)]
    public abstract partial class ProxyWebPart : System.Web.UI.WebControls.WebParts.WebPart
    {
        protected ProxyWebPart(string originalID, string originalTypeName, string originalPath, string genericWebPartID) { }
        protected ProxyWebPart(System.Web.UI.WebControls.WebParts.WebPart webPart) { }
        public string GenericWebPartID { get { throw null; } }
        public sealed override string ID { get { throw null; } set { } }
        public string OriginalID { get { throw null; } }
        public string OriginalPath { get { throw null; } }
        public string OriginalTypeName { get { throw null; } }
        protected internal override void LoadControlState(object savedState) { }
        protected override void LoadViewState(object savedState) { }
        protected internal override object SaveControlState() { throw null; }
        protected override object SaveViewState() { throw null; }
    }
    [System.ComponentModel.EditorAttribute("System.ComponentModel.Design.CollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
    public sealed partial class ProxyWebPartConnectionCollection : System.Collections.CollectionBase
    {
        public ProxyWebPartConnectionCollection() { }
        public bool IsReadOnly { get { throw null; } }
        public System.Web.UI.WebControls.WebParts.WebPartConnection this[int index] { get { throw null; } set { } }
        public System.Web.UI.WebControls.WebParts.WebPartConnection this[string id] { get { throw null; } }
        public int Add(System.Web.UI.WebControls.WebParts.WebPartConnection value) { throw null; }
        public bool Contains(System.Web.UI.WebControls.WebParts.WebPartConnection value) { throw null; }
        public void CopyTo(System.Web.UI.WebControls.WebParts.WebPartConnection[] array, int index) { }
        public int IndexOf(System.Web.UI.WebControls.WebParts.WebPartConnection value) { throw null; }
        public void Insert(int index, System.Web.UI.WebControls.WebParts.WebPartConnection value) { }
        protected override void OnClear() { }
        protected override void OnInsert(int index, object value) { }
        protected override void OnRemove(int index, object value) { }
        protected override void OnSet(int index, object oldValue, object newValue) { }
        protected override void OnValidate(object value) { }
        public void Remove(System.Web.UI.WebControls.WebParts.WebPartConnection value) { }
    }
    [System.ComponentModel.BindableAttribute(false)]
    [System.ComponentModel.DesignerAttribute("System.Web.UI.Design.WebControls.WebParts.ProxyWebPartManagerDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.Web.UI.NonVisualControlAttribute]
    [System.Web.UI.ParseChildrenAttribute(true)]
    [System.Web.UI.PersistChildrenAttribute(false)]
    public partial class ProxyWebPartManager : System.Web.UI.Control
    {
        public ProxyWebPartManager() { }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override string ClientID { get { throw null; } }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override System.Web.UI.ControlCollection Controls { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(false)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override bool EnableTheming { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override string SkinID { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.ComponentModel.MergablePropertyAttribute(false)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.WebParts.ProxyWebPartConnectionCollection StaticConnections { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override bool Visible { get { throw null; } set { } }
        protected override System.Web.UI.ControlCollection CreateControlCollection() { throw null; }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override void Focus() { }
        protected internal override void OnInit(System.EventArgs e) { }
    }
    public delegate void RowCallback(object rowData);
    [System.Web.UI.WebControls.WebParts.WebPartTransformerAttribute(typeof(System.Web.UI.WebControls.WebParts.IWebPartRow), typeof(System.Web.UI.WebControls.WebParts.IWebPartField))]
    public sealed partial class RowToFieldTransformer : System.Web.UI.WebControls.WebParts.WebPartTransformer, System.Web.UI.WebControls.WebParts.IWebPartField
    {
        public RowToFieldTransformer() { }
        public string FieldName { get { throw null; } set { } }
        System.ComponentModel.PropertyDescriptor System.Web.UI.WebControls.WebParts.IWebPartField.Schema { get { throw null; } }
        public override System.Web.UI.Control CreateConfigurationControl() { throw null; }
        protected internal override void LoadConfigurationState(object savedState) { }
        protected internal override object SaveConfigurationState() { throw null; }
        void System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue(System.Web.UI.WebControls.WebParts.FieldCallback callback) { }
        public override object Transform(object providerData) { throw null; }
    }
    [System.Web.UI.WebControls.WebParts.WebPartTransformerAttribute(typeof(System.Web.UI.WebControls.WebParts.IWebPartRow), typeof(System.Web.UI.WebControls.WebParts.IWebPartParameters))]
    public sealed partial class RowToParametersTransformer : System.Web.UI.WebControls.WebParts.WebPartTransformer, System.Web.UI.WebControls.WebParts.IWebPartParameters
    {
        public RowToParametersTransformer() { }
        [System.ComponentModel.TypeConverterAttribute(typeof(System.Web.UI.WebControls.StringArrayConverter))]
        public string[] ConsumerFieldNames { get { throw null; } set { } }
        [System.ComponentModel.TypeConverterAttribute(typeof(System.Web.UI.WebControls.StringArrayConverter))]
        public string[] ProviderFieldNames { get { throw null; } set { } }
        System.ComponentModel.PropertyDescriptorCollection System.Web.UI.WebControls.WebParts.IWebPartParameters.Schema { get { throw null; } }
        public override System.Web.UI.Control CreateConfigurationControl() { throw null; }
        protected internal override void LoadConfigurationState(object savedState) { }
        protected internal override object SaveConfigurationState() { throw null; }
        void System.Web.UI.WebControls.WebParts.IWebPartParameters.GetParametersData(System.Web.UI.WebControls.WebParts.ParametersCallback callback) { }
        void System.Web.UI.WebControls.WebParts.IWebPartParameters.SetConsumerSchema(System.ComponentModel.PropertyDescriptorCollection schema) { }
        public override object Transform(object providerData) { throw null; }
    }
    [System.SerializableAttribute]
    public sealed partial class SharedPersonalizationStateInfo : System.Web.UI.WebControls.WebParts.PersonalizationStateInfo
    {
        public SharedPersonalizationStateInfo(string path, System.DateTime lastUpdatedDate, int size, int sizeOfPersonalizations, int countOfPersonalizations) { }
        public int CountOfPersonalizations { get { throw null; } }
        public int SizeOfPersonalizations { get { throw null; } }
    }
    public partial class SqlPersonalizationProvider : System.Web.UI.WebControls.WebParts.PersonalizationProvider
    {
        public SqlPersonalizationProvider() { }
        public override string ApplicationName { get { throw null; } set { } }
        public override System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection FindState(System.Web.UI.WebControls.WebParts.PersonalizationScope scope, System.Web.UI.WebControls.WebParts.PersonalizationStateQuery query, int pageIndex, int pageSize, out int totalRecords) { throw null; }
        public override int GetCountOfState(System.Web.UI.WebControls.WebParts.PersonalizationScope scope, System.Web.UI.WebControls.WebParts.PersonalizationStateQuery query) { throw null; }
        public override void Initialize(string name, System.Collections.Specialized.NameValueCollection configSettings) { }
        protected override void LoadPersonalizationBlobs(System.Web.UI.WebControls.WebParts.WebPartManager webPartManager, string path, string userName, ref byte[] sharedDataBlob, ref byte[] userDataBlob) { }
        protected override void ResetPersonalizationBlob(System.Web.UI.WebControls.WebParts.WebPartManager webPartManager, string path, string userName) { }
        public override int ResetState(System.Web.UI.WebControls.WebParts.PersonalizationScope scope, string[] paths, string[] usernames) { throw null; }
        public override int ResetUserState(string path, System.DateTime userInactiveSinceDate) { throw null; }
        protected override void SavePersonalizationBlob(System.Web.UI.WebControls.WebParts.WebPartManager webPartManager, string path, string userName, byte[] dataBlob) { }
    }
    public delegate void TableCallback(System.Collections.ICollection tableData);
    public sealed partial class TitleStyle : System.Web.UI.WebControls.TableItemStyle
    {
        public TitleStyle() { }
        [System.ComponentModel.DefaultValueAttribute(false)]
        public override bool Wrap { get { throw null; } set { } }
    }
    public abstract partial class ToolZone : System.Web.UI.WebControls.WebParts.WebZone, System.Web.UI.IPostBackEventHandler
    {
        protected ToolZone(System.Collections.ICollection associatedDisplayModes) { }
        protected ToolZone(System.Web.UI.WebControls.WebParts.WebPartDisplayMode associatedDisplayMode) { }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection AssociatedDisplayModes { get { throw null; } }
        protected virtual bool Display { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.Style EditUIStyle { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public virtual System.Web.UI.WebControls.WebParts.WebPartVerb HeaderCloseVerb { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.Style HeaderVerbStyle { get { throw null; } }
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string InstructionText { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.Style InstructionTextStyle { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.Style LabelStyle { get { throw null; } }
        [System.ComponentModel.BindableAttribute(false)]
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override bool Visible { get { throw null; } set { } }
        protected abstract void Close();
        protected override void LoadViewState(object savedState) { }
        protected virtual void OnDisplayModeChanged(object sender, System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs e) { }
        protected internal override void OnInit(System.EventArgs e) { }
        protected virtual void OnSelectedWebPartChanged(object sender, System.Web.UI.WebControls.WebParts.WebPartEventArgs e) { }
        protected virtual void RaisePostBackEvent(string eventArgument) { }
        protected override void RenderFooter(System.Web.UI.HtmlTextWriter writer) { }
        protected override void RenderHeader(System.Web.UI.HtmlTextWriter writer) { }
        protected virtual void RenderVerb(System.Web.UI.HtmlTextWriter writer, System.Web.UI.WebControls.WebParts.WebPartVerb verb) { }
        protected virtual void RenderVerbs(System.Web.UI.HtmlTextWriter writer) { }
        protected override object SaveViewState() { throw null; }
        void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(string eventArgument) { }
        protected override void TrackViewState() { }
    }
    public sealed partial class TransformerTypeCollection : System.Collections.ReadOnlyCollectionBase
    {
        public static readonly System.Web.UI.WebControls.WebParts.TransformerTypeCollection Empty;
        public TransformerTypeCollection() { }
        public TransformerTypeCollection(System.Collections.ICollection transformerTypes) { }
        public TransformerTypeCollection(System.Web.UI.WebControls.WebParts.TransformerTypeCollection existingTransformerTypes, System.Collections.ICollection transformerTypes) { }
        public System.Type this[int index] { get { throw null; } }
        public bool Contains(System.Type value) { throw null; }
        public void CopyTo(System.Type[] array, int index) { }
        public int IndexOf(System.Type value) { throw null; }
    }
    [System.ComponentModel.ToolboxItemAttribute(false)]
    public sealed partial class UnauthorizedWebPart : System.Web.UI.WebControls.WebParts.ProxyWebPart
    {
        public UnauthorizedWebPart(string originalID, string originalTypeName, string originalPath, string genericWebPartID) : base (default(System.Web.UI.WebControls.WebParts.WebPart)) { }
        public UnauthorizedWebPart(System.Web.UI.WebControls.WebParts.WebPart webPart) : base (default(System.Web.UI.WebControls.WebParts.WebPart)) { }
    }
    [System.SerializableAttribute]
    public sealed partial class UserPersonalizationStateInfo : System.Web.UI.WebControls.WebParts.PersonalizationStateInfo
    {
        public UserPersonalizationStateInfo(string path, System.DateTime lastUpdatedDate, int size, string username, System.DateTime lastActivityDate) { }
        public System.DateTime LastActivityDate { get { throw null; } }
        public string Username { get { throw null; } }
    }
    [System.AttributeUsageAttribute(System.AttributeTargets.Property)]
    public sealed partial class WebBrowsableAttribute : System.Attribute
    {
        public static readonly System.Web.UI.WebControls.WebParts.WebBrowsableAttribute Default;
        public static readonly System.Web.UI.WebControls.WebParts.WebBrowsableAttribute No;
        public static readonly System.Web.UI.WebControls.WebParts.WebBrowsableAttribute Yes;
        public WebBrowsableAttribute() { }
        public WebBrowsableAttribute(bool browsable) { }
        public bool Browsable { get { throw null; } }
        public override bool Equals(object obj) { throw null; }
        public override int GetHashCode() { throw null; }
        public override bool IsDefaultAttribute() { throw null; }
    }
    [System.AttributeUsageAttribute(System.AttributeTargets.Property)]
    public partial class WebDescriptionAttribute : System.Attribute
    {
        public static readonly System.Web.UI.WebControls.WebParts.WebDescriptionAttribute Default;
        public WebDescriptionAttribute() { }
        public WebDescriptionAttribute(string description) { }
        public virtual string Description { get { throw null; } }
        protected string DescriptionValue { get { throw null; } set { } }
        public override bool Equals(object obj) { throw null; }
        public override int GetHashCode() { throw null; }
        public override bool IsDefaultAttribute() { throw null; }
    }
    [System.AttributeUsageAttribute(System.AttributeTargets.Property)]
    public partial class WebDisplayNameAttribute : System.Attribute
    {
        public static readonly System.Web.UI.WebControls.WebParts.WebDisplayNameAttribute Default;
        public WebDisplayNameAttribute() { }
        public WebDisplayNameAttribute(string displayName) { }
        public virtual string DisplayName { get { throw null; } }
        protected string DisplayNameValue { get { throw null; } set { } }
        public override bool Equals(object obj) { throw null; }
        public override int GetHashCode() { throw null; }
        public override bool IsDefaultAttribute() { throw null; }
    }
    [System.ComponentModel.DesignerAttribute("System.Web.UI.Design.WebControls.WebParts.WebPartDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    public abstract partial class WebPart : System.Web.UI.WebControls.WebParts.Part, System.Web.UI.WebControls.WebParts.IWebActionable, System.Web.UI.WebControls.WebParts.IWebEditable, System.Web.UI.WebControls.WebParts.IWebPart
    {
        protected WebPart() { }
        [System.ComponentModel.DefaultValueAttribute(true)]
        [System.Web.UI.ThemeableAttribute(false)]
        [System.Web.UI.WebControls.WebParts.PersonalizableAttribute(System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared)]
        public virtual bool AllowClose { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(true)]
        [System.Web.UI.ThemeableAttribute(false)]
        [System.Web.UI.WebControls.WebParts.PersonalizableAttribute(System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared)]
        public virtual bool AllowConnect { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(true)]
        [System.Web.UI.ThemeableAttribute(false)]
        [System.Web.UI.WebControls.WebParts.PersonalizableAttribute(System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared)]
        public virtual bool AllowEdit { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(true)]
        [System.Web.UI.ThemeableAttribute(false)]
        [System.Web.UI.WebControls.WebParts.PersonalizableAttribute(System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared)]
        public virtual bool AllowHide { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(true)]
        [System.Web.UI.ThemeableAttribute(false)]
        [System.Web.UI.WebControls.WebParts.PersonalizableAttribute(System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared)]
        public virtual bool AllowMinimize { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(true)]
        [System.Web.UI.ThemeableAttribute(false)]
        [System.Web.UI.WebControls.WebParts.PersonalizableAttribute(System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared)]
        public virtual bool AllowZoneChange { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.Web.UI.ThemeableAttribute(false)]
        [System.Web.UI.WebControls.WebParts.PersonalizableAttribute(System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared)]
        public virtual string AuthorizationFilter { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.UrlPropertyAttribute]
        [System.Web.UI.WebControls.WebParts.PersonalizableAttribute(System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared)]
        public virtual string CatalogIconImageUrl { get { throw null; } set { } }
        [System.Web.UI.WebControls.WebParts.PersonalizableAttribute]
        public override System.Web.UI.WebControls.WebParts.PartChromeState ChromeState { get { throw null; } set { } }
        [System.Web.UI.WebControls.WebParts.PersonalizableAttribute]
        public override System.Web.UI.WebControls.WebParts.PartChromeType ChromeType { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public string ConnectErrorMessage { get { throw null; } }
        [System.Web.UI.WebControls.WebParts.PersonalizableAttribute(System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared)]
        public override string Description { get { throw null; } set { } }
        [System.Web.UI.WebControls.WebParts.PersonalizableAttribute]
        public override System.Web.UI.WebControls.ContentDirection Direction { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public string DisplayTitle { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.WebParts.WebPartExportMode.None)]
        [System.Web.UI.ThemeableAttribute(false)]
        [System.Web.UI.WebControls.WebParts.PersonalizableAttribute(System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared)]
        public virtual System.Web.UI.WebControls.WebParts.WebPartExportMode ExportMode { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public bool HasSharedData { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public bool HasUserData { get { throw null; } }
        [System.Web.UI.WebControls.WebParts.PersonalizableAttribute]
        public override System.Web.UI.WebControls.Unit Height { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.WebParts.WebPartHelpMode.Navigate)]
        [System.Web.UI.ThemeableAttribute(false)]
        [System.Web.UI.WebControls.WebParts.PersonalizableAttribute(System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared)]
        public virtual System.Web.UI.WebControls.WebParts.WebPartHelpMode HelpMode { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.ThemeableAttribute(false)]
        [System.Web.UI.UrlPropertyAttribute]
        [System.Web.UI.WebControls.WebParts.PersonalizableAttribute(System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared)]
        public virtual string HelpUrl { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(false)]
        [System.Web.UI.ThemeableAttribute(false)]
        [System.Web.UI.WebControls.WebParts.PersonalizableAttribute]
        public virtual bool Hidden { get { throw null; } set { } }
        [System.ComponentModel.LocalizableAttribute(true)]
        [System.Web.UI.WebControls.WebParts.PersonalizableAttribute(System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared)]
        public virtual string ImportErrorMessage { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public bool IsClosed { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public bool IsShared { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public bool IsStandalone { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public bool IsStatic { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string Subtitle { get { throw null; } }
        [System.Web.UI.WebControls.WebParts.PersonalizableAttribute]
        public override string Title { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.UrlPropertyAttribute]
        [System.Web.UI.WebControls.WebParts.PersonalizableAttribute(System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared)]
        public virtual string TitleIconImageUrl { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.ThemeableAttribute(false)]
        [System.Web.UI.UrlPropertyAttribute]
        [System.Web.UI.WebControls.WebParts.PersonalizableAttribute(System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared)]
        public virtual string TitleUrl { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public virtual System.Web.UI.WebControls.WebParts.WebPartVerbCollection Verbs { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public virtual object WebBrowsableObject { get { throw null; } }
        protected System.Web.UI.WebControls.WebParts.WebPartManager WebPartManager { get { throw null; } }
        [System.Web.UI.WebControls.WebParts.PersonalizableAttribute]
        public override System.Web.UI.WebControls.Unit Width { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public System.Web.UI.WebControls.WebParts.WebPartZoneBase Zone { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public int ZoneIndex { get { throw null; } }
        public virtual System.Web.UI.WebControls.WebParts.EditorPartCollection CreateEditorParts() { throw null; }
        protected internal virtual void OnClosing(System.EventArgs e) { }
        protected internal virtual void OnConnectModeChanged(System.EventArgs e) { }
        protected internal virtual void OnDeleting(System.EventArgs e) { }
        protected internal virtual void OnEditModeChanged(System.EventArgs e) { }
        protected void SetPersonalizationDirty() { }
        public static void SetPersonalizationDirty(System.Web.UI.Control control) { }
        protected override void TrackViewState() { }
    }
    public partial class WebPartAddingEventArgs : System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs
    {
        public WebPartAddingEventArgs(System.Web.UI.WebControls.WebParts.WebPart webPart, System.Web.UI.WebControls.WebParts.WebPartZoneBase zone, int zoneIndex) : base (default(System.Web.UI.WebControls.WebParts.WebPart)) { }
        public System.Web.UI.WebControls.WebParts.WebPartZoneBase Zone { get { throw null; } set { } }
        public int ZoneIndex { get { throw null; } set { } }
    }
    public delegate void WebPartAddingEventHandler(object sender, System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs e);
    public partial class WebPartAuthorizationEventArgs : System.EventArgs
    {
        public WebPartAuthorizationEventArgs(System.Type type, string path, string authorizationFilter, bool isShared) { }
        public string AuthorizationFilter { get { throw null; } }
        public bool IsAuthorized { get { throw null; } set { } }
        public bool IsShared { get { throw null; } }
        public string Path { get { throw null; } }
        public System.Type Type { get { throw null; } }
    }
    public delegate void WebPartAuthorizationEventHandler(object sender, System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs e);
    public partial class WebPartCancelEventArgs : System.ComponentModel.CancelEventArgs
    {
        public WebPartCancelEventArgs(System.Web.UI.WebControls.WebParts.WebPart webPart) { }
        public System.Web.UI.WebControls.WebParts.WebPart WebPart { get { throw null; } set { } }
    }
    public delegate void WebPartCancelEventHandler(object sender, System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs e);
    public partial class WebPartChrome
    {
        public WebPartChrome(System.Web.UI.WebControls.WebParts.WebPartZoneBase zone, System.Web.UI.WebControls.WebParts.WebPartManager manager) { }
        protected bool DragDropEnabled { get { throw null; } }
        protected System.Web.UI.WebControls.WebParts.WebPartManager WebPartManager { get { throw null; } }
        protected System.Web.UI.WebControls.WebParts.WebPartZoneBase Zone { get { throw null; } }
        protected virtual System.Web.UI.WebControls.Style CreateWebPartChromeStyle(System.Web.UI.WebControls.WebParts.WebPart webPart, System.Web.UI.WebControls.WebParts.PartChromeType chromeType) { throw null; }
        protected virtual System.Web.UI.WebControls.WebParts.WebPartVerbCollection FilterWebPartVerbs(System.Web.UI.WebControls.WebParts.WebPartVerbCollection verbs, System.Web.UI.WebControls.WebParts.WebPart webPart) { throw null; }
        protected string GetWebPartChromeClientID(System.Web.UI.WebControls.WebParts.WebPart webPart) { throw null; }
        protected string GetWebPartTitleClientID(System.Web.UI.WebControls.WebParts.WebPart webPart) { throw null; }
        protected virtual System.Web.UI.WebControls.WebParts.WebPartVerbCollection GetWebPartVerbs(System.Web.UI.WebControls.WebParts.WebPart webPart) { throw null; }
        public virtual void PerformPreRender() { }
        protected virtual void RenderPartContents(System.Web.UI.HtmlTextWriter writer, System.Web.UI.WebControls.WebParts.WebPart webPart) { }
        public virtual void RenderWebPart(System.Web.UI.HtmlTextWriter writer, System.Web.UI.WebControls.WebParts.WebPart webPart) { }
    }
    public sealed partial class WebPartCollection : System.Collections.ReadOnlyCollectionBase
    {
        public WebPartCollection() { }
        public WebPartCollection(System.Collections.ICollection webParts) { }
        public System.Web.UI.WebControls.WebParts.WebPart this[int index] { get { throw null; } }
        public System.Web.UI.WebControls.WebParts.WebPart this[string id] { get { throw null; } }
        public bool Contains(System.Web.UI.WebControls.WebParts.WebPart value) { throw null; }
        public void CopyTo(System.Web.UI.WebControls.WebParts.WebPart[] array, int index) { }
        public int IndexOf(System.Web.UI.WebControls.WebParts.WebPart value) { throw null; }
    }
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    [System.Web.UI.ParseChildrenAttribute(true, "Transformers")]
    public sealed partial class WebPartConnection
    {
        public WebPartConnection() { }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public System.Web.UI.WebControls.WebParts.WebPart Consumer { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint ConsumerConnectionPoint { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute("default")]
        public string ConsumerConnectionPointID { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        public string ConsumerID { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        public string ID { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public bool IsActive { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public bool IsShared { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public bool IsStatic { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public System.Web.UI.WebControls.WebParts.WebPart Provider { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public System.Web.UI.WebControls.WebParts.ProviderConnectionPoint ProviderConnectionPoint { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute("default")]
        public string ProviderConnectionPointID { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        public string ProviderID { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public System.Web.UI.WebControls.WebParts.WebPartTransformer Transformer { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerDefaultProperty)]
        public System.Web.UI.WebControls.WebParts.WebPartTransformerCollection Transformers { get { throw null; } }
        public override string ToString() { throw null; }
    }
    [System.ComponentModel.EditorAttribute("System.ComponentModel.Design.CollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
    public sealed partial class WebPartConnectionCollection : System.Collections.CollectionBase
    {
        internal WebPartConnectionCollection() { }
        public bool IsReadOnly { get { throw null; } }
        public System.Web.UI.WebControls.WebParts.WebPartConnection this[int index] { get { throw null; } set { } }
        public System.Web.UI.WebControls.WebParts.WebPartConnection this[string id] { get { throw null; } }
        public int Add(System.Web.UI.WebControls.WebParts.WebPartConnection value) { throw null; }
        public bool Contains(System.Web.UI.WebControls.WebParts.WebPartConnection value) { throw null; }
        public void CopyTo(System.Web.UI.WebControls.WebParts.WebPartConnection[] array, int index) { }
        public int IndexOf(System.Web.UI.WebControls.WebParts.WebPartConnection value) { throw null; }
        public void Insert(int index, System.Web.UI.WebControls.WebParts.WebPartConnection value) { }
        protected override void OnClear() { }
        protected override void OnInsert(int index, object value) { }
        protected override void OnRemove(int index, object value) { }
        protected override void OnSet(int index, object oldValue, object newValue) { }
        protected override void OnValidate(object value) { }
        public void Remove(System.Web.UI.WebControls.WebParts.WebPartConnection value) { }
    }
    public partial class WebPartConnectionsCancelEventArgs : System.ComponentModel.CancelEventArgs
    {
        public WebPartConnectionsCancelEventArgs(System.Web.UI.WebControls.WebParts.WebPart provider, System.Web.UI.WebControls.WebParts.ProviderConnectionPoint providerConnectionPoint, System.Web.UI.WebControls.WebParts.WebPart consumer, System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint consumerConnectionPoint) { }
        public WebPartConnectionsCancelEventArgs(System.Web.UI.WebControls.WebParts.WebPart provider, System.Web.UI.WebControls.WebParts.ProviderConnectionPoint providerConnectionPoint, System.Web.UI.WebControls.WebParts.WebPart consumer, System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint consumerConnectionPoint, System.Web.UI.WebControls.WebParts.WebPartConnection connection) { }
        public System.Web.UI.WebControls.WebParts.WebPartConnection Connection { get { throw null; } }
        public System.Web.UI.WebControls.WebParts.WebPart Consumer { get { throw null; } }
        public System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint ConsumerConnectionPoint { get { throw null; } }
        public System.Web.UI.WebControls.WebParts.WebPart Provider { get { throw null; } }
        public System.Web.UI.WebControls.WebParts.ProviderConnectionPoint ProviderConnectionPoint { get { throw null; } }
    }
    public delegate void WebPartConnectionsCancelEventHandler(object sender, System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs e);
    public partial class WebPartConnectionsEventArgs : System.EventArgs
    {
        public WebPartConnectionsEventArgs(System.Web.UI.WebControls.WebParts.WebPart provider, System.Web.UI.WebControls.WebParts.ProviderConnectionPoint providerConnectionPoint, System.Web.UI.WebControls.WebParts.WebPart consumer, System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint consumerConnectionPoint) { }
        public WebPartConnectionsEventArgs(System.Web.UI.WebControls.WebParts.WebPart provider, System.Web.UI.WebControls.WebParts.ProviderConnectionPoint providerConnectionPoint, System.Web.UI.WebControls.WebParts.WebPart consumer, System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint consumerConnectionPoint, System.Web.UI.WebControls.WebParts.WebPartConnection connection) { }
        public System.Web.UI.WebControls.WebParts.WebPartConnection Connection { get { throw null; } }
        public System.Web.UI.WebControls.WebParts.WebPart Consumer { get { throw null; } }
        public System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint ConsumerConnectionPoint { get { throw null; } }
        public System.Web.UI.WebControls.WebParts.WebPart Provider { get { throw null; } }
        public System.Web.UI.WebControls.WebParts.ProviderConnectionPoint ProviderConnectionPoint { get { throw null; } }
    }
    public delegate void WebPartConnectionsEventHandler(object sender, System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs e);
    public partial class WebPartDescription
    {
        public WebPartDescription(string id, string title, string description, string imageUrl) { }
        public WebPartDescription(System.Web.UI.WebControls.WebParts.WebPart part) { }
        public string CatalogIconImageUrl { get { throw null; } }
        public string Description { get { throw null; } }
        public string ID { get { throw null; } }
        public string Title { get { throw null; } }
    }
    public sealed partial class WebPartDescriptionCollection : System.Collections.ReadOnlyCollectionBase
    {
        public WebPartDescriptionCollection() { }
        public WebPartDescriptionCollection(System.Collections.ICollection webPartDescriptions) { }
        public System.Web.UI.WebControls.WebParts.WebPartDescription this[int index] { get { throw null; } }
        public System.Web.UI.WebControls.WebParts.WebPartDescription this[string id] { get { throw null; } }
        public bool Contains(System.Web.UI.WebControls.WebParts.WebPartDescription value) { throw null; }
        public void CopyTo(System.Web.UI.WebControls.WebParts.WebPartDescription[] array, int index) { }
        public int IndexOf(System.Web.UI.WebControls.WebParts.WebPartDescription value) { throw null; }
    }
    public abstract partial class WebPartDisplayMode
    {
        protected WebPartDisplayMode(string name) { }
        public virtual bool AllowPageDesign { get { throw null; } }
        public virtual bool AssociatedWithToolZone { get { throw null; } }
        public string Name { get { throw null; } }
        public virtual bool RequiresPersonalization { get { throw null; } }
        public virtual bool ShowHiddenWebParts { get { throw null; } }
        public virtual bool IsEnabled(System.Web.UI.WebControls.WebParts.WebPartManager webPartManager) { throw null; }
    }
    public partial class WebPartDisplayModeCancelEventArgs : System.ComponentModel.CancelEventArgs
    {
        public WebPartDisplayModeCancelEventArgs(System.Web.UI.WebControls.WebParts.WebPartDisplayMode newDisplayMode) { }
        public System.Web.UI.WebControls.WebParts.WebPartDisplayMode NewDisplayMode { get { throw null; } set { } }
    }
    public delegate void WebPartDisplayModeCancelEventHandler(object sender, System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs e);
    public sealed partial class WebPartDisplayModeCollection : System.Collections.CollectionBase
    {
        internal WebPartDisplayModeCollection() { }
        public bool IsReadOnly { get { throw null; } }
        public System.Web.UI.WebControls.WebParts.WebPartDisplayMode this[int index] { get { throw null; } }
        public System.Web.UI.WebControls.WebParts.WebPartDisplayMode this[string modeName] { get { throw null; } }
        public int Add(System.Web.UI.WebControls.WebParts.WebPartDisplayMode value) { throw null; }
        public bool Contains(System.Web.UI.WebControls.WebParts.WebPartDisplayMode value) { throw null; }
        public void CopyTo(System.Web.UI.WebControls.WebParts.WebPartDisplayMode[] array, int index) { }
        public int IndexOf(System.Web.UI.WebControls.WebParts.WebPartDisplayMode value) { throw null; }
        public void Insert(int index, System.Web.UI.WebControls.WebParts.WebPartDisplayMode value) { }
        protected override void OnClear() { }
        protected override void OnInsert(int index, object value) { }
        protected override void OnRemove(int index, object value) { }
        protected override void OnSet(int index, object oldValue, object newValue) { }
        protected override void OnValidate(object value) { }
    }
    public partial class WebPartDisplayModeEventArgs : System.EventArgs
    {
        public WebPartDisplayModeEventArgs(System.Web.UI.WebControls.WebParts.WebPartDisplayMode oldDisplayMode) { }
        public System.Web.UI.WebControls.WebParts.WebPartDisplayMode OldDisplayMode { get { throw null; } set { } }
    }
    public delegate void WebPartDisplayModeEventHandler(object sender, System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs e);
    public partial class WebPartEventArgs : System.EventArgs
    {
        public WebPartEventArgs(System.Web.UI.WebControls.WebParts.WebPart webPart) { }
        public System.Web.UI.WebControls.WebParts.WebPart WebPart { get { throw null; } }
    }
    public delegate void WebPartEventHandler(object sender, System.Web.UI.WebControls.WebParts.WebPartEventArgs e);
    public enum WebPartExportMode
    {
        All = 1,
        None = 0,
        NonSensitiveData = 2,
    }
    public enum WebPartHelpMode
    {
        Modal = 0,
        Modeless = 1,
        Navigate = 2,
    }
    [System.ComponentModel.BindableAttribute(false)]
    [System.ComponentModel.DesignerAttribute("System.Web.UI.Design.WebControls.WebParts.WebPartManagerDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.Web.UI.NonVisualControlAttribute]
    [System.Web.UI.ParseChildrenAttribute(true)]
    [System.Web.UI.PersistChildrenAttribute(false)]
    [System.Web.UI.ViewStateModeByIdAttribute]
    public partial class WebPartManager : System.Web.UI.Control, System.Web.UI.INamingContainer, System.Web.UI.WebControls.WebParts.IPersonalizable
    {
        public static readonly System.Web.UI.WebControls.WebParts.WebPartDisplayMode BrowseDisplayMode;
        public static readonly System.Web.UI.WebControls.WebParts.WebPartDisplayMode CatalogDisplayMode;
        public static readonly System.Web.UI.WebControls.WebParts.WebPartDisplayMode ConnectDisplayMode;
        public static readonly System.Web.UI.WebControls.WebParts.WebPartDisplayMode DesignDisplayMode;
        public static readonly System.Web.UI.WebControls.WebParts.WebPartDisplayMode EditDisplayMode;
        public WebPartManager() { }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public System.Web.UI.WebControls.WebParts.TransformerTypeCollection AvailableTransformers { get { throw null; } }
        public virtual string CloseProviderWarning { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public System.Web.UI.WebControls.WebParts.WebPartConnectionCollection Connections { get { throw null; } }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override System.Web.UI.ControlCollection Controls { get { throw null; } }
        public virtual string DeleteWarning { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public virtual System.Web.UI.WebControls.WebParts.WebPartDisplayMode DisplayMode { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection DisplayModes { get { throw null; } }
        protected internal System.Web.UI.WebControls.WebParts.WebPartConnectionCollection DynamicConnections { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(true)]
        public virtual bool EnableClientScript { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DefaultValueAttribute(true)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override bool EnableTheming { get { throw null; } set { } }
        public virtual string ExportSensitiveDataWarning { get { throw null; } set { } }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        protected System.Web.UI.WebControls.WebParts.WebPartManagerInternals Internals { get { throw null; } }
        protected virtual bool IsCustomPersonalizationStateDirty { get { throw null; } }
        protected virtual System.Security.PermissionSet MediumPermissionSet { get { throw null; } }
        protected virtual System.Security.PermissionSet MinimalPermissionSet { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.WebParts.WebPartPersonalization Personalization { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public System.Web.UI.WebControls.WebParts.WebPart SelectedWebPart { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override string SkinID { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.MergablePropertyAttribute(false)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.WebParts.WebPartConnectionCollection StaticConnections { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection SupportedDisplayModes { get { throw null; } }
        bool System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty { get { throw null; } }
        [System.ComponentModel.BindableAttribute(false)]
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override bool Visible { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public System.Web.UI.WebControls.WebParts.WebPartCollection WebParts { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public System.Web.UI.WebControls.WebParts.WebPartZoneCollection Zones { get { throw null; } }
        public event System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventHandler AuthorizeWebPart { add { } remove { } }
        public event System.EventHandler ConnectionsActivated { add { } remove { } }
        public event System.EventHandler ConnectionsActivating { add { } remove { } }
        public event System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventHandler DisplayModeChanged { add { } remove { } }
        public event System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventHandler DisplayModeChanging { add { } remove { } }
        public event System.Web.UI.WebControls.WebParts.WebPartEventHandler SelectedWebPartChanged { add { } remove { } }
        public event System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler SelectedWebPartChanging { add { } remove { } }
        public event System.Web.UI.WebControls.WebParts.WebPartEventHandler WebPartAdded { add { } remove { } }
        public event System.Web.UI.WebControls.WebParts.WebPartAddingEventHandler WebPartAdding { add { } remove { } }
        public event System.Web.UI.WebControls.WebParts.WebPartEventHandler WebPartClosed { add { } remove { } }
        public event System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler WebPartClosing { add { } remove { } }
        public event System.Web.UI.WebControls.WebParts.WebPartEventHandler WebPartDeleted { add { } remove { } }
        public event System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler WebPartDeleting { add { } remove { } }
        public event System.Web.UI.WebControls.WebParts.WebPartEventHandler WebPartMoved { add { } remove { } }
        public event System.Web.UI.WebControls.WebParts.WebPartMovingEventHandler WebPartMoving { add { } remove { } }
        public event System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler WebPartsConnected { add { } remove { } }
        public event System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler WebPartsConnecting { add { } remove { } }
        public event System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler WebPartsDisconnected { add { } remove { } }
        public event System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler WebPartsDisconnecting { add { } remove { } }
        protected virtual void ActivateConnections() { }
        public System.Web.UI.WebControls.WebParts.WebPart AddWebPart(System.Web.UI.WebControls.WebParts.WebPart webPart, System.Web.UI.WebControls.WebParts.WebPartZoneBase zone, int zoneIndex) { throw null; }
        public virtual void BeginWebPartConnecting(System.Web.UI.WebControls.WebParts.WebPart webPart) { }
        public virtual void BeginWebPartEditing(System.Web.UI.WebControls.WebParts.WebPart webPart) { }
        public bool CanConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart provider, System.Web.UI.WebControls.WebParts.ProviderConnectionPoint providerConnectionPoint, System.Web.UI.WebControls.WebParts.WebPart consumer, System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint consumerConnectionPoint) { throw null; }
        public virtual bool CanConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart provider, System.Web.UI.WebControls.WebParts.ProviderConnectionPoint providerConnectionPoint, System.Web.UI.WebControls.WebParts.WebPart consumer, System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint consumerConnectionPoint, System.Web.UI.WebControls.WebParts.WebPartTransformer transformer) { throw null; }
        protected virtual bool CheckRenderClientScript() { throw null; }
        public void CloseWebPart(System.Web.UI.WebControls.WebParts.WebPart webPart) { }
        public System.Web.UI.WebControls.WebParts.WebPartConnection ConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart provider, System.Web.UI.WebControls.WebParts.ProviderConnectionPoint providerConnectionPoint, System.Web.UI.WebControls.WebParts.WebPart consumer, System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint consumerConnectionPoint) { throw null; }
        public virtual System.Web.UI.WebControls.WebParts.WebPartConnection ConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart provider, System.Web.UI.WebControls.WebParts.ProviderConnectionPoint providerConnectionPoint, System.Web.UI.WebControls.WebParts.WebPart consumer, System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint consumerConnectionPoint, System.Web.UI.WebControls.WebParts.WebPartTransformer transformer) { throw null; }
        protected virtual System.Web.UI.WebControls.WebParts.WebPart CopyWebPart(System.Web.UI.WebControls.WebParts.WebPart webPart) { throw null; }
        protected virtual System.Web.UI.WebControls.WebParts.TransformerTypeCollection CreateAvailableTransformers() { throw null; }
        protected sealed override System.Web.UI.ControlCollection CreateControlCollection() { throw null; }
        protected virtual System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection CreateDisplayModes() { throw null; }
        protected virtual string CreateDynamicConnectionID() { throw null; }
        protected virtual string CreateDynamicWebPartID(System.Type webPartType) { throw null; }
        protected virtual System.Web.UI.WebControls.WebParts.ErrorWebPart CreateErrorWebPart(string originalID, string originalTypeName, string originalPath, string genericWebPartID, string errorMessage) { throw null; }
        protected virtual System.Web.UI.WebControls.WebParts.WebPartPersonalization CreatePersonalization() { throw null; }
        public virtual System.Web.UI.WebControls.WebParts.GenericWebPart CreateWebPart(System.Web.UI.Control control) { throw null; }
        public void DeleteWebPart(System.Web.UI.WebControls.WebParts.WebPart webPart) { }
        protected virtual void DisconnectWebPart(System.Web.UI.WebControls.WebParts.WebPart webPart) { }
        public virtual void DisconnectWebParts(System.Web.UI.WebControls.WebParts.WebPartConnection connection) { }
        public virtual void EndWebPartConnecting() { }
        public virtual void EndWebPartEditing() { }
        public virtual void ExportWebPart(System.Web.UI.WebControls.WebParts.WebPart webPart, System.Xml.XmlWriter writer) { }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override void Focus() { }
        public virtual System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection GetConsumerConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart webPart) { throw null; }
        public static System.Web.UI.WebControls.WebParts.WebPartManager GetCurrentWebPartManager(System.Web.UI.Page page) { throw null; }
        protected internal virtual string GetDisplayTitle(System.Web.UI.WebControls.WebParts.WebPart webPart) { throw null; }
        public string GetExportUrl(System.Web.UI.WebControls.WebParts.WebPart webPart) { throw null; }
        public System.Web.UI.WebControls.WebParts.GenericWebPart GetGenericWebPart(System.Web.UI.Control control) { throw null; }
        public virtual System.Web.UI.WebControls.WebParts.ProviderConnectionPointCollection GetProviderConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart webPart) { throw null; }
        public virtual System.Web.UI.WebControls.WebParts.WebPart ImportWebPart(System.Xml.XmlReader reader, out string errorMessage) { throw null; }
        public virtual bool IsAuthorized(System.Type type, string path, string authorizationFilter, bool isShared) { throw null; }
        public bool IsAuthorized(System.Web.UI.WebControls.WebParts.WebPart webPart) { throw null; }
        protected internal override void LoadControlState(object savedState) { }
        protected virtual void LoadCustomPersonalizationState(System.Web.UI.WebControls.WebParts.PersonalizationDictionary state) { }
        public virtual void MoveWebPart(System.Web.UI.WebControls.WebParts.WebPart webPart, System.Web.UI.WebControls.WebParts.WebPartZoneBase zone, int zoneIndex) { }
        protected virtual void OnAuthorizeWebPart(System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs e) { }
        protected virtual void OnConnectionsActivated(System.EventArgs e) { }
        protected virtual void OnConnectionsActivating(System.EventArgs e) { }
        protected virtual void OnDisplayModeChanged(System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs e) { }
        protected virtual void OnDisplayModeChanging(System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs e) { }
        protected internal override void OnInit(System.EventArgs e) { }
        protected internal override void OnPreRender(System.EventArgs e) { }
        protected virtual void OnSelectedWebPartChanged(System.Web.UI.WebControls.WebParts.WebPartEventArgs e) { }
        protected virtual void OnSelectedWebPartChanging(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs e) { }
        protected internal override void OnUnload(System.EventArgs e) { }
        protected virtual void OnWebPartAdded(System.Web.UI.WebControls.WebParts.WebPartEventArgs e) { }
        protected virtual void OnWebPartAdding(System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs e) { }
        protected virtual void OnWebPartClosed(System.Web.UI.WebControls.WebParts.WebPartEventArgs e) { }
        protected virtual void OnWebPartClosing(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs e) { }
        protected virtual void OnWebPartDeleted(System.Web.UI.WebControls.WebParts.WebPartEventArgs e) { }
        protected virtual void OnWebPartDeleting(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs e) { }
        protected virtual void OnWebPartMoved(System.Web.UI.WebControls.WebParts.WebPartEventArgs e) { }
        protected virtual void OnWebPartMoving(System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs e) { }
        protected virtual void OnWebPartsConnected(System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs e) { }
        protected virtual void OnWebPartsConnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs e) { }
        protected virtual void OnWebPartsDisconnected(System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs e) { }
        protected virtual void OnWebPartsDisconnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs e) { }
        protected virtual void RegisterClientScript() { }
        protected internal override void Render(System.Web.UI.HtmlTextWriter writer) { }
        protected internal override object SaveControlState() { throw null; }
        protected virtual void SaveCustomPersonalizationState(System.Web.UI.WebControls.WebParts.PersonalizationDictionary state) { }
        protected void SetPersonalizationDirty() { }
        protected void SetSelectedWebPart(System.Web.UI.WebControls.WebParts.WebPart webPart) { }
        void System.Web.UI.WebControls.WebParts.IPersonalizable.Load(System.Web.UI.WebControls.WebParts.PersonalizationDictionary state) { }
        void System.Web.UI.WebControls.WebParts.IPersonalizable.Save(System.Web.UI.WebControls.WebParts.PersonalizationDictionary state) { }
        protected override void TrackViewState() { }
    }
    public sealed partial class WebPartManagerInternals
    {
        internal WebPartManagerInternals() { }
        public void AddWebPart(System.Web.UI.WebControls.WebParts.WebPart webPart) { }
        public void CallOnClosing(System.Web.UI.WebControls.WebParts.WebPart webPart) { }
        public void CallOnConnectModeChanged(System.Web.UI.WebControls.WebParts.WebPart webPart) { }
        public void CallOnDeleting(System.Web.UI.WebControls.WebParts.WebPart webPart) { }
        public void CallOnEditModeChanged(System.Web.UI.WebControls.WebParts.WebPart webPart) { }
        public bool ConnectionDeleted(System.Web.UI.WebControls.WebParts.WebPartConnection connection) { throw null; }
        public object CreateObjectFromType(System.Type type) { throw null; }
        public void DeleteConnection(System.Web.UI.WebControls.WebParts.WebPartConnection connection) { }
        public string GetZoneID(System.Web.UI.WebControls.WebParts.WebPart webPart) { throw null; }
        public void LoadConfigurationState(System.Web.UI.WebControls.WebParts.WebPartTransformer transformer, object savedState) { }
        public void RemoveWebPart(System.Web.UI.WebControls.WebParts.WebPart webPart) { }
        public object SaveConfigurationState(System.Web.UI.WebControls.WebParts.WebPartTransformer transformer) { throw null; }
        public void SetConnectErrorMessage(System.Web.UI.WebControls.WebParts.WebPart webPart, string connectErrorMessage) { }
        public void SetHasSharedData(System.Web.UI.WebControls.WebParts.WebPart webPart, bool hasSharedData) { }
        public void SetHasUserData(System.Web.UI.WebControls.WebParts.WebPart webPart, bool hasUserData) { }
        public void SetIsClosed(System.Web.UI.WebControls.WebParts.WebPart webPart, bool isClosed) { }
        public void SetIsShared(System.Web.UI.WebControls.WebParts.WebPart webPart, bool isShared) { }
        public void SetIsShared(System.Web.UI.WebControls.WebParts.WebPartConnection connection, bool isShared) { }
        public void SetIsStandalone(System.Web.UI.WebControls.WebParts.WebPart webPart, bool isStandalone) { }
        public void SetIsStatic(System.Web.UI.WebControls.WebParts.WebPart webPart, bool isStatic) { }
        public void SetIsStatic(System.Web.UI.WebControls.WebParts.WebPartConnection connection, bool isStatic) { }
        public void SetTransformer(System.Web.UI.WebControls.WebParts.WebPartConnection connection, System.Web.UI.WebControls.WebParts.WebPartTransformer transformer) { }
        public void SetZoneID(System.Web.UI.WebControls.WebParts.WebPart webPart, string zoneID) { }
        public void SetZoneIndex(System.Web.UI.WebControls.WebParts.WebPart webPart, int zoneIndex) { }
    }
    public sealed partial class WebPartMenuStyle : System.Web.UI.WebControls.TableStyle, System.ComponentModel.ICustomTypeDescriptor
    {
        public WebPartMenuStyle() { }
        public WebPartMenuStyle(System.Web.UI.StateBag bag) { }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override System.Web.UI.WebControls.HorizontalAlign HorizontalAlign { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(typeof(System.Drawing.Color), "")]
        [System.ComponentModel.TypeConverterAttribute(typeof(System.Web.UI.WebControls.WebColorConverter))]
        public System.Drawing.Color ShadowColor { get { throw null; } set { } }
        public override void CopyFrom(System.Web.UI.WebControls.Style s) { }
        protected override void FillStyleAttributes(System.Web.UI.CssStyleCollection attributes, System.Web.UI.IUrlResolutionService urlResolver) { }
        public override void MergeWith(System.Web.UI.WebControls.Style s) { }
        public override void Reset() { }
        System.ComponentModel.AttributeCollection System.ComponentModel.ICustomTypeDescriptor.GetAttributes() { throw null; }
        string System.ComponentModel.ICustomTypeDescriptor.GetClassName() { throw null; }
        string System.ComponentModel.ICustomTypeDescriptor.GetComponentName() { throw null; }
        System.ComponentModel.TypeConverter System.ComponentModel.ICustomTypeDescriptor.GetConverter() { throw null; }
        System.ComponentModel.EventDescriptor System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent() { throw null; }
        System.ComponentModel.PropertyDescriptor System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty() { throw null; }
        object System.ComponentModel.ICustomTypeDescriptor.GetEditor(System.Type editorBaseType) { throw null; }
        System.ComponentModel.EventDescriptorCollection System.ComponentModel.ICustomTypeDescriptor.GetEvents() { throw null; }
        System.ComponentModel.EventDescriptorCollection System.ComponentModel.ICustomTypeDescriptor.GetEvents(System.Attribute[] attributes) { throw null; }
        System.ComponentModel.PropertyDescriptorCollection System.ComponentModel.ICustomTypeDescriptor.GetProperties() { throw null; }
        System.ComponentModel.PropertyDescriptorCollection System.ComponentModel.ICustomTypeDescriptor.GetProperties(System.Attribute[] attributes) { throw null; }
        object System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner(System.ComponentModel.PropertyDescriptor pd) { throw null; }
    }
    public partial class WebPartMovingEventArgs : System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs
    {
        public WebPartMovingEventArgs(System.Web.UI.WebControls.WebParts.WebPart webPart, System.Web.UI.WebControls.WebParts.WebPartZoneBase zone, int zoneIndex) : base (default(System.Web.UI.WebControls.WebParts.WebPart)) { }
        public System.Web.UI.WebControls.WebParts.WebPartZoneBase Zone { get { throw null; } set { } }
        public int ZoneIndex { get { throw null; } set { } }
    }
    public delegate void WebPartMovingEventHandler(object sender, System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs e);
    [System.ComponentModel.TypeConverterAttribute("System.Web.UI.WebControls.EmptyStringExpandableObjectConverter")]
    public partial class WebPartPersonalization
    {
        public static readonly System.Web.UI.WebControls.WebParts.WebPartUserCapability EnterSharedScopeUserCapability;
        public static readonly System.Web.UI.WebControls.WebParts.WebPartUserCapability ModifyStateUserCapability;
        public WebPartPersonalization(System.Web.UI.WebControls.WebParts.WebPartManager owner) { }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public bool CanEnterSharedScope { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(true)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        public virtual bool Enabled { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public virtual bool HasPersonalizationState { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.WebParts.PersonalizationScope.User)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        public virtual System.Web.UI.WebControls.WebParts.PersonalizationScope InitialScope { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public bool IsEnabled { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        protected bool IsInitialized { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public bool IsModifiable { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        public virtual string ProviderName { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public System.Web.UI.WebControls.WebParts.PersonalizationScope Scope { get { throw null; } }
        protected bool ShouldResetPersonalizationState { get { throw null; } set { } }
        protected virtual System.Collections.IDictionary UserCapabilities { get { throw null; } }
        protected System.Web.UI.WebControls.WebParts.WebPartManager WebPartManager { get { throw null; } }
        protected internal virtual void ApplyPersonalizationState() { }
        protected internal virtual void ApplyPersonalizationState(System.Web.UI.WebControls.WebParts.WebPart webPart) { }
        protected virtual void ChangeScope(System.Web.UI.WebControls.WebParts.PersonalizationScope scope) { }
        protected internal virtual void CopyPersonalizationState(System.Web.UI.WebControls.WebParts.WebPart webPartA, System.Web.UI.WebControls.WebParts.WebPart webPartB) { }
        public void EnsureEnabled(bool ensureModifiable) { }
        protected internal virtual void ExtractPersonalizationState() { }
        protected internal virtual void ExtractPersonalizationState(System.Web.UI.WebControls.WebParts.WebPart webPart) { }
        protected internal virtual string GetAuthorizationFilter(string webPartID) { throw null; }
        protected virtual System.Web.UI.WebControls.WebParts.PersonalizationScope Load() { throw null; }
        public virtual void ResetPersonalizationState() { }
        protected virtual void Save() { }
        protected internal virtual void SetDirty() { }
        protected internal virtual void SetDirty(System.Web.UI.WebControls.WebParts.WebPart webPart) { }
        public virtual void ToggleScope() { }
    }
    public sealed partial class WebPartTracker : System.IDisposable
    {
        public WebPartTracker(System.Web.UI.WebControls.WebParts.WebPart webPart, System.Web.UI.WebControls.WebParts.ProviderConnectionPoint providerConnectionPoint) { }
        public bool IsCircularConnection { get { throw null; } }
        void System.IDisposable.Dispose() { }
    }
    public abstract partial class WebPartTransformer
    {
        protected WebPartTransformer() { }
        public virtual System.Web.UI.Control CreateConfigurationControl() { throw null; }
        protected internal virtual void LoadConfigurationState(object savedState) { }
        protected internal virtual object SaveConfigurationState() { throw null; }
        public abstract object Transform(object providerData);
    }
    [System.AttributeUsageAttribute(System.AttributeTargets.Class)]
    public sealed partial class WebPartTransformerAttribute : System.Attribute
    {
        public WebPartTransformerAttribute(System.Type consumerType, System.Type providerType) { }
        public System.Type ConsumerType { get { throw null; } }
        public System.Type ProviderType { get { throw null; } }
        public static System.Type GetConsumerType(System.Type transformerType) { throw null; }
        public static System.Type GetProviderType(System.Type transformerType) { throw null; }
    }
    public sealed partial class WebPartTransformerCollection : System.Collections.CollectionBase
    {
        public WebPartTransformerCollection() { }
        public bool IsReadOnly { get { throw null; } }
        public System.Web.UI.WebControls.WebParts.WebPartTransformer this[int index] { get { throw null; } set { } }
        public int Add(System.Web.UI.WebControls.WebParts.WebPartTransformer transformer) { throw null; }
        public bool Contains(System.Web.UI.WebControls.WebParts.WebPartTransformer transformer) { throw null; }
        public void CopyTo(System.Web.UI.WebControls.WebParts.WebPartTransformer[] array, int index) { }
        public int IndexOf(System.Web.UI.WebControls.WebParts.WebPartTransformer transformer) { throw null; }
        public void Insert(int index, System.Web.UI.WebControls.WebParts.WebPartTransformer transformer) { }
        protected override void OnClear() { }
        protected override void OnInsert(int index, object value) { }
        protected override void OnRemove(int index, object value) { }
        protected override void OnSet(int index, object oldValue, object newValue) { }
        protected override void OnValidate(object value) { }
        public void Remove(System.Web.UI.WebControls.WebParts.WebPartTransformer transformer) { }
    }
    public sealed partial class WebPartUserCapability
    {
        public WebPartUserCapability(string name) { }
        public string Name { get { throw null; } }
        public override bool Equals(object o) { throw null; }
        public override int GetHashCode() { throw null; }
    }
    [System.ComponentModel.TypeConverterAttribute("System.Web.UI.WebControls.EmptyStringExpandableObjectConverter")]
    public partial class WebPartVerb : System.Web.UI.IStateManager
    {
        public WebPartVerb(string id, string clientClickHandler) { }
        public WebPartVerb(string id, System.Web.UI.WebControls.WebParts.WebPartEventHandler serverClickHandler) { }
        public WebPartVerb(string id, System.Web.UI.WebControls.WebParts.WebPartEventHandler serverClickHandler, string clientClickHandler) { }
        [System.ComponentModel.DefaultValueAttribute(false)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.ThemeableAttribute(false)]
        public virtual bool Checked { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public string ClientClickHandler { get { throw null; } }
        [System.ComponentModel.LocalizableAttribute(true)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        public virtual string Description { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(true)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.ThemeableAttribute(false)]
        public virtual bool Enabled { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public string ID { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.UrlPropertyAttribute]
        public virtual string ImageUrl { get { throw null; } set { } }
        protected virtual bool IsTrackingViewState { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public System.Web.UI.WebControls.WebParts.WebPartEventHandler ServerClickHandler { get { throw null; } }
        bool System.Web.UI.IStateManager.IsTrackingViewState { get { throw null; } }
        [System.ComponentModel.LocalizableAttribute(true)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        public virtual string Text { get { throw null; } set { } }
        protected System.Web.UI.StateBag ViewState { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(true)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.ThemeableAttribute(false)]
        public virtual bool Visible { get { throw null; } set { } }
        protected virtual void LoadViewState(object savedState) { }
        protected virtual object SaveViewState() { throw null; }
        void System.Web.UI.IStateManager.LoadViewState(object savedState) { }
        object System.Web.UI.IStateManager.SaveViewState() { throw null; }
        void System.Web.UI.IStateManager.TrackViewState() { }
        protected virtual void TrackViewState() { }
    }
    public sealed partial class WebPartVerbCollection : System.Collections.ReadOnlyCollectionBase
    {
        public static readonly System.Web.UI.WebControls.WebParts.WebPartVerbCollection Empty;
        public WebPartVerbCollection() { }
        public WebPartVerbCollection(System.Collections.ICollection verbs) { }
        public WebPartVerbCollection(System.Web.UI.WebControls.WebParts.WebPartVerbCollection existingVerbs, System.Collections.ICollection verbs) { }
        public System.Web.UI.WebControls.WebParts.WebPartVerb this[int index] { get { throw null; } }
        public bool Contains(System.Web.UI.WebControls.WebParts.WebPartVerb value) { throw null; }
        public void CopyTo(System.Web.UI.WebControls.WebParts.WebPartVerb[] array, int index) { }
        public int IndexOf(System.Web.UI.WebControls.WebParts.WebPartVerb value) { throw null; }
    }
    public enum WebPartVerbRenderMode
    {
        Menu = 0,
        TitleBar = 1,
    }
    public partial class WebPartVerbsEventArgs : System.EventArgs
    {
        public WebPartVerbsEventArgs() { }
        public WebPartVerbsEventArgs(System.Web.UI.WebControls.WebParts.WebPartVerbCollection verbs) { }
        public System.Web.UI.WebControls.WebParts.WebPartVerbCollection Verbs { get { throw null; } set { } }
    }
    public delegate void WebPartVerbsEventHandler(object sender, System.Web.UI.WebControls.WebParts.WebPartVerbsEventArgs e);
    [System.ComponentModel.DesignerAttribute("System.Web.UI.Design.WebControls.WebParts.WebPartZoneDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.Web.UI.SupportsEventValidationAttribute]
    public partial class WebPartZone : System.Web.UI.WebControls.WebParts.WebPartZoneBase
    {
        public WebPartZone() { }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        [System.Web.UI.TemplateInstanceAttribute(System.Web.UI.TemplateInstance.Single)]
        public virtual System.Web.UI.ITemplate ZoneTemplate { get { throw null; } set { } }
        protected internal override System.Web.UI.WebControls.WebParts.WebPartCollection GetInitialWebParts() { throw null; }
        protected internal override void OnInit(System.EventArgs e) { }
    }
    [System.ComponentModel.DesignerAttribute("System.Web.UI.Design.WebControls.WebParts.WebPartZoneBaseDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    public abstract partial class WebPartZoneBase : System.Web.UI.WebControls.WebParts.WebZone, System.Web.UI.IPostBackEventHandler
    {
        protected WebPartZoneBase() { }
        [System.ComponentModel.DefaultValueAttribute(true)]
        [System.Web.UI.ThemeableAttribute(false)]
        public virtual bool AllowLayoutChange { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(typeof(System.Drawing.Color), "Gray")]
        public override System.Drawing.Color BorderColor { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.BorderStyle.Solid)]
        public override System.Web.UI.WebControls.BorderStyle BorderStyle { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(typeof(System.Web.UI.WebControls.Unit), "1")]
        public override System.Web.UI.WebControls.Unit BorderWidth { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public virtual System.Web.UI.WebControls.WebParts.WebPartVerb CloseVerb { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public virtual System.Web.UI.WebControls.WebParts.WebPartVerb ConnectVerb { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public virtual System.Web.UI.WebControls.WebParts.WebPartVerb DeleteVerb { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public virtual string DisplayTitle { get { throw null; } }
        protected internal bool DragDropEnabled { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(typeof(System.Drawing.Color), "Blue")]
        [System.ComponentModel.TypeConverterAttribute(typeof(System.Web.UI.WebControls.WebColorConverter))]
        public virtual System.Drawing.Color DragHighlightColor { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public virtual System.Web.UI.WebControls.WebParts.WebPartVerb EditVerb { get { throw null; } }
        public override string EmptyZoneText { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public virtual System.Web.UI.WebControls.WebParts.WebPartVerb ExportVerb { get { throw null; } }
        protected override bool HasFooter { get { throw null; } }
        protected override bool HasHeader { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public virtual System.Web.UI.WebControls.WebParts.WebPartVerb HelpVerb { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.Orientation.Vertical)]
        public virtual System.Web.UI.WebControls.Orientation LayoutOrientation { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.Style MenuCheckImageStyle { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.UrlPropertyAttribute]
        public virtual string MenuCheckImageUrl { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.Style MenuLabelHoverStyle { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.Style MenuLabelStyle { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string MenuLabelText { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.UrlPropertyAttribute]
        public virtual string MenuPopupImageUrl { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.WebParts.WebPartMenuStyle MenuPopupStyle { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.Style MenuVerbHoverStyle { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.Style MenuVerbStyle { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public virtual System.Web.UI.WebControls.WebParts.WebPartVerb MinimizeVerb { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public virtual System.Web.UI.WebControls.WebParts.WebPartVerb RestoreVerb { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.Style SelectedPartChromeStyle { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(true)]
        public virtual bool ShowTitleIcons { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.ButtonType.Image)]
        public virtual System.Web.UI.WebControls.ButtonType TitleBarVerbButtonType { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.Style TitleBarVerbStyle { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Web.UI.ThemeableAttribute(false)]
        public override System.Web.UI.WebControls.ButtonType VerbButtonType { get { throw null; } set { } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public System.Web.UI.WebControls.WebParts.WebPartChrome WebPartChrome { get { throw null; } }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public System.Web.UI.WebControls.WebParts.WebPartCollection WebParts { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.WebParts.WebPartVerbRenderMode.Menu)]
        public virtual System.Web.UI.WebControls.WebParts.WebPartVerbRenderMode WebPartVerbRenderMode { get { throw null; } set { } }
        public event System.Web.UI.WebControls.WebParts.WebPartVerbsEventHandler CreateVerbs { add { } remove { } }
        protected virtual void CloseWebPart(System.Web.UI.WebControls.WebParts.WebPart webPart) { }
        protected virtual void ConnectWebPart(System.Web.UI.WebControls.WebParts.WebPart webPart) { }
        protected internal override void CreateChildControls() { }
        protected override System.Web.UI.ControlCollection CreateControlCollection() { throw null; }
        protected override System.Web.UI.WebControls.Style CreateControlStyle() { throw null; }
        protected virtual System.Web.UI.WebControls.WebParts.WebPartChrome CreateWebPartChrome() { throw null; }
        protected virtual void DeleteWebPart(System.Web.UI.WebControls.WebParts.WebPart webPart) { }
        protected virtual void EditWebPart(System.Web.UI.WebControls.WebParts.WebPart webPart) { }
        public override System.Web.UI.WebControls.WebParts.PartChromeType GetEffectiveChromeType(System.Web.UI.WebControls.WebParts.Part part) { throw null; }
        protected internal abstract System.Web.UI.WebControls.WebParts.WebPartCollection GetInitialWebParts();
        protected override void LoadViewState(object savedState) { }
        protected virtual void MinimizeWebPart(System.Web.UI.WebControls.WebParts.WebPart webPart) { }
        protected virtual void OnCreateVerbs(System.Web.UI.WebControls.WebParts.WebPartVerbsEventArgs e) { }
        protected internal override void OnPreRender(System.EventArgs e) { }
        protected virtual void RaisePostBackEvent(string eventArgument) { }
        protected internal override void Render(System.Web.UI.HtmlTextWriter writer) { }
        protected override void RenderBody(System.Web.UI.HtmlTextWriter writer) { }
        protected virtual void RenderDropCue(System.Web.UI.HtmlTextWriter writer) { }
        protected override void RenderHeader(System.Web.UI.HtmlTextWriter writer) { }
        protected virtual void RestoreWebPart(System.Web.UI.WebControls.WebParts.WebPart webPart) { }
        protected override object SaveViewState() { throw null; }
        void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(string eventArgument) { }
        protected override void TrackViewState() { }
    }
    public sealed partial class WebPartZoneCollection : System.Collections.ReadOnlyCollectionBase
    {
        public WebPartZoneCollection() { }
        public WebPartZoneCollection(System.Collections.ICollection webPartZones) { }
        public System.Web.UI.WebControls.WebParts.WebPartZoneBase this[int index] { get { throw null; } }
        public System.Web.UI.WebControls.WebParts.WebPartZoneBase this[string id] { get { throw null; } }
        public bool Contains(System.Web.UI.WebControls.WebParts.WebPartZoneBase value) { throw null; }
        public void CopyTo(System.Web.UI.WebControls.WebParts.WebPartZoneBase[] array, int index) { }
        public int IndexOf(System.Web.UI.WebControls.WebParts.WebPartZoneBase value) { throw null; }
    }
    [System.ComponentModel.BindableAttribute(false)]
    [System.ComponentModel.DesignerAttribute("System.Web.UI.Design.WebControls.WebParts.WebZoneDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    public abstract partial class WebZone : System.Web.UI.WebControls.CompositeControl
    {
        internal WebZone() { }
        [System.ComponentModel.DefaultValueAttribute("")]
        [System.ComponentModel.EditorAttribute("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
        [System.Web.UI.UrlPropertyAttribute]
        public virtual string BackImageUrl { get { throw null; } set { } }
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string EmptyZoneText { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.Style EmptyZoneTextStyle { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.Style ErrorStyle { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.WebParts.TitleStyle FooterStyle { get { throw null; } }
        protected virtual bool HasFooter { get { throw null; } }
        protected virtual bool HasHeader { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.WebParts.TitleStyle HeaderStyle { get { throw null; } }
        [System.ComponentModel.LocalizableAttribute(true)]
        public virtual string HeaderText { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(2)]
        public virtual int Padding { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(typeof(System.Web.UI.WebControls.Unit), "5px")]
        public System.Web.UI.WebControls.Unit PartChromePadding { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.Style PartChromeStyle { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.WebParts.PartChromeType.Default)]
        public virtual System.Web.UI.WebControls.WebParts.PartChromeType PartChromeType { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.TableStyle PartStyle { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.WebParts.TitleStyle PartTitleStyle { get { throw null; } }
        protected internal bool RenderClientScript { get { throw null; } }
        protected override System.Web.UI.HtmlTextWriterTag TagKey { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute(System.Web.UI.WebControls.ButtonType.Button)]
        public virtual System.Web.UI.WebControls.ButtonType VerbButtonType { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute(null)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        [System.ComponentModel.NotifyParentPropertyAttribute(true)]
        [System.Web.UI.PersistenceModeAttribute(System.Web.UI.PersistenceMode.InnerProperty)]
        public System.Web.UI.WebControls.Style VerbStyle { get { throw null; } }
        protected System.Web.UI.WebControls.WebParts.WebPartManager WebPartManager { get { throw null; } }
        public virtual System.Web.UI.WebControls.WebParts.PartChromeType GetEffectiveChromeType(System.Web.UI.WebControls.WebParts.Part part) { throw null; }
        protected override void LoadViewState(object savedState) { }
        protected internal override void OnInit(System.EventArgs e) { }
        protected internal override void OnPreRender(System.EventArgs e) { }
        public override void RenderBeginTag(System.Web.UI.HtmlTextWriter writer) { }
        protected virtual void RenderBody(System.Web.UI.HtmlTextWriter writer) { }
        protected internal override void RenderContents(System.Web.UI.HtmlTextWriter writer) { }
        protected virtual void RenderFooter(System.Web.UI.HtmlTextWriter writer) { }
        protected virtual void RenderHeader(System.Web.UI.HtmlTextWriter writer) { }
        protected override object SaveViewState() { throw null; }
        protected override void TrackViewState() { }
    }
}
namespace System.Web.Util
{
    public partial class HttpEncoder
    {
        public HttpEncoder() { }
        public static System.Web.Util.HttpEncoder Current { get { throw null; } set { } }
        public static System.Web.Util.HttpEncoder Default { get { throw null; } }
        protected internal virtual void HeaderNameValueEncode(string headerName, string headerValue, out string encodedHeaderName, out string encodedHeaderValue) { throw null; }
        protected internal virtual void HtmlAttributeEncode(string value, System.IO.TextWriter output) { }
        protected internal virtual void HtmlDecode(string value, System.IO.TextWriter output) { }
        protected internal virtual void HtmlEncode(string value, System.IO.TextWriter output) { }
        protected internal virtual string JavaScriptStringEncode(string value) { throw null; }
        protected internal virtual byte[] UrlEncode(byte[] bytes, int offset, int count) { throw null; }
        protected internal virtual string UrlPathEncode(string value) { throw null; }
    }
    public partial interface IWebObjectFactory
    {
        object CreateInstance();
    }
    public partial interface IWebPropertyAccessor
    {
        object GetProperty(object target);
        void SetProperty(object target, object value);
    }
    public enum RequestValidationSource
    {
        Cookies = 2,
        Files = 3,
        Form = 1,
        Headers = 7,
        Path = 5,
        PathInfo = 6,
        QueryString = 0,
        RawUrl = 4,
    }
    public partial class RequestValidator
    {
        public RequestValidator() { }
        public static System.Web.Util.RequestValidator Current { get { throw null; } set { } }
        public bool InvokeIsValidRequestString(System.Web.HttpContext context, string value, System.Web.Util.RequestValidationSource requestValidationSource, string collectionKey, out int validationFailureIndex) { throw null; }
        protected internal virtual bool IsValidRequestString(System.Web.HttpContext context, string value, System.Web.Util.RequestValidationSource requestValidationSource, string collectionKey, out int validationFailureIndex) { throw null; }
    }
    public delegate void TransactedCallback();
    public partial class Transactions
    {
        public Transactions() { }
        public static void InvokeTransacted(System.Web.Util.TransactedCallback callback, System.EnterpriseServices.TransactionOption mode) { }
        public static void InvokeTransacted(System.Web.Util.TransactedCallback callback, System.EnterpriseServices.TransactionOption mode, ref bool transactionAborted) { }
    }
    public partial class WorkItem
    {
        public WorkItem() { }
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, Unrestricted=true)]
        public static void Post(System.Web.Util.WorkItemCallback callback) { }
    }
    public delegate void WorkItemCallback();
}
namespace System.Web.WebSockets
{
    public sealed partial class AspNetWebSocket : System.Net.WebSockets.WebSocket
    {
        internal AspNetWebSocket() { }
        public override System.Nullable<System.Net.WebSockets.WebSocketCloseStatus> CloseStatus { get { throw null; } }
        public override string CloseStatusDescription { get { throw null; } }
        public override System.Net.WebSockets.WebSocketState State { get { throw null; } }
        public override string SubProtocol { get { throw null; } }
        public override void Abort() { }
        public override System.Threading.Tasks.Task CloseAsync(System.Net.WebSockets.WebSocketCloseStatus closeStatus, string statusDescription, System.Threading.CancellationToken cancellationToken) { throw null; }
        public override System.Threading.Tasks.Task CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus closeStatus, string statusDescription, System.Threading.CancellationToken cancellationToken) { throw null; }
        public override void Dispose() { }
        public override System.Threading.Tasks.Task<System.Net.WebSockets.WebSocketReceiveResult> ReceiveAsync(System.ArraySegment<byte> buffer, System.Threading.CancellationToken cancellationToken) { throw null; }
        public override System.Threading.Tasks.Task SendAsync(System.ArraySegment<byte> buffer, System.Net.WebSockets.WebSocketMessageType messageType, bool endOfMessage, System.Threading.CancellationToken cancellationToken) { throw null; }
    }
    public abstract partial class AspNetWebSocketContext : System.Net.WebSockets.WebSocketContext
    {
        protected AspNetWebSocketContext() { }
        public virtual string AnonymousID { get { throw null; } }
        public virtual System.Web.HttpApplicationStateBase Application { get { throw null; } }
        public virtual string ApplicationPath { get { throw null; } }
        public virtual System.Web.Caching.Cache Cache { get { throw null; } }
        public virtual System.Web.HttpClientCertificate ClientCertificate { get { throw null; } }
        public static int ConnectionCount { get { throw null; } }
        public override System.Net.CookieCollection CookieCollection { get { throw null; } }
        public virtual System.Web.HttpCookieCollection Cookies { get { throw null; } }
        public virtual string FilePath { get { throw null; } }
        public override System.Collections.Specialized.NameValueCollection Headers { get { throw null; } }
        public override bool IsAuthenticated { get { throw null; } }
        public virtual bool IsClientConnected { get { throw null; } }
        public virtual bool IsDebuggingEnabled { get { throw null; } }
        public override bool IsLocal { get { throw null; } }
        public override bool IsSecureConnection { get { throw null; } }
        public virtual System.Collections.IDictionary Items { get { throw null; } }
        public virtual System.Security.Principal.WindowsIdentity LogonUserIdentity { get { throw null; } }
        public override string Origin { get { throw null; } }
        public virtual string Path { get { throw null; } }
        public virtual string PathInfo { get { throw null; } }
        public virtual System.Web.Profile.ProfileBase Profile { get { throw null; } }
        public virtual System.Collections.Specialized.NameValueCollection QueryString { get { throw null; } }
        public virtual string RawUrl { get { throw null; } }
        public override System.Uri RequestUri { get { throw null; } }
        public override string SecWebSocketKey { get { throw null; } }
        public override System.Collections.Generic.IEnumerable<string> SecWebSocketProtocols { get { throw null; } }
        public override string SecWebSocketVersion { get { throw null; } }
        public virtual System.Web.HttpServerUtilityBase Server { get { throw null; } }
        public virtual System.Collections.Specialized.NameValueCollection ServerVariables { get { throw null; } }
        public virtual System.DateTime Timestamp { get { throw null; } }
        public virtual System.Web.UnvalidatedRequestValuesBase Unvalidated { get { throw null; } }
        public virtual System.Uri UrlReferrer { get { throw null; } }
        public override System.Security.Principal.IPrincipal User { get { throw null; } }
        public virtual string UserAgent { get { throw null; } }
        public virtual string UserHostAddress { get { throw null; } }
        public virtual string UserHostName { get { throw null; } }
        public virtual string[] UserLanguages { get { throw null; } }
        public override System.Net.WebSockets.WebSocket WebSocket { get { throw null; } }
    }
    public sealed partial class AspNetWebSocketOptions
    {
        public AspNetWebSocketOptions() { }
        public bool RequireSameOrigin { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } [System.Runtime.CompilerServices.CompilerGeneratedAttribute]set { } }
        public string SubProtocol { get { throw null; } set { } }
    }
}
