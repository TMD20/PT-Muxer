From 8636b3d980cdef4c12f53779f708cc4a674d1054 Mon Sep 17 00:00:00 2001
From: Michael Natterer <mitch@gimp.org>
Date: Fri, 23 Nov 2012 15:24:36 +0100
Subject: [PATCH 04/68] Add gdk_screen_get_monitor_workarea() and use it all
 over the place

---
 gdk/gdk.symbols               |    1 +
 gdk/gdkscreen.h               |    3 +++
 gdk/quartz/gdkscreen-quartz.c |   30 ++++++++++++++++++++++++++++++
 gtk/gtkcombobox.c             |    4 ++--
 gtk/gtkentry.c                |    2 +-
 gtk/gtkentrycompletion.c      |    2 +-
 gtk/gtkfilechooserdefault.c   |    2 +-
 gtk/gtklinkbutton.c           |    2 +-
 gtk/gtkmenu.c                 |    6 +++---
 gtk/gtkmenuitem.c             |    2 +-
 gtk/gtkmenutoolbutton.c       |    2 +-
 gtk/gtkrecentchooserdefault.c |    4 ++--
 gtk/gtkscalebutton.c          |    2 +-
 gtk/gtkstatusicon.c           |    4 ++--
 gtk/gtktextview.c             |    2 +-
 gtk/gtktoolbar.c              |    2 +-
 gtk/gtktooltip.c              |    2 +-
 gtk/gtktreeview.c             |    2 +-
 gtk/gtkwindow.c               |    6 +++---
 19 files changed, 57 insertions(+), 23 deletions(-)

diff --git a/gdk/gdk.symbols b/gdk/gdk.symbols
index d4f2072..feed787 100644
--- a/gdk/gdk.symbols
+++ b/gdk/gdk.symbols
@@ -1169,6 +1169,7 @@ gdk_screen_get_default_colormap
 gdk_screen_set_default_colormap
 gdk_screen_get_n_monitors
 gdk_screen_get_monitor_geometry
+gdk_screen_get_monitor_workarea
 gdk_screen_get_monitor_width_mm
 gdk_screen_get_monitor_height_mm
 gdk_screen_get_monitor_plug_name
diff --git a/gdk/gdkscreen.h b/gdk/gdkscreen.h
index 418cecf..d3d4fe9 100644
--- a/gdk/gdkscreen.h
+++ b/gdk/gdkscreen.h
@@ -95,6 +95,9 @@ gint          gdk_screen_get_primary_monitor   (GdkScreen *screen);
 void          gdk_screen_get_monitor_geometry  (GdkScreen *screen,
						gint       monitor_num,
						GdkRectangle *dest);
+void          gdk_screen_get_monitor_workarea  (GdkScreen    *screen,
+                                                gint          monitor_num,
+                                                GdkRectangle *dest);
 gint          gdk_screen_get_monitor_at_point  (GdkScreen *screen,
						gint       x,
						gint       y);
diff --git a/gdk/quartz/gdkscreen-quartz.c b/gdk/quartz/gdkscreen-quartz.c
index 796fcb5..4bb573b 100644
--- a/gdk/quartz/gdkscreen-quartz.c
+++ b/gdk/quartz/gdkscreen-quartz.c
@@ -464,6 +464,36 @@ gdk_screen_get_monitor_geometry (GdkScreen    *screen,
   *dest = GDK_SCREEN_QUARTZ (screen)->screen_rects[monitor_num];
 }

+void
+gdk_screen_get_monitor_workarea (GdkScreen    *screen,
+                                 gint          monitor_num,
+                                 GdkRectangle *dest)
+{
+  GdkScreenQuartz *quartz_screen;
+  NSArray *array;
+  NSScreen *nsscreen;
+  NSRect rect;
+
+  g_return_if_fail (GDK_IS_SCREEN (screen));
+  g_return_if_fail (monitor_num < gdk_screen_get_n_monitors (screen));
+  g_return_if_fail (monitor_num >= 0);
+
+  quartz_screen = GDK_SCREEN_QUARTZ (screen);
+
+  GDK_QUARTZ_ALLOC_POOL;
+
+  array = [NSScreen screens];
+  nsscreen = [array objectAtIndex:monitor_num];
+  rect = [nsscreen visibleFrame];
+
+  dest->x = rect.origin.x - quartz_screen->min_x;
+  dest->y = quartz_screen->height - (rect.origin.y + rect.size.height) + quartz_screen->min_y;
+  dest->width = rect.size.width;
+  dest->height = rect.size.height;
+
+  GDK_QUARTZ_RELEASE_POOL;
+}
+
 gchar *
 gdk_screen_make_display_name (GdkScreen *screen)
 {
diff --git a/gtk/gtkcombobox.c b/gtk/gtkcombobox.c
index dc912a3..d997d0d 100644
--- a/gtk/gtkcombobox.c
+++ b/gtk/gtkcombobox.c
@@ -1667,7 +1667,7 @@ gtk_combo_box_menu_position_below (GtkMenu  *menu,
   screen = gtk_widget_get_screen (GTK_WIDGET (combo_box));
   monitor_num = gdk_screen_get_monitor_at_window (screen,
						  GTK_WIDGET (combo_box)->window);
-  gdk_screen_get_monitor_geometry (screen, monitor_num, &monitor);
+  gdk_screen_get_monitor_workarea (screen, monitor_num, &monitor);

   if (*x < monitor.x)
     *x = monitor.x;
@@ -1836,7 +1836,7 @@ gtk_combo_box_list_position (GtkComboBox *combo_box,
   screen = gtk_widget_get_screen (GTK_WIDGET (combo_box));
   monitor_num = gdk_screen_get_monitor_at_window (screen,
						  GTK_WIDGET (combo_box)->window);
-  gdk_screen_get_monitor_geometry (screen, monitor_num, &monitor);
+  gdk_screen_get_monitor_workarea (screen, monitor_num, &monitor);

   if (*x < monitor.x)
     *x = monitor.x;
diff --git a/gtk/gtkentry.c b/gtk/gtkentry.c
index e2999a3..0d16d71 100644
--- a/gtk/gtkentry.c
+++ b/gtk/gtkentry.c
@@ -8614,7 +8614,7 @@ popup_position_func (GtkMenu   *menu,
     monitor_num = 0;
   gtk_menu_set_monitor (menu, monitor_num);

-  gdk_screen_get_monitor_geometry (screen, monitor_num, &monitor);
+  gdk_screen_get_monitor_workarea (screen, monitor_num, &monitor);
   gtk_widget_size_request (entry->popup_menu, &menu_req);
   height = gdk_window_get_height (entry->text_area);
   gtk_entry_get_cursor_locations (entry, CURSOR_STANDARD, &strong_x, NULL);
diff --git a/gtk/gtkentrycompletion.c b/gtk/gtkentrycompletion.c
index 2fa7b56..a8deace 100644
--- a/gtk/gtkentrycompletion.c
+++ b/gtk/gtkentrycompletion.c
@@ -1409,7 +1409,7 @@ _gtk_entry_completion_resize_popup (GtkEntryCompletion *completion)
   screen = gtk_widget_get_screen (GTK_WIDGET (completion->priv->entry));
   monitor_num = gdk_screen_get_monitor_at_window (screen,
						  GTK_WIDGET (completion->priv->entry)->window);
-  gdk_screen_get_monitor_geometry (screen, monitor_num, &monitor);
+  gdk_screen_get_monitor_workarea (screen, monitor_num, &monitor);



diff --git a/gtk/gtkfilechooserdefault.c b/gtk/gtkfilechooserdefault.c
index 2a75365..f94f4d6 100644
--- a/gtk/gtkfilechooserdefault.c
+++ b/gtk/gtkfilechooserdefault.c
@@ -4100,7 +4100,7 @@ popup_position_func (GtkMenu   *menu,

   monitor_num = gdk_screen_get_monitor_at_point (screen, *x, *y);
   gtk_menu_set_monitor (menu, monitor_num);
-  gdk_screen_get_monitor_geometry (screen, monitor_num, &monitor);
+  gdk_screen_get_monitor_workarea (screen, monitor_num, &monitor);

   *x = CLAMP (*x, monitor.x, monitor.x + MAX (0, monitor.width - req.width));
   *y = CLAMP (*y, monitor.y, monitor.y + MAX (0, monitor.height - req.height));
diff --git a/gtk/gtklinkbutton.c b/gtk/gtklinkbutton.c
index bae8ec3..45d64b2 100644
--- a/gtk/gtklinkbutton.c
+++ b/gtk/gtklinkbutton.c
@@ -374,7 +374,7 @@ popup_position_func (GtkMenu  *menu,

   monitor_num = gdk_screen_get_monitor_at_point (screen, *x, *y);
   gtk_menu_set_monitor (menu, monitor_num);
-  gdk_screen_get_monitor_geometry (screen, monitor_num, &monitor);
+  gdk_screen_get_monitor_workarea (screen, monitor_num, &monitor);

   *x = CLAMP (*x, monitor.x, monitor.x + MAX (0, monitor.width - req.width));
   *y = CLAMP (*y, monitor.y, monitor.y + MAX (0, monitor.height - req.height));
diff --git a/gtk/gtkmenu.c b/gtk/gtkmenu.c
index fc25098..44972b2 100644
--- a/gtk/gtkmenu.c
+++ b/gtk/gtkmenu.c
@@ -993,7 +993,7 @@ gtk_menu_window_size_request (GtkWidget      *window,
       GdkScreen *screen = gtk_widget_get_screen (window);
       GdkRectangle monitor;

-      gdk_screen_get_monitor_geometry (screen, private->monitor_num, &monitor);
+      gdk_screen_get_monitor_workarea (screen, private->monitor_num, &monitor);

       if (private->y + requisition->height > monitor.y + monitor.height)
	requisition->height = monitor.y + monitor.height - private->y;
@@ -4231,7 +4231,7 @@ gtk_menu_position (GtkMenu *menu)
       if (private->monitor_num < 0)
	private->monitor_num = gdk_screen_get_monitor_at_point (screen, x, y);

-      gdk_screen_get_monitor_geometry (screen, private->monitor_num, &monitor);
+      gdk_screen_get_monitor_workarea (screen, private->monitor_num, &monitor);
     }
   else
     {
@@ -4260,7 +4260,7 @@ gtk_menu_position (GtkMenu *menu)
        * Positioning in the vertical direction is similar: first try below
        * mouse cursor, then above.
        */
-      gdk_screen_get_monitor_geometry (screen, private->monitor_num, &monitor);
+      gdk_screen_get_monitor_workarea (screen, private->monitor_num, &monitor);

       space_left = x - monitor.x;
       space_right = monitor.x + monitor.width - x - 1;
diff --git a/gtk/gtkmenuitem.c b/gtk/gtkmenuitem.c
index 8f23b75..ffc2db6 100644
--- a/gtk/gtkmenuitem.c
+++ b/gtk/gtkmenuitem.c
@@ -1717,7 +1717,7 @@ gtk_menu_item_position_menu (GtkMenu  *menu,
   monitor_num = gdk_screen_get_monitor_at_window (screen, menu_item->event_window);
   if (monitor_num < 0)
     monitor_num = 0;
-  gdk_screen_get_monitor_geometry (screen, monitor_num, &monitor);
+  gdk_screen_get_monitor_workarea (screen, monitor_num, &monitor);

   if (!gdk_window_get_origin (widget->window, &tx, &ty))
     {
diff --git a/gtk/gtkmenutoolbutton.c b/gtk/gtkmenutoolbutton.c
index 0c464e8..e254e1b 100644
--- a/gtk/gtkmenutoolbutton.c
+++ b/gtk/gtkmenutoolbutton.c
@@ -287,7 +287,7 @@ menu_position_func (GtkMenu           *menu,
   monitor_num = gdk_screen_get_monitor_at_window (screen, widget->window);
   if (monitor_num < 0)
     monitor_num = 0;
-  gdk_screen_get_monitor_geometry (screen, monitor_num, &monitor);
+  gdk_screen_get_monitor_workarea (screen, monitor_num, &monitor);

   if (orientation == GTK_ORIENTATION_HORIZONTAL)
     {
diff --git a/gtk/gtkrecentchooserdefault.c b/gtk/gtkrecentchooserdefault.c
index 1ab48e2..fe2a772 100644
--- a/gtk/gtkrecentchooserdefault.c
+++ b/gtk/gtkrecentchooserdefault.c
@@ -951,7 +951,7 @@ set_default_size (GtkRecentChooserDefault *impl)
   screen = gtk_widget_get_screen (widget);
   monitor_num = gdk_screen_get_monitor_at_window (screen, widget->window);

-  gdk_screen_get_monitor_geometry (screen, monitor_num, &monitor);
+  gdk_screen_get_monitor_workarea (screen, monitor_num, &monitor);

   width = MIN (width, monitor.width * 3 / 4);
   height = MIN (height, monitor.height * 3 / 4);
@@ -1849,7 +1849,7 @@ popup_position_func (GtkMenu   *menu,

   monitor_num = gdk_screen_get_monitor_at_point (screen, *x, *y);
   gtk_menu_set_monitor (menu, monitor_num);
-  gdk_screen_get_monitor_geometry (screen, monitor_num, &monitor);
+  gdk_screen_get_monitor_workarea (screen, monitor_num, &monitor);

   *x = CLAMP (*x, monitor.x, monitor.x + MAX (0, monitor.width - req.width));
   *y = CLAMP (*y, monitor.y, monitor.y + MAX (0, monitor.height - req.height));
diff --git a/gtk/gtkscalebutton.c b/gtk/gtkscalebutton.c
index df9b574..3c6fc85 100644
--- a/gtk/gtkscalebutton.c
+++ b/gtk/gtkscalebutton.c
@@ -1000,7 +1000,7 @@ gtk_scale_popup (GtkWidget *widget,
       monitor = gdk_screen_get_monitor_at_point (screen,
						 button_event->x_root,
						 button_event->y_root);
-      gdk_screen_get_monitor_geometry (screen, monitor, &rect);
+      gdk_screen_get_monitor_workarea (screen, monitor, &rect);

       if (priv->orientation == GTK_ORIENTATION_VERTICAL)
         y += button_event->y;
diff --git a/gtk/gtkstatusicon.c b/gtk/gtkstatusicon.c
index 77d93da..c6d3097 100644
--- a/gtk/gtkstatusicon.c
+++ b/gtk/gtkstatusicon.c
@@ -648,7 +648,7 @@ build_button_event (GtkStatusIconPrivate *priv,
   GdkRectangle monitor0;

   /* We know that gdk/win32 puts the primary monitor at index 0 */
-  gdk_screen_get_monitor_geometry (gdk_screen_get_default (), 0, &monitor0);
+  gdk_screen_get_monitor_workarea (gdk_screen_get_default (), 0, &monitor0);
   e->window = g_object_ref (gdk_get_default_root_window ());
   e->send_event = TRUE;
   e->time = GetTickCount ();
@@ -2512,7 +2512,7 @@ gtk_status_icon_position_menu (GtkMenu  *menu,
     monitor_num = 0;
   gtk_menu_set_monitor (menu, monitor_num);

-  gdk_screen_get_monitor_geometry (screen, monitor_num, &monitor);
+  gdk_screen_get_monitor_workarea (screen, monitor_num, &monitor);

   gdk_window_get_origin (widget->window, x, y);

diff --git a/gtk/gtktextview.c b/gtk/gtktextview.c
index 9ddddec..419cced 100644
--- a/gtk/gtktextview.c
+++ b/gtk/gtktextview.c
@@ -7845,7 +7845,7 @@ popup_position_func (GtkMenu   *menu,

   monitor_num = gdk_screen_get_monitor_at_point (screen, *x, *y);
   gtk_menu_set_monitor (menu, monitor_num);
-  gdk_screen_get_monitor_geometry (screen, monitor_num, &monitor);
+  gdk_screen_get_monitor_workarea (screen, monitor_num, &monitor);

   *x = CLAMP (*x, monitor.x, monitor.x + MAX (0, monitor.width - req.width));
   *y = CLAMP (*y, monitor.y, monitor.y + MAX (0, monitor.height - req.height));
diff --git a/gtk/gtktoolbar.c b/gtk/gtktoolbar.c
index b2c4b15..fc1e588 100644
--- a/gtk/gtktoolbar.c
+++ b/gtk/gtktoolbar.c
@@ -2618,7 +2618,7 @@ menu_position_func (GtkMenu  *menu,
   monitor_num = gdk_screen_get_monitor_at_window (screen, priv->arrow_button->window);
   if (monitor_num < 0)
     monitor_num = 0;
-  gdk_screen_get_monitor_geometry (screen, monitor_num, &monitor);
+  gdk_screen_get_monitor_workarea (screen, monitor_num, &monitor);

   gdk_window_get_origin (GTK_BUTTON (priv->arrow_button)->event_window, x, y);
   if (toolbar->orientation == GTK_ORIENTATION_HORIZONTAL)
diff --git a/gtk/gtktooltip.c b/gtk/gtktooltip.c
index 9918165..fb6e869 100644
--- a/gtk/gtktooltip.c
+++ b/gtk/gtktooltip.c
@@ -1139,7 +1139,7 @@ gtk_tooltip_position (GtkTooltip *tooltip,
                                &requisition);

       monitor_num = gdk_screen_get_monitor_at_point (screen, x, y);
-      gdk_screen_get_monitor_geometry (screen, monitor_num, &monitor);
+      gdk_screen_get_monitor_workarea (screen, monitor_num, &monitor);

       if (x + requisition.width > monitor.x + monitor.width)
         x -= x - (monitor.x + monitor.width) + requisition.width;
diff --git a/gtk/gtktreeview.c b/gtk/gtktreeview.c
index eccd20c..cca1d3d 100644
--- a/gtk/gtktreeview.c
+++ b/gtk/gtktreeview.c
@@ -14251,7 +14251,7 @@ gtk_tree_view_search_position_func (GtkTreeView *tree_view,
   GdkRectangle monitor;

   monitor_num = gdk_screen_get_monitor_at_window (screen, tree_window);
-  gdk_screen_get_monitor_geometry (screen, monitor_num, &monitor);
+  gdk_screen_get_monitor_workarea (screen, monitor_num, &monitor);

   gtk_widget_realize (search_dialog);

diff --git a/gtk/gtkwindow.c b/gtk/gtkwindow.c
index 8f174c6..7094eb6 100644
--- a/gtk/gtkwindow.c
+++ b/gtk/gtkwindow.c
@@ -5771,7 +5771,7 @@ center_window_on_monitor (GtkWindow *window,
   if (monitor_num == -1)
     monitor_num = get_center_monitor_of_window (window);

-  gdk_screen_get_monitor_geometry (gtk_window_check_screen (window),
+  gdk_screen_get_monitor_workarea (gtk_window_check_screen (window),
				   monitor_num, &monitor);

   *x = (monitor.width - w) / 2 + monitor.x;
@@ -5917,7 +5917,7 @@ gtk_window_compute_configure_request (GtkWindow    *window,
              */
             if (monitor_num >= 0)
               {
-                gdk_screen_get_monitor_geometry (screen, monitor_num, &monitor);
+                gdk_screen_get_monitor_workarea (screen, monitor_num, &monitor);
                 clamp_window_to_rectangle (&x, &y, w, h, &monitor);
               }
           }
@@ -5952,7 +5952,7 @@ gtk_window_compute_configure_request (GtkWindow    *window,
              */
             if (monitor_num >= 0)
               {
-                gdk_screen_get_monitor_geometry (screen, monitor_num, &monitor);
+                gdk_screen_get_monitor_workarea (screen, monitor_num, &monitor);
                 clamp_window_to_rectangle (&x, &y, w, h, &monitor);
               }
           }
--
1.7.10.2 (Apple Git-33)
