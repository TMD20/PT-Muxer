# Makefile.in generated by automake 1.15 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2014 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@


VPATH = @srcdir@
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
@X86_TRUE@am__append_1 = tailcall/coreclr/JIT/Methodical/nonvirtualcall/tailcall.exe

# FullAOT Assertion at method-to-ir.c:9203, condition `*ip == CEE_RET' not met
# This should raise a bad image format exception.
@FULL_AOT_TESTS_TRUE@am__append_2 = \
@FULL_AOT_TESTS_TRUE@	tailcall/coreclr/JIT/opt/Tailcall/TailcallVerifyWithPrefix.exe


# return type mismatch (float32 vs. float64)
# 	tailcall/coreclr/JIT/Methodical/tailcall/compat_r8_r4_inl.exe
# 	tailcall/coreclr/JIT/Methodical/tailcall/compat_r4_r8_inl.exe
#
# return type mismatch (int32 vs. enum)
# 	tailcall/coreclr/JIT/Methodical/tailcall/compat_enum.exe
#
# FIXME depends on msvcrt.dll, and calli
#	tailcall/coreclr/JIT/Directed/IL/PInvokeTail/PInvokeTail.exe
#
# FIXME reference parameter; requires range check to allow
#	tailcall/coreclr/JIT/Directed/zeroinit/tail.exe

# Tests that fail assert about tailcall.
@FULL_AOT_TESTS_TRUE@am__append_3 = \
@FULL_AOT_TESTS_TRUE@	tailcall/coreclr/JIT/Directed/IL/PInvokeTail/tailwinapi.exe \
@FULL_AOT_TESTS_TRUE@	tailcall/coreclr/JIT/Directed/pinvoke/tail.exe \
@FULL_AOT_TESTS_TRUE@	tailcall/coreclr/JIT/Methodical/Invoke/fptr/recurse_tail_call.exe \
@FULL_AOT_TESTS_TRUE@	tailcall/coreclr/JIT/Methodical/Invoke/fptr/recurse_tail_calli.exe \
@FULL_AOT_TESTS_TRUE@	tailcall/coreclr/JIT/Methodical/tailcall/Desktop/thread-race.exe \
@FULL_AOT_TESTS_TRUE@	tailcall/coreclr/JIT/Methodical/tailcall/deep_array_nz.exe \
@FULL_AOT_TESTS_TRUE@	tailcall/coreclr/JIT/Methodical/tailcall/pointer.exe \
@FULL_AOT_TESTS_TRUE@	tailcall/coreclr/JIT/Methodical/tailcall/reference_i.exe \
@FULL_AOT_TESTS_TRUE@	tailcall/coreclr/JIT/Methodical/tailcall/test_mutual_rec.exe \
@FULL_AOT_TESTS_TRUE@	tailcall/coreclr/JIT/Methodical/tailcall_v4/delegateTail.exe \
@FULL_AOT_TESTS_TRUE@	tailcall/coreclr/JIT/Methodical/tailcall_v4/tailcall_AV.exe \
@FULL_AOT_TESTS_TRUE@	tailcall/coreclr/JIT/Regression/VS-ia64-JIT/V1.2-M02/b102844/tailcallcalli.exe

@HOST_WIN32_TRUE@am__append_4 = --config tests-config --runtime "$(if $(MONO_EXECUTABLE),$(shell cygpath -w -a $(MONO_EXECUTABLE) | sed 's/\\/\\\\/g'),$(DEFAULT_WIN32_RUNTIME))"
@HOST_WIN32_FALSE@am__append_5 = --config tests-config --runtime "$(if $(MONO_EXECUTABLE),$(MONO_EXECUTABLE),$(top_builddir)/runtime/mono-wrapper)"
@FULL_AOT_TESTS_TRUE@am__append_6 = --runtime-args "$(TEST_AOT_RUN_FLAGS)"
@HYBRID_AOT_TESTS_TRUE@am__append_7 = --runtime-args "$(TEST_AOT_RUN_FLAGS)"

# some tests fail to compile on mcs
@CSC_IS_ROSLYN_TRUE@am__append_8 = roslyn-bug-19038.cs sizeof-empty-structs.cs
@AMD64_TRUE@am__append_9 = async-exc-compilation.cs finally_guard.cs finally_block_ending_in_dead_bb.cs
# requires working altstack
@AMD64_TRUE@@HOST_WIN32_FALSE@am__append_10 = bug-60862.cs
@X86_TRUE@am__append_11 = async-exc-compilation.cs finally_guard.cs finally_block_ending_in_dead_bb.cs
# requires working altstack
@HOST_WIN32_FALSE@@X86_TRUE@am__append_12 = bug-60862.cs

#maybe this test works on linux, not sure
@HOST_DARWIN_TRUE@am__append_13 = bug-8417.cs
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@noinst_PROGRAMS = tailcall/split-fsharp$(EXEEXT) \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	split-tailcall-interface-conservestack$(EXEEXT)

# see https://github.com/mono/mono/issues/9739
@HOST_WIN32_TRUE@am__append_14 = bug-58782-plain-throw.exe \
@HOST_WIN32_TRUE@	bug-58782-capture-and-throw.exe verbose.exe

# see https://github.com/mono/mono/issues/18827
@ENABLE_CXX_TRUE@@HOST_WIN32_TRUE@am__append_15 = bug-10127.exe
@DISABLE_CRASH_REPORTING_TRUE@am__append_16 = merp-json-valid.exe merp-crash-test.exe

# see https://github.com/mono/mono/issues/10845
@HOST_DARWIN_TRUE@am__append_17 = monitor-wait-abort.exe
@HOST_DARWIN_FALSE@am__append_18 = merp-json-valid.exe merp-crash-test.exe

# #651684
@AMD64_TRUE@am__append_19 = finally_guard.exe
@AMD64_TRUE@@HOST_WIN32_TRUE@am__append_20 = w32message.exe
@HOST_WIN32_TRUE@@X86_TRUE@am__append_21 = async-exc-compilation.exe finally_guard.exe finally_block_ending_in_dead_bb.exe \
@HOST_WIN32_TRUE@@X86_TRUE@	bug-18026.exe monitor.exe threadpool-exceptions5.exe process-unref-race.exe w32message.exe \
@HOST_WIN32_TRUE@@X86_TRUE@	unhandled-exception-1.exe unhandled-exception-2.exe unhandled-exception-3.exe unhandled-exception-4.exe \
@HOST_WIN32_TRUE@@X86_TRUE@	unhandled-exception-5.exe unhandled-exception-6.exe unhandled-exception-7.exe unhandled-exception-8.exe


# test_virt.exe fails because callee takes more parameters than caller, 1 vs. 0, and
# x86 passes no parameters in registers, so it is a stack imbalance.
@X86_TRUE@am__append_22 = tailcall/coreclr/JIT/Methodical/tailcall/test_virt.exe

# bug #71274
@POWERPC_TRUE@am__append_23 = finalizer-abort.exe finalizer-exception.exe finalizer-exit.exe

# FIXME: These tests hang/fail for unknown reasons
@POWERPC64_TRUE@am__append_24 = monitor.exe threadpool-exceptions5.exe \
@POWERPC64_TRUE@	appdomain-unload.exe pinvoke2.exe pinvoke3.exe \
@POWERPC64_TRUE@	pinvoke11.exe threadpool-exceptions7.exe \
@POWERPC64_TRUE@	winx64structs.exe bug-10127.exe \
@POWERPC64_TRUE@	pinvoke_ppcc.exe pinvoke_ppcs.exe \
@POWERPC64_TRUE@	pinvoke_ppci.exe pinvoke_ppcf.exe \
@POWERPC64_TRUE@	pinvoke_ppcd.exe abort-cctor.exe \
@POWERPC64_TRUE@	load-exceptions.exe sgen-domain-unload-2.exe \
@POWERPC64_TRUE@	sgen-weakref-stress.exe \
@POWERPC64_TRUE@	sgen-cementing-stress.exe \
@POWERPC64_TRUE@	sgen-new-threads-dont-join-stw.exe \
@POWERPC64_TRUE@	sgen-new-threads-dont-join-stw-2.exe \
@POWERPC64_TRUE@	sgen-new-threads-collect.exe sgen-bridge.exe \
@POWERPC64_TRUE@	appdomain-threadpool-unload.exe bug-60848.exe

# Most ARM problems are due to extra_arg and cannot be easily fixed, except for easy
# bitcode-specific fix which has been declined. A few are uncertain and should be investigated,
# but still probably extra_arg.

# FIXME These presumably take an extra parameter though this should be confirmed.

# Interface calls cannot be tailcalls on ARM due to extra_arg. Bitcode could easily work however.

# Interface calls cannot be tailcalls on ARM due to extra_arg. Bitcode could easily work however.
@ARM_TRUE@am__append_25 = filter-stack.exe weak-fields.exe ivtail1.exe \
@ARM_TRUE@	tailcall-generic-cast-conservestack-il.exe \
@ARM_TRUE@	tailcall-mrgctx.exe tailcall-rgctxa.exe \
@ARM_TRUE@	tailcall-virt.exe \
@ARM_TRUE@	tailcall/coreclr/JIT/Directed/tailcall/tailcall.exe \
@ARM_TRUE@	tailcall/2.exe tailcall/3.exe tailcall/4.exe \
@ARM_TRUE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethod_string_.Method1_string_.exe \
@ARM_TRUE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractClass_DateTime_.Method1_DateTime_.exe \
@ARM_TRUE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractClass_DateTime_.Method1_byte_.exe \
@ARM_TRUE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractClass_DateTime_.Method1_int_.exe \
@ARM_TRUE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractClass_DateTime_.Method1_string_.exe \
@ARM_TRUE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractClass_DatstringeTime_.Method1_string_.exe \
@ARM_TRUE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractClass_byte_.Method1_DateTime_.exe \
@ARM_TRUE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractClass_byte_.Method1_byte_.exe \
@ARM_TRUE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractClass_byte_.Method1_int_.exe \
@ARM_TRUE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractClass_byte_.Method1_string_.exe \
@ARM_TRUE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractClass_int_.Method1_DateTime_.exe \
@ARM_TRUE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractClass_int_.Method1_byte_.exe \
@ARM_TRUE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractClass_int_.Method1_int_.exe \
@ARM_TRUE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractClass_int_.Method1_string_.exe \
@ARM_TRUE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractClass_string_.Method1_DateTime_.exe \
@ARM_TRUE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractClass_string_.Method1_byte_.exe \
@ARM_TRUE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractClass_string_.Method1_int_.exe \
@ARM_TRUE@	tailcall/fsharp-deeptail.exe \
@ARM_TRUE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractInterface_DateTime_.Method1_DateTime_.exe \
@ARM_TRUE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractInterface_DateTime_.Method1_byte_.exe \
@ARM_TRUE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractInterface_DateTime_.Method1_int_.exe \
@ARM_TRUE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractInterface_DateTime_.Method1_string_.exe \
@ARM_TRUE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractInterface_DatstringeTime_.Method1_string_.exe \
@ARM_TRUE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractInterface_byte_.Method1_DateTime_.exe \
@ARM_TRUE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractInterface_byte_.Method1_byte_.exe \
@ARM_TRUE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractInterface_byte_.Method1_int_.exe \
@ARM_TRUE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractInterface_byte_.Method1_string_.exe \
@ARM_TRUE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractInterface_int_.Method1_DateTime_.exe \
@ARM_TRUE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractInterface_int_.Method1_byte_.exe \
@ARM_TRUE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractInterface_int_.Method1_int_.exe \
@ARM_TRUE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractInterface_int_.Method1_string_.exe \
@ARM_TRUE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractInterface_string_.Method1_DateTime_.exe \
@ARM_TRUE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractInterface_string_.Method1_byte_.exe \
@ARM_TRUE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractInterface_string_.Method1_int_.exe \
@ARM_TRUE@	tailcall-interface-conservestack.exe \
@ARM_TRUE@	tailcall/interface-conservestack/1.exe \
@ARM_TRUE@	tailcall/interface-conservestack/10.exe \
@ARM_TRUE@	tailcall/interface-conservestack/11.exe \
@ARM_TRUE@	tailcall/interface-conservestack/12.exe \
@ARM_TRUE@	tailcall/interface-conservestack/13.exe \
@ARM_TRUE@	tailcall/interface-conservestack/14.exe \
@ARM_TRUE@	tailcall/interface-conservestack/15.exe \
@ARM_TRUE@	tailcall/interface-conservestack/16.exe \
@ARM_TRUE@	tailcall/interface-conservestack/17.exe \
@ARM_TRUE@	tailcall/interface-conservestack/18.exe \
@ARM_TRUE@	tailcall/interface-conservestack/19.exe \
@ARM_TRUE@	tailcall/interface-conservestack/2.exe \
@ARM_TRUE@	tailcall/interface-conservestack/20.exe \
@ARM_TRUE@	tailcall/interface-conservestack/21.exe \
@ARM_TRUE@	tailcall/interface-conservestack/22.exe \
@ARM_TRUE@	tailcall/interface-conservestack/23.exe \
@ARM_TRUE@	tailcall/interface-conservestack/24.exe \
@ARM_TRUE@	tailcall/interface-conservestack/25.exe \
@ARM_TRUE@	tailcall/interface-conservestack/26.exe \
@ARM_TRUE@	tailcall/interface-conservestack/27.exe \
@ARM_TRUE@	tailcall/interface-conservestack/28.exe \
@ARM_TRUE@	tailcall/interface-conservestack/29.exe \
@ARM_TRUE@	tailcall/interface-conservestack/3.exe \
@ARM_TRUE@	tailcall/interface-conservestack/30.exe \
@ARM_TRUE@	tailcall/interface-conservestack/31.exe \
@ARM_TRUE@	tailcall/interface-conservestack/32.exe \
@ARM_TRUE@	tailcall/interface-conservestack/33.exe \
@ARM_TRUE@	tailcall/interface-conservestack/34.exe \
@ARM_TRUE@	tailcall/interface-conservestack/35.exe \
@ARM_TRUE@	tailcall/interface-conservestack/36.exe \
@ARM_TRUE@	tailcall/interface-conservestack/37.exe \
@ARM_TRUE@	tailcall/interface-conservestack/38.exe \
@ARM_TRUE@	tailcall/interface-conservestack/39.exe \
@ARM_TRUE@	tailcall/interface-conservestack/4.exe \
@ARM_TRUE@	tailcall/interface-conservestack/40.exe \
@ARM_TRUE@	tailcall/interface-conservestack/41.exe \
@ARM_TRUE@	tailcall/interface-conservestack/42.exe \
@ARM_TRUE@	tailcall/interface-conservestack/43.exe \
@ARM_TRUE@	tailcall/interface-conservestack/44.exe \
@ARM_TRUE@	tailcall/interface-conservestack/45.exe \
@ARM_TRUE@	tailcall/interface-conservestack/46.exe \
@ARM_TRUE@	tailcall/interface-conservestack/47.exe \
@ARM_TRUE@	tailcall/interface-conservestack/48.exe \
@ARM_TRUE@	tailcall/interface-conservestack/49.exe \
@ARM_TRUE@	tailcall/interface-conservestack/5.exe \
@ARM_TRUE@	tailcall/interface-conservestack/50.exe \
@ARM_TRUE@	tailcall/interface-conservestack/51.exe \
@ARM_TRUE@	tailcall/interface-conservestack/52.exe \
@ARM_TRUE@	tailcall/interface-conservestack/6.exe \
@ARM_TRUE@	tailcall/interface-conservestack/7.exe \
@ARM_TRUE@	tailcall/interface-conservestack/8.exe \
@ARM_TRUE@	tailcall/interface-conservestack/9.exe
@ARM64_TRUE@am__append_26 = weak-fields.exe

# monitor.exe is racy
@MIPS_TRUE@am__append_27 = filter-stack.exe monitor.exe
#PLATFORM_DISABLED_TESTS=dynamic-method-resurrection.exe exception17.exe
@S390X_TRUE@am__append_28 = dynamic-method-resurrection.exe \
@S390X_TRUE@	sgen-toggleref.exe sgen-bridge.exe \
@S390X_TRUE@	sgen-bridge-major-fragmentation.exe \
@S390X_TRUE@	sgen-bridge-xref.exe

# Tests which rely on TypeLoadExceptions or MemberAccessExceptions
# In full-aot mode, these cause the relevant methods to be not AOTed.

# Tests which rely on remoting

# Tests which use unsupported pinvoke+full aot
# functionality

# Tests which load assemblies which are not
# in the testing_aot_full profile

# Test which needs remoting support

# Tests which needs AppDomain support

# Tests which needs System.Reflection.Emit support

# Test which needs System.Web support

# Tests which needs named Mutex support

# ThreadAbortException doesn't have necessary field for this test

# can't AOT the TestingReferenceAssembly.dll which is a dependency
# of reference-loader.exe because it contains the [ReferenceAssemblyAttribute]
# and the runtime errors out with "File does not contain a valid CIL image."

# Tests which have no way of finding AOT images because they use Assembly.Load(byte[])

# Tests which require AOT of a multi-netmodule assemblies
@FULL_AOT_TESTS_TRUE@am__append_29 = typeload-unaligned.exe \
@FULL_AOT_TESTS_TRUE@	field-access.exe \
@FULL_AOT_TESTS_TRUE@	invalid_generic_instantiation.exe \
@FULL_AOT_TESTS_TRUE@	bug-481403.exe array_ldelema.exe \
@FULL_AOT_TESTS_TRUE@	array_load_exception.exe bug445361.exe \
@FULL_AOT_TESTS_TRUE@	generic-type-load-exception.2.exe \
@FULL_AOT_TESTS_TRUE@	invalid-token.exe call_missing_method.exe \
@FULL_AOT_TESTS_TRUE@	call_missing_class.exe \
@FULL_AOT_TESTS_TRUE@	custom-attr-errors.exe \
@FULL_AOT_TESTS_TRUE@	ldfld_missing_field.exe \
@FULL_AOT_TESTS_TRUE@	ldfld_missing_class.exe \
@FULL_AOT_TESTS_TRUE@	vt-sync-method.exe \
@FULL_AOT_TESTS_TRUE@	resolve_method_bug.2.exe \
@FULL_AOT_TESTS_TRUE@	resolve_field_bug.2.exe \
@FULL_AOT_TESTS_TRUE@	resolve_type_bug.2.exe bug-81691.exe \
@FULL_AOT_TESTS_TRUE@	bug-327438.2.exe newobj-abstract.exe \
@FULL_AOT_TESTS_TRUE@	invalid-isbyreflike.exe \
@FULL_AOT_TESTS_TRUE@	context-static.exe bug-415577.exe \
@FULL_AOT_TESTS_TRUE@	generic-marshalbyref.2.exe \
@FULL_AOT_TESTS_TRUE@	unhandled-exception-7.exe marshal.exe \
@FULL_AOT_TESTS_TRUE@	marshal2.exe marshal6.exe marshal7.exe \
@FULL_AOT_TESTS_TRUE@	marshal8.exe pinvoke-2.2.exe pinvoke3.exe \
@FULL_AOT_TESTS_TRUE@	thunks.exe bug-58782-plain-throw.exe \
@FULL_AOT_TESTS_TRUE@	bug-58782-capture-and-throw.exe \
@FULL_AOT_TESTS_TRUE@	assembly-load-remap.exe remoting4.exe \
@FULL_AOT_TESTS_TRUE@	remoting1.exe remoting2.exe remoting3.exe \
@FULL_AOT_TESTS_TRUE@	remoting5.exe appdomain.exe \
@FULL_AOT_TESTS_TRUE@	appdomain-client.exe appdomain-unload.exe \
@FULL_AOT_TESTS_TRUE@	appdomain-async-invoke.exe \
@FULL_AOT_TESTS_TRUE@	appdomain-thread-abort.exe appdomain1.exe \
@FULL_AOT_TESTS_TRUE@	appdomain2.exe appdomain-exit.exe \
@FULL_AOT_TESTS_TRUE@	appdomain-unload-asmload.exe \
@FULL_AOT_TESTS_TRUE@	appdomain-unload-callback.exe \
@FULL_AOT_TESTS_TRUE@	appdomain-unload-doesnot-raise-pending-events.exe \
@FULL_AOT_TESTS_TRUE@	unload-appdomain-on-shutdown.exe \
@FULL_AOT_TESTS_TRUE@	appdomain-marshalbyref-assemblyload.exe \
@FULL_AOT_TESTS_TRUE@	assemblyresolve_event2.2.exe \
@FULL_AOT_TESTS_TRUE@	assemblyresolve_event6.exe bug-544446.exe \
@FULL_AOT_TESTS_TRUE@	bug-36848.exe generic-marshalbyref.2.exe \
@FULL_AOT_TESTS_TRUE@	stackframes-async.2.exe \
@FULL_AOT_TESTS_TRUE@	transparentproxy.exe bug-48015.exe \
@FULL_AOT_TESTS_TRUE@	delegate9.exe marshal-valuetypes.exe \
@FULL_AOT_TESTS_TRUE@	xdomain-threads.exe monitor.exe \
@FULL_AOT_TESTS_TRUE@	generic-xdomain.2.exe \
@FULL_AOT_TESTS_TRUE@	threadpool-exceptions7.exe \
@FULL_AOT_TESTS_TRUE@	threadpool-exceptions8.exe \
@FULL_AOT_TESTS_TRUE@	cross-domain.exe generic-unloading.2.exe \
@FULL_AOT_TESTS_TRUE@	appdomain-threadpool-unload.exe \
@FULL_AOT_TESTS_TRUE@	bug-47295.exe loader.exe pinvoke2.exe \
@FULL_AOT_TESTS_TRUE@	generic-type-builder.2.exe \
@FULL_AOT_TESTS_TRUE@	dynamic-generic-size.exe cominterop.exe \
@FULL_AOT_TESTS_TRUE@	dynamic-method-access.2.exe \
@FULL_AOT_TESTS_TRUE@	dynamic-method-finalize.2.exe \
@FULL_AOT_TESTS_TRUE@	dynamic-method-stack-traces.exe \
@FULL_AOT_TESTS_TRUE@	generic_type_definition.2.exe \
@FULL_AOT_TESTS_TRUE@	bug-333798-tb.2.exe bug-335131.2.exe \
@FULL_AOT_TESTS_TRUE@	bug-322722_patch_bx.2.exe \
@FULL_AOT_TESTS_TRUE@	bug-322722_dyn_method_throw.2.exe \
@FULL_AOT_TESTS_TRUE@	bug-389886-2.exe bug-349190.2.exe \
@FULL_AOT_TESTS_TRUE@	bug-389886-sre-generic-interface-instances.exe \
@FULL_AOT_TESTS_TRUE@	custom-modifiers-inheritance.exe \
@FULL_AOT_TESTS_TRUE@	bug-462592.exe bug-575941.exe \
@FULL_AOT_TESTS_TRUE@	bug-389886-3.exe constant-division.exe \
@FULL_AOT_TESTS_TRUE@	dynamic-method-resurrection.exe \
@FULL_AOT_TESTS_TRUE@	assembly_append_ordering.exe \
@FULL_AOT_TESTS_TRUE@	assemblyresolve_event5.exe \
@FULL_AOT_TESTS_TRUE@	dynamic-method-delegate.exe \
@FULL_AOT_TESTS_TRUE@	dynamic-method-churn.exe bug-666008.exe \
@FULL_AOT_TESTS_TRUE@	bug-685908.exe bug-80307.exe \
@FULL_AOT_TESTS_TRUE@	namedmutex-destroy-race.exe thread6.exe \
@FULL_AOT_TESTS_TRUE@	reference-loader.exe \
@FULL_AOT_TESTS_TRUE@	assembly-load-bytes.exe \
@FULL_AOT_TESTS_TRUE@	assembly-load-bytes-bindingredirect.exe \
@FULL_AOT_TESTS_TRUE@	test-multi-netmodule-4-exe.exe

# Tests which depend on a case-insensitive filesystem when using AOT
@FULL_AOT_TESTS_TRUE@@HOST_DARWIN_FALSE@am__append_30 = \
@FULL_AOT_TESTS_TRUE@@HOST_DARWIN_FALSE@	assembly-loadfrom-simplename.exe


# constraints-load.il: 
# Failed to load method 0x6000007 from '..../mono/tests/constraints-load.exe' due to 
# Could not resolve type with token 01000002 assembly:mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 type:System.BrokenIComparable`1 member:<none>.

# https://bugzilla.xamarin.com/show_bug.cgi?id=60973
@FULL_AOT_TESTS_TRUE@am__append_31 = constraints-load.exe \
@FULL_AOT_TESTS_TRUE@	calli_sig_check.exe bug-515884.exe \
@FULL_AOT_TESTS_TRUE@	generic-type-builder.2.exe \
@FULL_AOT_TESTS_TRUE@	sgen-domain-unload.exe \
@FULL_AOT_TESTS_TRUE@	sgen-domain-unload-2.exe \
@FULL_AOT_TESTS_TRUE@	appdomain-loader.exe \
@FULL_AOT_TESTS_TRUE@	assemblyresolve_event3.exe \
@FULL_AOT_TESTS_TRUE@	appdomain-serialize-exception.exe \
@FULL_AOT_TESTS_TRUE@	delegate15.exe weak-fields.exe

# Some, probably all, of these tests use gsharedvt.
# gsharedvt is very much at odds with tailcall, and they fail as a result.
# RegularAOT and HybridAOT should be ok.
#
# The tests might be tweakable but then they will less resemble real world code.
#
# FullAOT should probably be changed to intersect tailcall signatures called
# and all generic signatures provided, and compile more functions.
# As well, gsharedvt can probably be a tailcall sometimes, like if parameters
# fit in registers and there is no out conversion. Maybe it already does that.
#
# gsharedvt should be viable when only wrapping "in" but not "out",
# as long as "in" does not expand parameter stack size, which it should never do.
@FULL_AOT_TESTS_TRUE@@MONO_ARCH_GSHAREDVT_SUPPORTED_TRUE@am__append_32 = tailcall-interface-conservestack.exe \
@FULL_AOT_TESTS_TRUE@@MONO_ARCH_GSHAREDVT_SUPPORTED_TRUE@	tailcall/fsharp-deeptail.exe \
@FULL_AOT_TESTS_TRUE@@MONO_ARCH_GSHAREDVT_SUPPORTED_TRUE@	tailcall/interface-conservestack/20.exe \
@FULL_AOT_TESTS_TRUE@@MONO_ARCH_GSHAREDVT_SUPPORTED_TRUE@	tailcall/interface-conservestack/26.exe \
@FULL_AOT_TESTS_TRUE@@MONO_ARCH_GSHAREDVT_SUPPORTED_TRUE@	tailcall/interface-conservestack/31.exe \
@FULL_AOT_TESTS_TRUE@@MONO_ARCH_GSHAREDVT_SUPPORTED_TRUE@	tailcall/interface-conservestack/33.exe \
@FULL_AOT_TESTS_TRUE@@MONO_ARCH_GSHAREDVT_SUPPORTED_TRUE@	tailcall/interface-conservestack/34.exe \
@FULL_AOT_TESTS_TRUE@@MONO_ARCH_GSHAREDVT_SUPPORTED_TRUE@	tailcall/interface-conservestack/35.exe \
@FULL_AOT_TESTS_TRUE@@MONO_ARCH_GSHAREDVT_SUPPORTED_TRUE@	tailcall/interface-conservestack/36.exe \
@FULL_AOT_TESTS_TRUE@@MONO_ARCH_GSHAREDVT_SUPPORTED_TRUE@	tailcall/interface-conservestack/37.exe \
@FULL_AOT_TESTS_TRUE@@MONO_ARCH_GSHAREDVT_SUPPORTED_TRUE@	tailcall/interface-conservestack/41.exe \
@FULL_AOT_TESTS_TRUE@@MONO_ARCH_GSHAREDVT_SUPPORTED_TRUE@	tailcall/interface-conservestack/43.exe \
@FULL_AOT_TESTS_TRUE@@MONO_ARCH_GSHAREDVT_SUPPORTED_TRUE@	tailcall/interface-conservestack/44.exe \
@FULL_AOT_TESTS_TRUE@@MONO_ARCH_GSHAREDVT_SUPPORTED_TRUE@	tailcall/interface-conservestack/45.exe \
@FULL_AOT_TESTS_TRUE@@MONO_ARCH_GSHAREDVT_SUPPORTED_TRUE@	tailcall/interface-conservestack/46.exe \
@FULL_AOT_TESTS_TRUE@@MONO_ARCH_GSHAREDVT_SUPPORTED_TRUE@	tailcall/interface-conservestack/47.exe \
@FULL_AOT_TESTS_TRUE@@MONO_ARCH_GSHAREDVT_SUPPORTED_TRUE@	tailcall/interface-conservestack/51.exe \
@FULL_AOT_TESTS_TRUE@@MONO_ARCH_GSHAREDVT_SUPPORTED_TRUE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractInterface_string_.Method1_int_.exe \
@FULL_AOT_TESTS_TRUE@@MONO_ARCH_GSHAREDVT_SUPPORTED_TRUE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractInterface_int_.Method1_byte_.exe \
@FULL_AOT_TESTS_TRUE@@MONO_ARCH_GSHAREDVT_SUPPORTED_TRUE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractInterface_DateTime_.Method1_DateTime_.exe \
@FULL_AOT_TESTS_TRUE@@MONO_ARCH_GSHAREDVT_SUPPORTED_TRUE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractClass_string_.Method1_int_.exe \
@FULL_AOT_TESTS_TRUE@@MONO_ARCH_GSHAREDVT_SUPPORTED_TRUE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractInterface_string_.Method1_DateTime_.exe \
@FULL_AOT_TESTS_TRUE@@MONO_ARCH_GSHAREDVT_SUPPORTED_TRUE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractClass_byte_.Method1_int_.exe \
@FULL_AOT_TESTS_TRUE@@MONO_ARCH_GSHAREDVT_SUPPORTED_TRUE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractInterface_byte_.Method1_byte_.exe \
@FULL_AOT_TESTS_TRUE@@MONO_ARCH_GSHAREDVT_SUPPORTED_TRUE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractClass_byte_.Method1_string_.exe \
@FULL_AOT_TESTS_TRUE@@MONO_ARCH_GSHAREDVT_SUPPORTED_TRUE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractClass_byte_.Method1_byte_.exe \
@FULL_AOT_TESTS_TRUE@@MONO_ARCH_GSHAREDVT_SUPPORTED_TRUE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractClass_int_.Method1_string_.exe \
@FULL_AOT_TESTS_TRUE@@MONO_ARCH_GSHAREDVT_SUPPORTED_TRUE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractInterface_byte_.Method1_int_.exe \
@FULL_AOT_TESTS_TRUE@@MONO_ARCH_GSHAREDVT_SUPPORTED_TRUE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractInterface_string_.Method1_byte_.exe \
@FULL_AOT_TESTS_TRUE@@MONO_ARCH_GSHAREDVT_SUPPORTED_TRUE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractClass_byte_.Method1_DateTime_.exe \
@FULL_AOT_TESTS_TRUE@@MONO_ARCH_GSHAREDVT_SUPPORTED_TRUE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractClass_DateTime_.Method1_byte_.exe \
@FULL_AOT_TESTS_TRUE@@MONO_ARCH_GSHAREDVT_SUPPORTED_TRUE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractInterface_int_.Method1_int_.exe \
@FULL_AOT_TESTS_TRUE@@MONO_ARCH_GSHAREDVT_SUPPORTED_TRUE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractInterface_DateTime_.Method1_string_.exe \
@FULL_AOT_TESTS_TRUE@@MONO_ARCH_GSHAREDVT_SUPPORTED_TRUE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractClass_int_.Method1_byte_.exe \
@FULL_AOT_TESTS_TRUE@@MONO_ARCH_GSHAREDVT_SUPPORTED_TRUE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractInterface_byte_.Method1_string_.exe \
@FULL_AOT_TESTS_TRUE@@MONO_ARCH_GSHAREDVT_SUPPORTED_TRUE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractInterface_DateTime_.Method1_byte_.exe \
@FULL_AOT_TESTS_TRUE@@MONO_ARCH_GSHAREDVT_SUPPORTED_TRUE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractClass_int_.Method1_DateTime_.exe \
@FULL_AOT_TESTS_TRUE@@MONO_ARCH_GSHAREDVT_SUPPORTED_TRUE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractInterface_DateTime_.Method1_int_.exe \
@FULL_AOT_TESTS_TRUE@@MONO_ARCH_GSHAREDVT_SUPPORTED_TRUE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractInterface_int_.Method1_DateTime_.exe \
@FULL_AOT_TESTS_TRUE@@MONO_ARCH_GSHAREDVT_SUPPORTED_TRUE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractClass_string_.Method1_DateTime_.exe \
@FULL_AOT_TESTS_TRUE@@MONO_ARCH_GSHAREDVT_SUPPORTED_TRUE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractClass_string_.Method1_byte_.exe \
@FULL_AOT_TESTS_TRUE@@MONO_ARCH_GSHAREDVT_SUPPORTED_TRUE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractInterface_byte_.Method1_DateTime_.exe \
@FULL_AOT_TESTS_TRUE@@MONO_ARCH_GSHAREDVT_SUPPORTED_TRUE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractClass_DateTime_.Method1_int_.exe \
@FULL_AOT_TESTS_TRUE@@MONO_ARCH_GSHAREDVT_SUPPORTED_TRUE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractClass_DateTime_.Method1_DateTime_.exe \
@FULL_AOT_TESTS_TRUE@@MONO_ARCH_GSHAREDVT_SUPPORTED_TRUE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractClass_int_.Method1_int_.exe \
@FULL_AOT_TESTS_TRUE@@MONO_ARCH_GSHAREDVT_SUPPORTED_TRUE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractClass_DateTime_.Method1_string_.exe \
@FULL_AOT_TESTS_TRUE@@MONO_ARCH_GSHAREDVT_SUPPORTED_TRUE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractInterface_int_.Method1_string_.exe

# Times out on ARM64.
# https://github.com/mono/mono/issues/10783
# https://jenkins.mono-project.com/job/test-mono-pull-request-arm64-fullaot+llvm/486/parsed_console/log.html
# https://jenkins.mono-project.com/job/test-mono-pull-request-arm64-fullaot+llvm/471/parsed_console/log.html
@ARM64_TRUE@@FULL_AOT_TESTS_TRUE@am__append_33 = tailcall/2.exe
@HYBRID_AOT_TESTS_TRUE@am__append_34 = \
@HYBRID_AOT_TESTS_TRUE@	bug-80307.exe \
@HYBRID_AOT_TESTS_TRUE@	namedmutex-destroy-race.exe


# AppDomain tests

# Tests which load assemblies which are not in the profile

# Tests which needs named Mutex support

# Test which needs System.Web support
@FULL_AOT_INTERP_TESTS_TRUE@am__append_35 = appdomain1.exe \
@FULL_AOT_INTERP_TESTS_TRUE@	appdomain2.exe \
@FULL_AOT_INTERP_TESTS_TRUE@	appdomain-async-invoke.exe \
@FULL_AOT_INTERP_TESTS_TRUE@	appdomain.exe appdomain-exit.exe \
@FULL_AOT_INTERP_TESTS_TRUE@	appdomain-loader.exe \
@FULL_AOT_INTERP_TESTS_TRUE@	appdomain-marshalbyref-assemblyload.exe \
@FULL_AOT_INTERP_TESTS_TRUE@	appdomain-serialize-exception.exe \
@FULL_AOT_INTERP_TESTS_TRUE@	appdomain-thread-abort.exe \
@FULL_AOT_INTERP_TESTS_TRUE@	appdomain-threadpool-unload.exe \
@FULL_AOT_INTERP_TESTS_TRUE@	appdomain-unload-asmload.exe \
@FULL_AOT_INTERP_TESTS_TRUE@	appdomain-unload-callback.exe \
@FULL_AOT_INTERP_TESTS_TRUE@	appdomain-unload-doesnot-raise-pending-events.exe \
@FULL_AOT_INTERP_TESTS_TRUE@	appdomain-unload.exe \
@FULL_AOT_INTERP_TESTS_TRUE@	assemblyresolve_event6.exe \
@FULL_AOT_INTERP_TESTS_TRUE@	bug-335131.2.exe bug-415577.exe \
@FULL_AOT_INTERP_TESTS_TRUE@	cross-domain.exe dataslot.exe \
@FULL_AOT_INTERP_TESTS_TRUE@	delegate9.exe domain-stress.exe \
@FULL_AOT_INTERP_TESTS_TRUE@	generic-marshalbyref.2.exe \
@FULL_AOT_INTERP_TESTS_TRUE@	generic-unloading.2.exe \
@FULL_AOT_INTERP_TESTS_TRUE@	generic-xdomain.2.exe hostname.exe \
@FULL_AOT_INTERP_TESTS_TRUE@	marshal-valuetypes.exe monitor.exe \
@FULL_AOT_INTERP_TESTS_TRUE@	pinvoke3.exe remoting4.exe \
@FULL_AOT_INTERP_TESTS_TRUE@	stackframes-async.2.exe \
@FULL_AOT_INTERP_TESTS_TRUE@	suspend-stress-test.exe \
@FULL_AOT_INTERP_TESTS_TRUE@	thread6.exe \
@FULL_AOT_INTERP_TESTS_TRUE@	threadpool-exceptions7.exe \
@FULL_AOT_INTERP_TESTS_TRUE@	threadpool-exceptions8.exe \
@FULL_AOT_INTERP_TESTS_TRUE@	unhandled-exception-7.exe \
@FULL_AOT_INTERP_TESTS_TRUE@	unhandled-exception-test-case.2.exe \
@FULL_AOT_INTERP_TESTS_TRUE@	unload-appdomain-on-shutdown.exe \
@FULL_AOT_INTERP_TESTS_TRUE@	xdomain-threads.exe \
@FULL_AOT_INTERP_TESTS_TRUE@	assembly-load-remap.exe \
@FULL_AOT_INTERP_TESTS_TRUE@	namedmutex-destroy-race.exe \
@FULL_AOT_INTERP_TESTS_TRUE@	bug-80307.exe transparentproxy.exe

# Tests depending on assembly load order. Under Full AOT using WinAOT
# profile, console is still available, meaning that more assemblies (I18N)
# will be loaded when AOT runtime initial loads mscorlib.
@FULL_AOT_INTERP_TESTS_TRUE@@HOST_WIN32_TRUE@am__append_36 = \
@FULL_AOT_INTERP_TESTS_TRUE@@HOST_WIN32_TRUE@	assembly_append_ordering.exe


# Test is too sensitive.
@FULL_AOT_TESTS_TRUE@am__append_37 = $(REMOTING_DISABLED_TESTS) \
@FULL_AOT_TESTS_TRUE@	localloc-noinit.exe

# Test is too sensitive.
@HYBRID_AOT_TESTS_TRUE@am__append_38 = $(REMOTING_DISABLED_TESTS) \
@HYBRID_AOT_TESTS_TRUE@	localloc-noinit.exe

# Test is too sensitive.
@FULL_AOT_INTERP_TESTS_TRUE@am__append_39 =  \
@FULL_AOT_INTERP_TESTS_TRUE@	$(REMOTING_DISABLED_TESTS) \
@FULL_AOT_INTERP_TESTS_TRUE@	localloc-noinit.exe

# https://github.com/mono/mono/issues/12839
@HOST_WIN32_TRUE@am__append_40 = block_guard_restore_aligment_on_exit.exe

# bug-48015.exe: be careful when re-enabling, it happens that it returns with exit code 0, but doesn't actually execute the test.
# bug-60862.exe: missing support to map IP->method; only works on platforms with altstack support.
# bug-60843.exe: something goes wrong when turning the decoded enum value into a boxed enum, so the loaded value ends up being random bytes
@ARM_TRUE@am__append_41 = \
@ARM_TRUE@	appdomain-unload-callback.exe \
@ARM_TRUE@	appdomain-unload.exe \
@ARM_TRUE@	assemblyresolve_event6.exe \
@ARM_TRUE@	async-with-cb-throws.exe \
@ARM_TRUE@	block_guard_restore_aligment_on_exit.exe \
@ARM_TRUE@	bug-323114.exe \
@ARM_TRUE@	bug-335131.2.exe \
@ARM_TRUE@	bug-415577.exe \
@ARM_TRUE@	bug-45841-fpstack-exceptions.exe \
@ARM_TRUE@	bug-48015.exe \
@ARM_TRUE@	bug-60862.exe \
@ARM_TRUE@	bug-80307.exe \
@ARM_TRUE@	bug-80392.2.exe \
@ARM_TRUE@	bug445361.exe \
@ARM_TRUE@	calliGenericTest.exe \
@ARM_TRUE@	cominterop.exe \
@ARM_TRUE@	context-static.exe \
@ARM_TRUE@	delegate-async-exit.exe \
@ARM_TRUE@	delegate-delegate-exit.exe \
@ARM_TRUE@	delegate-exit.exe \
@ARM_TRUE@	delegate1.exe \
@ARM_TRUE@	delegate3.exe \
@ARM_TRUE@	delegate5.exe \
@ARM_TRUE@	delegate8.exe \
@ARM_TRUE@	delegate9.exe \
@ARM_TRUE@	dim-diamondshape.exe \
@ARM_TRUE@	dynamic-method-stack-traces.exe \
@ARM_TRUE@	even-odd.exe \
@ARM_TRUE@	exception18.exe \
@ARM_TRUE@	field-access.exe \
@ARM_TRUE@	finalizer-exception.exe \
@ARM_TRUE@	handleref.exe \
@ARM_TRUE@	monitor-abort.exe \
@ARM_TRUE@	nullable_boxing.2.exe \
@ARM_TRUE@	pinvoke2.exe \
@ARM_TRUE@	pinvoke3.exe \
@ARM_TRUE@	remoting2.exe \
@ARM_TRUE@	remoting3.exe \
@ARM_TRUE@	safehandle.2.exe \
@ARM_TRUE@	stackframes-async.2.exe \
@ARM_TRUE@	static-constructor.exe \
@ARM_TRUE@	threadpool-exceptions2.exe \
@ARM_TRUE@	threadpool-exceptions3.exe \
@ARM_TRUE@	threadpool-exceptions4.exe \
@ARM_TRUE@	threadpool-exceptions5.exe \
@ARM_TRUE@	threadpool-exceptions6.exe \
@ARM_TRUE@	thunks.exe \
@ARM_TRUE@	typeload-unaligned.exe \
@ARM_TRUE@	vararg.exe \
@ARM_TRUE@	vararg2.exe \
@ARM_TRUE@	vararg3.exe

@ARM64_TRUE@am__append_42 = \
@ARM64_TRUE@	bug-48015.exe \
@ARM64_TRUE@	bug-80307.exe \
@ARM64_TRUE@	dim-diamondshape.exe \
@ARM64_TRUE@	pinvoke3.exe


# Test is too sensitive.
@ARM64_TRUE@am__append_43 = localloc-noinit.exe

# Test is too sensitive?
@HOST_WIN32_TRUE@am__append_44 = localloc-noinit.exe
@AMD64_TRUE@am__append_45 = \
@AMD64_TRUE@	assemblyresolve_event6.exe \
@AMD64_TRUE@	bug-48015.exe \
@AMD64_TRUE@	bug-60862.exe \
@AMD64_TRUE@	cominterop.exe \
@AMD64_TRUE@	dim-diamondshape.exe \
@AMD64_TRUE@	pinvoke3.exe

subdir = mono/tests
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/apple-target.m4 \
	$(top_srcdir)/m4/ax_append_flag.m4 \
	$(top_srcdir)/m4/ax_append_link_flags.m4 \
	$(top_srcdir)/m4/ax_check_compile_flag.m4 \
	$(top_srcdir)/m4/ax_check_link_flag.m4 \
	$(top_srcdir)/m4/ax_require_defined.m4 \
	$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/ltoptions.m4 \
	$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \
	$(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/m4/mono-output.m4 $(top_srcdir)/m4/nls.m4 \
	$(top_srcdir)/m4/po.m4 $(top_srcdir)/m4/progtest.m4 \
	$(top_srcdir)/acinclude.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES = tests-config
CONFIG_CLEAN_VPATH_FILES =
LTLIBRARIES = $(noinst_LTLIBRARIES)
@ENABLE_MSVC_ONLY_FALSE@libtest_la_DEPENDENCIES = $(top_builddir)/mono/eglib/libeglib.la
am__libtest_la_SOURCES_DIST = libtest.c
@ENABLE_MSVC_ONLY_FALSE@am_libtest_la_OBJECTS = libtest_la-libtest.lo
libtest_la_OBJECTS = $(am_libtest_la_OBJECTS)
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
libtest_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(libtest_la_CFLAGS) \
	$(CFLAGS) $(libtest_la_LDFLAGS) $(LDFLAGS) -o $@
@ENABLE_MSVC_ONLY_FALSE@am_libtest_la_rpath =
PROGRAMS = $(noinst_PROGRAMS)
am__split_tailcall_interface_conservestack_SOURCES_DIST =  \
	split-tailcall-interface-conservestack.cpp
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@am_split_tailcall_interface_conservestack_OBJECTS = split-tailcall-interface-conservestack.$(OBJEXT)
split_tailcall_interface_conservestack_OBJECTS =  \
	$(am_split_tailcall_interface_conservestack_OBJECTS)
split_tailcall_interface_conservestack_LDADD = $(LDADD)
am__tailcall_split_fsharp_SOURCES_DIST = tailcall/split-fsharp.cpp
am__dirstamp = $(am__leading_dot)dirstamp
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@am_tailcall_split_fsharp_OBJECTS = tailcall/split-fsharp.$(OBJEXT)
tailcall_split_fsharp_OBJECTS = $(am_tailcall_split_fsharp_OBJECTS)
tailcall_split_fsharp_LDADD = $(LDADD)
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_@AM_V@)
am__v_CXX_ = $(am__v_CXX_@AM_DEFAULT_V@)
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_@AM_V@)
am__v_CXXLD_ = $(am__v_CXXLD_@AM_DEFAULT_V@)
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = $(libtest_la_SOURCES) \
	$(split_tailcall_interface_conservestack_SOURCES) \
	$(tailcall_split_fsharp_SOURCES)
DIST_SOURCES = $(am__libtest_la_SOURCES_DIST) \
	$(am__split_tailcall_interface_conservestack_SOURCES_DIST) \
	$(am__tailcall_split_fsharp_SOURCES_DIST)
RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \
	ctags-recursive dvi-recursive html-recursive info-recursive \
	install-data-recursive install-dvi-recursive \
	install-exec-recursive install-html-recursive \
	install-info-recursive install-pdf-recursive \
	install-ps-recursive install-recursive installcheck-recursive \
	installdirs-recursive pdf-recursive ps-recursive \
	tags-recursive uninstall-recursive
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
am__recursive_targets = \
  $(RECURSIVE_TARGETS) \
  $(RECURSIVE_CLEAN_TARGETS) \
  $(am__extra_recursive_targets)
AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \
	distdir
am__extra_recursive_targets = test-recursive test-bundle-recursive
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
am__DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/tests-config.in \
	$(top_srcdir)/depcomp $(top_srcdir)/mkinstalldirs
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AOT_BUILD_FLAGS = @AOT_BUILD_FLAGS@
AOT_RUN_FLAGS = @AOT_RUN_FLAGS@
API_VER = @API_VER@
AR = @AR@
AS = @AS@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BOEHM_DEFINES = @BOEHM_DEFINES@
BREAKPOINT = @BREAKPOINT@
BTLS_ARCH = @BTLS_ARCH@
BTLS_CFLAGS = @BTLS_CFLAGS@
BTLS_CMAKE_ARGS = @BTLS_CMAKE_ARGS@
BTLS_PLATFORM = @BTLS_PLATFORM@
BTLS_ROOT = @BTLS_ROOT@
BUILD_EXEEXT = @BUILD_EXEEXT@
CC = @CC@
CCAS = @CCAS@
CCASDEPMODE = @CCASDEPMODE@
CCASFLAGS = @CCASFLAGS@
CCDEPMODE = @CCDEPMODE@
CC_FOR_BUILD = @CC_FOR_BUILD@
CFLAGS = @CFLAGS@
CFLAGS_FOR_BUILD = @CFLAGS_FOR_BUILD@
CMAKE = @CMAKE@
COREARCH = @COREARCH@
CORETARGETS = @CORETARGETS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CSC = @CSC@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CXXFLAGS_COMMON = @CXXFLAGS_COMMON@
CXX_ADD_CFLAGS = @CXX_ADD_CFLAGS@
CXX_REMOVE_CFLAGS = @CXX_REMOVE_CFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFAULT_PROFILE = @DEFAULT_PROFILE@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DOLT_BASH = @DOLT_BASH@
DSYMUTIL = @DSYMUTIL@
DTRACE = @DTRACE@
DTRACEFLAGS = @DTRACEFLAGS@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
EXTERNAL_LLVM_CONFIG = @EXTERNAL_LLVM_CONFIG@
EXTERNAL_LLVM_CONFIG_WIN32 = @EXTERNAL_LLVM_CONFIG_WIN32@
FGREP = @FGREP@
GDKX11 = @GDKX11@
GETTEXT_MACRO_VERSION = @GETTEXT_MACRO_VERSION@
GLIB_CFLAGS = @GLIB_CFLAGS@
GMSGFMT = @GMSGFMT@
GMSGFMT_015 = @GMSGFMT_015@
GNUC_NORETURN = @GNUC_NORETURN@
GNUC_PRETTY = @GNUC_PRETTY@
GNUC_UNUSED = @GNUC_UNUSED@
GREP = @GREP@
GSIZE = @GSIZE@
GSIZE_FORMAT = @GSIZE_FORMAT@
GSSIZE = @GSSIZE@
GTKX11 = @GTKX11@
HAVE_ALLOCA_H = @HAVE_ALLOCA_H@
HAVE_MSGFMT = @HAVE_MSGFMT@
HAVE_NINJA = @HAVE_NINJA@
HAVE_UNISTD_H = @HAVE_UNISTD_H@
HAVE_YASM = @HAVE_YASM@
HOST_CC = @HOST_CC@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
INTERP_CFLAGS = @INTERP_CFLAGS@
INTL = @INTL@
INVARIANT_AOT_OPTIONS = @INVARIANT_AOT_OPTIONS@
JEMALLOC_AUTOCONF_FLAGS = @JEMALLOC_AUTOCONF_FLAGS@
JEMALLOC_CFLAGS = @JEMALLOC_CFLAGS@
JEMALLOC_CPPFLAGS = @JEMALLOC_CPPFLAGS@
JEMALLOC_LDFLAGS = @JEMALLOC_LDFLAGS@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBC = @LIBC@
LIBGC_CPPFLAGS = @LIBGC_CPPFLAGS@
LIBGC_LIBS = @LIBGC_LIBS@
LIBGC_STATIC_LIBS = @LIBGC_STATIC_LIBS@
LIBMONO_LA = @LIBMONO_LA@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LLVM_CODEGEN_LIBS = @LLVM_CODEGEN_LIBS@
LN_S = @LN_S@
LTCOMPILE = @LTCOMPILE@
LTCXXCOMPILE = @LTCXXCOMPILE@
LTLIBOBJS = @LTLIBOBJS@
LT_SYS_LIBRARY_PATH = @LT_SYS_LIBRARY_PATH@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MKDIR_P = @MKDIR_P@
MONO_CORLIB_VERSION = @MONO_CORLIB_VERSION@
MONO_CXXLD = @MONO_CXXLD@
MONO_JEMALLOC_ASSERT = @MONO_JEMALLOC_ASSERT@
MONO_JEMALLOC_DEFAULT = @MONO_JEMALLOC_DEFAULT@
MONO_JEMALLOC_ENABLED = @MONO_JEMALLOC_ENABLED@
MONO_NATIVE_CC = @MONO_NATIVE_CC@
MONO_NATIVE_CCASFLAGS = @MONO_NATIVE_CCASFLAGS@
MONO_NATIVE_CFLAGS = @MONO_NATIVE_CFLAGS@
MONO_NATIVE_COMPAT_CCASFLAGS = @MONO_NATIVE_COMPAT_CCASFLAGS@
MONO_NATIVE_COMPAT_CFLAGS = @MONO_NATIVE_COMPAT_CFLAGS@
MONO_NATIVE_COMPAT_CPPFLAGS = @MONO_NATIVE_COMPAT_CPPFLAGS@
MONO_NATIVE_COMPAT_CXXFLAGS = @MONO_NATIVE_COMPAT_CXXFLAGS@
MONO_NATIVE_COMPAT_LDFLAGS = @MONO_NATIVE_COMPAT_LDFLAGS@
MONO_NATIVE_CPPFLAGS = @MONO_NATIVE_CPPFLAGS@
MONO_NATIVE_CXX = @MONO_NATIVE_CXX@
MONO_NATIVE_CXXFLAGS = @MONO_NATIVE_CXXFLAGS@
MONO_NATIVE_LDFLAGS = @MONO_NATIVE_LDFLAGS@
MONO_NATIVE_LIBADD = @MONO_NATIVE_LIBADD@
MONO_NATIVE_LIBRARY_NAME = @MONO_NATIVE_LIBRARY_NAME@
MONO_NATIVE_PLATFORM = @MONO_NATIVE_PLATFORM@
MONO_NATIVE_PLATFORM_TYPE = @MONO_NATIVE_PLATFORM_TYPE@
MONO_NATIVE_PLATFORM_TYPE_COMPAT = @MONO_NATIVE_PLATFORM_TYPE_COMPAT@
MONO_NATIVE_PLATFORM_TYPE_UNIFIED = @MONO_NATIVE_PLATFORM_TYPE_UNIFIED@
MONO_NATIVE_UNIFIED_CCASFLAGS = @MONO_NATIVE_UNIFIED_CCASFLAGS@
MONO_NATIVE_UNIFIED_CFLAGS = @MONO_NATIVE_UNIFIED_CFLAGS@
MONO_NATIVE_UNIFIED_CPPFLAGS = @MONO_NATIVE_UNIFIED_CPPFLAGS@
MONO_NATIVE_UNIFIED_CXXFLAGS = @MONO_NATIVE_UNIFIED_CXXFLAGS@
MONO_NATIVE_UNIFIED_LDFLAGS = @MONO_NATIVE_UNIFIED_LDFLAGS@
MONO_NOINST_SUBDIRS = @MONO_NOINST_SUBDIRS@
MONO_SUBDIRS = @MONO_SUBDIRS@
MSGFMT = @MSGFMT@
MSGFMT_015 = @MSGFMT_015@
MSGMERGE = @MSGMERGE@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
ODBC = @ODBC@
ORDER = @ORDER@
OS = @OS@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATHSEP = @PATHSEP@
PATH_SEPARATOR = @PATH_SEPARATOR@
PIDTYPE = @PIDTYPE@
PKG_CONFIG = @PKG_CONFIG@
PLATFORM_AOT_PREFIX = @PLATFORM_AOT_PREFIX@
PLATFORM_AOT_SUFFIX = @PLATFORM_AOT_SUFFIX@
PYTHON = @PYTHON@
PYTHON_EXEC_PREFIX = @PYTHON_EXEC_PREFIX@
PYTHON_PLATFORM = @PYTHON_PLATFORM@
PYTHON_PREFIX = @PYTHON_PREFIX@
PYTHON_VERSION = @PYTHON_VERSION@
RANLIB = @RANLIB@
RID = @RID@
SEARCHSEP = @SEARCHSEP@
SED = @SED@
SET_MAKE = @SET_MAKE@
SGEN_DEFINES = @SGEN_DEFINES@
SHARED_CFLAGS = @SHARED_CFLAGS@
SHELL = @SHELL@
SIZEOF_VOID_P = @SIZEOF_VOID_P@
SQLITE = @SQLITE@
SQLITE3 = @SQLITE3@
STATIC_GCC_LIBS = @STATIC_GCC_LIBS@
STATIC_ZLIB_PATH = @STATIC_ZLIB_PATH@
STRIP = @STRIP@
TEST_PROFILE = @TEST_PROFILE@
USE_NLS = @USE_NLS@
VERSION = @VERSION@
VTUNE_CFLAGS = @VTUNE_CFLAGS@
VTUNE_LIBS = @VTUNE_LIBS@
WERROR_CFLAGS = @WERROR_CFLAGS@
X11 = @X11@
XATTR_LIB = @XATTR_LIB@
XGETTEXT = @XGETTEXT@
XGETTEXT_015 = @XGETTEXT_015@
XGETTEXT_EXTRA_OPTIONS = @XGETTEXT_EXTRA_OPTIONS@
XINERAMA = @XINERAMA@
XMKMF = @XMKMF@
ZLIB_CFLAGS = @ZLIB_CFLAGS@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
arch_target = @arch_target@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
export_ldflags = @export_ldflags@
extra_runtime_ldflags = @extra_runtime_ldflags@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
libgdiplus_install_loc = @libgdiplus_install_loc@
libgdiplus_loc = @libgdiplus_loc@
libmono_cflags = @libmono_cflags@
libmono_ldflags = @libmono_ldflags@
libsuffix = @libsuffix@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mcs_topdir = @mcs_topdir@
mcs_topdir_from_srcdir = @mcs_topdir_from_srcdir@
mkdir_p = @mkdir_p@
mono_build_root = @mono_build_root@
mono_cfg_dir = @mono_cfg_dir@
mono_msvc_build_bin_dir = @mono_msvc_build_bin_dir@
mono_msvc_build_dir = @mono_msvc_build_dir@
mono_msvc_build_lib_dir = @mono_msvc_build_lib_dir@
mono_runtime = @mono_runtime@
mono_runtime_wrapper = @mono_runtime_wrapper@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
pkgpyexecdir = @pkgpyexecdir@
pkgpythondir = @pkgpythondir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
pyexecdir = @pyexecdir@
pythondir = @pythondir@
reloc_libdir = @reloc_libdir@
runstatedir = @runstatedir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
subdirs = @subdirs@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
MAKEFLAGS := $(MAKEFLAGS) --no-builtin-rules
SUBDIRS = gc-descriptors . testing_gac assembly-load-reference llvmonly-mixed fullaot-mixed
BUILT_SOURCES = $(ARRAY_COOP_CS) $(TAILCALL_FSHARP_DEEPTAIL_IL) \
	$(TAILCALL_INTERFACE_CONSERVESTACK_IL)
ARRAY_COOP_CS = \
	array-coop-bigvt.cs     \
	array-coop-int.cs       \
	array-coop-smallvt.cs


# These are not actually tests, but they are source files part of another test.

# FIXME valuetype parameter.
TAILCALL_DISABLED_TESTS_COMPILE = tailcall/coreclr/JIT/opt/Tailcall/TailcallVerifyTransparentLibraryWithPrefix.exe \
	tailcall/coreclr/JIT/opt/Tailcall/TailcallVerifyVerifiableLibraryWithPrefix.exe \
	tailcall/coreclr/JIT/opt/ETW/TailCallCases.exe $(am__append_2)

# FIXME Some of these sound like negative tests -- "badtailcall". Verify and automate.
# FIXME investigate and explain every test failure.

# FIXME investigate and explain every test failure.
TAILCALL_DISABLED_TESTS_RUN =  \
	tailcall/coreclr/JIT/Directed/IL/PInvokeTail/tailwinapi.exe \
	tailcall/coreclr/JIT/Directed/IL/Tailcall/Jittailcall2.exe \
	tailcall/coreclr/JIT/Directed/IL/mutualrecur-tailcall/MutualRecur-TailCall.exe \
	tailcall/coreclr/JIT/Directed/coverage/importer/Desktop/badtailcall.exe \
	tailcall/coreclr/JIT/Directed/coverage/importer/badtailcall.exe \
	tailcall/coreclr/JIT/Directed/pinvoke/tail.exe \
	tailcall/coreclr/JIT/IL_Conformance/Old/Base/tailcall.exe \
	tailcall/coreclr/JIT/Methodical/Invoke/fptr/recurse_tail_call.exe \
	tailcall/coreclr/JIT/Methodical/Invoke/fptr/recurse_tail_calli.exe \
	tailcall/coreclr/JIT/Methodical/tailcall/deep_array.exe \
	tailcall/coreclr/JIT/Methodical/tailcall/deep_array_nz.exe \
	tailcall/coreclr/JIT/Methodical/tailcall/gcval_nested.exe \
	tailcall/coreclr/JIT/Methodical/tailcall/pointer_i.exe \
	tailcall/coreclr/JIT/Methodical/tailcall/pointer.exe \
	tailcall/coreclr/JIT/Methodical/tailcall/reference_i.exe \
	tailcall/coreclr/JIT/Methodical/tailcall/test_implicit.exe \
	tailcall/coreclr/JIT/Methodical/tailcall/test_mutual_rec.exe \
	tailcall/coreclr/JIT/Methodical/tailcall/test_switch.exe \
	tailcall/coreclr/JIT/Methodical/tailcall_v4/delegateTail.exe \
	tailcall/coreclr/JIT/Methodical/tailcall_v4/hijacking.exe \
	tailcall/coreclr/JIT/Methodical/tailcall_v4/smallFrame.exe \
	tailcall/coreclr/JIT/Methodical/tailcall_v4/tailcall_AV.exe \
	tailcall/coreclr/JIT/Regression/VS-ia64-JIT/V1.2-M02/b102844/tailcallcalli.exe \
	tailcall/coreclr/JIT/opt/Tailcall/TailcallVerifyWithPrefix.exe \
	$(TAILCALL_DISABLED_TESTS_COMPILE) \
	tailcall/coreclr/JIT/Methodical/Boxing/misc/tailjump.exe \
	tailcall/coreclr/JIT/Methodical/tailcall/deep_gc.exe \
	tailcall/coreclr/JIT/Methodical/tailcall/deep_inst.exe \
	tailcall/coreclr/JIT/Methodical/tailcall/deep_value.exe \
	tailcall/coreclr/JIT/Methodical/tailcall/deep_virt.exe \
	tailcall/coreclr/JIT/Methodical/tailcall/gcval.exe \
	tailcall/coreclr/JIT/Methodical/tailcall/gcval_sideeffect.exe \
	tailcall/coreclr/JIT/Methodical/tailcall/test_3b.exe \
	tailcall/coreclr/JIT/Methodical/tailcall_v4/delegateParamCallTarget.exe \
	$(am__append_1) $(am__append_3)

# FullAOT does not allow --compile-all.
@FULL_AOT_TESTS_FALSE@TEST_TAILCALL_COMPILE_ALL = --runtime-args "--compile-all"
@HOST_WIN32_FALSE@JITTEST_PROG = $(if $(VALGRIND), valgrind $(VALGRIND_ARGS),) $(if $(SGEN),$(top_builddir)/mono/mini/mono-sgen,$(top_builddir)/mono/mini/mono)
@HOST_WIN32_TRUE@JITTEST_PROG = $(top_builddir)/runtime/mono-wrapper
JITTEST_PROG_RUN = MONO_CFG_DIR=$(mono_build_root)/runtime/etc $(LIBTOOL) --mode=execute $(JITTEST_PROG)
RUNTIME_ARGS = --config tests-config --optimize=all --debug
CLASS = $(mcs_topdir)/class/lib/$(DEFAULT_PROFILE)
with_mono_path = MONO_PATH=$(CLASS)
RUNTIME = $(with_mono_path) $(top_builddir)/runtime/mono-wrapper
TOOLS_RUNTIME = MONO_PATH=$(mcs_topdir)/class/lib/build $(top_builddir)/runtime/mono-wrapper --aot-path=$(mcs_topdir)/class/lib/build
MKBUNDLE = \
	PKG_CONFIG_PATH=$(top_builddir):$(PKG_CONFIG_PATH) \
	$(RUNTIME) $(CLASS)/mkbundle.exe

@FULL_AOT_INTERP_TESTS_TRUE@PROFILE_MCS_FLAGS = -d:MOBILE,MOBILE_LEGACY
@FULL_AOT_TESTS_TRUE@PROFILE_MCS_FLAGS = -d:MOBILE,MOBILE_LEGACY,FULL_AOT_DESKTOP 
@HYBRID_AOT_TESTS_TRUE@PROFILE_MCS_FLAGS = -d:MOBILE,MOBILE_LEGACY 
MCS_NO_UNSAFE = $(TOOLS_RUNTIME) $(CSC) -debug:portable \
	-noconfig -nologo \
	-nowarn:0162 -nowarn:0168 -nowarn:0219 -nowarn:0414 -nowarn:0618 \
	-nowarn:0169 -nowarn:1690 -nowarn:0649 -nowarn:0612 -nowarn:3021 \
	-nowarn:0197 -langversion:latest $(PROFILE_MCS_FLAGS)

MCS_NO_LIB = $(MCS_NO_UNSAFE) -unsafe
MCS = $(MCS_NO_LIB)
ILASM = $(TOOLS_RUNTIME) $(mcs_topdir)/class/lib/build/ilasm.exe
TEST_RUNNER = ./test-runner.exe $(am__append_4) $(am__append_5) \
	--mono-path "$(CLASS)" $(am__append_6) $(am__append_7) \
	--runtime-args "$(TEST_RUNTIME_FLAGS)" $(if $(V), --verbose,)
@ENABLE_MSVC_FALSE@@HOST_WIN32_TRUE@DEFAULT_WIN32_RUNTIME = $(top_builddir)/runtime/mono-wrapper)
@ENABLE_MSVC_TRUE@@HOST_WIN32_TRUE@DEFAULT_WIN32_RUNTIME = $(shell cygpath -w -a $(top_builddir)/@mono_runtime@ | sed 's/\\/\\\\/g')
TESTS_BENCH_SRC = fib.cs random.cs nested-loops.cs ackermann.cs tight-loop.cs sieve.cs
TESTS_STRESS_SRC = \
	abort-stress-1.cs	\
	abort-stress-2.cs	\
	abort-stress-3.cs	\
	domain-stress.cs	\
	gchandle-stress.cs	\
	monitor-stress.cs	\
	thread-stress.cs	\
	gc-stress.cs		\
	gc-copy-stress.cs	\
	gc-graystack-stress.cs		\
	exit-stress.cs		\
	process-stress.cs	\
	spinlock-stress.cs 	\
	assembly-load-stress.cs


# Disabled until ?mcs is fixed
#	bug-331958.cs
TESTS_CS_SRC = generic-unloading-sub.2.cs create-instance.cs \
	bug-2907.cs $(ARRAY_COOP_CS) array-12193.cs array-init.cs \
	arraylist.cs assembly-load-remap.cs assembly-load-bytes.cs \
	assembly-loadfile.cs assembly-loadfrom.cs \
	assembly-load-bytes-bindingredirect.cs \
	assembly-loadfile-bindingredirect.cs \
	assembly-loadfrom-bindingredirect.cs \
	assembly-loadfrom-simplename.cs \
	assembly-refonly-load-bytes-bindingredirect.cs \
	assemblyresolve_event.cs assemblyresolve_event3.cs \
	assemblyresolve_event4.cs assemblyresolve_event5.cs \
	assemblyresolve_event6.cs checked.cs char-isnumber.cs \
	field-layout.cs pack-layout.cs pack-bug.cs hash-table.cs \
	test-ops.cs obj.cs test-dup-mp.cs string.cs stringbuilder.cs \
	switch.cs outparm.cs delegate.cs bitconverter.cs exception.cs \
	exception2.cs exception3.cs exception4.cs exception5.cs \
	exception6.cs exception7.cs exception8.cs exception10.cs \
	exception11.cs exception12.cs exception13.cs exception14.cs \
	exception15.cs exception16.cs exception17.cs exception18.cs \
	exception-invokes.cs merp-json-valid.cs merp-crash-test.cs \
	exception19.cs exception20.cs exception21.cs \
	typeload-unaligned.cs struct.cs valuetype-gettype.cs \
	typeof-ptr.cs static-constructor.cs pinvoke.cs pinvoke-utf8.cs \
	pinvoke3.cs pinvoke11.cs pinvoke13.cs pinvoke17.cs invoke.cs \
	invoke2.cs runtime-invoke.cs invoke-string-ctors.cs reinit.cs \
	box.cs array.cs enum.cs enum2.cs enum-intrins.cs property.cs \
	enumcast.cs assignable-tests.cs array-cast.cs \
	array-subtype-attr.cs cattr-compile.cs cattr-field.cs \
	cattr-object.cs custom-attr.cs double-cast.cs \
	newobj-valuetype.cs arraylist-clone.cs setenv.cs vtype.cs \
	isvaluetype.cs iface6.cs iface7.cs ipaddress.cs array-vt.cs \
	interface1.cs reflection-enum.cs reflection-prop.cs \
	reflection4.cs reflection5.cs reflection-const-field.cs \
	many-locals.cs string-compare.cs test-prime.cs test-tls.cs \
	params.cs reflection.cs interface.cs interface-2.cs \
	dim-generic.cs dim-issue-18917.cs iface.cs iface2.cs iface3.cs \
	iface4.cs iface-large.cs iface-contravariant1.cs \
	virtual-method.cs intptrcast.cs indexer.cs stream.cs \
	console.cs shift.cs jit-int.cs jit-uint.cs jit-long.cs long.cs \
	jit-ulong.cs jit-float.cs pop.cs time.cs pointer.cs \
	hashcode.cs delegate1.cs delegate2.cs delegate3.cs \
	delegate5.cs delegate6.cs delegate7.cs delegate8.cs \
	delegate10.cs delegate11.cs delegate12.cs delegate13.cs \
	delegate14.cs delegate15.cs delegate16.cs delegate17.cs \
	delegate18.cs largeexp.cs largeexp2.cs marshalbyref1.cs \
	static-ctor.cs inctest.cs bound.cs array-invoke.cs test-arr.cs \
	decimal.cs decimal-array.cs marshal.cs marshal1.cs marshal2.cs \
	marshal3.cs marshal5.cs marshal6.cs marshal7.cs marshal8.cs \
	marshal9.cs marshalbool.cs test-byval-in-struct.cs thread.cs \
	thread5.cs thread-static.cs thread-static-init.cs \
	context-static.cs float-pop.cs interfacecast.cs array3.cs \
	classinit.cs classinit2.cs classinit3.cs synchronized.cs \
	async_read.cs threadpool.cs threadpool1.cs \
	threadpool-exceptions1.cs threadpool-exceptions3.cs \
	threadpool-exceptions4.cs threadpool-exceptions6.cs \
	base-definition.cs bug-27420.cs bug-46781.cs bug-42136.cs \
	bug-59286.cs bug-70561.cs bug-78311.cs bug-78653.cs \
	bug-78656.cs bug-77127.cs bug-323114.cs bug-Xamarin-5278.cs \
	interlocked.cs delegate-async-exit.cs \
	delegate-delegate-exit.cs delegate-exit.cs \
	delegate-disposed-hashcode.cs finalizer-abort.cs \
	finalizer-exception.cs finalizer-exit.cs finalizer-thread.cs \
	main-exit.cs main-returns-abort-resetabort.cs \
	main-returns-background-abort-resetabort.cs \
	main-returns-background-resetabort.cs \
	main-returns-background.cs main-returns-background-change.cs \
	main-returns.cs subthread-exit.cs desweak.cs exists.cs \
	handleref.cs install_eh_callback.cs dbnull-missing.cs \
	test-type-ctor.cs soft-float-tests.cs thread-exit.cs \
	finalize-parent.cs interlocked-2.2.cs pinvoke-2.2.cs \
	bug-78431.2.cs bug-79684.2.cs catch-generics.2.cs \
	event-get.2.cs safehandle.2.cs module-cctor-loader.2.cs \
	generics-invoke-byref.2.cs generic-signature-compare.2.cs \
	generics-sharing.2.cs shared-generic-methods.2.cs \
	shared-generic-synchronized.2.cs generic-inlining.2.cs \
	generic-initobj.2.cs generic-delegate.2.cs generic-sizeof.2.cs \
	generic-virtual.2.cs generic-interface-methods.2.cs \
	generic-array-type.2.cs generic-method-patching.2.cs \
	generic-static-methods.2.cs generic-null-call.2.cs \
	generic-special.2.cs generic-special2.2.cs \
	generic-exceptions.2.cs generic-virtual2.2.cs \
	generic-valuetype-interface.2.cs \
	generic-getgenericarguments.2.cs generic-synchronized.2.cs \
	generic-delegate-ctor.2.cs generic-array-iface-set.2.cs \
	generic-typedef.2.cs bug-431413.2.cs bug-459285.2.cs \
	generic-virtual-invoke.2.cs bug-461198.2.cs \
	generic-sealed-virtual.2.cs generic-system-arrays.2.cs \
	generic-stack-traces.2.cs generic-stack-traces2.2.cs \
	bug-472600.2.cs recursive-generics.2.cs \
	recursive-generics.3.cs bug-473482.2.cs bug-473999.2.cs \
	bug-479763.2.cs bug-616463.cs bug-80392.2.cs bug-82194.2.cs \
	anonarray.2.cs ienumerator-interfaces.2.cs \
	array-enumerator-ifaces.2.cs \
	generic_type_definition_encoding.2.cs bug-333798.2.cs \
	bug-348522.2.cs bug-340662_bug.cs bug-325283.2.cs thunks.cs \
	winx64structs.cs nullable_boxing.2.cs valuetype-equals.cs \
	custom-modifiers.2.cs custom-modifiers-inheritance.cs \
	bug-382986.cs test-inline-call-stack.cs bug-324535.cs \
	modules.cs bug-81673.cs bug-81691.cs bug-415577.cs \
	filter-stack.cs vararg.cs vararg2.cs bug-461867.cs \
	bug-461941.cs bug-461261.cs bug-400716.cs bug-459094.cs \
	bug-467456.cs bug-508538.cs bug-472692.2.cs gchandles.cs \
	interlocked-3.cs interlocked-4.2.cs w32message.cs \
	gc-altstack.cs large-gc-bitmap.cs bug-561239.cs bug-562150.cs \
	bug-599469.cs monitor-resurrection.cs monitor-wait-abort.cs \
	monitor-abort.cs bug-666008.cs bug-685908.cs \
	sgen-long-vtype.cs delegate-invoke.cs delegate-prop.cs \
	bug-696593.cs bug-705140.cs bug-1147.cs mono-path.cs \
	bug-bxc-795.cs bug-3903.cs async-with-cb-throws.cs bug-6148.cs \
	bug-10127.cs bug-18026.cs allow-synchronous-major.cs \
	block_guard_restore_aligment_on_exit.cs \
	thread_static_gc_layout.cs sleep.cs bug-27147.cs bug-30085.cs \
	bug-17537.cs pinvoke_ppcc.cs pinvoke_ppcs.cs pinvoke_ppci.cs \
	pinvoke_ppcf.cs pinvoke_ppcd.cs bug-29585.cs priority.cs \
	abort-cctor.cs abort-try-holes.cs abort-tests.cs \
	thread-native-exit.cs reference-loader.cs \
	thread-suspend-suspended.cs thread-suspend-selfsuspended.cs \
	remoting4.cs remoting1.cs remoting2.cs remoting3.cs \
	remoting5.cs appdomain.cs appdomain-client.cs \
	appdomain-unload.cs appdomain-async-invoke.cs \
	appdomain-thread-abort.cs appdomain1.cs appdomain2.cs \
	appdomain-exit.cs appdomain-serialize-exception.cs \
	assemblyresolve_event2.2.cs appdomain-unload-callback.cs \
	appdomain-unload-doesnot-raise-pending-events.cs \
	appdomain-unload-asmload.cs appdomain-unload-exception.cs \
	unload-appdomain-on-shutdown.cs \
	appdomain-marshalbyref-assemblyload.cs bug-47295.cs loader.cs \
	pinvoke2.cs generic-type-builder.2.cs dynamic-generic-size.cs \
	cominterop.cs dynamic-method-access.2.cs \
	dynamic-method-finalize.2.cs dynamic-method-stack-traces.cs \
	generic_type_definition.2.cs bug-333798-tb.2.cs \
	bug-335131.2.cs bug-322722_patch_bx.2.cs \
	bug-322722_dyn_method_throw.2.cs bug-389886-2.cs \
	bug-349190.2.cs bug-389886-sre-generic-interface-instances.cs \
	bug-462592.cs bug-575941.cs bug-389886-3.cs \
	constant-division.cs dynamic-method-resurrection.cs \
	bug-80307.cs assembly_append_ordering.cs bug-544446.cs \
	bug-36848.cs generic-marshalbyref.2.cs stackframes-async.2.cs \
	transparentproxy.cs bug-48015.cs delegate9.cs \
	marshal-valuetypes.cs xdomain-threads.cs monitor.cs \
	generic-xdomain.2.cs threadpool-exceptions7.cs \
	threadpool-exceptions8.cs cross-domain.cs \
	generic-unloading.2.cs namedmutex-destroy-race.cs thread6.cs \
	thread7.cs appdomain-threadpool-unload.cs \
	process-unref-race.cs bug-46661.cs w32message.cs \
	runtime-invoke.gen.cs imt_big_iface_test.cs \
	bug-58782-plain-throw.cs bug-58782-capture-and-throw.cs \
	recursive-struct-arrays.cs struct-explicit-layout.cs \
	bug-59281.cs init_array_with_lazy_type.cs weak-fields.cs \
	threads-leak.cs threads-init.cs bug-60848.cs bug-59400.cs \
	tailcall-generic-cast-cs.cs tailcall-interface.cs bug-60843.cs \
	nested_type_visibility.cs dynamic-method-churn.cs \
	dynamic-method-delegate.cs verbose.cs \
	generic-unmanaged-constraint.cs bug-10834.cs bug-10837.cs \
	bug-gh-9507.cs async-generic-enum.cs null-blob-main.cs \
	rgctx-thread-static.cs last-error.cs $(am__append_8) \
	$(am__append_9) $(am__append_10) $(am__append_11) \
	$(am__append_12) $(am__append_13)
# These tests are produced by splitting up tailcall-interface-conservestack.il.
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@TAILCALL_INTERFACE_CONSERVESTACK_IL = \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/interface-conservestack/1.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/interface-conservestack/10.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/interface-conservestack/11.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/interface-conservestack/12.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/interface-conservestack/13.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/interface-conservestack/14.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/interface-conservestack/15.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/interface-conservestack/16.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/interface-conservestack/17.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/interface-conservestack/18.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/interface-conservestack/19.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/interface-conservestack/2.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/interface-conservestack/20.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/interface-conservestack/21.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/interface-conservestack/22.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/interface-conservestack/23.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/interface-conservestack/24.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/interface-conservestack/25.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/interface-conservestack/26.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/interface-conservestack/27.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/interface-conservestack/28.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/interface-conservestack/29.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/interface-conservestack/3.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/interface-conservestack/30.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/interface-conservestack/31.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/interface-conservestack/32.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/interface-conservestack/33.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/interface-conservestack/34.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/interface-conservestack/35.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/interface-conservestack/36.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/interface-conservestack/37.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/interface-conservestack/38.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/interface-conservestack/39.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/interface-conservestack/4.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/interface-conservestack/40.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/interface-conservestack/41.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/interface-conservestack/42.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/interface-conservestack/43.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/interface-conservestack/44.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/interface-conservestack/45.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/interface-conservestack/46.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/interface-conservestack/47.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/interface-conservestack/48.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/interface-conservestack/49.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/interface-conservestack/5.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/interface-conservestack/50.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/interface-conservestack/51.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/interface-conservestack/52.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/interface-conservestack/53.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/interface-conservestack/6.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/interface-conservestack/7.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/interface-conservestack/8.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/interface-conservestack/9.il

@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_TRUE@TAILCALL_INTERFACE_CONSERVESTACK_IL = 
@CROSS_COMPILING_FALSE@@HOST_WASM_TRUE@TAILCALL_INTERFACE_CONSERVESTACK_IL = 
@CROSS_COMPILING_TRUE@TAILCALL_INTERFACE_CONSERVESTACK_IL = 

# These tests are produced by splitting up tailcall/fsharp-deeptail.il.
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@TAILCALL_FSHARP_DEEPTAIL_IL = \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/fsharp-deeptail/Seq.filter-length1.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/fsharp-deeptail/Seq.filter-length2.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/fsharp-deeptail/Seq.filter-length3.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/fsharp-deeptail/StaticTailCallLoop_DateTime_.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/fsharp-deeptail/StaticTailCallLoop_int_.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractClass_DateTime_.Method1_DateTime_.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractClass_DateTime_.Method1_byte_.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractClass_DateTime_.Method1_int_.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractClass_DateTime_.Method1_string_.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractClass_DatstringeTime_.Method1_string_.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractClass_byte_.Method1_DateTime_.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractClass_byte_.Method1_byte_.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractClass_byte_.Method1_int_.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractClass_byte_.Method1_string_.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractClass_int_.Method1_DateTime_.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractClass_int_.Method1_byte_.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractClass_int_.Method1_int_.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractClass_int_.Method1_string_.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractClass_string_.Method1_DateTime_.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractClass_string_.Method1_byte_.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractClass_string_.Method1_int_.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractInterface_DateTime_.Method1_DateTime_.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractInterface_DateTime_.Method1_byte_.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractInterface_DateTime_.Method1_int_.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractInterface_DateTime_.Method1_string_.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractInterface_DatstringeTime_.Method1_string_.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractInterface_byte_.Method1_DateTime_.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractInterface_byte_.Method1_byte_.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractInterface_byte_.Method1_int_.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractInterface_byte_.Method1_string_.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractInterface_int_.Method1_DateTime_.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractInterface_int_.Method1_byte_.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractInterface_int_.Method1_int_.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractInterface_int_.Method1_string_.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractInterface_string_.Method1_DateTime_.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractInterface_string_.Method1_byte_.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractInterface_string_.Method1_int_.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethod_DateTime_.Method1_DateTime_.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethod_DateTime_.Method1_byte_.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethod_DateTime_.Method1_int_.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethod_DateTime_.Method1_string_.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethod_byte_.Method1_DateTime_.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethod_byte_.Method1_byte_.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethod_byte_.Method1_int_.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethod_byte_.Method1_string_.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethod_int_.Method1_DateTime_.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethod_int_.Method1_byte_.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethod_int_.Method1_int_.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethod_int_.Method1_string_.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethod_string_.Method1_DateTime_.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethod_string_.Method1_byte_.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethod_string_.Method1_int_.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethod_string_.Method1_string_.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/fsharp-deeptail/TailCallLoopGenericClass_DateTime_.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/fsharp-deeptail/TailCallLoopGenericClass_int_.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/fsharp-deeptail/TailCallLoopGenericClass_string_.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/fsharp-deeptail/TailCallLoop_DateTime_.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/fsharp-deeptail/TailCallLoop_int_.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/fsharp-deeptail/mutualTail1IsEven.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/fsharp-deeptail/mutualTail1IsOdd.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/fsharp-deeptail/simpleTail1.il \
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	tailcall/fsharp-deeptail/simpleTail2.il

@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_TRUE@TAILCALL_FSHARP_DEEPTAIL_IL = 
@CROSS_COMPILING_FALSE@@HOST_WASM_TRUE@TAILCALL_FSHARP_DEEPTAIL_IL = 
@CROSS_COMPILING_TRUE@TAILCALL_FSHARP_DEEPTAIL_IL = 
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@tailcall_split_fsharp_SOURCES = tailcall/split-fsharp.cpp
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@split_tailcall_interface_conservestack_SOURCES = split-tailcall-interface-conservestack.cpp
TESTS_IL_SRC = \
	tailcall/2.il	     \
	tailcall/3.il	     \
	tailcall/4.il	     \
	tailcall/fsharp-deeptail.il	     \
	tailcall/fsharp-shallowtail.il	 \
	tailcall/fsharp-shallownotail.il \
	$(TAILCALL_FSHARP_DEEPTAIL_IL) \
	gptail1.il		\
	itail1.il		\
	itaili1.il		\
	ivtail1.il		\
	sirtail1.il		\
	sitail1.il		\
	srtail1.il		\
	stail1.il		\
	tail1.il		\
	taili1.il		\
	vtail1.il		\
	tailcall-virt.il 	\
	tailcall-rgctxa.il 	\
	tailcall-rgctxb.il 	\
	tailcall-rgctxb-static.il \
	tailcall-mrgctx.il 	\
	$(TAILCALL_INTERFACE_CONSERVESTACK_IL) \
	tailcall-interface-justrun.il \
	field-access.il		\
	method-access.il	\
	ldftn-access.il		\
	cpblkTest.il		\
	vbinterface.il		\
	calliTest.il		\
	calliGenericTest.il		\
	ckfiniteTest.il		\
	fault-handler.il		\
	locallocTest.il		\
	initblkTest.il		\
	qt-instance.il		\
	vararg3.il		\
	bug-29859.il		\
	bug-78549.il		\
	static-fields-nonconst.il	\
	reload-at-bb-end.il	\
	test-enum-indstoreil.il	\
	filter-bug.il		\
	even-odd.il		\
	bug-82022.il	\
	vt-sync-method.il	\
	enum_types.il	\
	invalid-token.il	\
	call_missing_method.il	\
	call_missing_class.il	\
	calli_sig_check.il	\
	ldfld_missing_field.il	\
	ldfld_missing_class.il	\
	find-method.2.il	\
	bug-79215.2.il	\
	bug-79956.2.il	\
	bug-327438.2.il \
	bug-387274.2.il	\
	bug-426309.2.il	\
	ldtoken_with_byref_typespec.2.il \
	resolve_method_bug.2.il \
	resolve_field_bug.2.il \
	resolve_type_bug.2.il	\
	generics-sharing-other-exc.2.il	\
	generic-ldobj.2.il	\
	generic-mkrefany.2.il	\
	generic-refanyval.2.il	\
	generic-ldtoken.2.il	\
	generic-ldtoken-method.2.il	\
	generic-ldtoken-field.2.il	\
	generic-tailcall.2.il	\
	generic-tailcall2.2.il	\
	generic-array-exc.2.il	\
	generic-valuetype-newobj2.2.il	\
	generic-valuetype-newobj.2.il	\
	generic-constrained.2.il	\
	generic-type-load-exception.2.il	\
	bug-81466.il	\
	bug457574.il	\
	bug445361.il	\
	bug-463303.il	\
	bug469742.2.il	\
	bug-528055.il	\
	array_load_exception.il \
	bug-481403.il	\
	interface-with-static-method.il	\
	bug-633291.il	\
	delegate-with-null-target.il	\
	bug-318677.il	\
	gsharing-valuetype-layout.il	\
	invalid_generic_instantiation.il \
	bug-45841-fpstack-exceptions.il \
	instance_tailrec.il	\
	dim-constrainedcall.il	\
	dim-constrained3.il	\
	dim-constrained3_gm.il	\
	dim-diamondshape.il	\
	dim-genericmethods.il	\
	dim-methodimpl.il	\
	dim-sharedgenerics.il	\
	dim-simple.il	\
	dim-valuetypes.il \
	dim-nested-types.il \
	dim-generic-interface.il \
	dim-implements-multiple-interfaces.il \
	dim-sealed.il \
	dim-protected-accessibility1.il \
	dim-protected-accessibility2.il \
	dim-reabstraction.il \
	dim-reabstraction-generics.il \
	dim-abstractcall.il \
	twopassvariance.il \
	tailcall-generic-cast-conservestack-il.il \
	tailcall-generic-cast-nocrash-il.il \
	tailcall-member-function-in-valuetype.il \
	tailcall-return-valuetype.il \
	tailcall-valuetype-parameter.il \
	ldfldvt.il \
	newobj-abstract.il \
	invalid-isbyreflike.il \
	custom-modifiers-append.1.il \
	gh-13056_mono_local_cprop_av.il \
	gh-13057_mono_local_emulate_ops_av.il \
	module-cctor-entrypoint.il \
	bug-gh-9706.il \
	localloc-noinit.il \
	calli_native.il


# This test crashes the runtime, even with recent fixes.
#	incorrect-ldvirtftn-read-behind-for-dup.il
TESTS_GSHARED_SRC = \
	generics-sharing.2.cs	\
	shared-generic-methods.2.cs	\
	shared-generic-synchronized.2.cs	\
	generic-initobj.2.cs		\
	generics-sharing-other-exc.2.cs	\
	generic-box.2.cs		\
	generic-unbox.2.cs	\
	generic-delegate.2.cs	\
	generic-sizeof.2.cs	\
	generic-ldobj.2.cs	\
	generic-mkrefany.2.cs			\
	generic-refanyval.2.cs	\
	generic-ldtoken.2.cs			\
	generic-ldtoken-method.2.cs	\
	generic-ldtoken-field.2.cs	\
	generic-virtual.2.cs	\
	generic-tailcall.2.cs			\
	generic-interface-methods.2.cs	\
	generic-array-type.2.cs	\
	generic-method-patching.2.cs	\
	generic-static-methods.2.cs	\
	generic-null-call.2.cs	\
	generic-tailcall2.2.cs			\
	generic-array-exc.2.cs	\
	generic-special.2.cs			\
	generic-special2.2.cs	\
	generic-exceptions.2.cs	\
	generic-delegate2.2.cs		\
	generic-virtual2.2.cs	\
	generic-valuetype-interface.2.cs	\
	generic-valuetype-newobj.2.cs	\
	generic-valuetype-newobj2.2.cs	\
	generic-getgenericarguments.2.cs	\
	generic-synchronized.2.cs	\
	generic-delegate-ctor.2.cs		\
	generic-constrained.2.cs	\
	bug-431413.2.cs			\
	generic-virtual-invoke.2.cs	\
	generic-typedef.2.cs		\
	generic-marshalbyref.2.cs	\
	bug-459285.2.cs	\
	bug-461198.2.cs	\
	generic-sealed-virtual.2.cs	\
	generic-system-arrays.2.cs	\
	generic-stack-traces.2.cs	\
	generic-stack-traces2.2.cs		\
	bug-472600.2.cs	\
	bug-473482.2.cs	\
	bug-473999.2.cs		\
	bug-479763.2.cs				\
	generic-type-load-exception.2.cs	\
	bug-616463.cs	\
	bug-1147.cs	\
	generic-type-builder.2.cs

PLATFORM_DISABLED_TESTS = $(TAILCALL_DISABLED_TESTS_RUN) \
	tailcall-member-function-in-valuetype.exe tailcall-rgctxb.exe \
	$(am__append_14) $(am__append_15) $(am__append_16) \
	$(am__append_17) $(am__append_18) $(am__append_19) \
	$(am__append_20) $(am__append_21) $(am__append_22) \
	$(am__append_23) $(am__append_24) $(am__append_25) \
	$(am__append_26) $(am__append_27) $(am__append_28) \
	$(am__append_33)
PROFILE_DISABLED_TESTS = $(TAILCALL_DISABLED_TESTS_RUN) \
	tailcall-member-function-in-valuetype.exe tailcall-rgctxb.exe \
	$(am__append_29) $(am__append_30) $(am__append_31) \
	$(am__append_32) $(am__append_34) $(am__append_35) \
	$(am__append_36) $(am__append_37) $(am__append_38) \
	$(am__append_39)
REMOTING_DISABLED_TESTS = \
	async-exc-compilation.exe \
	bug-544446.exe \
	context-static.exe \
	remoting1.exe \
	remoting2.exe \
	remoting3.exe \
	remoting5.exe \
	nullable_boxing.2.exe

AOT_DISABLED_TESTS = \
	localloc-noinit.exe \
	constraints-load.exe \
	calli_sig_check.exe

CI_DISABLED_TESTS = \
	main-returns-background-resetabort.exe \
	main-returns-background-abort-resetabort.exe	\
	assemblyresolve_event3.exe \
	finally_guard.exe \
	generic-xdomain.2.exe


# failing tests which we temporarily disable for PRs
# so they don't interfere with other people's work

# FIXME Hybrid Suspend - see https://github.com/mono/mono/issues/9959
# CI_PR_DISABLED_TESTS += sgen-new-threads-collect.exe

# https://github.com/mono/mono/issues/8997

# https://github.com/mono/mono/issues/11392

# https://github.com/mono/mono/issues/11415

# https://github.com/mono/mono/issues/11420

# https://github.com/mono/mono/issues/11417
CI_PR_DISABLED_TESTS = finalizer-thread.exe \
	appdomain-threadpool-unload.exe finalizer-abort.exe \
	process-stress-2.exe process-stress-3.exe $(am__append_40)

# appdomain-threadpool-unload.exe creates 100 appdomains, takes too long with llvm

# https://github.com/mono/mono/issues/6490
LLVM_DISABLED_TESTS = finally_block_ending_in_dead_bb.exe \
	appdomain-threadpool-unload.exe weak-fields.exe
LLVM = $(filter --llvm, $(MONO_ENV_OPTIONS) $(AOT_BUILD_FLAGS))

# The two finalizer tests only work under sgen
# gc-altstack.exe fails under boehm because it has no support for altstack
# bug-459094.exe creates an extremely deep directory tree
# delegate-invoke.exe depends on 929c6bc9b6d76a273f251e6f5dfacac36e9c38bd which was
# reverted.
# bug-Xamarin-5278.exe got broken by 5d26590e79da139a284459299aee95c25f4cd835
# appdomain-thread-abort.exe: https://bugzilla.xamarin.com/show_bug.cgi?id=47054
# abort-try-holes.exe is flaky due to unwinding failure to the finally block when aborting
# appdomain-marshalbyref-assemblyload.exe: https://bugzilla.xamarin.com/show_bug.cgi?id=49308
# threads-init.exe: runs out of system threads
# dim-constrainedcall.exe: fails on dontnet as well (https://github.com/dotnet/coreclr/issues/15353)
#
# tailcall-rgctxb.exe
# tailcall-member-function-in-valuetype.exe
#	Any time we have a byref/out parameter, be it
#	an integer, or valuetype-this, we pessimistically
#	will never tailcall.
#
#	These two cases have valuetype-this.
#	tailcall-rgctxb.exe strives for additional coverage
#	related to generic context, but both tests suffer from
#	the same problem.
#
#	I suggest we insert range checks.
#	If all parameters are outside the frame,
#	do a tailcall. If any are not, regular call.
#
#	It'll be a little bigger and have a slowdown,
#	and a speedup (stack locality speeds things up),
#	and enable code that does not work otherwise.
#
#	Again, tailcall is not just an optimization.
#	It lets code process large data within small stack.
#	If it was just an optimization, desktop CLR would not
#	go so far out of their way to implement it.
#
# Some of the tailcall tests pass native pointers to locals.
#   Mono does not yet allow that.
#   tailcall "i" is either calli, or integer instead of pointer, and the latter sidesteps the matter.
KNOWN_FAILING_TESTS = \
	delegate-async-exception.exe	\
	bug-348522.2.exe	\
	bug-459094.exe \
	delegate-invoke.exe \
	bug-Xamarin-5278.exe \
	appdomain-marshalbyref-assemblyload.exe	\
	abort-try-holes.exe \
	threads-init.exe \
	gptail1.exe \
	itaili1.exe \
	sirtail1.exe \
	srtail1.exe \
	stail1.exe \
	tail1.exe \
	taili1.exe \
	vtail1.exe \
	tailcall-member-function-in-valuetype.exe \
	tailcall-rgctxb.exe

DISABLED_TESTS = $(KNOWN_FAILING_TESTS) $(PLATFORM_DISABLED_TESTS) \
	$(PROFILE_DISABLED_TESTS) $(if $(AOT),$(AOT_DISABLED_TESTS)) \
	$(if $(CI),$(CI_DISABLED_TESTS)) $(if \
	$(CI_PR),$(CI_PR_DISABLED_TESTS)) $(if \
	$(LLVM),$(LLVM_DISABLED_TESTS)) $(am__append_43) \
	$(am__append_44)

# Interpreter does not currently implement tailcall.
# Disable all tailcall tests.
# FIXME

# expected InvalidProgramException not thrown

# Test is too sensitive.
INTERP_DISABLED_TESTS = $(DISABLED_TESTS) gptail1.exe itail1.exe \
	itaili1.exe ivtail1.exe sitail1.exe sirtail1.exe srtail1.exe \
	stail1.exe tail1.exe taili1.exe vtail1.exe \
	tailcall-generic-cast-conservestack-il.exe \
	tailcall-interface-conservestack.exe tailcall-mrgctx.exe \
	tailcall-rgctxa.exe tailcall-rgctxb.exe \
	tailcall-rgctxb-static.exe tailcall-virt.exe \
	tailcall-return-valuetype.exe tailcall/fsharp-deeptail.exe \
	tailcall/2.exe tailcall/3.exe tailcall/4.exe tailcall/8273.exe \
	$(TAILCALL_DISABLED_TESTS_RUN) bug-60843.exe \
	tailcall/fsharp-deeptail/Seq.filter-length1.exe \
	tailcall/fsharp-deeptail/Seq.filter-length2.exe \
	tailcall/fsharp-deeptail/Seq.filter-length3.exe \
	tailcall/fsharp-deeptail/StaticTailCallLoop_DateTime_.exe \
	tailcall/fsharp-deeptail/StaticTailCallLoop_int_.exe \
	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractClass_DateTime_.Method1_DateTime_.exe \
	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractClass_DateTime_.Method1_byte_.exe \
	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractClass_DateTime_.Method1_int_.exe \
	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractClass_DateTime_.Method1_string_.exe \
	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractClass_DatstringeTime_.Method1_string_.exe \
	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractClass_byte_.Method1_DateTime_.exe \
	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractClass_byte_.Method1_byte_.exe \
	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractClass_byte_.Method1_int_.exe \
	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractClass_byte_.Method1_string_.exe \
	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractClass_int_.Method1_DateTime_.exe \
	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractClass_int_.Method1_byte_.exe \
	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractClass_int_.Method1_int_.exe \
	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractClass_int_.Method1_string_.exe \
	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractClass_string_.Method1_DateTime_.exe \
	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractClass_string_.Method1_byte_.exe \
	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractClass_string_.Method1_int_.exe \
	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractInterface_DateTime_.Method1_DateTime_.exe \
	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractInterface_DateTime_.Method1_byte_.exe \
	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractInterface_DateTime_.Method1_int_.exe \
	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractInterface_DateTime_.Method1_string_.exe \
	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractInterface_DatstringeTime_.Method1_string_.exe \
	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractInterface_byte_.Method1_DateTime_.exe \
	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractInterface_byte_.Method1_byte_.exe \
	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractInterface_byte_.Method1_int_.exe \
	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractInterface_byte_.Method1_string_.exe \
	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractInterface_int_.Method1_DateTime_.exe \
	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractInterface_int_.Method1_byte_.exe \
	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractInterface_int_.Method1_int_.exe \
	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractInterface_int_.Method1_string_.exe \
	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractInterface_string_.Method1_DateTime_.exe \
	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractInterface_string_.Method1_byte_.exe \
	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethodAbstractInterface_string_.Method1_int_.exe \
	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethod_DateTime_.Method1_DateTime_.exe \
	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethod_DateTime_.Method1_byte_.exe \
	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethod_DateTime_.Method1_int_.exe \
	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethod_DateTime_.Method1_string_.exe \
	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethod_byte_.Method1_DateTime_.exe \
	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethod_byte_.Method1_byte_.exe \
	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethod_byte_.Method1_int_.exe \
	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethod_byte_.Method1_string_.exe \
	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethod_int_.Method1_DateTime_.exe \
	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethod_int_.Method1_byte_.exe \
	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethod_int_.Method1_int_.exe \
	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethod_int_.Method1_string_.exe \
	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethod_string_.Method1_DateTime_.exe \
	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethod_string_.Method1_byte_.exe \
	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethod_string_.Method1_int_.exe \
	tailcall/fsharp-deeptail/TailCallLoopGenericClassAndMethod_string_.Method1_string_.exe \
	tailcall/fsharp-deeptail/TailCallLoopGenericClass_DateTime_.exe \
	tailcall/fsharp-deeptail/TailCallLoopGenericClass_int_.exe \
	tailcall/fsharp-deeptail/TailCallLoopGenericClass_string_.exe \
	tailcall/fsharp-deeptail/TailCallLoop_DateTime_.exe \
	tailcall/fsharp-deeptail/TailCallLoop_int_.exe \
	tailcall/fsharp-deeptail/mutualTail1IsEven.exe \
	tailcall/fsharp-deeptail/mutualTail1IsOdd.exe \
	tailcall/fsharp-deeptail/simpleTail1.exe \
	tailcall/fsharp-deeptail/simpleTail2.exe \
	tailcall/interface-conservestack/1.exe \
	tailcall/interface-conservestack/10.exe \
	tailcall/interface-conservestack/11.exe \
	tailcall/interface-conservestack/12.exe \
	tailcall/interface-conservestack/13.exe \
	tailcall/interface-conservestack/14.exe \
	tailcall/interface-conservestack/15.exe \
	tailcall/interface-conservestack/16.exe \
	tailcall/interface-conservestack/17.exe \
	tailcall/interface-conservestack/18.exe \
	tailcall/interface-conservestack/19.exe \
	tailcall/interface-conservestack/2.exe \
	tailcall/interface-conservestack/20.exe \
	tailcall/interface-conservestack/21.exe \
	tailcall/interface-conservestack/22.exe \
	tailcall/interface-conservestack/23.exe \
	tailcall/interface-conservestack/24.exe \
	tailcall/interface-conservestack/25.exe \
	tailcall/interface-conservestack/26.exe \
	tailcall/interface-conservestack/27.exe \
	tailcall/interface-conservestack/28.exe \
	tailcall/interface-conservestack/29.exe \
	tailcall/interface-conservestack/3.exe \
	tailcall/interface-conservestack/30.exe \
	tailcall/interface-conservestack/31.exe \
	tailcall/interface-conservestack/32.exe \
	tailcall/interface-conservestack/33.exe \
	tailcall/interface-conservestack/34.exe \
	tailcall/interface-conservestack/35.exe \
	tailcall/interface-conservestack/36.exe \
	tailcall/interface-conservestack/37.exe \
	tailcall/interface-conservestack/38.exe \
	tailcall/interface-conservestack/39.exe \
	tailcall/interface-conservestack/4.exe \
	tailcall/interface-conservestack/40.exe \
	tailcall/interface-conservestack/41.exe \
	tailcall/interface-conservestack/42.exe \
	tailcall/interface-conservestack/43.exe \
	tailcall/interface-conservestack/44.exe \
	tailcall/interface-conservestack/45.exe \
	tailcall/interface-conservestack/46.exe \
	tailcall/interface-conservestack/47.exe \
	tailcall/interface-conservestack/48.exe \
	tailcall/interface-conservestack/49.exe \
	tailcall/interface-conservestack/5.exe \
	tailcall/interface-conservestack/50.exe \
	tailcall/interface-conservestack/51.exe \
	tailcall/interface-conservestack/52.exe \
	tailcall/interface-conservestack/53.exe \
	tailcall/interface-conservestack/6.exe \
	tailcall/interface-conservestack/7.exe \
	tailcall/interface-conservestack/8.exe \
	tailcall/interface-conservestack/9.exe calli_sig_check.exe \
	localloc-noinit.exe $(am__append_41) $(am__append_42) \
	$(am__append_45)
TESTS_CS = $(filter-out $(DISABLED_TESTS),$(TESTS_CS_SRC:.cs=.exe))
TESTS_IL = $(filter-out $(DISABLED_TESTS),$(TESTS_IL_SRC:.il=.exe))
TESTS_BENCH = $(filter-out $(DISABLED_TESTS),$(TESTS_BENCH_SRC:.cs=.exe))
TESTS_STRESS = $(filter-out $(DISABLED_TESTS),$(TESTS_STRESS_SRC:.cs=.exe))
TESTS_GSHARED = $(filter-out $(DISABLED_TESTS),$(TESTS_GSHARED_SRC:.cs=.exe))
TESTS_TAILCALL_COMPILE = $(filter-out $(TAILCALL_DISABLED_TESTS_COMPILE),$(TEST_TAILCALL_CS_SRC:.cs=.exe) $(TEST_TAILCALL_IL_SRC:.il=.exe))
TESTS_TAILCALL_RUN = $(filter-out $(TAILCALL_DISABLED_TESTS_RUN),$(TESTS_TAILCALL_COMPILE))
@FULL_AOT_TESTS_TRUE@TESTSAOT_CS = $(TESTS_CS:.exe=.exe$(PLATFORM_AOT_SUFFIX))
@HYBRID_AOT_TESTS_TRUE@TESTSAOT_CS = $(TESTS_CS:.exe=.exe$(PLATFORM_AOT_SUFFIX))
@FULL_AOT_TESTS_TRUE@TESTSAOT_IL = $(TESTS_IL:.exe=.exe$(PLATFORM_AOT_SUFFIX))
@HYBRID_AOT_TESTS_TRUE@TESTSAOT_IL = $(TESTS_IL:.exe=.exe$(PLATFORM_AOT_SUFFIX))
@FULL_AOT_TESTS_TRUE@TESTSAOT_BENCH = $(TESTS_BENCH:.exe=.exe$(PLATFORM_AOT_SUFFIX))
@HYBRID_AOT_TESTS_TRUE@TESTSAOT_BENCH = $(TESTS_BENCH:.exe=.exe$(PLATFORM_AOT_SUFFIX))
@FULL_AOT_TESTS_TRUE@TESTSAOT_STRESS = $(TESTS_STRESS:.exe=.exe$(PLATFORM_AOT_SUFFIX))
@HYBRID_AOT_TESTS_TRUE@TESTSAOT_STRESS = $(TESTS_STRESS:.exe=.exe$(PLATFORM_AOT_SUFFIX))
@FULL_AOT_TESTS_TRUE@TESTSAOT_GSHARED = $(TESTS_GSHARED:.exe=.exe$(PLATFORM_AOT_SUFFIX))
@HYBRID_AOT_TESTS_TRUE@TESTSAOT_GSHARED = $(TESTS_GSHARED:.exe=.exe$(PLATFORM_AOT_SUFFIX))
# AOT tests are run by running the non-AOT files. Runtime probes for the AOT file.
@FULL_AOT_TESTS_TRUE@TESTSAOT_TAILCALL = $(TESTS_TAILCALL_COMPILE:.exe=.exe$(PLATFORM_AOT_SUFFIX))
@HYBRID_AOT_TESTS_TRUE@TESTSAOT_TAILCALL = $(TESTS_TAILCALL_COMPILE:.exe=.exe$(PLATFORM_AOT_SUFFIX))

# Generated tests for runtime invoke

# Tests for the Mono lldb plugin
EXTRA_DIST = common_mixed.mk test-driver test-runner.cs \
	$(TESTS_CS_SRC) $(TESTS_IL_SRC) $(TESTS_BENCH_SRC) \
	$(TESTS_STRESS_SRC) stress-runner.pl array-coop-1.cs \
	array-coop-2.cs array-coop-bigvt.cs array-coop-int.cs \
	array-coop-smallvt.cs array-coop-bigvt.sh \
	array-coop-smallvt.sh array-coop-int.sh \
	tailcall-interface-conservestack.il \
	tailcall/fsharp-deeptail.il $(TEST_TAILCALL_CS_SRC) \
	$(TEST_TAILCALL_IL_SRC) load-missing.il t-missing.cs \
	load-exceptions.cs test-multi-netmodule-1-netmodule.cs \
	test-multi-netmodule-2-dll1.cs test-multi-netmodule-3-dll2.cs \
	test-multi-netmodule-4-exe.cs custom-attr-errors.cs \
	custom-attr-errors-lib.cs reflection-load-with-context-lib.cs \
	reflection-load-with-context-second-lib.cs \
	reflection-load-with-context.cs debug-casts.cs sgen-bridge.cs \
	sgen-descriptors.cs sgen-gshared-vtype.cs \
	sgen-bridge-major-fragmentation.cs sgen-domain-unload.cs \
	sgen-weakref-stress.cs sgen-cementing-stress.cs \
	sgen-case-23400.cs finalizer-wait.cs critical-finalizers.cs \
	sgen-domain-unload-2.cs sgen-suspend.cs \
	sgen-new-threads-dont-join-stw.cs \
	sgen-new-threads-dont-join-stw-2.cs \
	sgen-new-threads-collect.cs sgen-bridge-xref.cs bug-17590.cs \
	sgen-toggleref.cs sgen-bridge-gchandle.cs \
	gen-runtime-invoke.cs make-imt-test.cs \
	test-inline-call-stack-library.cs test-inline-call-stack.cs \
	unhandled-exception-base-configuration.config \
	unhandled-exception-legacy-configuration.config \
	appdomain-unload.exe.config unhandled-exception-test-case.2.cs \
	unhandled-exception-test-runner.2.cs event-il.il \
	module-cctor.il TestingReferenceAssembly.cs \
	TestingReferenceReferenceAssembly.cs \
	assemblyresolve_TestBase.cs assemblyresolve_Test.cs \
	assemblyresolve_asm.cs assemblyresolve_event5_label.cs \
	assemblyresolve_event5_helper.cs bug-81673-interface.cs \
	bug-36848-a.cs bug-81691-a.cs bug-81691-b.cs bug-81466-lib.il \
	bug-324535-il.il custom-modifiers.2.cs custom-modifiers-lib.il \
	bug-382986-lib.cs bug-17537-helper.cs coreclr-security.cs \
	generic-unboxing.2.il generic-boxing.2.il generic-unbox.2.cs \
	generic-box.2.cs generic-delegate2.2.cs \
	generic-delegate2-lib.2.il \
	appdomain-marshalbyref-assemblyload-MidAssembly.cs \
	appdomain-marshalbyref-assemblyload-LeafAssembly.cs \
	assembly-load-dir1/Lib.cs assembly-load-dir2/Lib.cs \
	assembly-load-dir1/LibStrongName.cs \
	assembly-load-dir2/LibStrongName.cs \
	assembly-loadfrom-bindingredirect.exe.config \
	assembly-loadfile-bindingredirect.exe.config \
	assembly-load-bytes-bindingredirect.exe.config \
	assembly-refonly-load-bytes-bindingredirect.exe.config \
	assembly-load-dir1/LibSimpleName.cs \
	assembly-load-dir2/LibSimpleName.cs assembly-dep-simplename.cs \
	async-exceptions.cs modules.cs modules-m1.cs \
	threadpool-in-processexit.cs \
	threadpool-in-processexit.exe.stdout.expected \
	$(TESTS_UNHANDLED_EXCEPTION_1_SRC) \
	$(TESTS_UNHANDLED_EXCEPTION_255_SRC) appdomain-loader.cs \
	appdomain-tester.cs console-output.cs \
	console-output.exe.stderr.expected \
	console-output.exe.stdout.expected $(TESTS_STRESS_PROCESS_SRC) \
	test_lldb.py test-lldb.cs $(INTERNALSVISIBLETO_TEST_SRC) \
	$(INTERNALSVISIBLETO_TEST_LIB_SRC) \
	internalsvisibleto-runtimetest.cs \
	internalsvisibleto-compilertest.cs \
	internalsvisibleto-library.cs internalsvisibleto-2048.snk \
	weakattribute.cs null-blob-null-blob-assm.il null-blob-ref.il \
	null-blob-tgt.cs
@FULL_AOT_INTERP_TESTS_FALSE@@FULL_AOT_TESTS_FALSE@@HYBRID_AOT_TESTS_FALSE@TEST_DRIVER_HARD_KILL_FEATURE = -r:$(CLASS)/Mono.Posix.dll
@FULL_AOT_TESTS_FALSE@@HYBRID_AOT_TESTS_FALSE@TEST_DRIVER_DEPEND = TestDriver.dll
@FULL_AOT_TESTS_FALSE@@HYBRID_AOT_TESTS_TRUE@TEST_DRIVER_DEPEND = TestDriver.dll$(PLATFORM_AOT_SUFFIX)
@FULL_AOT_TESTS_TRUE@TEST_DRIVER_DEPEND = TestDriver.dll$(PLATFORM_AOT_SUFFIX)
# The following regexp describes all symbols that start with "g_" but are not part of eglibc.
# The optional underscore prepending symbol names may or may not appear depending on the
# system and the state of the leading-underscore compiler flag.
OK_G_SYMBOLS = '\<_?g_(s?list_(pre|ap)pend_(image|mempool)|concat_dir_and_file|Ctoc)\>'
TESTS_REGULAR = $(TESTS_CS) $(TESTS_IL) $(TESTS_BENCH)
TESTS_INCL_DEPS = $(shell find . -type f -name "*.exe" -o -name "*.dll" -o -name "*.netmodule" -o -name "*.config")
TESTS_SGEN_REGULAR_SRC = \
	finalizer-wait.cs	\
	critical-finalizers.cs	\
	sgen-descriptors.cs	\
	sgen-gshared-vtype.cs	\
	sgen-weakref-stress.cs	\
	sgen-cementing-stress.cs	\
	sgen-case-23400.cs	\
	sgen-new-threads-dont-join-stw.cs	\
	sgen-new-threads-dont-join-stw-2.cs	\
	sgen-new-threads-collect.cs	\
	gc-graystack-stress.cs	\
	bug-17590.cs	\
	sgen-domain-unload.cs	\
	sgen-domain-unload-2.cs

TESTS_SGEN_REGULAR = $(filter-out $(DISABLED_TESTS),$(TESTS_SGEN_REGULAR_SRC:.cs=.exe))
@FULL_AOT_TESTS_TRUE@TESTSAOT_SGEN_REGULAR = $(TESTS_SGEN_REGULAR:.exe=.exe$(PLATFORM_AOT_SUFFIX))
@HYBRID_AOT_TESTS_TRUE@TESTSAOT_SGEN_REGULAR = $(TESTS_SGEN_REGULAR:.exe=.exe$(PLATFORM_AOT_SUFFIX))

# The .cs tests are not interesting initially but should be later.

#FIXME
#coreclr/tailcall/CoreMangLib/system/span/SlowTailCallArgs.cs(124,13): error CS8107: Feature 'ref structs' is not available in C# 7.0. Please use language version 7.2 or greater.
#coreclr/tailcall/CoreMangLib/cti/system/reflection/emit/opcodes/opcodestailcall.cs(17,9): error CS0103: The name 'TestLibrary' does not exist in the current context
TEST_TAILCALL_CS_SRC = \
	tailcall/coreclr/JIT/CodeGenBringUpTests/RecursiveTailCall.cs \
	tailcall/coreclr/JIT/Methodical/tailcall/Desktop/thread-race.cs \
	tailcall/coreclr/JIT/Methodical/tailcall_v4/delegateParamCallTarget.cs \
	tailcall/coreclr/JIT/opt/FastTailCall/FastTailCallCandidates.cs \
	tailcall/coreclr/JIT/opt/FastTailCall/FastTailCallInlining.cs \
	tailcall/coreclr/JIT/opt/FastTailCall/GitHubIssue12479.cs \
	tailcall/coreclr/JIT/opt/FastTailCall/StackFixup.cs \
	tailcall/coreclr/JIT/opt/FastTailCall/StructPassingSimple.cs


# At these locations we have .cs and .il.
# The .il is clearly derived from the .cs, such as by running
# csc + ildasm + edit.
# The .cs is opportunistically optimizable, see https://github.com/mono/mono/issues/7259.
# But for now we only want the .il.
#tailcall/coreclr/JIT/Methodical/Boxing/misc/tailjump.cs
#tailcall/coreclr/JIT/Methodical/Invoke/SEH/catchfinally_tail.cs
#tailcall/coreclr/JIT/Methodical/nonvirtualcall/tailcall.cs
#tailcall/coreclr/JIT/Methodical/tailcall/compat_i2_bool.il
#tailcall/coreclr/JIT/Methodical/tailcall/compat_i4_i1.il
#tailcall/coreclr/JIT/Methodical/tailcall/compat_i4_u.il
#tailcall/coreclr/JIT/Methodical/tailcall/compat_i_u2.il
#tailcall/coreclr/JIT/Methodical/tailcall/compat_r4_r8.il
#tailcall/coreclr/JIT/Methodical/tailcall/compat_r8_r4.il
TEST_TAILCALL_IL_SRC = \
	tailcall/coreclr/JIT/opt/Tailcall/TailcallVerifyWithPrefix.il \
	tailcall/coreclr/JIT/opt/Tailcall/TailcallVerifyTransparentLibraryWithPrefix.il \
	tailcall/coreclr/JIT/opt/Tailcall/TailcallVerifyVerifiableLibraryWithPrefix.il \
	tailcall/coreclr/JIT/Directed/coverage/importer/badtailcall.il \
	tailcall/coreclr/JIT/Directed/coverage/importer/Desktop/badtailcall.il \
	tailcall/coreclr/JIT/Directed/IL/mutualrecur-tailcall/MutualRecur-TailCall.il \
	tailcall/coreclr/JIT/Directed/IL/PInvokeTail/tailwinapi.il \
	tailcall/coreclr/JIT/Directed/IL/Tailcall/JitTailcall1.il \
	tailcall/coreclr/JIT/Directed/IL/Tailcall/Jittailcall2.il \
	tailcall/coreclr/JIT/Directed/pinvoke/tail.il \
	tailcall/coreclr/JIT/Directed/tailcall/tailcall.il \
	tailcall/coreclr/JIT/IL_Conformance/Old/Base/tailcall.il \
	tailcall/coreclr/JIT/Methodical/Boxing/boxunbox/tailcall.il \
	tailcall/coreclr/JIT/Methodical/Boxing/misc/tailjump.il \
	tailcall/coreclr/JIT/Methodical/Invoke/fptr/recurse_tail_call.il \
	tailcall/coreclr/JIT/Methodical/Invoke/fptr/recurse_tail_calli.il \
	tailcall/coreclr/JIT/Methodical/Invoke/SEH/catchfault_tail.il \
	tailcall/coreclr/JIT/Methodical/Invoke/SEH/catchfinally_tail.il \
	tailcall/coreclr/JIT/Methodical/nonvirtualcall/tailcall.il \
	tailcall/coreclr/JIT/Methodical/tailcall/compat_obj.il \
	tailcall/coreclr/JIT/Methodical/tailcall/compat_v.il \
	tailcall/coreclr/JIT/Methodical/tailcall/deep_array.il \
	tailcall/coreclr/JIT/Methodical/tailcall/deep_array_nz.il \
	tailcall/coreclr/JIT/Methodical/tailcall/deep_gc.il \
	tailcall/coreclr/JIT/Methodical/tailcall/deep_inst.il \
	tailcall/coreclr/JIT/Methodical/tailcall/deep_value.il \
	tailcall/coreclr/JIT/Methodical/tailcall/deep_virt.il \
	tailcall/coreclr/JIT/Methodical/tailcall/gcval.il \
	tailcall/coreclr/JIT/Methodical/tailcall/gcval_nested.il \
	tailcall/coreclr/JIT/Methodical/tailcall/gcval_sideeffect.il \
	tailcall/coreclr/JIT/Methodical/tailcall/pointer.il \
	tailcall/coreclr/JIT/Methodical/tailcall/pointer_i.il \
	tailcall/coreclr/JIT/Methodical/tailcall/recurse_ep.il \
	tailcall/coreclr/JIT/Methodical/tailcall/recurse_ep_void.il \
	tailcall/coreclr/JIT/Methodical/tailcall/reference_i.il \
	tailcall/coreclr/JIT/Methodical/tailcall/test_2a.il \
	tailcall/coreclr/JIT/Methodical/tailcall/test_2b.il \
	tailcall/coreclr/JIT/Methodical/tailcall/test_2c.il \
	tailcall/coreclr/JIT/Methodical/tailcall/test_3b.il \
	tailcall/coreclr/JIT/Methodical/tailcall/test_implicit.il \
	tailcall/coreclr/JIT/Methodical/tailcall/test_mutual_rec.il \
	tailcall/coreclr/JIT/Methodical/tailcall/test_switch.il \
	tailcall/coreclr/JIT/Methodical/tailcall/test_virt.il \
	tailcall/coreclr/JIT/Methodical/tailcall/test_void.il \
	tailcall/coreclr/JIT/Methodical/tailcall_v4/delegateTail.il \
	tailcall/coreclr/JIT/Methodical/tailcall_v4/hijacking.il \
	tailcall/coreclr/JIT/Methodical/tailcall_v4/smallFrame.il \
	tailcall/coreclr/JIT/Methodical/tailcall_v4/tailcall_AV.il \
	tailcall/coreclr/JIT/opt/ETW/TailCallCases.il \
	tailcall/coreclr/JIT/Regression/VS-ia64-JIT/V1.2-M02/b102844/tailcallcalli.il

TESTS_SGEN_TOGGLEREF_SRC = \
	sgen-toggleref.cs

TESTS_SGEN_TOGGLEREF = $(filter-out $(DISABLED_TESTS),$(TESTS_SGEN_TOGGLEREF_SRC:.cs=.exe))
@FULL_AOT_TESTS_TRUE@TESTSAOT_SGEN_TOGGLEREF = $(TESTS_SGEN_TOGGLEREF:.exe=.exe$(PLATFORM_AOT_SUFFIX))
@HYBRID_AOT_TESTS_TRUE@TESTSAOT_SGEN_TOGGLEREF = $(TESTS_SGEN_TOGGLEREF:.exe=.exe$(PLATFORM_AOT_SUFFIX))
TESTS_SGEN_BRIDGE_SRC = \
	sgen-bridge.cs	\
	sgen-bridge-major-fragmentation.cs

TESTS_SGEN_BRIDGE = $(filter-out $(DISABLED_TESTS),$(TESTS_SGEN_BRIDGE_SRC:.cs=.exe))
@FULL_AOT_TESTS_TRUE@TESTSAOT_SGEN_BRIDGE = $(TESTS_SGEN_BRIDGE:.exe=.exe$(PLATFORM_AOT_SUFFIX))
@HYBRID_AOT_TESTS_TRUE@TESTSAOT_SGEN_BRIDGE = $(TESTS_SGEN_BRIDGE:.exe=.exe$(PLATFORM_AOT_SUFFIX))
TESTS_SGEN_BRIDGE2_SRC = \
	sgen-bridge-xref.cs

TESTS_SGEN_BRIDGE2 = $(filter-out $(DISABLED_TESTS),$(TESTS_SGEN_BRIDGE2_SRC:.cs=.exe))
@FULL_AOT_TESTS_TRUE@TESTSAOT_SGEN_BRIDGE2 = $(TESTS_SGEN_BRIDGE2:.exe=.exe$(PLATFORM_AOT_SUFFIX))
@HYBRID_AOT_TESTS_TRUE@TESTSAOT_SGEN_BRIDGE2 = $(TESTS_SGEN_BRIDGE2:.exe=.exe$(PLATFORM_AOT_SUFFIX))
TESTS_SGEN_BRIDGE3_SRC = \
	sgen-bridge-gchandle.cs

TESTS_SGEN_BRIDGE3 = $(filter-out $(DISABLED_TESTS),$(TESTS_SGEN_BRIDGE3_SRC:.cs=.exe))
@FULL_AOT_TESTS_TRUE@TESTSAOT_SGEN_BRIDGE3 = $(TESTS_SGEN_BRIDGE3:.exe=.exe$(PLATFORM_AOT_SUFFIX))
@HYBRID_AOT_TESTS_TRUE@TESTSAOT_SGEN_BRIDGE3 = $(TESTS_SGEN_BRIDGE3:.exe=.exe$(PLATFORM_AOT_SUFFIX))
TESTS_SGEN_OOM_SRC = \
	sgen-oom-cementing-stress.cs	\
	sgen-oom-new-threads-dont-join-stw-2.cs	\
	sgen-oom-bridge-major-fragmentation.cs \
	gc-oom-handling.cs	\
	gc-oom-handling2.cs

TESTS_SGEN_OOM = $(filter-out $(DISABLED_TESTS),$(TESTS_SGEN_OOM_SRC:.cs=.exe))
@FULL_AOT_TESTS_TRUE@TESTSAOT_SGEN_OOM = $(TESTS_SGEN_OOM:.exe=.exe$(PLATFORM_AOT_SUFFIX))
@HYBRID_AOT_TESTS_TRUE@TESTSAOT_SGEN_OOM = $(TESTS_SGEN_OOM:.exe=.exe$(PLATFORM_AOT_SUFFIX))
@HOST_WIN32_FALSE@AOT_CONFIGURATIONS = \
@HOST_WIN32_FALSE@	"|regular"	\
@HOST_WIN32_FALSE@	"--gc=boehm|boehm"

@HOST_WIN32_TRUE@AOT_CONFIGURATIONS = \
@HOST_WIN32_TRUE@	"|regular"


#LLVM crashes, got to fix it first.
#	"--llvm|llvm"	\
#	"--llvm --gc=boehm|llvm+boehm"
AOT_TEMP_DIR = $(top_builddir)/mono/tests/aot-tmp

# tests that expect a 1 exit code
TESTS_UNHANDLED_EXCEPTION_1_SRC = \
	unhandled-exception-1.cs	\
	unhandled-exception-9.cs


# tests that expect a 255 exit code
TESTS_UNHANDLED_EXCEPTION_255_SRC = \
	unhandled-exception-2.cs	\
	unhandled-exception-3.cs	\
	unhandled-exception-4.cs	\
	unhandled-exception-5.cs	\
	unhandled-exception-6.cs	\
	unhandled-exception-7.cs	\
	unhandled-exception-8.cs	\
	threadpool-exceptions2.cs	\
	threadpool-exceptions5.cs

TESTS_UNHANDLED_EXCEPTION_1 = $(filter-out $(DISABLED_TESTS),$(TESTS_UNHANDLED_EXCEPTION_1_SRC:.cs=.exe))
TESTS_UNHANDLED_EXCEPTION_255 = $(filter-out $(DISABLED_TESTS),$(TESTS_UNHANDLED_EXCEPTION_255_SRC:.cs=.exe))
@FULL_AOT_TESTS_TRUE@TESTSAOT_UNHANDLED_EXCEPTION_1 = $(TESTS_UNHANDLED_EXCEPTION_1:.exe=.exe$(PLATFORM_AOT_SUFFIX))
@HYBRID_AOT_TESTS_TRUE@TESTSAOT_UNHANDLED_EXCEPTION_1 = $(TESTS_UNHANDLED_EXCEPTION_1:.exe=.exe$(PLATFORM_AOT_SUFFIX))
@FULL_AOT_TESTS_TRUE@TESTSAOT_UNHANDLED_EXCEPTION_255 = $(TESTS_UNHANDLED_EXCEPTION_255:.exe=.exe$(PLATFORM_AOT_SUFFIX))
@HYBRID_AOT_TESTS_TRUE@TESTSAOT_UNHANDLED_EXCEPTION_255 = $(TESTS_UNHANDLED_EXCEPTION_255:.exe=.exe$(PLATFORM_AOT_SUFFIX))
TESTS_STRESS_PROCESS_SRC = \
		process-stress-1.cs	\
		process-stress-2.cs	\
		process-stress-3.cs	\
		process-leak.cs

TESTS_STRESS_PROCESS = $(filter-out $(DISABLED_TESTS),$(TESTS_STRESS_PROCESS_SRC:.cs=.exe))
@FULL_AOT_TESTS_TRUE@TESTSAOT_STRESS_PROCESS = $(TESTS_STRESS_PROCESS:.exe=.exe$(PLATFORM_AOT_SUFFIX))
@HYBRID_AOT_TESTS_TRUE@TESTSAOT_STRESS_PROCESS = $(TESTS_STRESS_PROCESS:.exe=.exe$(PLATFORM_AOT_SUFFIX))
@ENABLE_MSVC_ONLY_FALSE@noinst_LTLIBRARIES = libtest.la
@ENABLE_MSVC_ONLY_FALSE@AM_CPPFLAGS = $(GLIB_CFLAGS)

# gcc-3.4.4 emits incorrect code when making indirect calls to stdcall functions using a tail call
# This shows up when compiling mono_test_marshal_delegate ()
@ENABLE_MSVC_ONLY_FALSE@@HOST_WIN32_TRUE@libtest_la_CFLAGS = -fno-optimize-sibling-calls
@ENABLE_MSVC_ONLY_FALSE@@HOST_WIN32_FALSE@libtest_la_LDFLAGS = -no-undefined -rpath `pwd`
# the exported names created by gcc for stdcall functions are missing the leading _, so MS.NET
# can't find them. So we use --kill-at to remove the @ suffix as well.
@ENABLE_MSVC_ONLY_FALSE@@HOST_WIN32_TRUE@libtest_la_LDFLAGS = -no-undefined -rpath `pwd` -Wl,--kill-at
@ENABLE_MSVC_ONLY_FALSE@libtest_la_SOURCES = libtest.c
@ENABLE_MSVC_ONLY_FALSE@libtest_la_LIBADD = $(top_builddir)/mono/eglib/libeglib.la
INTERNALSVISIBLETO_TEST_SRC = \
	internalsvisibleto-runtimetest.cs \
	internalsvisibleto-compilertest.cs

INTERNALSVISIBLETO_TEST_LIB_SRC = \
	internalsvisibleto-library.cs

INTERNALSVISIBLETO_TEST_LIBS = \
	internalsvisibleto-correctcase.dll \
	internalsvisibleto-wrongcase.dll \
	internalsvisibleto-correctcase-2.dll \
	internalsvisibleto-wrongcase-2.dll \
	internalsvisibleto-correctcase-sign2048.dll \
	internalsvisibleto-wrongcase-sign2048.dll \
	internalsvisibleto-correctcase-2-sign2048.dll \
	internalsvisibleto-wrongcase-2-sign2048.dll

INTERNALSVISIBLETO_TEST = \
	$(INTERNALSVISIBLETO_TEST_SRC:.cs=.exe) \
	$(INTERNALSVISIBLETO_TEST_SRC:.cs=-sign2048.exe)

@FULL_AOT_TESTS_TRUE@INTERNALSVISIBLETO_TESTAOT = \
@FULL_AOT_TESTS_TRUE@	$(INTERNALSVISIBLETO_TEST:.exe=.exe$(PLATFORM_AOT_SUFFIX))

@HYBRID_AOT_TESTS_TRUE@INTERNALSVISIBLETO_TESTAOT = \
@HYBRID_AOT_TESTS_TRUE@	$(INTERNALSVISIBLETO_TEST:.exe=.exe$(PLATFORM_AOT_SUFFIX))

@FULL_AOT_TESTS_TRUE@INTERNALSVISIBLETO_TESTAOT_LIBS = \
@FULL_AOT_TESTS_TRUE@	$(INTERNALSVISIBLETO_TEST_LIBS:.dll=.dll$(PLATFORM_AOT_SUFFIX))

@HYBRID_AOT_TESTS_TRUE@INTERNALSVISIBLETO_TESTAOT_LIBS = \
@HYBRID_AOT_TESTS_TRUE@	$(INTERNALSVISIBLETO_TEST_LIBS:.dll=.dll$(PLATFORM_AOT_SUFFIX))

CLEANFILES = $(TESTS_REGULAR) $(TESTS_STRESS) $(TESTSAOT_CS) \
	$(TESTSAOT_IL) $(TESTSAOT_BENCH) $(TESTSAOT_STRESS) *.dll \
	*.stdout *.aotlog *.exe stest.dat LeafAssembly.dll \
	MidAssembly.dll appdomain-marshalbyref-assemblyload2/*.dll \
	$(TESTS_TAILCALL_COMPILE) $(TESTSAOT_TAILCALL) \
	$(BUILT_SOURCES)
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-recursive

.SUFFIXES:
.SUFFIXES: .c .cpp .lo .o .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign mono/tests/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign mono/tests/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
tests-config: $(top_builddir)/config.status $(srcdir)/tests-config.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

libtest.la: $(libtest_la_OBJECTS) $(libtest_la_DEPENDENCIES) $(EXTRA_libtest_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libtest_la_LINK) $(am_libtest_la_rpath) $(libtest_la_OBJECTS) $(libtest_la_LIBADD) $(LIBS)

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

split-tailcall-interface-conservestack$(EXEEXT): $(split_tailcall_interface_conservestack_OBJECTS) $(split_tailcall_interface_conservestack_DEPENDENCIES) $(EXTRA_split_tailcall_interface_conservestack_DEPENDENCIES) 
	@rm -f split-tailcall-interface-conservestack$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(split_tailcall_interface_conservestack_OBJECTS) $(split_tailcall_interface_conservestack_LDADD) $(LIBS)
tailcall/$(am__dirstamp):
	@$(MKDIR_P) tailcall
	@: > tailcall/$(am__dirstamp)
tailcall/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) tailcall/$(DEPDIR)
	@: > tailcall/$(DEPDIR)/$(am__dirstamp)
tailcall/split-fsharp.$(OBJEXT): tailcall/$(am__dirstamp) \
	tailcall/$(DEPDIR)/$(am__dirstamp)

tailcall/split-fsharp$(EXEEXT): $(tailcall_split_fsharp_OBJECTS) $(tailcall_split_fsharp_DEPENDENCIES) $(EXTRA_tailcall_split_fsharp_DEPENDENCIES) tailcall/$(am__dirstamp)
	@rm -f tailcall/split-fsharp$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(tailcall_split_fsharp_OBJECTS) $(tailcall_split_fsharp_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f tailcall/*.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libtest_la-libtest.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/split-tailcall-interface-conservestack.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tailcall/$(DEPDIR)/split-fsharp.Po@am__quote@

.c.o:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ $<

.c.obj:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
@am__fastdepCC_TRUE@	$(LTCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LTCOMPILE) -c -o $@ $<

libtest_la-libtest.lo: libtest.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtest_la_CFLAGS) $(CFLAGS) -MT libtest_la-libtest.lo -MD -MP -MF $(DEPDIR)/libtest_la-libtest.Tpo -c -o libtest_la-libtest.lo `test -f 'libtest.c' || echo '$(srcdir)/'`libtest.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libtest_la-libtest.Tpo $(DEPDIR)/libtest_la-libtest.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='libtest.c' object='libtest_la-libtest.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtest_la_CFLAGS) $(CFLAGS) -c -o libtest_la-libtest.lo `test -f 'libtest.c' || echo '$(srcdir)/'`libtest.c

.cpp.o:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
	-rm -rf tailcall/.libs tailcall/_libs

# This directory's subdirectories are mostly independent; you can cd
# into them and run 'make' without going through this Makefile.
# To change the values of 'make' variables: instead of editing Makefiles,
# (1) if the variable is set in 'config.status', edit 'config.status'
#     (which will cause the Makefiles to be regenerated when you run 'make');
# (2) otherwise, pass the desired values on the 'make' command line.
$(am__recursive_targets):
	@fail=; \
	if $(am__make_keepgoing); then \
	  failcom='fail=yes'; \
	else \
	  failcom='exit 1'; \
	fi; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"
test-local: 
test-bundle-local: 

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-recursive
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-recursive

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-recursive

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    $(am__make_dryrun) \
	      || test -d "$(distdir)/$$subdir" \
	      || $(MKDIR_P) "$(distdir)/$$subdir" \
	      || exit 1; \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) check-local
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-recursive
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS)
installdirs: installdirs-recursive
installdirs-am:
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f tailcall/$(DEPDIR)/$(am__dirstamp)
	-rm -f tailcall/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-recursive

clean-am: clean-generic clean-libtool clean-noinstLTLIBRARIES \
	clean-noinstPROGRAMS mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR) tailcall/$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am:

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am:

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR) tailcall/$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

test: test-recursive

test-am: test-local

test-bundle: test-bundle-recursive

test-bundle-am: test-bundle-local

uninstall-am:

.MAKE: $(am__recursive_targets) all check check-am install install-am \
	install-strip

.PHONY: $(am__recursive_targets) CTAGS GTAGS TAGS all all-am check \
	check-am check-local clean clean-generic clean-libtool \
	clean-noinstLTLIBRARIES clean-noinstPROGRAMS cscopelist-am \
	ctags ctags-am distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs installdirs-am maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-am test-am test-bundle-am test-bundle-local \
	test-local uninstall uninstall-am

.PRECIOUS: Makefile


check-local:
	ok=:; \
	$(MAKE) test-tailcall || ok=false; \
	if test x$(IGNORE_TEST_JIT) == x; then $(MAKE) test-jit || ok=false; fi; \
	$(MAKE) test-generic-sharing || ok=false; \
	$(MAKE) test-type-load || ok=false; \
	$(MAKE) test-multi-netmodule || ok=false; \
	$(MAKE) test-cattr-type-load || ok=false; \
	$(MAKE) test-reflection-load-with-context || ok=false; \
	$(MAKE) test-platform || ok=false; \
	$(MAKE) test-console-output || ok=false; \
	$(MAKE) test-env-options || ok=false; \
	$(MAKE) test-unhandled-exception-2 || ok=false; \
	$(MAKE) test-appdomain-unload || ok=false; \
	$(MAKE) test-process-stress || ok=false; \
	$(MAKE) test-pedump || ok=false; \
	$(MAKE) test-internalsvisibleto || ok=false; \
	$(MAKE) rm-empty-logs || ok=false; \
	$(MAKE) runtest-gac-loading || ok=false; \
	$(MAKE) runtest-assembly-load-reference || ok=false; \
	$$ok

array-coop-bigvt.cs: array-coop-bigvt.sh array-coop-1.cs array-coop-2.cs
	 $(srcdir)/array-coop-bigvt.sh $(srcdir) > $@

array-coop-smallvt.cs: array-coop-smallvt.sh array-coop-1.cs array-coop-2.cs
	 $(srcdir)/array-coop-smallvt.sh $(srcdir) > $@

array-coop-int.cs: array-coop-int.sh array-coop-1.cs array-coop-2.cs
	 $(srcdir)/array-coop-int.sh $(srcdir) > $@

# This test is also slow, though its sleep can be dialed down.
#TAILCALL_DISABLED_TESTS_RUN += tailcall/coreclr/JIT/Methodical/tailcall_v4/hijacking.exe

compile-tailcall: $(TESTS_TAILCALL_COMPILE) $(TESTSAOT_TAILCALL)

test-tailcall: compile-tailcall test-runner.exe
	MONO_DEBUG=test-tailcall-require $(TOOLS_RUNTIME) --debug $(TEST_RUNNER) -j a $(TEST_TAILCALL_COMPILE_ALL) --testsuite-name "runtime-tailcall" --timeout 300 --disabled "$(DISABLED_TESTS)" $(TESTS_TAILCALL_RUN)

check-full:
	ok=; \
	$(MAKE) test-sgen || ok=false; \
	$(MAKE) check-local || ok=false; \
	$$ok

check-parallel:
	ok=; \
	$(MAKE) compile-tests; \
	$(MAKE) check-full || ok=false; \
	$$ok

check-coreclr:
	$(MAKE) -C $(mono_build_root)/acceptance-tests check-coreclr

check-stress:
	ok=; \
	$(MAKE) test-stress-sgen || ok=false; \
	$(MAKE) stresstest || ok=false; \
	$$ok

# for backwards compatibility on Wrench
test-wrench: check-parallel

aotcheck: testaot gshared-aot
TEST_RUNTIME_ARGS ?= $(RUNTIME_ARGS)
TEST_AOT_BUILD_FLAGS ?= $(AOT_BUILD_FLAGS)
TEST_AOT_RUN_FLAGS ?= $(AOT_RUN_FLAGS)

@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@$(TAILCALL_FSHARP_DEEPTAIL_IL): tailcall/fsharp-deeptail.stamp

@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@$(TAILCALL_INTERFACE_CONSERVESTACK_IL): tailcall/interface-conservestack.stamp

@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@tailcall/fsharp-deeptail.stamp: tailcall/split-fsharp$(EXEEXT) tailcall/fsharp-deeptail.il
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	./tailcall/split-fsharp$(EXEEXT) < $(srcdir)/tailcall/fsharp-deeptail.il
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	touch -f $@

@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@tailcall/interface-conservestack.stamp: split-tailcall-interface-conservestack$(EXEEXT) tailcall-interface-conservestack.il
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	./split-tailcall-interface-conservestack$(EXEEXT) < $(srcdir)/tailcall-interface-conservestack.il
@CROSS_COMPILING_FALSE@@HOST_WASM_FALSE@@HOST_WIN32_FALSE@	touch -f $@

# This test has extra sources.
tailcall/coreclr/JIT/opt/Tailcall/TailcallVerifyWithPrefix.exe: \
		tailcall/coreclr/JIT/opt/Tailcall/TailcallVerifyTransparentLibraryWithPrefix.il \
		tailcall/coreclr/JIT/opt/Tailcall/TailcallVerifyVerifiableLibraryWithPrefix.il

%.exe: %.il
	$(MKDIR_P) $(dir $@)
	$(ILASM) -out:$@ $^

%.exe: %.cs $(TEST_DRIVER_DEPEND)
	$(MKDIR_P) $(dir $@)
	$(MCS) -r:$(CLASS)/System.dll -r:$(CLASS)/System.Xml.dll -r:$(CLASS)/System.Core.dll -r:TestDriver.dll $(TEST_DRIVER_HARD_KILL_FEATURE) -out:$@ $<

# N.B. test-runner.exe references the TOOLS_RUNTIME versions of the framework assemblies
test-runner.exe: test-runner.cs $(TEST_DRIVER_DEPEND)
	$(MCS) -r:System.dll -r:System.Xml.dll -r:System.Core.dll -r:TestDriver.dll $(TEST_DRIVER_HARD_KILL_FEATURE) -out:$@ $<

%.dll: %.cs
	$(MKDIR_P) $(dir $@)
	$(MCS) -r:$(CLASS)/System.dll -target:library -out:$@ $<
%.dll: %.il
	$(MKDIR_P) $(dir $@)
	$(ILASM) /dll /output:$@ $<

reference-loader.exe: reference-loader.cs TestingReferenceAssembly.dll TestingReferenceReferenceAssembly.dll $(TEST_DRIVER_DEPEND)
	$(MCS) -r:$(CLASS)/System.dll -r:TestDriver.dll -r:TestingReferenceAssembly.dll -r:TestingReferenceReferenceAssembly.dll $(TEST_DRIVER_HARD_KILL_FEATURE) -out:$@ $(srcdir)/reference-loader.cs

merp-json-valid.exe: merp-json-valid.cs
	$(MCS) -r:$(CLASS)/System.Web.Extensions.dll -r:$(CLASS)/System.dll -r:$(CLASS)/System.Xml.dll -r:$(CLASS)/System.Core.dll -out:$@ $<

merp-crash-test.exe: merp-crash-test.cs
	$(MCS) -r:$(CLASS)/System.Web.Extensions.dll -r:$(CLASS)/System.dll -r:$(CLASS)/System.Xml.dll -r:$(CLASS)/System.Core.dll -out:$@ $<

TestingReferenceAssembly.dll: TestingReferenceAssembly.cs
	$(MCS) -target:library -out:$@ $<

TestingReferenceReferenceAssembly.dll: TestingReferenceReferenceAssembly.cs TestingReferenceAssembly.dll
	$(MCS) -r:TestingReferenceAssembly.dll -target:library -out:$@ $<

%.exe$(PLATFORM_AOT_SUFFIX): %.exe 
	$(RUNTIME) $(TEST_AOT_BUILD_FLAGS) $<

%.dll$(PLATFORM_AOT_SUFFIX): %.dll 
	$(RUNTIME) $(TEST_AOT_BUILD_FLAGS) $<

# mkbundle works on ppc, but the pkg-config POC doesn't when run with make test
@POWERPC_TRUE@test-platform:
# Can't use mkbundle on win32 since there is no static build there
# Can't run test-unhandled-exception on Windows because of all the debug popups...
@HOST_WIN32_TRUE@@POWERPC_FALSE@test-platform:
# mkbundle uses the installed mono-2.pc so it won't work if there is no system mono
#test-platform:	testbundle test-iomap-regression
@HOST_WIN32_FALSE@@POWERPC_FALSE@test-platform:	test-iomap-regression

#
# Test that no symbols are missed in eglib-remap.h
#
@HOST_LINUX_TRUE@test-platform: test-eglib-remap
@HOST_DARWIN_TRUE@@HOST_LINUX_FALSE@test-platform: test-eglib-remap
test-eglib-remap:
	@echo "Testing eglib remap..."
	@if which nm > /dev/null; then if nm $(top_builddir)/mono/mini/mono | grep -Ev $(OK_G_SYMBOLS) | grep -E 't _?g_'; then exit 1; else exit 0; fi; fi

test-env-options:
	MONO_ENV_OPTIONS="--version" $(RUNTIME) array-init.exe | grep -q Architecture:

# Target to precompile the test executables
test-local: $(TESTS_REGULAR) $(TESTS_STRESS) $(TESTS_GSHARED) $(TESTSAOT_CS) $(TESTSAOT_IL) $(TESTSAOT_BENCH) $(TESTSAOT_STRESS) $(TESTSAOT_GSHARED) $(TESTS_TAILCALL) $(TESTSAOT_TAILCALL) compile-gac-loading compile-assembly-load-reference test-runner.exe

test-bundle-local:
	mkdir -p $(addprefix $(TEST_BUNDLE_PATH)/tests/runtime/,$(sort $(dir $(TESTS_INCL_DEPS))))
	@echo $(TESTS_REGULAR) > $(TEST_BUNDLE_PATH)/tests/runtime/runtime-test-list.txt
	sed -e 's,$$mono_libdir,$$test_root_dir,g' tests-config > $(TEST_BUNDLE_PATH)/tests/runtime/tests-config.tmpl
	cp -L .libs/libtest$(libsuffix) $(TEST_BUNDLE_PATH)/tests/runtime/
	$(foreach asset,$(TESTS_INCL_DEPS),cp -L $(asset) $(TEST_BUNDLE_PATH)/tests/runtime/$(dir $(asset));)

# Precompile the test assemblies in parallel
compile-tests:
	$(MAKE) -j4 test

# Remove empty .stdout and .stderr files for wrench
rm-empty-logs:
	@echo "Removing empty logs..."
	find . '(' -name "*.stdout" -o -name "*.stderr" ')' -size 0 -exec rm {} \;

TestDriver.dll:
	$(MCS) -target:library -out:$@ $(srcdir)/../mini/TestDriver.cs $(srcdir)/../mini/TestHelpers.cs

runtest: compile-tests
	@failed=0; \
	passed=0; \
	failed_tests="";\
	if [ "x$$V" = "x1" ]; then dump_action="dump-output"; else dump_action="no-dump"; fi; \
	rm -f testlist testlist.sorted; \
	for i in $(TESTS_REGULAR); do echo $${i} >> testlist; sort testlist > testlist.sorted; done; \
	for i in `cat testlist.sorted`; do \
		rm -f $${i}.so; \
		$(with_mono_path) $(JITTEST_PROG_RUN) --aot $(TEST_AOT_BUILD_FLAGS) --debug $${i} > $${i}.aotlog 2>&1 || exit 1; \
		if $(srcdir)/test-driver '$(with_mono_path) $(JITTEST_PROG_RUN)' $$i "$(DISABLED_TESTS)" "$${dump_action}" $(TEST_RUNTIME_ARGS) $(TEST_AOT_RUN_FLAGS) ; \
		then \
			passed=`expr $${passed} + 1`; \
		else \
			if [ $$? = 2 ]; then break; fi; \
			failed=`expr $${failed} + 1`; \
			failed_tests="$${failed_tests} $$i"; \
		fi \
	done; \
	echo "$${passed} test(s) passed. $${failed} test(s) did not pass."; \
	rm -f testlist testlist.sorted; \
	if [ $${failed} != 0 ]; then \
	  echo -e "\nFailed tests:\n"; \
	  for i in $${failed_tests}; do \
	    echo $${i}; \
	    if [ "x$$V" = "x1" ]; then \
	      cat $${i}.stdout; \
	      cat $${i}.stderr; \
	    fi; \
	  done; \
	  exit 1; \
	fi

runtest-managed: test-runner.exe compile-tests
	$(TOOLS_RUNTIME) --debug $(TEST_RUNNER) -j a --testsuite-name "runtime" --timeout 300 --disabled "$(DISABLED_TESTS)" $(TESTS_REGULAR)

runtest-managed-serial: test-runner.exe compile-tests
	$(TOOLS_RUNTIME) --debug $(TEST_RUNNER) -j 1 --testsuite-name "runtime" --disabled "$(DISABLED_TESTS)" $(TESTS_REGULAR)

test-jit:
	@if test x$(M) != x0; then $(MAKE) runtest-managed; else $(MAKE) runtest; fi

testaot:
	@$(MAKE) AOT=1 runtest

testtrace:
	@$(MAKE) TEST_RUNTIME_ARGS="$${TEST_RUNTIME_ARGS} --trace" runtest

testinterp: test-runner.exe compile-tests
	$(TOOLS_RUNTIME) --debug $(TEST_RUNNER) -j a --runtime-args "--interpreter" --testsuite-name "runtime-interp" --timeout 300 --disabled "$(INTERP_DISABLED_TESTS)" $(TESTS_REGULAR)

testfullaotinterp: test-runner.exe compile-tests
	$(TOOLS_RUNTIME) --debug $(TEST_RUNNER) -j a --runtime-args "--full-aot-interp" --testsuite-name "runtime-aot-interp" --timeout 300 --disabled "$(INTERP_DISABLED_TESTS)" $(TESTS_REGULAR)

testllvmonlyinterp: test-runner.exe compile-tests
	$(TOOLS_RUNTIME) --debug $(TEST_RUNNER) -j a --runtime-args "--llvmonly-interp" --testsuite-name "runtime-aot-interp" --timeout 300 --disabled "$(INTERP_DISABLED_TESTS)" $(TESTS_REGULAR)

testjitspeed: $(JITTEST_PROG) compile-tests
	for i in $(TESTS_BENCH); do	\
		echo $$i;	\
		time $(JITTEST_PROG) $$i;	\
	done

test-iomap-regression: exists.exe
	@echo "Testing exists.exe..."
	@MONO_IOMAP=all $(RUNTIME) exists.exe

stresstest: compile-tests
	@failed=0; \
	passed=0; \
	failed_tests="";\
	for i in $(TESTS_STRESS); do	\
		if $(srcdir)/stress-runner.pl $$i ../mini/mono $(TEST_RUNTIME_ARGS); \
		then \
			passed=`expr $${passed} + 1`; \
		else \
			if [ $$? = 2 ]; then break; fi; \
			failed=`expr $${failed} + 1`; \
			failed_tests="$${failed_tests} $$i"; \
		fi \
	done; \
	echo "$${passed} test(s) passed. $${failed} test(s) did not pass."; \
	if [ $${failed} != 0 ]; then echo -e "\nFailed tests:\n"; \
	  for i in $${failed_tests}; do echo $${i}; done; exit 1; fi

testbundle: console.exe
	@echo "Testing mkbundle..."
	@$(MKBUNDLE) --static console.exe > mkbundle.stdout
	@$(with_mono_path) MONO_CFG_DIR=$(mono_cfg_dir) ./a.out >> mkbundle.stdout
	@- rm -rf a.out

load-missing.dll: load-missing.il
	$(Q) $(ILASM) /dll /output:$@ $<

load-exceptions.exe t.dll: load-exceptions.cs t-missing.cs load-missing.dll $(TEST_DRIVER_DEPEND)
	$(Q) $(MCS) -t:library -out:t.dll -d:FOUND t-missing.cs
	$(Q) $(MCS) -r:TestDriver.dll -r:load-missing.dll -r:t.dll -out:$@ $<
	$(Q) $(MCS) -t:library -out:t.dll t-missing.cs

test-type-load: load-exceptions.exe
@POWERPC64_FALSE@	$(Q) $(RUNTIME) load-exceptions.exe > load-exceptions.exe.stdout 2> load-exceptions.exe.stderr

test-multi-netmodule-1-netmodule.netmodule: test-multi-netmodule-1-netmodule.cs
	$(Q) $(MCS) -t:module -out:$@ $<
test-multi-netmodule-2-dll1.dll: test-multi-netmodule-2-dll1.cs test-multi-netmodule-1-netmodule.netmodule
	$(Q) $(MCS) -addmodule:test-multi-netmodule-1-netmodule.netmodule -t:library  -out:$@ $<
test-multi-netmodule-3-dll2.dll: test-multi-netmodule-3-dll2.cs test-multi-netmodule-1-netmodule.netmodule
	$(Q) $(MCS) -addmodule:test-multi-netmodule-1-netmodule.netmodule -t:library -out:$@ $<
test-multi-netmodule-4-exe.exe: test-multi-netmodule-4-exe.cs test-multi-netmodule-2-dll1.dll test-multi-netmodule-3-dll2.dll
	$(Q) $(MCS) -r:test-multi-netmodule-2-dll1.dll -out:$@ $<

test-multi-netmodule: test-multi-netmodule-4-exe.exe
	$(Q) $(TOOLS_RUNTIME) $(TEST_RUNNER) --testsuite-name $@ --disabled "$(DISABLED_TESTS)" $<

custom-attr-errors.exe custom-attr-errors-lib.dll: custom-attr-errors.cs custom-attr-errors-lib.cs $(TEST_DRIVER_DEPEND)
	$(Q) $(MCS) /t:library -D:WITH_MEMBERS custom-attr-errors-lib.cs
	$(Q) $(MCS) -r:TestDriver.dll -r:custom-attr-errors-lib.dll custom-attr-errors.cs
	$(Q) $(MCS) /t:library custom-attr-errors-lib.cs

test-cattr-type-load: custom-attr-errors.exe
	$(Q) $(TOOLS_RUNTIME) $(TEST_RUNNER) --testsuite-name $@ --disabled "$(DISABLED_TESTS)" $<

reflection-load-with-context-second-lib.dll: reflection-load-with-context-second-lib.cs
	$(Q) $(MCS) /t:library -out:$@ $<
reflection-load-with-context-lib.dll: reflection-load-with-context-lib.cs reflection-load-with-context-second-lib.dll
	$(Q) $(MCS) /t:library -r:reflection-load-with-context-second-lib.dll -out:$@ $<
reflection-load-with-context.exe: reflection-load-with-context-lib.dll

test-reflection-load-with-context: reflection-load-with-context.exe
	$(Q) $(RUNTIME) reflection-load-with-context.exe > reflection-load-with-context.exe.stdout 2> reflection-load-with-context.exe.stderr
# This depends on TLS, so its not ran by default
debug-casts: debug-casts.exe
	$(Q) $(RUNTIME) --debug=casts debug-casts.exe

test-sgen:
	ok=; \
	$(MAKE) test-sgen-regular || ok=false; \
	$(MAKE) test-sgen-toggleref || ok=false; \
	$(MAKE) test-sgen-bridge || ok=false; \
	$(MAKE) test-sgen-bridge2 || ok=false; \
	$(MAKE) test-sgen-bridge3 || ok=false; \
	$$ok

test-stress-sgen:
	ok=; \
	$(MAKE) test-stress-sgen-regular || ok=false; \
	$(MAKE) test-stress-sgen-toggleref || ok=false; \
	$(MAKE) test-stress-sgen-bridge || ok=false; \
	$(MAKE) test-stress-sgen-bridge2 || ok=false; \
	$(MAKE) test-stress-sgen-bridge3 || ok=false; \
	$$ok

test-sgen-regular: $(TESTS_SGEN_REGULAR) $(TESTSAOT_SGEN_REGULAR)
	ok=; \
	$(MAKE) test-sgen-regular-ms-simple || ok=false; \
	$(MAKE) test-sgen-regular-ms-conc-simple || ok=false; \
	$$ok

test-stress-sgen-regular: $(TESTS_SGEN_REGULAR) $(TESTSAOT_SGEN_REGULAR)
	ok=; \
	$(MAKE) test-sgen-regular-ms-simple MONO_TESTS_STRESS=1 || ok=false; \
	$(MAKE) test-sgen-regular-ms-conc-simple MONO_TESTS_STRESS=1 || ok=false; \
	$(MAKE) test-sgen-regular-ms-conc-par-simple MONO_TESTS_STRESS=1 || ok=false; \
	$(MAKE) test-sgen-regular-ms-conc-split MONO_TESTS_STRESS=1 || ok=false; \
	$(MAKE) test-sgen-regular-ms-conc-split-95-clear-at-gc MONO_TESTS_STRESS=1 || ok=false; \
	$(MAKE) test-sgen-regular-ms-conc-par-simple-par-dyn MONO_TESTS_STRESS=1 || ok=false; \
	$(MAKE) test-sgen-regular-ms-conc-par-simple-par-512k MONO_TESTS_STRESS=1 || ok=false; \
	$(MAKE) test-sgen-regular-ms-conc-par-simple-par-32m MONO_TESTS_STRESS=1 || ok=false; \
	$(MAKE) test-sgen-regular-ms-conc-par-simple-par-dyn-clear-at-gc MONO_TESTS_STRESS=1 || ok=false; \
	$$ok

test-sgen-regular-ms-simple: $(TESTS_SGEN_REGULAR) $(TESTSAOT_SGEN_REGULAR) test-runner.exe
	$(TOOLS_RUNTIME) $(TEST_RUNNER) --testsuite-name $@ --runtime-args "--gc=sgen --gc-debug= --gc-params=major=marksweep,minor=simple" --disabled "$(DISABLED_TESTS)" --timeout 900 $(TESTS_SGEN_REGULAR)
test-sgen-regular-ms-conc-simple: $(TESTS_SGEN_REGULAR) $(TESTSAOT_SGEN_REGULAR) test-runner.exe
	$(TOOLS_RUNTIME) $(TEST_RUNNER) --testsuite-name $@ --runtime-args "--gc=sgen --gc-debug= --gc-params=major=marksweep-conc,minor=simple" --disabled "$(DISABLED_TESTS)" --timeout 900 $(TESTS_SGEN_REGULAR)
test-sgen-regular-ms-conc-par-simple: $(TESTS_SGEN_REGULAR) $(TESTSAOT_SGEN_REGULAR) test-runner.exe
	$(TOOLS_RUNTIME) $(TEST_RUNNER) --testsuite-name $@ --runtime-args "--gc=sgen --gc-debug= --gc-params=major=marksweep-conc-par,minor=simple" --disabled "$(DISABLED_TESTS)" --timeout 900 $(TESTS_SGEN_REGULAR)
test-sgen-regular-ms-conc-split: $(TESTS_SGEN_REGULAR) $(TESTSAOT_SGEN_REGULAR) test-runner.exe
	$(TOOLS_RUNTIME) $(TEST_RUNNER) --testsuite-name $@ --runtime-args "--gc=sgen --gc-debug= --gc-params=major=marksweep-conc,minor=split" --disabled "$(DISABLED_TESTS)" --timeout 900 $(TESTS_SGEN_REGULAR)
test-sgen-regular-ms-conc-split-95-clear-at-gc: $(TESTS_SGEN_REGULAR) $(TESTSAOT_SGEN_REGULAR) test-runner.exe
	$(TOOLS_RUNTIME) $(TEST_RUNNER) --testsuite-name $@ --runtime-args "--gc=sgen --gc-debug=clear-at-gc --gc-params=major=marksweep-conc,minor=split,alloc-ratio=95" --disabled "$(DISABLED_TESTS)" --timeout 900 $(TESTS_SGEN_REGULAR)
test-sgen-regular-ms-conc-par-simple-par-dyn: $(TESTS_SGEN_REGULAR) $(TESTSAOT_SGEN_REGULAR) test-runner.exe
	$(TOOLS_RUNTIME) $(TEST_RUNNER) --testsuite-name $@ --runtime-args "--gc=sgen --gc-debug= --gc-params=major=marksweep-conc-par,minor=simple-par,dynamic-nursery" --disabled "$(DISABLED_TESTS)" --timeout 900 $(TESTS_SGEN_REGULAR)
test-sgen-regular-ms-conc-par-simple-par-512k: $(TESTS_SGEN_REGULAR) $(TESTSAOT_SGEN_REGULAR) test-runner.exe
	$(TOOLS_RUNTIME) $(TEST_RUNNER) --testsuite-name $@ --runtime-args "--gc=sgen --gc-debug= --gc-params=major=marksweep-conc-par,minor=simple-par,nursery-size=512k" --disabled "$(DISABLED_TESTS)" --timeout 900 $(TESTS_SGEN_REGULAR)
test-sgen-regular-ms-conc-par-simple-par-32m: $(TESTS_SGEN_REGULAR) $(TESTSAOT_SGEN_REGULAR) test-runner.exe
	$(TOOLS_RUNTIME) $(TEST_RUNNER) --testsuite-name $@ --runtime-args "--gc=sgen --gc-debug= --gc-params=major=marksweep-conc-par,minor=simple-par,nursery-size=32m" --disabled "$(DISABLED_TESTS)" --timeout 900 $(TESTS_SGEN_REGULAR)
test-sgen-regular-ms-conc-par-simple-par-dyn-clear-at-gc: $(TESTS_SGEN_REGULAR) $(TESTSAOT_SGEN_REGULAR) test-runner.exe
	$(TOOLS_RUNTIME) $(TEST_RUNNER) --testsuite-name $@ --runtime-args "--gc=sgen --gc-debug=clear-at-gc --gc-params=major=marksweep-conc-par,minor=simple-par,dynamic-nursery" --disabled "$(DISABLED_TESTS)" --timeout 900 $(TESTS_SGEN_REGULAR)

test-sgen-toggleref: $(TESTS_SGEN_TOGGLEREF) $(TESTSAOT_SGEN_TOGGLEREF)
	ok=; \
	$(MAKE) test-sgen-toggleref-ms-simple || ok=false; \
	$(MAKE) test-sgen-toggleref-ms-conc-simple || ok=false; \
	$$ok

test-stress-sgen-toggleref: $(TESTS_SGEN_TOGGLEREF) $(TESTSAOT_SGEN_TOGGLEREF)
	ok=; \
	$(MAKE) test-sgen-toggleref-ms-simple MONO_TESTS_STRESS=1 || ok=false; \
	$(MAKE) test-sgen-toggleref-ms-conc-simple MONO_TESTS_STRESS=1 || ok=false; \
	$(MAKE) test-sgen-toggleref-ms-conc-par-simple MONO_TESTS_STRESS=1 || ok=false; \
	$(MAKE) test-sgen-toggleref-ms-conc-split MONO_TESTS_STRESS=1 || ok=false; \
	$(MAKE) test-sgen-toggleref-ms-conc-split-95-clear-at-gc MONO_TESTS_STRESS=1 || ok=false; \
	$(MAKE) test-sgen-toggleref-ms-conc-par-simple-par-dyn MONO_TESTS_STRESS=1 || ok=false; \
	$(MAKE) test-sgen-toggleref-ms-conc-par-simple-par-512k MONO_TESTS_STRESS=1 || ok=false; \
	$(MAKE) test-sgen-toggleref-ms-conc-par-simple-par-32m MONO_TESTS_STRESS=1 || ok=false; \
	$(MAKE) test-sgen-toggleref-ms-conc-par-simple-par-dyn-clear-at-gc MONO_TESTS_STRESS=1 || ok=false; \
	$$ok

test-sgen-toggleref-ms-simple: $(TESTS_SGEN_TOGGLEREF) $(TESTSAOT_SGEN_TOGGLEREF) test-runner.exe
	$(TOOLS_RUNTIME) $(TEST_RUNNER) --testsuite-name $@ --runtime-args "--gc=sgen --gc-debug= --gc-params=toggleref-test,major=marksweep,minor=simple" --disabled "$(DISABLED_TESTS)" --timeout 900 $(TESTS_SGEN_TOGGLEREF)
test-sgen-toggleref-ms-conc-simple: $(TESTS_SGEN_TOGGLEREF) $(TESTSAOT_SGEN_TOGGLEREF) test-runner.exe
	$(TOOLS_RUNTIME) $(TEST_RUNNER) --testsuite-name $@ --runtime-args "--gc=sgen --gc-debug= --gc-params=toggleref-test,major=marksweep-conc,minor=simple" --disabled "$(DISABLED_TESTS)" --timeout 900 $(TESTS_SGEN_TOGGLEREF)
test-sgen-toggleref-ms-conc-par-simple: $(TESTS_SGEN_TOGGLEREF) $(TESTSAOT_SGEN_TOGGLEREF) test-runner.exe
	$(TOOLS_RUNTIME) $(TEST_RUNNER) --testsuite-name $@ --runtime-args "--gc=sgen --gc-debug= --gc-params=toggleref-test,major=marksweep-conc-par,minor=simple" --disabled "$(DISABLED_TESTS)" --timeout 900 $(TESTS_SGEN_TOGGLEREF)
test-sgen-toggleref-ms-conc-split: $(TESTS_SGEN_TOGGLEREF) $(TESTSAOT_SGEN_TOGGLEREF) test-runner.exe
	$(TOOLS_RUNTIME) $(TEST_RUNNER) --testsuite-name $@ --runtime-args "--gc=sgen --gc-debug= --gc-params=toggleref-test,major=marksweep-conc,minor=split" --disabled "$(DISABLED_TESTS)" --timeout 900 $(TESTS_SGEN_TOGGLEREF)
test-sgen-toggleref-ms-conc-split-95-clear-at-gc: $(TESTS_SGEN_TOGGLEREF) $(TESTSAOT_SGEN_TOGGLEREF) test-runner.exe
	$(TOOLS_RUNTIME) $(TEST_RUNNER) --testsuite-name $@ --runtime-args "--gc=sgen --gc-debug=clear-at-gc --gc-params=toggleref-test,major=marksweep-conc,minor=split,alloc-ratio=95" --disabled "$(DISABLED_TESTS)" --timeout 900 $(TESTS_SGEN_TOGGLEREF)
test-sgen-toggleref-ms-conc-par-simple-par-dyn: $(TESTS_SGEN_TOGGLEREF) $(TESTSAOT_SGEN_TOGGLEREF) test-runner.exe
	$(TOOLS_RUNTIME) $(TEST_RUNNER) --testsuite-name $@ --runtime-args "--gc=sgen --gc-debug= --gc-params=toggleref-test,major=marksweep-conc-par,minor=simple-par,dynamic-nursery" --disabled "$(DISABLED_TESTS)" --timeout 900 $(TESTS_SGEN_TOGGLEREF)
test-sgen-toggleref-ms-conc-par-simple-par-512k: $(TESTS_SGEN_TOGGLEREF) $(TESTSAOT_SGEN_TOGGLEREF) test-runner.exe
	$(TOOLS_RUNTIME) $(TEST_RUNNER) --testsuite-name $@ --runtime-args "--gc=sgen --gc-debug= --gc-params=toggleref-test,major=marksweep-conc-par,minor=simple-par,nursery-size=512k" --disabled "$(DISABLED_TESTS)" --timeout 900 $(TESTS_SGEN_TOGGLEREF)
test-sgen-toggleref-ms-conc-par-simple-par-32m: $(TESTS_SGEN_TOGGLEREF) $(TESTSAOT_SGEN_TOGGLEREF) test-runner.exe
	$(TOOLS_RUNTIME) $(TEST_RUNNER) --testsuite-name $@ --runtime-args "--gc=sgen --gc-debug= --gc-params=toggleref-test,major=marksweep-conc-par,minor=simple-par,nursery-size=32m" --disabled "$(DISABLED_TESTS)" --timeout 900 $(TESTS_SGEN_TOGGLEREF)
test-sgen-toggleref-ms-conc-par-simple-par-dyn-clear-at-gc: $(TESTS_SGEN_TOGGLEREF) $(TESTSAOT_SGEN_TOGGLEREF) test-runner.exe
	$(TOOLS_RUNTIME) $(TEST_RUNNER) --testsuite-name $@ --runtime-args "--gc=sgen --gc-debug=clear-at-gc --gc-params=toggleref-test,major=marksweep-conc-par,minor=simple-par,dynamic-nursery" --disabled "$(DISABLED_TESTS)" --timeout 900 $(TESTS_SGEN_TOGGLEREF)

test-sgen-bridge: $(TESTS_SGEN_BRIDGE) $(TESTSAOT_SGEN_BRIDGE)
	ok=; \
	$(MAKE) test-sgen-bridge-ms-simple-tarjan-bridge || ok=false; \
	$(MAKE) test-sgen-bridge-ms-conc-simple-tarjan-bridge || ok=false; \
	$$ok

test-stress-sgen-bridge: $(TESTS_SGEN_BRIDGE) $(TESTSAOT_SGEN_BRIDGE)
	ok=; \
	$(MAKE) test-sgen-bridge-ms-simple-tarjan-bridge MONO_TESTS_STRESS=1 || ok=false; \
	$(MAKE) test-sgen-bridge-ms-conc-simple-tarjan-bridge MONO_TESTS_STRESS=1 || ok=false; \
	$(MAKE) test-sgen-bridge-ms-conc-split-tarjan-bridge MONO_TESTS_STRESS=1 || ok=false; \
	$(MAKE) test-sgen-bridge-ms-conc-simple-new-bridge MONO_TESTS_STRESS=1 || ok=false; \
	$(MAKE) test-sgen-bridge-ms-conc-simple-old-bridge MONO_TESTS_STRESS=1 || ok=false; \
	$(MAKE) test-sgen-bridge-ms-conc-par-simple-par-dyn-tarjan-bridge MONO_TESTS_STRESS=1 || ok=false; \
	$(MAKE) test-sgen-bridge-ms-conc-par-simple-par-512k-tarjan-bridge MONO_TESTS_STRESS=1 || ok=false; \
	$(MAKE) test-sgen-bridge-ms-conc-par-simple-par-32m-tarjan-bridge MONO_TESTS_STRESS=1 || ok=false; \
	$$ok

test-sgen-bridge-ms-simple-tarjan-bridge: $(TESTS_SGEN_BRIDGE) $(TESTSAOT_SGEN_BRIDGE) test-runner.exe
	$(TOOLS_RUNTIME) $(TEST_RUNNER) --testsuite-name $@ --runtime-args "--gc=sgen --gc-debug=bridge=Bridge --gc-params=major=marksweep,minor=simple,bridge-implementation=tarjan" --disabled "$(DISABLED_TESTS)" --timeout 900 $(TESTS_SGEN_BRIDGE)
test-sgen-bridge-ms-conc-simple-tarjan-bridge: $(TESTS_SGEN_BRIDGE) $(TESTSAOT_SGEN_BRIDGE) test-runner.exe
	$(TOOLS_RUNTIME) $(TEST_RUNNER) --testsuite-name $@ --runtime-args "--gc=sgen --gc-debug=bridge=Bridge --gc-params=major=marksweep-conc,minor=simple,bridge-implementation=tarjan" --disabled "$(DISABLED_TESTS)" --timeout 900 $(TESTS_SGEN_BRIDGE)
test-sgen-bridge-ms-conc-split-tarjan-bridge: $(TESTS_SGEN_BRIDGE) $(TESTSAOT_SGEN_BRIDGE) test-runner.exe
	$(TOOLS_RUNTIME) $(TEST_RUNNER) --testsuite-name $@ --runtime-args "--gc=sgen --gc-debug=bridge=Bridge --gc-params=major=marksweep-conc,minor=split,bridge-implementation=tarjan" --disabled "$(DISABLED_TESTS)" --timeout 900 $(TESTS_SGEN_BRIDGE)
test-sgen-bridge-ms-conc-simple-new-bridge: $(TESTS_SGEN_BRIDGE) $(TESTSAOT_SGEN_BRIDGE) test-runner.exe
	$(TOOLS_RUNTIME) $(TEST_RUNNER) --testsuite-name $@ --runtime-args "--gc=sgen --gc-debug=bridge=Bridge --gc-params=major=marksweep-conc,minor=simple,bridge-implementation=new" --disabled "$(DISABLED_TESTS)" --timeout 900 $(TESTS_SGEN_BRIDGE)
test-sgen-bridge-ms-conc-simple-old-bridge: $(TESTS_SGEN_BRIDGE) $(TESTSAOT_SGEN_BRIDGE) test-runner.exe
	$(TOOLS_RUNTIME) $(TEST_RUNNER) --testsuite-name $@ --runtime-args "--gc=sgen --gc-debug=bridge=Bridge --gc-params=major=marksweep-conc,minor=simple,bridge-implementation=old" --disabled "$(DISABLED_TESTS)" --timeout 900 $(TESTS_SGEN_BRIDGE)
test-sgen-bridge-ms-conc-par-simple-par-dyn-tarjan-bridge: $(TESTS_SGEN_BRIDGE) $(TESTSAOT_SGEN_BRIDGE) test-runner.exe
	$(TOOLS_RUNTIME) $(TEST_RUNNER) --testsuite-name $@ --runtime-args "--gc=sgen --gc-debug=bridge=Bridge --gc-params=major=marksweep-conc-par,minor=simple-par,dynamic-nursery,bridge-implementation=tarjan" --disabled "$(DISABLED_TESTS)" --timeout 900 $(TESTS_SGEN_BRIDGE)
test-sgen-bridge-ms-conc-par-simple-par-512k-tarjan-bridge: $(TESTS_SGEN_BRIDGE) $(TESTSAOT_SGEN_BRIDGE) test-runner.exe
	$(TOOLS_RUNTIME) $(TEST_RUNNER) --testsuite-name $@ --runtime-args "--gc=sgen --gc-debug=bridge=Bridge --gc-params=major=marksweep-conc-par,minor=simple-par,nursery-size=512k,bridge-implementation=tarjan" --disabled "$(DISABLED_TESTS)" --timeout 900 $(TESTS_SGEN_BRIDGE)
test-sgen-bridge-ms-conc-par-simple-par-32m-tarjan-bridge: $(TESTS_SGEN_BRIDGE) $(TESTSAOT_SGEN_BRIDGE) test-runner.exe
	$(TOOLS_RUNTIME) $(TEST_RUNNER) --testsuite-name $@ --runtime-args "--gc=sgen --gc-debug=bridge=Bridge --gc-params=major=marksweep-conc-par,minor=simple-par,nursery-size=32m,bridge-implementation=tarjan" --disabled "$(DISABLED_TESTS)" --timeout 900 $(TESTS_SGEN_BRIDGE)

test-sgen-bridge2: $(TESTS_SGEN_BRIDGE2) $(TESTSAOT_SGEN_BRIDGE2)
	ok=; \
	$(MAKE) test-sgen-bridge2-ms-simple-tarjan-bridge || ok=false; \
	$(MAKE) test-sgen-bridge2-ms-conc-simple-tarjan-bridge || ok=false; \
	$$ok

test-stress-sgen-bridge2: $(TESTS_SGEN_BRIDGE2) $(TESTSAOT_SGEN_BRIDGE2)
	ok=; \
	$(MAKE) test-sgen-bridge2-ms-simple-tarjan-bridge MONO_TESTS_STRESS=1 || ok=false; \
	$(MAKE) test-sgen-bridge2-ms-conc-simple-tarjan-bridge MONO_TESTS_STRESS=1 || ok=false; \
	$(MAKE) test-sgen-bridge2-ms-conc-split-tarjan-bridge MONO_TESTS_STRESS=1 || ok=false; \
	$(MAKE) test-sgen-bridge2-ms-conc-simple-new-bridge MONO_TESTS_STRESS=1 || ok=false; \
	$(MAKE) test-sgen-bridge2-ms-conc-simple-old-bridge MONO_TESTS_STRESS=1 || ok=false; \
	$(MAKE) test-sgen-bridge2-ms-conc-par-simple-par-dyn-tarjan-bridge MONO_TESTS_STRESS=1 || ok=false; \
	$(MAKE) test-sgen-bridge2-ms-conc-par-simple-par-512k-tarjan-bridge MONO_TESTS_STRESS=1 || ok=false; \
	$(MAKE) test-sgen-bridge2-ms-conc-par-simple-par-32m-tarjan-bridge MONO_TESTS_STRESS=1 || ok=false; \
	$$ok

test-sgen-bridge2-ms-simple-tarjan-bridge: $(TESTS_SGEN_BRIDGE2) $(TESTSAOT_SGEN_BRIDGE2) test-runner.exe
	$(TOOLS_RUNTIME) $(TEST_RUNNER) --testsuite-name $@ --runtime-args "--gc=sgen --gc-debug=bridge=2Bridge --gc-params=major=marksweep,minor=simple,bridge-implementation=tarjan" --disabled "$(DISABLED_TESTS)" --timeout 900 $(TESTS_SGEN_BRIDGE2)
test-sgen-bridge2-ms-conc-simple-tarjan-bridge: $(TESTS_SGEN_BRIDGE2) $(TESTSAOT_SGEN_BRIDGE2) test-runner.exe
	$(TOOLS_RUNTIME) $(TEST_RUNNER) --testsuite-name $@ --runtime-args "--gc=sgen --gc-debug=bridge=2Bridge --gc-params=major=marksweep-conc,minor=simple,bridge-implementation=tarjan" --disabled "$(DISABLED_TESTS)" --timeout 900 $(TESTS_SGEN_BRIDGE2)
test-sgen-bridge2-ms-conc-split-tarjan-bridge: $(TESTS_SGEN_BRIDGE2) $(TESTSAOT_SGEN_BRIDGE2) test-runner.exe
	$(TOOLS_RUNTIME) $(TEST_RUNNER) --testsuite-name $@ --runtime-args "--gc=sgen --gc-debug=bridge=2Bridge --gc-params=major=marksweep-conc,minor=split,bridge-implementation=tarjan" --disabled "$(DISABLED_TESTS)" --timeout 900 $(TESTS_SGEN_BRIDGE2)
test-sgen-bridge2-ms-conc-simple-new-bridge: $(TESTS_SGEN_BRIDGE2) $(TESTSAOT_SGEN_BRIDGE2) test-runner.exe
	$(TOOLS_RUNTIME) $(TEST_RUNNER) --testsuite-name $@ --runtime-args "--gc=sgen --gc-debug=bridge=2Bridge --gc-params=major=marksweep-conc,minor=simple,bridge-implementation=new" --disabled "$(DISABLED_TESTS)" --timeout 900 $(TESTS_SGEN_BRIDGE2)
test-sgen-bridge2-ms-conc-simple-old-bridge: $(TESTS_SGEN_BRIDGE2) $(TESTSAOT_SGEN_BRIDGE2) test-runner.exe
	$(TOOLS_RUNTIME) $(TEST_RUNNER) --testsuite-name $@ --runtime-args "--gc=sgen --gc-debug=bridge=2Bridge --gc-params=major=marksweep-conc,minor=simple,bridge-implementation=old" --disabled "$(DISABLED_TESTS)" --timeout 900 $(TESTS_SGEN_BRIDGE2)
test-sgen-bridge2-ms-conc-par-simple-par-dyn-tarjan-bridge: $(TESTS_SGEN_BRIDGE2) $(TESTSAOT_SGEN_BRIDGE2) test-runner.exe
	$(TOOLS_RUNTIME) $(TEST_RUNNER) --testsuite-name $@ --runtime-args "--gc=sgen --gc-debug=bridge=2Bridge --gc-params=major=marksweep-conc-par,minor=simple-par,dynamic-nursery,bridge-implementation=tarjan" --disabled "$(DISABLED_TESTS)" --timeout 900 $(TESTS_SGEN_BRIDGE2)
test-sgen-bridge2-ms-conc-par-simple-par-512k-tarjan-bridge: $(TESTS_SGEN_BRIDGE2) $(TESTSAOT_SGEN_BRIDGE2) test-runner.exe
	$(TOOLS_RUNTIME) $(TEST_RUNNER) --testsuite-name $@ --runtime-args "--gc=sgen --gc-debug=bridge=2Bridge --gc-params=major=marksweep-conc-par,minor=simple-par,nursery-size=512k,bridge-implementation=tarjan" --disabled "$(DISABLED_TESTS)" --timeout 900 $(TESTS_SGEN_BRIDGE2)
test-sgen-bridge2-ms-conc-par-simple-par-32m-tarjan-bridge: $(TESTS_SGEN_BRIDGE2) $(TESTSAOT_SGEN_BRIDGE2) test-runner.exe
	$(TOOLS_RUNTIME) $(TEST_RUNNER) --testsuite-name $@ --runtime-args "--gc=sgen --gc-debug=bridge=2Bridge --gc-params=major=marksweep-conc-par,minor=simple-par,nursery-size=32m,bridge-implementation=tarjan" --disabled "$(DISABLED_TESTS)" --timeout 900 $(TESTS_SGEN_BRIDGE2)

test-sgen-bridge3: $(TESTS_SGEN_BRIDGE3) $(TESTSAOT_SGEN_BRIDGE3)
	ok=; \
	$(MAKE) test-sgen-bridge3-ms-simple-tarjan-bridge || ok=false; \
	$(MAKE) test-sgen-bridge3-ms-conc-simple-tarjan-bridge || ok=false; \
	$$ok

test-stress-sgen-bridge3: $(TESTS_SGEN_BRIDGE3) $(TESTSAOT_SGEN_BRIDGE3)
	ok=; \
	$(MAKE) test-sgen-bridge3-ms-simple-tarjan-bridge MONO_TESTS_STRESS=1 || ok=false; \
	$(MAKE) test-sgen-bridge3-ms-conc-simple-tarjan-bridge MONO_TESTS_STRESS=1 || ok=false; \
	$(MAKE) test-sgen-bridge3-ms-conc-split-tarjan-bridge MONO_TESTS_STRESS=1 || ok=false; \
	$(MAKE) test-sgen-bridge3-ms-conc-simple-new-bridge MONO_TESTS_STRESS=1 || ok=false; \
	$(MAKE) test-sgen-bridge3-ms-conc-simple-old-bridge MONO_TESTS_STRESS=1 || ok=false; \
	$(MAKE) test-sgen-bridge3-ms-conc-par-simple-par-dyn-tarjan-bridge MONO_TESTS_STRESS=1 || ok=false; \
	$(MAKE) test-sgen-bridge3-ms-conc-par-simple-par-512k-tarjan-bridge MONO_TESTS_STRESS=1 || ok=false; \
	$(MAKE) test-sgen-bridge3-ms-conc-par-simple-par-32m-tarjan-bridge MONO_TESTS_STRESS=1 || ok=false; \
	$$ok

test-sgen-bridge3-ms-simple-tarjan-bridge: $(TESTS_SGEN_BRIDGE3) $(TESTSAOT_SGEN_BRIDGE3) test-runner.exe
	$(TOOLS_RUNTIME) $(TEST_RUNNER) --testsuite-name $@ --runtime-args "--gc=sgen --gc-debug=bridge=3Bridge --gc-params=major=marksweep,minor=simple,bridge-implementation=tarjan" --disabled "$(DISABLED_TESTS)" --timeout 900 $(TESTS_SGEN_BRIDGE3)
test-sgen-bridge3-ms-conc-simple-tarjan-bridge: $(TESTS_SGEN_BRIDGE3) $(TESTSAOT_SGEN_BRIDGE3) test-runner.exe
	$(TOOLS_RUNTIME) $(TEST_RUNNER) --testsuite-name $@ --runtime-args "--gc=sgen --gc-debug=bridge=3Bridge --gc-params=major=marksweep-conc,minor=simple,bridge-implementation=tarjan" --disabled "$(DISABLED_TESTS)" --timeout 900 $(TESTS_SGEN_BRIDGE3)
test-sgen-bridge3-ms-conc-split-tarjan-bridge: $(TESTS_SGEN_BRIDGE3) $(TESTSAOT_SGEN_BRIDGE3) test-runner.exe
	$(TOOLS_RUNTIME) $(TEST_RUNNER) --testsuite-name $@ --runtime-args "--gc=sgen --gc-debug=bridge=3Bridge --gc-params=major=marksweep-conc,minor=split,bridge-implementation=tarjan" --disabled "$(DISABLED_TESTS)" --timeout 900 $(TESTS_SGEN_BRIDGE3)
test-sgen-bridge3-ms-conc-simple-new-bridge: $(TESTS_SGEN_BRIDGE3) $(TESTSAOT_SGEN_BRIDGE3) test-runner.exe
	$(TOOLS_RUNTIME) $(TEST_RUNNER) --testsuite-name $@ --runtime-args "--gc=sgen --gc-debug=bridge=3Bridge --gc-params=major=marksweep-conc,minor=simple,bridge-implementation=new" --disabled "$(DISABLED_TESTS)" --timeout 900 $(TESTS_SGEN_BRIDGE3)
test-sgen-bridge3-ms-conc-simple-old-bridge: $(TESTS_SGEN_BRIDGE3) $(TESTSAOT_SGEN_BRIDGE3) test-runner.exe
	$(TOOLS_RUNTIME) $(TEST_RUNNER) --testsuite-name $@ --runtime-args "--gc=sgen --gc-debug=bridge=3Bridge --gc-params=major=marksweep-conc,minor=simple,bridge-implementation=old" --disabled "$(DISABLED_TESTS)" --timeout 900 $(TESTS_SGEN_BRIDGE3)
test-sgen-bridge3-ms-conc-par-simple-par-dyn-tarjan-bridge: $(TESTS_SGEN_BRIDGE3) $(TESTSAOT_SGEN_BRIDGE3) test-runner.exe
	$(TOOLS_RUNTIME) $(TEST_RUNNER) --testsuite-name $@ --runtime-args "--gc=sgen --gc-debug=bridge=3Bridge --gc-params=major=marksweep-conc-par,minor=simple-par,dynamic-nursery,bridge-implementation=tarjan" --disabled "$(DISABLED_TESTS)" --timeout 900 $(TESTS_SGEN_BRIDGE3)
test-sgen-bridge3-ms-conc-par-simple-par-512k-tarjan-bridge: $(TESTS_SGEN_BRIDGE3) $(TESTSAOT_SGEN_BRIDGE3) test-runner.exe
	$(TOOLS_RUNTIME) $(TEST_RUNNER) --testsuite-name $@ --runtime-args "--gc=sgen --gc-debug=bridge=3Bridge --gc-params=major=marksweep-conc-par,minor=simple-par,nursery-size=512k,bridge-implementation=tarjan" --disabled "$(DISABLED_TESTS)" --timeout 900 $(TESTS_SGEN_BRIDGE3)
test-sgen-bridge3-ms-conc-par-simple-par-32m-tarjan-bridge: $(TESTS_SGEN_BRIDGE3) $(TESTSAOT_SGEN_BRIDGE3) test-runner.exe
	$(TOOLS_RUNTIME) $(TEST_RUNNER) --testsuite-name $@ --runtime-args "--gc=sgen --gc-debug=bridge=3Bridge --gc-params=major=marksweep-conc-par,minor=simple-par,nursery-size=32m,bridge-implementation=tarjan" --disabled "$(DISABLED_TESTS)" --timeout 900 $(TESTS_SGEN_BRIDGE3)

tests-sgen-oom: $(TESTS_SGEN_OOM) $(TESTSAOT_SGEN_OOM) test-runner.exe sgen-cementing-stress.exe sgen-new-threads-dont-join-stw-2.exe sgen-bridge-major-fragmentation.exe
	$(TOOLS_RUNTIME) $(TEST_RUNNER) $(TEST_RUNNER_ARGS) --testsuite-name $@ --runtime-args "--gc=sgen --gc-debug=max-valloc-size=50M,bridge=Bridge" --disabled "$(DISABLED_TESTS)" --timeout 900 $(TESTS_SGEN_OOM)

test-aot:
	@failed=0; \
	passed=0; \
	failed_tests="";\
	profile=$(DEFAULT_PROFILE);	\
	rm -rf $(AOT_TEMP_DIR); \
	mkdir $(AOT_TEMP_DIR); \
	rm -f test-aot-$${name}.stdout test-aot-$${name}.stderr; \
	for assembly in $(mcs_topdir)/class/lib/$$profile/*.dll	; do	\
		asm_name=`basename $$assembly`;	\
		echo "... $$asm_name";	\
		for conf in $(AOT_CONFIGURATIONS); do	\
			name=`echo $$conf | cut -d\| -f 2`;	\
			params=`echo $$conf | cut -d\| -f 1`;	\
			test_name="$${asm_name}|$${name}";	\
			echo "  $$test_name";	\
			if MONO_PATH=$(mcs_topdir)/class/lib/$$profile $(JITTEST_PROG_RUN) $$params --aot=temp-path=$(AOT_TEMP_DIR),outfile=$(AOT_TEMP_DIR)/$$asm_name $$assembly >> test-aot-$${name}.stdout 2>> test-aot-$${name}.stderr;	\
			then \
				passed=`expr $${passed} + 1`; \
			else \
				failed=`expr $${failed} + 1`; \
				failed_tests="$${failed_tests} $$test_name"; \
			fi \
		done;	\
	done;	\
	rm -rf $(AOT_TEMP_DIR); \
	echo "$${passed} test(s) passed. $${failed} test(s) did not pass."; \
	if [ $${failed} != 0 ]; then echo -e "\nFailed tests:\n"; \
	for i in $${failed_tests}; do echo $${i}; done; exit 1; fi

runtime-invoke.gen.cs: gen-runtime-invoke.exe
	$(Q) $(RUNTIME) gen-runtime-invoke.exe > runtime-invoke.gen.cs

imt_big_iface_test.cs: make-imt-test.exe
	$(Q) $(RUNTIME) make-imt-test.exe > imt_big_iface_test.cs

test-inline-call-stack-library.dll: $(srcdir)/test-inline-call-stack-library.cs
	$(MCS) -t:library -out:$@ $<

test-inline-call-stack.exe$(PLATFORM_AOT_SUFFIX): test-inline-call-stack-library.dll$(PLATFORM_AOT_SUFFIX)
test-inline-call-stack.exe: test-inline-call-stack.cs test-inline-call-stack-library.dll $(TEST_DRIVER_DEPEND)
	$(MCS) -r:TestDriver.dll -r:test-inline-call-stack-library.dll -out:$@ $<
unhandled-exception-test-case.1.cs: unhandled-exception-test-case.2.cs
	cp unhandled-exception-test-case.2.cs unhandled-exception-test-case.1.cs
unhandled-exception-test-case-legacy.1.cs: unhandled-exception-test-case.1.cs
	cp unhandled-exception-test-case.1.cs unhandled-exception-test-case-legacy.1.cs
unhandled-exception-test-case-legacy.2.cs: unhandled-exception-test-case.2.cs
	cp unhandled-exception-test-case.2.cs unhandled-exception-test-case-legacy.2.cs
unhandled-exception-config_files: unhandled-exception-base-configuration.config unhandled-exception-legacy-configuration.config
	cp unhandled-exception-base-configuration.config unhandled-exception-test-case.1.exe.config
	cp unhandled-exception-base-configuration.config unhandled-exception-test-case.2.exe.config
	cp unhandled-exception-legacy-configuration.config unhandled-exception-test-case-legacy.1.exe.config
	cp unhandled-exception-legacy-configuration.config unhandled-exception-test-case-legacy.2.exe.config

unhandled-exception-test-runner.2.exe: unhandled-exception-config_files unhandled-exception-test-case.1.exe unhandled-exception-test-case-legacy.1.exe  unhandled-exception-test-case.2.exe unhandled-exception-test-case-legacy.2.exe

test-unhandled-exception: unhandled-exception-test-runner.2.exe
	$(Q) $(RUNTIME) unhandled-exception-test-runner.2.exe RUNTIME:../mini/mono,GTC:F

safehandle.2.exe winx64structs.exe thunks.exe pinvoke3.exe pinvoke2.exe pinvoke-2.2.exe pinvoke17.exe pinvoke13.exe \
	pinvoke11.exe pinvoke_ppcs.exe pinvoke_ppci.exe pinvoke_ppcf.exe pinvoke_ppcd.exe pinvoke_ppcc.exe pinvoke.exe \
	marshalbool.exe marshal9.exe marshal5.exe marshal.exe handleref.exe cominterop.exe bug-Xamarin-5278.exe \
	bug-58782-plain-throw.exe bug-58782-capture-and-throw.exe install_eh_callback.exe: libtest.la

event-get.2.exe$(PLATFORM_AOT_SUFFIX): event-il.exe$(PLATFORM_AOT_SUFFIX)
event-get.2.exe: event-il.exe

module-cctor-loader.2.exe$(PLATFORM_AOT_SUFFIX): module-cctor.exe$(PLATFORM_AOT_SUFFIX)
module-cctor-loader.2.exe: module-cctor.exe

reference-loader.exe$(PLATFORM_AOT_SUFFIX): TestingReferenceAssembly.dll$(PLATFORM_AOT_SUFFIX) TestingReferenceReferenceAssembly.dll$(PLATFORM_AOT_SUFFIX)
reference-loader.exe: TestingReferenceAssembly.dll TestingReferenceReferenceAssembly.dll

assemblyresolve_asm.dll$(PLATFORM_AOT_SUFFIX): assemblyresolve_asm.dll assemblyresolve_deps/Test.dll$(PLATFORM_AOT_SUFFIX)
	MONO_PATH="assemblyresolve_deps:$(CLASS)" $(top_builddir)/runtime/mono-wrapper $(TEST_AOT_BUILD_FLAGS) assemblyresolve_asm.dll
assemblyresolve_deps/Test.dll$(PLATFORM_AOT_SUFFIX): assemblyresolve_deps/Test.dll assemblyresolve_deps/TestBase.dll$(PLATFORM_AOT_SUFFIX)
assemblyresolve_deps:
	mkdir -p assemblyresolve_deps
assemblyresolve_deps/TestBase.dll: assemblyresolve_deps $(srcdir)/assemblyresolve_TestBase.cs
	$(MCS) -target:library -out:assemblyresolve_deps/TestBase.dll $(srcdir)/assemblyresolve_TestBase.cs
assemblyresolve_deps/Test.dll: assemblyresolve_deps assemblyresolve_deps/TestBase.dll $(srcdir)/assemblyresolve_Test.cs
	$(MCS) -target:library -r:assemblyresolve_deps/TestBase.dll -out:assemblyresolve_deps/Test.dll $(srcdir)/assemblyresolve_Test.cs
assemblyresolve_asm.dll: assemblyresolve_deps/Test.dll $(srcdir)/assemblyresolve_asm.cs
	$(MCS) -target:library -r:assemblyresolve_deps/TestBase.dll -r:assemblyresolve_deps/Test.dll -out:assemblyresolve_asm.dll $(srcdir)/assemblyresolve_asm.cs

assemblyresolve_event3.exe$(PLATFORM_AOT_SUFFIX): assemblyresolve_asm.dll$(PLATFORM_AOT_SUFFIX) assemblyresolve_deps/Test.dll$(PLATFORM_AOT_SUFFIX) assemblyresolve_deps/TestBase.dll$(PLATFORM_AOT_SUFFIX)
assemblyresolve_event3.exe: assemblyresolve_asm.dll assemblyresolve_deps/Test.dll assemblyresolve_deps/TestBase.dll

assemblyresolve_event4.exe$(PLATFORM_AOT_SUFFIX): assemblyresolve_deps/Test.dll$(PLATFORM_AOT_SUFFIX) assemblyresolve_deps/TestBase.dll$(PLATFORM_AOT_SUFFIX)
assemblyresolve_event4.exe: assemblyresolve_deps/Test.dll assemblyresolve_deps/TestBase.dll
assemblyresolve_deps/assemblyresolve_event5_label.dll: assemblyresolve_event5_label.cs assemblyresolve_deps 
	$(MCS) -target:library -out:assemblyresolve_deps/assemblyresolve_event5_label.dll $(srcdir)/assemblyresolve_event5_label.cs
assemblyresolve_event5_helper.dll: assemblyresolve_event5_helper.cs assemblyresolve_deps/assemblyresolve_event5_label.dll
	$(MCS) -target:library -out:assemblyresolve_event5_helper.dll -r:assemblyresolve_deps/assemblyresolve_event5_label.dll $(srcdir)/assemblyresolve_event5_helper.cs
assemblyresolve_event5.exe: assemblyresolve_event5_helper.dll

assemblyresolve_event6.exe$(PLATFORM_AOT_SUFFIX): assemblyresolve_asm.dll$(PLATFORM_AOT_SUFFIX) assemblyresolve_deps/Test.dll$(PLATFORM_AOT_SUFFIX) assemblyresolve_deps/TestBase.dll$(PLATFORM_AOT_SUFFIX)
assemblyresolve_event6.exe: assemblyresolve_asm.dll assemblyresolve_deps/Test.dll assemblyresolve_deps/TestBase.dll

# We use 'test-support-files' to handle an ordering issue between the 'mono/' and 'runtime/' directories
bug-80307.exe: $(srcdir)/bug-80307.cs
	$(MCS) -r:$(CLASS)/System.Web.dll -out:$@ $(srcdir)/bug-80307.cs
	cd $(top_builddir)/runtime && $(MAKE) test-support-files

bug-81673.exe$(PLATFORM_AOT_SUFFIX): bug-81673-interface.dll$(PLATFORM_AOT_SUFFIX)
bug-81673.exe bug-81673-interface.dll: $(srcdir)/bug-81673.cs $(srcdir)/bug-81673-interface.cs
	$(MCS) -target:library -out:bug-81673-interface.dll $(srcdir)/bug-81673-interface.cs
	$(MCS) -r:bug-81673-interface.dll -out:bug-81673.exe $(srcdir)/bug-81673.cs
	$(MCS) -define:WITH_STOP -target:library -out:bug-81673-interface.dll $(srcdir)/bug-81673-interface.cs

bug-36848.exe$(PLATFORM_AOT_SUFFIX): bug-36848-a.dll$(PLATFORM_AOT_SUFFIX)
bug-36848.exe bug-36848-a.dll: $(srcdir)/bug-36848.cs $(srcdir)/bug-36848-a.cs
	$(MCS) -target:library -out:bug-36848-a.dll $(srcdir)/bug-36848-a.cs
	$(MCS) -r:bug-36848-a.dll -out:bug-36848.exe $(srcdir)/bug-36848.cs
	$(MCS) -define:WITH_STOP -target:library -out:bug-36848-a.dll $(srcdir)/bug-36848-a.cs

bug-81691.exe$(PLATFORM_AOT_SUFFIX): bug-81691-b.dll$(PLATFORM_AOT_SUFFIX)
bug-81691.exe bug-81691-a.dll bug-81691-b.dll: $(srcdir)/bug-81691.cs $(srcdir)/bug-81691-a.cs $(srcdir)/bug-81691-b.cs
	$(MCS) -target:library -out:bug-81691-a.dll $(srcdir)/bug-81691-a.cs 
	$(MCS) -r:bug-81691-a.dll -target:library -out:bug-81691-b.dll $(srcdir)/bug-81691-b.cs
	$(MCS) -r:bug-81691-b.dll -out:bug-81691.exe $(srcdir)/bug-81691.cs
	rm -f bug-81691-a.dll

bug-81466.exe$(PLATFORM_AOT_SUFFIX): bug-81466-lib.dll$(PLATFORM_AOT_SUFFIX)
bug-81466.exe bug-81466-lib.dll: $(srcdir)/bug-81466.il $(srcdir)/bug-81466-lib.il
	$(ILASM) /dll /output:bug-81466-lib.dll $(srcdir)/bug-81466-lib.il
	$(ILASM) /exe /output:bug-81466.exe $(srcdir)/bug-81466.il

bug-324535.exe$(PLATFORM_AOT_SUFFIX): bug-324535-il.dll$(PLATFORM_AOT_SUFFIX)
bug-324535.exe bug-324535-il.dll: $(srcdir)/bug-324535.cs $(srcdir)/bug-324535-il.il
	$(ILASM) /dll /output:bug-324535-il.dll $(srcdir)/bug-324535-il.il
	$(MCS) -r:bug-324535-il.dll -out:bug-324535.exe $(srcdir)/bug-324535.cs

custom-modifiers.2.exe$(PLATFORM_AOT_SUFFIX): custom-modifiers-lib.dll$(PLATFORM_AOT_SUFFIX)
custom-modifiers.2.exe custom-modifiers-lib.dll: $(srcdir)/custom-modifiers.2.cs $(srcdir)/custom-modifiers-lib.il
	$(ILASM) /dll /output:custom-modifiers-lib.dll $(srcdir)/custom-modifiers-lib.il
	$(MCS) -r:custom-modifiers-lib.dll -out:custom-modifiers.2.exe $(srcdir)/custom-modifiers.2.cs

bug-382986.exe$(PLATFORM_AOT_SUFFIX): bug-382986-lib.dll$(PLATFORM_AOT_SUFFIX)
bug-382986.exe bug-382986-lib.dll: $(srcdir)/bug-382986.cs $(srcdir)/bug-382986-lib.cs
	$(MCS) -target:library -out:bug-382986-lib.dll $(srcdir)/bug-382986-lib.cs
	$(MCS) -r:bug-382986-lib.dll -out:bug-382986.exe $(srcdir)/bug-382986.cs

bug-17537.exe$(PLATFORM_AOT_SUFFIX): bug-17537-helper.exe$(PLATFORM_AOT_SUFFIX)
bug-17537-helper.exe: $(srcdir)/bug-17537-helper.cs
	$(MCS) -out:$@ $<
	chmod -x $@
bug-17537.exe: bug-17537-helper.exe

test-coreclr-security : coreclr-security.exe
	@$(RUNTIME_MOONLIGHT) --security=core-clr-test coreclr-security.exe

generic-unboxing.2.dll: $(srcdir)/generic-unboxing.2.il
	$(ILASM) /dll /output:$@ $<
generic-boxing.2.dll: $(srcdir)/generic-boxing.2.il generic-unboxing.2.dll
	$(ILASM) /dll /output:$@ $<

generic-unbox.2.exe$(PLATFORM_AOT_SUFFIX): generic-unboxing.2.dll$(PLATFORM_AOT_SUFFIX)
generic-unbox.2.exe: $(srcdir)/generic-unbox.2.cs generic-unboxing.2.dll
	$(MCS) -r:generic-unboxing.2.dll -out:$@ $<

generic-box.2.exe$(PLATFORM_AOT_SUFFIX): generic-unboxing.2.dll$(PLATFORM_AOT_SUFFIX) generic-boxing.2.dll$(PLATFORM_AOT_SUFFIX)
generic-box.2.exe : $(srcdir)/generic-box.2.cs generic-unboxing.2.dll generic-boxing.2.dll
	$(MCS) -r:generic-unboxing.2.dll,generic-boxing.2.dll -out:$@ $<

generic-delegate2-lib.2.dll: $(srcdir)/generic-delegate2-lib.2.il
	$(ILASM) /dll /output:$@ $<

generic-delegate2.2.exe$(PLATFORM_AOT_SUFFIX): generic-delegate2-lib.2.dll$(PLATFORM_AOT_SUFFIX)
generic-delegate2.2.exe: $(srcdir)/generic-delegate2.2.cs generic-delegate2-lib.2.dll
	$(MCS) -r:generic-delegate2-lib.2.dll -out:$@ $<

bug-3903.exe: bug-3903.cs
	$(MCS_NO_LIB)  $(srcdir)/bug-3903.cs -nostdlib -r:$(srcdir)/../../external/binary-reference-assemblies/v2.0/mscorlib.dll -r:$(srcdir)/../../external/binary-reference-assemblies/v2.0/System.Core.dll -out:$@

LeafAssembly.dll: appdomain-marshalbyref-assemblyload-LeafAssembly.cs
	mkdir -p appdomain-marshalbyref-assemblyload1
	$(MCS) -target:library -out:$@ $<

appdomain-marshalbyref-assemblyload2/LeafAssembly.dll: appdomain-marshalbyref-assemblyload-LeafAssembly.cs
	mkdir -p appdomain-marshalbyref-assemblyload2
	$(MCS) -target:library -out:$@ $< -define:UNDEFINE_OTHER_METHOD

MidAssembly.dll: appdomain-marshalbyref-assemblyload-MidAssembly.cs LeafAssembly.dll
	mkdir -p appdomain-marshalbyref-assemblyload1
	$(MCS) -target:library -out:$@ $< -r:LeafAssembly.dll

appdomain-marshalbyref-assemblyload.exe: appdomain-marshalbyref-assemblyload.cs MidAssembly.dll LeafAssembly.dll appdomain-marshalbyref-assemblyload2/LeafAssembly.dll
	$(MCS) -out:$@ $< -r:MidAssembly.dll -r:LeafAssembly.dll

assembly-load-dir1/Lib.dll: assembly-load-dir1/Lib.cs
	$(MKDIR_P) $(dir $@)
	$(MCS) -target:library -out:$@ $<
assembly-load-dir2/Lib.dll: assembly-load-dir2/Lib.cs
	$(MKDIR_P) $(dir $@)
	$(MCS) -target:library -out:$@ $<

assembly-load-dir1/LibStrongName.dll: assembly-load-dir1/LibStrongName.cs testing_gac/testkey.snk
	$(MKDIR_P) $(dir $@)
	$(MCS) -target:library -out:$@ $< -keyfile:$(dir $<)../testing_gac/testkey.snk

assembly-load-dir2/LibStrongName.dll: assembly-load-dir2/LibStrongName.cs testing_gac/testkey.snk
	$(MKDIR_P) $(dir $@)
	$(MCS) -target:library -out:$@ $< -keyfile:$(dir $<)../testing_gac/testkey.snk

assembly-load-bytes.exe: assembly-load-dir1/Lib.dll assembly-load-dir2/Lib.dll

assembly-loadfrom.exe$(PLATFORM_AOT_SUFFIX): assembly-load-dir1/Lib.dll$(PLATFORM_AOT_SUFFIX) assembly-load-dir2/Lib.dll$(PLATFORM_AOT_SUFFIX)
assembly-loadfrom.exe: assembly-load-dir1/Lib.dll assembly-load-dir2/Lib.dll

assembly-loadfile.exe$(PLATFORM_AOT_SUFFIX): assembly-load-dir1/Lib.dll$(PLATFORM_AOT_SUFFIX) assembly-load-dir2/Lib.dll$(PLATFORM_AOT_SUFFIX)
assembly-loadfile.exe: assembly-load-dir1/Lib.dll assembly-load-dir2/Lib.dll

assembly-loadfrom-bindingredirect.exe$(PLATFORM_AOT_SUFFIX): assembly-load-dir1/LibStrongName.dll$(PLATFORM_AOT_SUFFIX) assembly-load-dir2/LibStrongName.dll$(PLATFORM_AOT_SUFFIX) assembly-loadfrom-bindingredirect.exe.config
assembly-loadfrom-bindingredirect.exe: assembly-load-dir1/LibStrongName.dll assembly-load-dir2/LibStrongName.dll assembly-loadfrom-bindingredirect.exe.config

assembly-loadfile-bindingredirect.exe$(PLATFORM_AOT_SUFFIX): assembly-load-dir1/LibStrongName.dll$(PLATFORM_AOT_SUFFIX) assembly-load-dir2/LibStrongName.dll$(PLATFORM_AOT_SUFFIX) assembly-loadfile-bindingredirect.exe.config
assembly-loadfile-bindingredirect.exe: assembly-load-dir1/LibStrongName.dll assembly-load-dir2/LibStrongName.dll assembly-loadfile-bindingredirect.exe.config

assembly-load-bytes-bindingredirect.exe: assembly-load-dir1/LibStrongName.dll assembly-load-dir2/LibStrongName.dll assembly-load-bytes-bindingredirect.exe.config

assembly-refonly-load-bytes-bindingredirect.exe: assembly-load-dir1/LibStrongName.dll assembly-load-dir2/LibStrongName.dll assembly-refonly-load-bytes-bindingredirect.exe.config

assembly-load-dir1/LibSimpleName.dll: assembly-load-dir1/LibSimpleName.cs
	$(MKDIR_P) $(dir $@)
	$(MCS) -target:library -out:$@ $<

# NOTE: unlike assembly-load-dir1/LibSimpleName.dll, the output name here is in all lower case!
assembly-load-dir2/libsimplename.dll: assembly-load-dir2/LibSimpleName.cs
	$(MKDIR_P) $(dir $@)
	$(MCS) -target:library -out:$@ $<

assembly-dep-simplename.dll: assembly-dep-simplename.cs assembly-load-dir1/LibSimpleName.dll
	$(MCS) -target:library -out:$@ $< -r:assembly-load-dir1/LibSimpleName.dll

# NOTE: while we compile assembly-dep-simplename.dll using assembly-load-dir1, we AOT it using assembly-load-dir2
#  (So that the AOT image has the right GUID of the referenced assembly baked in)
assembly-dep-simplename.dll$(PLATFORM_AOT_SUFFIX): assembly-dep-simplename.dll assembly-load-dir2/libsimplename.dll$(PLATFORM_AOT_SUFFIX)
	MONO_PATH=$(CLASS):assembly-load-dir2 $(top_builddir)/runtime/mono-wrapper $(TEST_AOT_BUILD_FLAGS) --aot-path=assembly-load-dir2 assembly-dep-simplename.dll

assembly-loadfrom-simplename.exe: assembly-dep-simplename.dll assembly-load-dir2/libsimplename.dll

assembly-loadfrom-simplename.exe$(PLATFORM_AOT_SUFFIX): assembly-load-dir2/libsimplename.dll$(PLATFORM_AOT_SUFFIX) assembly-dep-simplename.dll$(PLATFORM_AOT_SUFFIX)

gshared:
	$(MAKE) test-generic-sharing

gshared-aot:
	@$(MAKE) AOT=1 gshared

test-generic-sharing-normal: $(TESTS_GSHARED) $(TESTSAOT_GSHARED)
	@for fn in $+ ; do	\
		echo "Testing $$fn ...";	\
		$(RUNTIME) -O=gshared                $$fn > $$fn.stdout || exit 1;	\
		$(RUNTIME) -O=gshared,shared         $$fn > $$fn.stdout || exit 1;	\
		$(RUNTIME) -O=gshared,-inline        $$fn > $$fn.stdout || exit 1;	\
		$(RUNTIME) -O=gshared,-inline,shared $$fn > $fn.stdout || exit 1;	\
		if [ x$(AOT) = x1 ]; then $(with_mono_path) $(JITTEST_PROG_RUN) --aot --debug $$fn > /dev/null || exit 1; $(RUNTIME) $$fn > $$fn.stdout || exit 1; fi; \
	done

test-generic-sharing-managed: test-runner.exe $(TESTS_GSHARED) $(TESTSAOT_GSHARED) 
	$(Q) $(TOOLS_RUNTIME) $(TEST_RUNNER) -j a --testsuite-name "gshared" --disabled "$(DISABLED_TESTS)" --opt-sets "gshared gshared,shared gshared,-inline gshared,-inline,shared" $(TESTS_GSHARED)

test-generic-sharing:
	@if test x$(M) != x0; then $(MAKE) test-generic-sharing-managed; else $(MAKE) test-generic-sharing-normal; fi
async-exceptions.exe : async-exceptions.cs
	$(MCS) -out:async-exceptions.exe $(srcdir)/async-exceptions.cs
test-async-exceptions : async-exceptions.exe
	for i in `echo 0 1 2 3 4 5 6 7 8 9 10`; do $(RUNTIME) --inject-async-exc Tests:foo $$i async-exceptions.exe || exit 1; done
	for i in `echo 0 1 2 3 4 5 6 7 8 9 10`; do $(RUNTIME) --inject-async-exc Tests:bar $$i async-exceptions.exe || exit 1; done
modules-m1.netmodule: modules-m1.cs
	$(MCS) -out:$@ /target:module $(srcdir)/modules-m1.cs
modules.exe: modules.cs modules-m1.netmodule $(TEST_DRIVER_DEPEND) 
	$(MCS) -out:$@ /addmodule:modules-m1.netmodule -r:TestDriver.dll $(srcdir)/modules.cs

# Useful if mono is compiled with --enable-shared=no
patch-libtool:
	cp "../../libtool" .
	sed -e 's,build_libtool_libs=no,build_libtool_libs=yes,g' libtool > 2; mv 2 libtool
	sed -e 's,LIBTOOL =,LIBTOOL2 =,g' Makefile > 2 && echo "LIBTOOL = bash ./libtool" > 1 && cat 1 2 > Makefile
	touch libtest.c
test-process-exit:
	@$(MCS) $(srcdir)/threadpool-in-processexit.cs -out:threadpool-in-processexit.exe
	@echo "Testing threadpool-in-processexit.exe..."
	@$(RUNTIME) threadpool-in-processexit.exe > threadpool-in-processexit.exe.stdout
	@diff -w threadpool-in-processexit.exe.stdout $(srcdir)/threadpool-in-processexit.exe.stdout.expected

test-unhandled-exception-2: $(TESTS_UNHANDLED_EXCEPTION_1) $(TESTS_UNHANDLED_EXCEPTION_255) $(TESTSAOT_UNHANDLED_EXCEPTION_1) $(TESTSAOT_UNHANDLED_EXCEPTION_255)
	ok=; \
	$(MAKE) test-unhandled-exception-2-1-with-managed-handler || ok=false; \
	$(MAKE) test-unhandled-exception-2-1-without-managed-handler || ok=false; \
	$(MAKE) test-unhandled-exception-2-255-with-managed-handler || ok=false; \
	$(MAKE) test-unhandled-exception-2-255-without-managed-handler || ok=false; \
	$$ok

test-unhandled-exception-2-1-with-managed-handler: $(TESTS_UNHANDLED_EXCEPTION_1) $(TESTSAOT_UNHANDLED_EXCEPTION_1) test-runner.exe
	$(TOOLS_RUNTIME) $(TEST_RUNNER) -j a --testsuite-name $@ --disabled "$(DISABLED_TESTS)" --expected-exit-code 1 $(TESTS_UNHANDLED_EXCEPTION_1)
test-unhandled-exception-2-1-without-managed-handler: $(TESTS_UNHANDLED_EXCEPTION_1) $(TESTSAOT_UNHANDLED_EXCEPTION_1) test-runner.exe
	TEST_UNHANDLED_EXCEPTION_HANDLER=1 $(TOOLS_RUNTIME) $(TEST_RUNNER) -j a --testsuite-name $@ --disabled "$(DISABLED_TESTS)" --expected-exit-code 1 $(TESTS_UNHANDLED_EXCEPTION_1)
test-unhandled-exception-2-255-with-managed-handler: $(TESTS_UNHANDLED_EXCEPTION_255) $(TESTSAOT_UNHANDLED_EXCEPTION_255) test-runner.exe
	$(TOOLS_RUNTIME) $(TEST_RUNNER) -j a --testsuite-name $@ --disabled "$(DISABLED_TESTS)" --expected-exit-code 255 $(TESTS_UNHANDLED_EXCEPTION_255)
test-unhandled-exception-2-255-without-managed-handler: $(TESTS_UNHANDLED_EXCEPTION_255) $(TESTSAOT_UNHANDLED_EXCEPTION_255) test-runner.exe
	TEST_UNHANDLED_EXCEPTION_HANDLER=1 $(TOOLS_RUNTIME) $(TEST_RUNNER) -j a --testsuite-name $@ --disabled "$(DISABLED_TESTS)" --expected-exit-code 255 $(TESTS_UNHANDLED_EXCEPTION_255)

@FULL_AOT_TESTS_TRUE@test-appdomain-unload:
@FULL_AOT_TESTS_FALSE@appdomain-loader.exe: appdomain-tester.exe

@FULL_AOT_TESTS_FALSE@test-appdomain-unload: appdomain-loader.exe appdomain-tester.exe
@FULL_AOT_TESTS_FALSE@	$(RUNTIME) -O=gshared appdomain-loader.exe > appdomain-loader.exe.1.stdout || exit 1;
@FULL_AOT_TESTS_FALSE@	$(RUNTIME) appdomain-loader.exe > appdomain-loader.exe.2.stdout || exit 1;
@FULL_AOT_TESTS_FALSE@	MONO_DEBUG_ASSEMBLY_UNLOAD=1 $(RUNTIME) -O=gshared appdomain-loader.exe > appdomain-loader.exe.3.stdout || exit 1;
@FULL_AOT_TESTS_FALSE@	MONO_DEBUG_ASSEMBLY_UNLOAD=1 $(RUNTIME) appdomain-loader.exe > appdomain-loader.exe.4.stdout || exit 1;
test-console-output: console-output.exe
	@$(RUNTIME) console-output.exe 1>console-output.exe.stdout
	@$(RUNTIME) console-output.exe 2>console-output.exe.stderr
	@diff -w console-output.exe.stdout $(srcdir)/console-output.exe.stdout.expected \
		&& diff -w console-output.exe.stderr $(srcdir)/console-output.exe.stderr.expected

test-pedump: test-runner.exe
	$(with_mono_path) $(mono_build_root)/tools/pedump/pedump --verify error test-runner.exe

.PHONY: test-gac-loading test-eglib-remap

runtest-gac-loading: test-runner.exe
	$(MAKE) -C testing_gac run-test

compile-gac-loading:
	$(MAKE) -C testing_gac test

runtest-assembly-load-reference: test-runner.exe
	$(MAKE) -C assembly-load-reference run-test

compile-assembly-load-reference:
	$(MAKE) -C assembly-load-reference test

test-process-stress: $(TESTS_STRESS_PROCESS) $(TESTSAOT_STRESS_PROCESS) test-runner.exe
	$(TOOLS_RUNTIME) $(TEST_RUNNER) --testsuite-name $@ --disabled "$(DISABLED_TESTS)" --timeout 900 $(TESTS_STRESS_PROCESS)

coreclr-gcstress:
	$(MAKE) -C $(mono_build_root)/acceptance-tests coreclr-gcstress
test-lldb: test-lldb.exe
	$(PYTHON) test_lldb.py $(JITTEST_PROG)

test-internalsvisibleto: test-runner.exe $(INTERNALSVISIBLETO_TEST) $(INTERNALSVISIBLETO_TESTAOT) $(INTERNALSVISIBLETO_TESTAOT_LIBS)
	$(TOOLS_RUNTIME) $(TEST_RUNNER) --testsuite-name $@ $(INTERNALSVISIBLETO_TEST)

internalsvisibleto-correctcase.dll internalsvisibleto-wrongcase.dll internalsvisibleto-runtimetest.exe: internalsvisibleto-runtimetest.cs internalsvisibleto-library.cs
	$(Q) $(MCS_NO_UNSAFE) -out:internalsvisibleto-correctcase.dll -target:library -d:CORRECT_CASE -d:PERMISSIVE internalsvisibleto-library.cs	
	$(Q) $(MCS_NO_UNSAFE) -out:internalsvisibleto-wrongcase.dll -target:library -d:WRONG_CASE -d:PERMISSIVE internalsvisibleto-library.cs
	$(Q) $(MCS_NO_UNSAFE) -out:internalsvisibleto-runtimetest.exe -warn:0 -r:internalsvisibleto-correctcase.dll -r:internalsvisibleto-wrongcase.dll internalsvisibleto-runtimetest.cs
	$(Q) $(MCS_NO_UNSAFE) -out:internalsvisibleto-correctcase.dll -target:library -d:CORRECT_CASE internalsvisibleto-library.cs	
	$(Q) $(MCS_NO_UNSAFE) -out:internalsvisibleto-wrongcase.dll -target:library -d:WRONG_CASE internalsvisibleto-library.cs

internalsvisibleto-correctcase-2.dll internalsvisibleto-wrongcase-2.dll  internalsvisibleto-compilertest.exe: internalsvisibleto-compilertest.cs internalsvisibleto-library.cs
	$(Q) $(MCS_NO_UNSAFE) -out:internalsvisibleto-correctcase-2.dll -target:library -d:CORRECT_CASE internalsvisibleto-library.cs	
	$(Q) $(MCS_NO_UNSAFE) -out:internalsvisibleto-wrongcase-2.dll -target:library -d:WRONG_CASE internalsvisibleto-library.cs
	$(Q) $(MCS_NO_UNSAFE) -out:internalsvisibleto-compilertest.exe -warn:0 -r:internalsvisibleto-correctcase-2.dll -r:internalsvisibleto-wrongcase-2.dll internalsvisibleto-compilertest.cs

internalsvisibleto-correctcase-sign2048.dll internalsvisibleto-wrongcase-sign2048.dll internalsvisibleto-runtimetest-sign2048.exe: internalsvisibleto-runtimetest.cs internalsvisibleto-library.cs internalsvisibleto-2048.snk
	$(Q) $(MCS_NO_UNSAFE) -out:internalsvisibleto-correctcase-sign2048.dll -target:library -d:CORRECT_CASE -d:PERMISSIVE -d:SIGN2048 internalsvisibleto-library.cs
	$(Q) $(MCS_NO_UNSAFE) -out:internalsvisibleto-wrongcase-sign2048.dll -target:library -d:WRONG_CASE -d:PERMISSIVE -d:SIGN2048 internalsvisibleto-library.cs
	$(Q) $(MCS_NO_UNSAFE) -out:internalsvisibleto-runtimetest-sign2048.exe -warn:0 -r:internalsvisibleto-correctcase-sign2048.dll -r:internalsvisibleto-wrongcase-sign2048.dll -d:SIGN2048 internalsvisibleto-runtimetest.cs
	$(Q) $(MCS_NO_UNSAFE) -out:internalsvisibleto-correctcase-sign2048.dll -target:library -d:CORRECT_CASE -d:SIGN2048 internalsvisibleto-library.cs
	$(Q) $(MCS_NO_UNSAFE) -out:internalsvisibleto-wrongcase-sign2048.dll -target:library -d:WRONG_CASE -d:SIGN2048 internalsvisibleto-library.cs

internalsvisibleto-correctcase-2-sign2048.dll internalsvisibleto-wrongcase-2-sign2048.dll internalsvisibleto-compilertest-sign2048.exe: internalsvisibleto-compilertest.cs internalsvisibleto-library.cs internalsvisibleto-2048.snk
	$(Q) $(MCS_NO_UNSAFE) -out:internalsvisibleto-correctcase-2-sign2048.dll -target:library -d:CORRECT_CASE -d:SIGN2048 internalsvisibleto-library.cs	
	$(Q) $(MCS_NO_UNSAFE) -out:internalsvisibleto-wrongcase-2-sign2048.dll -target:library -d:WRONG_CASE -d:SIGN2048 internalsvisibleto-library.cs
	$(Q) $(MCS_NO_UNSAFE) -out:internalsvisibleto-compilertest-sign2048.exe -warn:0 -r:internalsvisibleto-correctcase-2-sign2048.dll -r:internalsvisibleto-wrongcase-2-sign2048.dll -d:SIGN2048 internalsvisibleto-compilertest.cs

null-blob-tgt.dll: null-blob-tgt.cs
	$(MCS) -target:library -out:$@ $<

null-blob-main.exe: null-blob-main.cs null-blob-tgt.dll null-blob-ref.dll null-blob-null-blob-assm.dll
	$(MCS) -target:exe -out:$@ $<

null-blob-main.exe$(PLATFORM_AOT_SUFFIX): null-blob-tgt.dll$(PLATFORM_AOT_SUFFIX) null-blob-ref.dll$(PLATFORM_AOT_SUFFIX) null-blob-null-blob-assm.dll$(PLATFORM_AOT_SUFFIX)

# Contains copies of types which don't exist in the desktop profile so tests can use them
Mono.Runtime.Testing.dll: weakattribute.cs
	$(MCS) -target:library -out:$@ $<

weak-fields.exe: weak-fields.cs Mono.Runtime.Testing.dll
	$(MCS) -r:Mono.Runtime.Testing.dll -r:$(CLASS)/System.dll -r:$(CLASS)/System.Xml.dll -r:$(CLASS)/System.Core.dll -r:TestDriver.dll $(TEST_DRIVER_HARD_KILL_FEATURE) -out:$@ $<

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
